<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>运维</title>
    <url>/2020/05/%E8%BF%90%E7%BB%B4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>  作为在运维领域工作了10多年的我来说。经历了中国互联网的高速发展，也经历了运维工作的从小到大的规模变化。<br>从基础的网线水晶头做起。一直到现在云计算、大数据、DevOps、容器云等层出不穷的技术。<br>俗话说万变不离其宗。这个宗旨应该是对运维资源成本的考量。<br>当运维粒度为服务器时存在大量计算资源被浪费。每个企业各自为政，自己建IDC。但是有大量的计算资源被闲置，IT成本居高不下。因此催生了虚拟化技术。<br>当以虚拟机为颗粒度，云计算的概念被提出。虽然云计算对资源进行了整合提出了按量计费。但虚拟化中也存在大量主机负载不足的问题。还有就是虚拟化过程中存在性能损耗。<br>很快容器(资源隔离进程)的概念被提出，云原生也开始充斥着各个领域。容器减少了负载不足的问题，同时也解决了虚拟化的性能损耗，但增加的是运维复杂度。<br>这一切并未结束。无服务器(serverless)的概念又兴起。提出以应用为中心，以云函数、云存储的方式对外提供服务。<br>运维颗粒度在运维的发展中不断变细。使得运维的效率不断的提升。同时也深化了运维的技术深度。<br>以资源利用为轴线持续的细化下去，可以理解运维为什么是这样的发展过程。</p>
<p>总结起来运维工作需要从以下几个维度来看。<br>首先是运维规模，运维规模大小决定运维工作的侧重点不同。运维规模小侧重业务服务运维层级不清晰。运维规模大侧重于精细运维层级清晰。目前的业内的水平大概是百台/人配置。<br>其次是运维粒度，运维颗粒度越细运维工作量越大。从简单的服务器上下架到SRE。运维所需技术和精力也越来越多。当然人力成本也随之上升，因此业内提出AIops。<br>再者是运维成本，当设备资源的投入远大于业务规模时，运维工作也会变得简单。不稳定的可能性越低。比如银行、政府的运维工作相对来说要轻松的多。<br>还有就是业务系统迭代速度，现在都流行敏捷开发，对运维的要求也越来越高。为了适应敏捷开发 devops 的概念也逐渐兴起。</p>
<p>衡量运维系统的好坏，可以通过以下指标来衡量。<br>  稳定性  (系统数/总系统数 x 总发生故障时间 /总服务时间)，比所谓几个9要精细些。毕竟有些服务根本不需要高保障。否则会有大量人力、资源浪费。<br>  伸缩性 （资源增量/资源总量 x 所需时间/总服务时间）)<br>  可维护性 (设备总量/总维护人数)</p>
<h2 id><a href="#" class="headerlink" title></a><a href="/2020/06/%E4%B8%80%E7%AB%99%E5%BC%8F%E8%BF%90%E7%BB%B4%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/" title="一站式运维环境搭建">一站式运维环境搭建</a></h2><ul>
<li><a href="/2020/05/%E7%BD%91%E7%BB%9C%E7%BB%B4%E6%8A%A4/" title="网络维护">网络维护</a>
</li>
<li><a href="/2020/05/%E7%B3%BB%E7%BB%9F%E7%BB%B4%E6%8A%A4/" title="系统维护">系统维护</a>
</li>
<li><a href="/2020/05/%E8%BF%90%E7%BB%B4%E7%9B%91%E6%8E%A7/" title="运维监控">运维监控</a>
</li>
<li><a href="/2020/05/%E8%BF%90%E7%BB%B4%E8%87%AA%E5%8A%A8%E5%8C%96/" title="运维自动化">运维自动化</a>
</li>
<li><a href="/2020/05/%E8%BF%90%E7%BB%B4%E5%BC%80%E5%8F%91/" title="运维开发">运维开发</a>
</li>
<li><a href="/2020/05/DevOps/" title="DevOps">DevOps</a>
</li>
<li><a href="/2020/05/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/" title="容器技术">容器技术</a>
</li>
<li><a href="/2020/05/%E4%BA%91%E8%AE%A1%E7%AE%97/" title="云计算">云计算</a>
</li>
<li><a href="/2020/05/%E5%A4%A7%E6%95%B0%E6%8D%AE/" title="大数据">大数据</a>
</li>
<li><a href="/2020/05/AIops/" title="AIops">AIops</a>
</li>
</ul>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>AwesomeNavigation</title>
    <url>/2020/05/AwesomeNavigation/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="Hey, password is required here." /><label>Hey, password is required here.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="ccfe40f1a11bdc9d67b7fc55104f980d45e0590f03b87a39eb5c7ad9fe2b977c"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>分类导航</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>awesome</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo安装配置</title>
    <url>/2020/05/hexo%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="hexo-安装使用"><a href="#hexo-安装使用" class="headerlink" title="hexo 安装使用"></a>hexo 安装使用</h1><blockquote>
<p>hexo 功能很多很完善。样式比自己写的好的多。为了快速构建，还是选用了 hexo。<br>话不多说，直接上干货。</p>
</blockquote>
<h2 id="nodejs-安装"><a href="#nodejs-安装" class="headerlink" title="nodejs 安装"></a>nodejs 安装</h2><p><a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodejs 下载</a></p>
<p><a href="https://hexo.io/" target="_blank" rel="noopener">hexo 官网</a></p>
<p><a href="https://guides.github.com/features/pages/" target="_blank" rel="noopener">github pages</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用阿里云镜像下载比较快，xz 压缩率高。</span></span><br><span class="line"><span class="comment"># 在 mac 上安装直接选择 pkg 包安装</span></span><br><span class="line">https://cdn.npm.taobao.org/dist/node/v14.2.0/node-v14.2.0.pkg</span><br></pre></td></tr></table></figure>
<h2 id="hexo-安装"><a href="#hexo-安装" class="headerlink" title="hexo 安装"></a>hexo 安装</h2><blockquote>
<p>hexo 使用 nodejs 编写，使用 npm 包管理工具进行安装。</p>
<p>安装前要设置好国内镜像。否则会很慢。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># npm 帮助</span></span><br><span class="line">npm --<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># npm command 帮助</span></span><br><span class="line">npm config -h</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出配置</span></span><br><span class="line">npm config list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这样就配置好镜像了，阿里云是国内镜像大户</span></span><br><span class="line">npm config <span class="built_in">set</span> metrics-registry <span class="string">"https://registry.npm.taobao.org"</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>hexo 使用 nodejs 编写，使用 npm 包管理工具进行安装。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># nodejs 分全局模块库和项目模块库 </span></span><br><span class="line"><span class="comment"># 全局模块库位于 nodejs 安装目录下 /usr/local/lib/node_modules</span></span><br><span class="line"><span class="comment"># 项目模块库位于项目目录下 node_modules/</span></span><br><span class="line"><span class="comment"># 列出模块</span></span><br><span class="line">npm list</span><br></pre></td></tr></table></figure>
<blockquote>
<p>全局模块安装一些通用的模块，比如: cnpm、@vue、bower</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装到全局模块（重复安装加 --force）</span></span><br><span class="line">npm install hexo-cli -g --force</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建个目录</span></span><br><span class="line">mkdir blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">hexo init</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">hexo init blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># npm 包管理文件 package.json</span></span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务，在 http://localhost:4000 查看</span></span><br><span class="line">hexo server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 支持简写。简写有好处，也有坏处。好处是输入少，坏处是不利于记忆。</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<h3 id="hexo-目录结构"><a href="#hexo-目录结构" class="headerlink" title="hexo 目录结构"></a>hexo 目录结构</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tree -L 1</span></span><br><span class="line"></span><br><span class="line"><span class="string">├──</span> <span class="string">_config.yml</span>         <span class="comment"># 站点配置文件</span></span><br><span class="line"><span class="string">├──</span> <span class="string">db.json</span></span><br><span class="line"><span class="string">├──</span> <span class="string">node_modules</span>        <span class="comment"># nodejs 模块库</span></span><br><span class="line"><span class="string">├──</span> <span class="string">package-lock.json</span></span><br><span class="line"><span class="string">├──</span> <span class="string">package.json</span>        <span class="comment"># npm 包管理文件</span></span><br><span class="line"><span class="string">├──</span> <span class="string">scaffolds</span>           <span class="comment"># hexo 模板</span></span><br><span class="line"><span class="string">├──</span> <span class="string">source</span>              <span class="comment"># 文章目录</span></span><br><span class="line"><span class="string">└──</span> <span class="string">themes</span>              <span class="comment"># 主题目录</span></span><br></pre></td></tr></table></figure>
<h3 id="配置-blog"><a href="#配置-blog" class="headerlink" title="配置 blog"></a>配置 blog</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看配置</span></span><br><span class="line">grep -v <span class="string">"#"</span> _config.yml |grep -v <span class="string">"^$"</span></span><br><span class="line">cp _config.yml _config.yml.bak</span><br><span class="line"></span><br><span class="line"><span class="comment"># 标题、描述、关键字</span></span><br><span class="line">title: blyanqi@163.com</span><br><span class="line">subtitle: <span class="string">''</span></span><br><span class="line">description: <span class="string">'君子学以聚之，问以辩之，宽以居之，仁以行之。'</span></span><br><span class="line">keywords: 运维、自动化、devops、容器架构</span><br><span class="line">author: yan qi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 语言、时区、站点 url</span></span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: <span class="string">'Asia/Shanghai'</span></span><br><span class="line">url: http://yoursite.com</span><br><span class="line">root: /</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文章按日期分类</span></span><br><span class="line">new_post_name: :year/:month/:title/</span><br><span class="line">permalink: :year/:month/:title.md</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line"></span><br><span class="line"><span class="comment"># 目录配置</span></span><br><span class="line">source_dir: <span class="built_in">source</span></span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line">default_layout: post</span><br><span class="line">external_link:</span><br><span class="line">  exclude: <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件名大小写</span></span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成文章资源文件夹</span></span><br><span class="line">post_asset_folder: <span class="literal">true</span></span><br><span class="line">relative_link: <span class="literal">false</span></span><br><span class="line">future: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 代码框配置</span></span><br><span class="line">highlight:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  line_number: <span class="literal">true</span></span><br><span class="line">  auto_detect: <span class="literal">false</span></span><br><span class="line">  tab_replace: <span class="string">''</span></span><br><span class="line">  wrap: <span class="literal">true</span></span><br><span class="line">  hljs: <span class="literal">false</span></span><br><span class="line">index_generator:</span><br><span class="line">  path: <span class="string">''</span></span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line">meta_generator: <span class="literal">true</span></span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line">use_date_for_updated: <span class="literal">false</span></span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line">include:</span><br><span class="line">exclude:</span><br><span class="line">ignore:</span><br><span class="line">theme: next</span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: <span class="string">''</span></span><br></pre></td></tr></table></figure>
<h3 id="写文章、配置文章本地图片"><a href="#写文章、配置文章本地图片" class="headerlink" title="写文章、配置文章本地图片"></a>写文章、配置文章本地图片</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成 markdown 文件(source/_post 下)</span></span><br><span class="line">hexo n first</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置站点配置 _config.yml:</span></span><br><span class="line">post_asset_folder: <span class="literal">false</span>改为post_asset_folder: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装插件</span></span><br><span class="line">npm install hexo-asset-image -- save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建文章(同时生成和文章相同的目录)</span></span><br><span class="line">hexo n firstimg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 markdown 添加图片</span></span><br><span class="line">在想添加的位置写入![](图片名字.图片格式),例如![](1.png)。</span><br></pre></td></tr></table></figure>
<h2 id="下载-next-主题"><a href="#下载-next-主题" class="headerlink" title="下载 next 主题"></a>下载 next 主题</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置加速，否则很慢</span></span><br><span class="line"><span class="comment"># 使用之前配置一下 github 进行加速。使用 https://www.ipaddress.com/ 进行地址查询</span></span><br><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;/etc/hosts</span><br><span class="line">140.82.113.3 github.com</span><br><span class="line">185.199.109.153 assets-cdn.github.com</span><br><span class="line">199.232.69.194 github.global.ssl.fastly.net</span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># 下载主题</span></span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<h3 id="next-主题目录"><a href="#next-主题目录" class="headerlink" title="next 主题目录"></a>next 主题目录</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">├──</span> <span class="string">LICENSE.md</span></span><br><span class="line"><span class="string">├──</span> <span class="string">README.md</span></span><br><span class="line"><span class="string">├──</span> <span class="string">_config.yml</span>     <span class="comment"># 主题配置文件</span></span><br><span class="line"><span class="string">├──</span> <span class="string">crowdin.yml</span></span><br><span class="line"><span class="string">├──</span> <span class="string">docs</span>            <span class="comment"># 帮助信息</span></span><br><span class="line"><span class="string">├──</span> <span class="string">gulpfile.js</span></span><br><span class="line"><span class="string">├──</span> <span class="string">languages</span>       <span class="comment">#语言包</span></span><br><span class="line"><span class="string">├──</span> <span class="string">layout</span></span><br><span class="line"><span class="string">├──</span> <span class="string">package.json</span>    <span class="comment"># npm 依赖</span></span><br><span class="line"><span class="string">├──</span> <span class="string">renovate.json</span></span><br><span class="line"><span class="string">├──</span> <span class="string">scripts</span>         <span class="comment"># js 文件</span></span><br><span class="line"><span class="string">└──</span> <span class="string">source</span>          <span class="comment"># 资源文件：css、字体、svg</span></span><br></pre></td></tr></table></figure>
<h3 id="配置-next-主题"><a href="#配置-next-主题" class="headerlink" title="配置 next 主题"></a>配置 next 主题</h3><blockquote>
<p>主题配置内容比较多 <a href="https://hexo-theme-next.netlify.app/docs/" target="_blank" rel="noopener">next 主题配置</a></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 此处纪录常用配置</span></span><br><span class="line"><span class="comment"># 使用主题 themes/next/_config.yml 查找 theme</span></span><br><span class="line"><span class="comment"># sed -i '/^theme/s/landscape/next/' _config.yml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看一下配置文件</span></span><br><span class="line">grep -v <span class="string">"#"</span> themes/next/_config.yml |grep -v <span class="string">"^$"</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改一下 scheme (hexo 主题有4种样式)，选用 Gemini</span></span><br><span class="line">scheme: Gemini</span><br><span class="line"></span><br><span class="line"><span class="comment"># 代码高亮 codeblock</span></span><br><span class="line">codeblock:</span><br><span class="line">  theme:</span><br><span class="line">    light: vs</span><br><span class="line">    dark: tomorrow-night</span><br><span class="line"></span><br><span class="line"><span class="comment"># footer 修改</span></span><br><span class="line">since: 2017</span><br><span class="line">animated: <span class="literal">true</span></span><br><span class="line">powered: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 post 模板</span></span><br><span class="line">vim scaffolds/post.md</span><br><span class="line"><span class="comment"># 添加：</span></span><br><span class="line">categories:</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加字数统计 （新创建 post 才会有数据）</span></span><br><span class="line">npm install hexo-symbols-count-time</span><br><span class="line"></span><br><span class="line"><span class="comment"># hexo config</span></span><br><span class="line"><span class="comment"># Post Wordcount</span></span><br><span class="line">symbols_count_time:</span><br><span class="line">  symbols: <span class="literal">true</span></span><br><span class="line">  time: <span class="literal">true</span></span><br><span class="line">  total_symbols: <span class="literal">true</span></span><br><span class="line">  total_time: <span class="literal">true</span></span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br><span class="line"></span><br><span class="line"><span class="comment"># hexo/theme/next/_config.yml</span></span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: <span class="literal">true</span></span><br><span class="line">  item_text_post: <span class="literal">true</span></span><br><span class="line">  item_text_total: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SEO 配置 next/_config.yml</span></span><br><span class="line">disable_baidu_transformation: <span class="literal">true</span></span><br><span class="line">index_with_subtitle: <span class="literal">true</span></span><br><span class="line">exturl: <span class="literal">true</span></span><br><span class="line">google_site_verification: XXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">bing_site_verification: XXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">baidu_site_verification: XXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">baidu_push: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># web Analytics</span></span><br><span class="line">google_analytics:</span><br><span class="line">  tracking_id: UA-XXXXXXXX-X</span><br><span class="line">  only_pageview: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Local Search 配置</span></span><br><span class="line">npm install hexo-generator-searchdb</span><br><span class="line"><span class="comment"># hexo/_config.yml</span></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  <span class="built_in">limit</span>: 10000</span><br><span class="line"></span><br><span class="line"><span class="comment"># next/_config.yml</span></span><br><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class="line">local_search:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  trigger: auto</span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  top_n_per_article: 1</span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  unescape: <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  preload: <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h2 id="设置文章分类"><a href="#设置文章分类" class="headerlink" title="设置文章分类"></a>设置文章分类</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建 page</span></span><br><span class="line">hexo new page categories</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取日期</span></span><br><span class="line">date <span class="string">"+%F %T"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 page</span></span><br><span class="line">cat &lt;&lt;<span class="string">"EOF"</span> &gt;<span class="built_in">source</span>/categories/index.md</span><br><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date: 2020-05-13 16:22:16 </span><br><span class="line"><span class="built_in">type</span>: <span class="string">"categories"</span></span><br><span class="line">---</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给文章添加“categories”属性</span></span><br><span class="line">categories: </span><br><span class="line">- develop</span><br></pre></td></tr></table></figure>
<h2 id="设置文章标签"><a href="#设置文章标签" class="headerlink" title="设置文章标签"></a>设置文章标签</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建 page</span></span><br><span class="line">hexo new page tags</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 page</span></span><br><span class="line">cat &lt;&lt;<span class="string">"EOF"</span> &gt;<span class="built_in">source</span>/tags/index.md</span><br><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2020-05-13 16:22:16 </span><br><span class="line"><span class="built_in">type</span>: <span class="string">"tags"</span></span><br><span class="line">---</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给文章添加“tags”属性</span></span><br><span class="line">tags:</span><br><span class="line">- jQuery</span><br><span class="line">- 表格</span><br></pre></td></tr></table></figure>
<h2 id="设置文章置顶"><a href="#设置文章置顶" class="headerlink" title="设置文章置顶"></a>设置文章置顶</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在post中添加标签</span></span><br><span class="line">top: 10</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以修改模板添加标识，不添加也不影响</span></span><br><span class="line">vim /themes/*/layout/_macro/post.ejs</span><br><span class="line">&lt;% <span class="keyword">if</span> (page.top) &#123; %&gt;</span><br><span class="line">  &lt;i class=<span class="string">"fa fa-thumb-tack"</span>&gt;&lt;/i&gt;</span><br><span class="line">  &lt;font color=7D26CD&gt;置顶&lt;/font&gt;</span><br><span class="line">  &lt;span class=<span class="string">"post-meta-divider"</span>&gt;|&lt;/span&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>
<h2 id="使用数学公式"><a href="#使用数学公式" class="headerlink" title="使用数学公式"></a>使用数学公式</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br><span class="line"></span><br><span class="line">vim themes/*/_config.yml</span><br><span class="line">mathjax:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  mhchem: <span class="literal">false</span> <span class="comment">#化学公式</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在文章中加</span></span><br><span class="line">mathjax: <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h2 id="使用音视频"><a href="#使用音视频" class="headerlink" title="使用音视频"></a>使用音视频</h2><ul>
<li><a href="https://github.com/grzhan/hexo-tag-aplayer" target="_blank" rel="noopener">音频</a></li>
<li><a href="https://github.com/NextMoe/hexo-tag-dplayer" target="_blank" rel="noopener">视频</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 音频插件</span></span><br><span class="line">npm install hexo-tag-aplayer</span><br><span class="line"><span class="comment"># 视频插件</span></span><br><span class="line">npm install hexo-tag-dplayer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在markdown里添加音频</span></span><br><span class="line">&#123;% aplayer <span class="string">"她的睫毛"</span> <span class="string">"周杰伦"</span> <span class="string">"http://home.ustc.edu.cn/~mmmwhy/%d6%dc%bd%dc%c2%d7%20-%20%cb%fd%b5%c4%bd%de%c3%ab.mp3"</span>  <span class="string">"http://home.ustc.edu.cn/~mmmwhy/jay.jpg"</span> <span class="string">"autoplay=false"</span> %&#125;</span><br><span class="line"><span class="comment"># 在markdown里添加视频</span></span><br><span class="line">&#123;% dplayer <span class="string">"url=http://home.ustc.edu.cn/~mmmwhy/GEM.mp4"</span>  <span class="string">"pic=http://home.ustc.edu.cn/~mmmwhy/GEM.jpg"</span> <span class="string">"loop=yes"</span> <span class="string">"theme=#FADFA3"</span> <span class="string">"autoplay=false"</span> <span class="string">"token=tokendemo"</span> %&#125;</span><br></pre></td></tr></table></figure>
<h2 id="站内文章引用"><a href="#站内文章引用" class="headerlink" title="站内文章引用"></a>站内文章引用</h2><figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% post_link 路径/文件名(不要后缀) 文章别名(可选) %&#125;</span><br><span class="line">&#123;% post_link dir/hexo安装配置 %&#125;</span><br></pre></td></tr></table></figure>
<h2 id="设置字体大小"><a href="#设置字体大小" class="headerlink" title="设置字体大小"></a>设置字体大小</h2><figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">vim themes/next/<span class="keyword">source</span>/css/_variables/base.styl</span><br><span class="line">/font-<span class="keyword">size</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// Font size</span></span><br><span class="line">  <span class="number">91</span> $font-<span class="keyword">size</span>-base           = (hexo-config(<span class="string">'font.enable'</span>) and hexo-config(<span class="string">'font.global.size'</span>) is a <span class="string">'unit'</span>) ? <span class="keyword">unit</span>(hexo-config(<span class="string">'font.global.size'</span>), em) : <span class="number">.8</span>em;</span><br><span class="line">  <span class="number">92</span> $font-<span class="keyword">size</span>-smallest       = <span class="number">.5</span>em;</span><br><span class="line">  <span class="number">93</span> $font-<span class="keyword">size</span>-smaller        = <span class="number">.55</span>m;</span><br><span class="line">  <span class="number">94</span> $font-<span class="keyword">size</span>-small          = <span class="number">1.18</span>em;</span><br><span class="line">  <span class="number">95</span> $font-<span class="keyword">size</span>-medium         = <span class="number">.8</span>em;</span><br><span class="line">  <span class="number">96</span> $font-<span class="keyword">size</span>-large          = <span class="number">.85</span>em;</span><br><span class="line">  <span class="number">97</span> $font-<span class="keyword">size</span>-larger         = <span class="number">.9</span>em;</span><br><span class="line">  <span class="number">98</span> $font-<span class="keyword">size</span>-largest        = <span class="number">1.38</span>em;</span><br></pre></td></tr></table></figure>
<h2 id="加密文章"><a href="#加密文章" class="headerlink" title="加密文章"></a>加密文章</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://github.com/MikeCoder/hexo-blog-encrypt</span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://npm.taobao.org/mirrors/npm/</span><br><span class="line">npm install --save hexo-blog-encrypt</span><br><span class="line"><span class="comment"># 到官网安装</span></span><br><span class="line">npm config <span class="built_in">set</span> registry <span class="string">""</span></span><br><span class="line">npm install --save ~/Downloads/hexo-blog-encrypt-master</span><br></pre></td></tr></table></figure>
<h2 id="生成部署-hexo"><a href="#生成部署-hexo" class="headerlink" title="生成部署 hexo"></a>生成部署 hexo</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成静态文件 (用于githup page 部署)</span></span><br><span class="line">hexo generate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个 githup repository</span></span><br><span class="line">name: blog.githup.io</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 githup 库地址 _config.yaml</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/blyanqi/blog.githup.io.git</span><br><span class="line">  branch: master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为github设置SSH Keys</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"blyanqi@163.com"</span></span><br><span class="line"><span class="comment"># 测试 ssh key</span></span><br><span class="line">ssh -T git@github.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署到 githup page</span></span><br><span class="line">npm install --save hexo-deployer-git</span><br><span class="line">hexo deploy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一键部署</span></span><br><span class="line"><span class="comment"># 编辑 package.json</span></span><br><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"build"</span>: <span class="string">"hexo generate"</span>,</span><br><span class="line">    <span class="string">"clean"</span>: <span class="string">"hexo clean"</span>,</span><br><span class="line">    <span class="string">"deploy"</span>: <span class="string">"hexo deploy"</span>,</span><br><span class="line">    <span class="string">"server"</span>: <span class="string">"hexo server"</span>,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"># build</span></span><br><span class="line">npm run deploy</span><br></pre></td></tr></table></figure>
<h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">INFO  Copying files from public folder...</span><br><span class="line">FATAL Something<span class="string">'s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">TypeError [ERR_INVALID_ARG_TYPE]: The "mode" argument must be integer. Received an instance of Object</span></span><br><span class="line"><span class="string">    at copyFile (fs.js:1890:10)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 是因为 nodejs 版本问题，选用稳定版本 v12.16.3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">remote: Invalid username or password.</span></span><br><span class="line"><span class="string">fatal: Authentication failed for '</span>https://github.com/blyanqi/blog.githup.io.git/<span class="string">'</span></span><br><span class="line"><span class="string">FATAL Something'</span>s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br><span class="line">Error: Spawn failed</span><br><span class="line"></span><br><span class="line"><span class="comment"># git 验证失败</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># index.html 里面空白没有内容 (重新生成一遍，可能是node换版本导致)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 静态文件请求不到，修改 _config,yaml 里 root: / 改成  root: /blog.githup.io/</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>develop</category>
      </categories>
      <tags>
        <tag>github page</tag>
        <tag>hexo</tag>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>docker-registry</title>
    <url>/2020/06/docker-registry/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="按装"><a href="#按装" class="headerlink" title="按装"></a>按装</h2><p>docker run -d \<br> -p 5000:5000 \<br> -v /usr/local/registry:/var/lib/registry \<br> —restart=always \<br> —name registry \<br> registry</p>
<h2 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h2> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> cat &lt;&lt;<span class="string">'EOF'</span> &gt;docker-compose.yml</span><br><span class="line"> version: <span class="string">"3.8"</span></span><br><span class="line"> services:</span><br><span class="line">   registry:</span><br><span class="line">     container_name: registry</span><br><span class="line">     image: registry</span><br><span class="line">     ports:</span><br><span class="line">     - 80:5000</span><br><span class="line">     volumes:</span><br><span class="line">     - ./data/registry:/var/lib/registry:z</span><br><span class="line">     restart: always</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<h2 id><a href="#" class="headerlink" title=" "></a> </h2><p>curl <a href="http://119.84.8.43:10096/v2/_catalog" target="_blank" rel="noopener">http://119.84.8.43:10096/v2/_catalog</a></p>
<h2 id="添加http-镜像库"><a href="#添加http-镜像库" class="headerlink" title="添加http 镜像库"></a>添加http 镜像库</h2><h3 id="编辑配置文件”-etc-default-docker”"><a href="#编辑配置文件”-etc-default-docker”" class="headerlink" title="编辑配置文件”/etc/default/docker”"></a>编辑配置文件”/etc/default/docker”</h3><p>$ sudo vi /etc/default/docker</p>
<h3 id="将这行添加到文件最后，如果已经存在选项，确定你将它添加到当前选项的列表中。"><a href="#将这行添加到文件最后，如果已经存在选项，确定你将它添加到当前选项的列表中。" class="headerlink" title="将这行添加到文件最后，如果已经存在选项，确定你将它添加到当前选项的列表中。"></a>将这行添加到文件最后，如果已经存在选项，确定你将它添加到当前选项的列表中。</h3><p>$ DOCKER_OPTS=”$DOCKER_OPTS —insecure-registry=${DOMAIN}:${PORT}”</p>
<h3 id="重启docker服务"><a href="#重启docker服务" class="headerlink" title="重启docker服务"></a>重启docker服务</h3><p>$ sudo service docker restart</p>
<p><a href="https://rancher.com/docs/rancher/v1.6/zh/environments/registries/" target="_blank" rel="noopener">rancher 镜像库</a></p>
<h3 id="rancher-work-添加"><a href="#rancher-work-添加" class="headerlink" title="rancher work 添加"></a>rancher work 添加</h3><p>vi /etc/docker/daemon.json<br>“insecure-registries”: [“119.84.8.43:10096”]</p>
]]></content>
  </entry>
  <entry>
    <title>Maven管理</title>
    <url>/2020/06/Maven%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="maven-常用指令"><a href="#maven-常用指令" class="headerlink" title="maven 常用指令"></a>maven 常用指令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Maven项目</span></span><br><span class="line"><span class="comment"># 普通java项目</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># web项目</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 找出该项目所依赖的项目(jar)列表</span></span><br><span class="line">mvn dependency:resolve</span><br><span class="line">mvn dependency:analyze <span class="comment">#(找出项目非直接依赖)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看整个项目的依赖树</span></span><br><span class="line">mvn dependency:tree</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看完整的依赖</span></span><br><span class="line">mvn install -X</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打包应用(jar)</span></span><br><span class="line">mvn install assembly:assembly</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动你的 web 应用</span></span><br><span class="line">mvn jetty:run</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新编译</span></span><br><span class="line">mvn compile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译测试代码</span></span><br><span class="line">mvn <span class="built_in">test</span>-compile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行测试</span></span><br><span class="line">mvn <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打包</span></span><br><span class="line">mvn package</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除产生的项目</span></span><br><span class="line">mvn clean</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成eclipse项目</span></span><br><span class="line">mvn eclipse:eclipse</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只打jar包</span></span><br><span class="line">mvn jar:jar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跳过单元测</span></span><br><span class="line">mvn <span class="built_in">test</span> -Dmaven.test.failure.ignore=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 跳过整个测试</span></span><br><span class="line">mvn install -Dmaven.test.skip=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># maven打包跳过测试</span></span><br><span class="line">mvn package -Dmaven.test.skip=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载依赖包的源代码</span></span><br><span class="line">mvn dependency:sources</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 Maven 项目</span></span><br><span class="line">mvn archetype:generate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看报告流程</span></span><br><span class="line">mvn site</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查当前Maven环境启用的文件</span></span><br><span class="line">mvn <span class="built_in">help</span>:effective-settings</span><br><span class="line">mvn <span class="built_in">help</span>:effective-pom</span><br><span class="line">mvn <span class="built_in">help</span>:active-profiles</span><br><span class="line">mvn -s &lt;filepath&gt; &lt;goal&gt;</span><br><span class="line">mvn -s ~/.m2/settings_local.xml clean deploy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前项目的所有mvn配置</span></span><br><span class="line">mvn -X</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印所有可用的环境变量和Java系统属性</span></span><br><span class="line">mvn <span class="built_in">help</span>:system</span><br></pre></td></tr></table></figure>
<h2 id="maven-设置-（conf-setting）"><a href="#maven-设置-（conf-setting）" class="headerlink" title="maven 设置 （conf/setting）"></a>maven 设置 （conf/setting）</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 本地库的位置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>/var/jenkins_home/local/repo<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 指定镜像源 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>阿里云公共仓库<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- http://119.84.8.44:60114/nexus/content/groups/public/ --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 其它代理仓库 spring --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>spring<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/spring<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="nexus-maven镜像仓库"><a href="#nexus-maven镜像仓库" class="headerlink" title="nexus maven镜像仓库"></a>nexus maven镜像仓库</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>jenkinsPIPELINE</title>
    <url>/2020/06/jenkinsPIPELINE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="pipeline-语法"><a href="#pipeline-语法" class="headerlink" title="pipeline 语法"></a>pipeline 语法</h2><p>工作空间 workspace : 构建的空间<br>阶段（stage）： 一个阶段包含多个steps &gt; step<br>步骤（step）： 当任何一个步骤执行失败时，Pipeline 的执行结果也为失败。<br>shell 命令 ： sh ‘echo “Hello World”‘<br>retry(3) ：重试<br>timeout(time: 3, unit: ‘MINUTES’) ：3分钟<br>agent ：指令告诉Jenkins在哪里以及如何执行Pipeline<br>tool ：引用系统配置 JAVA_HOME = tool “jdk8”<br>环境变量配置<br>environment {<br>        DISABLE_AUTH = ‘true’<br>        DB_ENGINE    = ‘sqlite’<br>    }<br>单元测试<br>junit ‘build/reports/<em>*/</em>.xml’</p>
<p>清理工作 post<br><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">post</span> &#123;</span><br><span class="line">        <span class="section">always</span> &#123;</span><br><span class="line">            <span class="attribute">echo</span> <span class="string">'One way or another, I have finished'</span></span><br><span class="line">            deleteDir() /* clean up our workspace */</span><br><span class="line">        &#125;</span><br><span class="line">        success &#123;</span><br><span class="line">            <span class="attribute">echo</span> <span class="string">'I succeeeded!'</span></span><br><span class="line">        &#125;</span><br><span class="line">        unstable &#123;</span><br><span class="line">            <span class="attribute">echo</span> <span class="string">'I am unstable :/'</span></span><br><span class="line">        &#125;</span><br><span class="line">        failure &#123;</span><br><span class="line">            <span class="attribute">echo</span> <span class="string">'I failed :('</span></span><br><span class="line">            mail to: <span class="string">'team<span class="variable">@example</span>.com'</span>,</span><br><span class="line">             subject: <span class="string">"Failed Pipeline: <span class="variable">$&#123;currentBuild.fullDisplayName&#125;</span>"</span>,</span><br><span class="line">             body: <span class="string">"Something is wrong with <span class="variable">$&#123;env.BUILD_URL&#125;</span>"</span></span><br><span class="line">        &#125;</span><br><span class="line">        changed &#123;</span><br><span class="line">            <span class="attribute">echo</span> <span class="string">'Things were different before...'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="pipline-示例"><a href="#pipline-示例" class="headerlink" title="pipline 示例"></a>pipline 示例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(&#39;Build&#39;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                echo &#39;Building&#39;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#39;Test&#39;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                echo &#39;Testing&#39;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#39;Deploy&#39;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                echo &#39;Deploying&#39;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用-docker-容器进行编译（好处是在独立环境中运行，不会破坏当前jenkins-环境）"><a href="#使用-docker-容器进行编译（好处是在独立环境中运行，不会破坏当前jenkins-环境）" class="headerlink" title="使用 docker 容器进行编译（好处是在独立环境中运行，不会破坏当前jenkins 环境）"></a>使用 docker 容器进行编译（好处是在独立环境中运行，不会破坏当前jenkins 环境）</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><ul>
<li><a href="https://download.docker.com/linux/static/stable/x86_64/" target="_blank" rel="noopener">下载docker 二进制包</a><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar xzvf /path/to/&lt;FILE&gt;.tar.gz</span><br><span class="line"><span class="comment"># 放到合适的位置，一会要映射到容器中</span></span><br><span class="line">sudo cp -r docker /opt/docker</span><br><span class="line"><span class="comment"># sudo dockerd &amp;</span></span><br><span class="line"><span class="comment"># sudo docker run hello-world</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="更改docker-运行时，暴露-API"><a href="#更改docker-运行时，暴露-API" class="headerlink" title="更改docker 运行时，暴露 API"></a>更改docker 运行时，暴露 API</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改启动文件</span></span><br><span class="line"><span class="comment"># /usr/lib/systemd/system/docker.service</span></span><br><span class="line">ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:4243 -H unix:///var/run/docker.sock</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line">systemctl status docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">curl http://localhost:4243/version</span><br></pre></td></tr></table></figure>
<h3 id="对-jenkins-容器-docker-compose-yml-文件进行更新"><a href="#对-jenkins-容器-docker-compose-yml-文件进行更新" class="headerlink" title="对 jenkins 容器 docker-compose.yml 文件进行更新"></a>对 jenkins 容器 docker-compose.yml 文件进行更新</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">./data/jenkins:/var/jenkins_home:z</span></span><br><span class="line">    <span class="comment"># 新加</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line">    <span class="comment"># 根据具体位置设置</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">./data/jenkins/docker/docker:/usr/bin/docker</span></span><br></pre></td></tr></table></figure>
<h3 id="新建一个项目测试-docker-容器-pipeline"><a href="#新建一个项目测试-docker-容器-pipeline" class="headerlink" title="新建一个项目测试 docker 容器 pipeline"></a>新建一个项目测试 docker 容器 pipeline</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent &#123;</span><br><span class="line">        docker &#123;</span><br><span class="line">            image &#39;maven:3-alpine&#39;</span><br><span class="line">            args &#39;-v &#x2F;root&#x2F;.m2:&#x2F;root&#x2F;.m2&#39;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(&#39;Build&#39;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                sh &#39;mvn -B -DskipTests clean package&#39;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#39;Test&#39;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                sh &#39;mvn test&#39;</span><br><span class="line">            &#125;</span><br><span class="line">            post &#123;</span><br><span class="line">                always &#123;</span><br><span class="line">                    junit &#39;target&#x2F;surefire-reports&#x2F;*.xml&#39;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="把代码发布出来"><a href="#把代码发布出来" class="headerlink" title="把代码发布出来"></a>把代码发布出来</h3><p>容器是临时容器，要将编译好的代码发布出来</p>
<h2 id="使用-blue-ocean"><a href="#使用-blue-ocean" class="headerlink" title="使用 blue ocean"></a>使用 blue ocean</h2><p>左侧的 打开Blue Ocean 来访问Blue Ocean页面。<br>Create a new Pipeline 按钮</p>
<h2 id="maven项目-pipeline-示例"><a href="#maven项目-pipeline-示例" class="headerlink" title="maven项目 pipeline 示例"></a>maven项目 pipeline 示例</h2><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">   agent any</span><br><span class="line">   <span class="regexp">//</span> 获取jenkins 配置</span><br><span class="line">   tools &#123;</span><br><span class="line">      <span class="regexp">//</span> 获取maven插件</span><br><span class="line">      maven <span class="string">"maven3"</span></span><br><span class="line">      jdk <span class="string">"jdk8"</span></span><br><span class="line">      docker <span class="string">"docker"</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="regexp">//</span> 设置环境变量</span><br><span class="line">   environment&#123;</span><br><span class="line">       <span class="regexp">//</span> 可以在这里设置</span><br><span class="line">       <span class="regexp">//</span> JAVA_HOME = tool <span class="string">"jdk8"</span></span><br><span class="line">       HELLO = <span class="string">"hello"</span></span><br><span class="line">   &#125;</span><br><span class="line">   stages &#123;</span><br><span class="line">     stage(<span class="string">'clear space'</span>) &#123;</span><br><span class="line">         steps &#123;</span><br><span class="line">           sh <span class="string">"rm -rf ./*"</span></span><br><span class="line">           sh <span class="string">"printenv"</span></span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">      stage(<span class="string">'Build'</span>) &#123;</span><br><span class="line">         steps &#123;</span><br><span class="line">            <span class="regexp">//</span> 下载源码</span><br><span class="line">            git <span class="string">'https://github.com/jglick/simple-maven-project-with-tests.git'</span></span><br><span class="line"></span><br><span class="line">            <span class="regexp">//</span> unix build</span><br><span class="line">            sh <span class="string">"mvn -Dmaven.test.failure.ignore=true clean package"</span></span><br><span class="line"></span><br><span class="line">            <span class="regexp">//</span> windows build</span><br><span class="line">            <span class="regexp">//</span> bat <span class="string">"mvn -Dmaven.test.failure.ignore=true clean package"</span></span><br><span class="line">         &#125;</span><br><span class="line">      stage(<span class="string">'Build'</span>) &#123;</span><br><span class="line">         steps &#123;</span><br><span class="line">            <span class="regexp">//</span> 下载源码</span><br><span class="line">            git <span class="string">'https://github.com/jglick/simple-maven-project-with-tests.git'</span></span><br><span class="line"></span><br><span class="line">            <span class="regexp">//</span> unix build</span><br><span class="line">            sh <span class="string">"mvn -Dmaven.test.failure.ignore=true clean package"</span></span><br><span class="line"></span><br><span class="line">            <span class="regexp">//</span> windows build</span><br><span class="line">            <span class="regexp">//</span> bat <span class="string">"mvn -Dmaven.test.failure.ignore=true clean package"</span></span><br><span class="line">         &#125;</span><br><span class="line">         post &#123;</span><br><span class="line">            <span class="regexp">//</span> 成功后单元测试</span><br><span class="line">            success &#123;</span><br><span class="line">               junit <span class="string">'**/target/surefire-reports/TEST-*.xml'</span></span><br><span class="line">               archiveArtifacts <span class="string">'target/*.jar'</span></span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>gitlab项目示例</title>
    <url>/2020/06/gitlab%E9%A1%B9%E7%9B%AE%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="gitlab-项目示例-step-on-step"><a href="#gitlab-项目示例-step-on-step" class="headerlink" title="gitlab 项目示例 (step on step)"></a>gitlab 项目示例 (step on step)</h2><h3 id="注册用户"><a href="#注册用户" class="headerlink" title="注册用户"></a>注册用户</h3><p><a href="http://119.84.8.43:10097/users/sign_in" target="_blank" rel="noopener">http://119.84.8.43:10097/users/sign_in</a><br>注册用户</p>
<h3 id="管理员授权"><a href="#管理员授权" class="headerlink" title="管理员授权"></a>管理员授权</h3><p>管理员登录 -&gt; gitlab 设置 -&gt; overview -&gt; users -&gt; edit<br>Access -&gt; Regular -&gt; 去掉External</p>
<h3 id="创建项目组"><a href="#创建项目组" class="headerlink" title="创建项目组"></a>创建项目组</h3><p>leader账号登录 -&gt; groups -&gt; new group</p>
<p>Private 用户授权可访问<br>Internal<br>Public</p>
<h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>leader账号登录 -&gt; your groups -&gt; new project<br>Initialize repository with a README</p>
<h3 id="邀请开发团队成员"><a href="#邀请开发团队成员" class="headerlink" title="邀请开发团队成员"></a>邀请开发团队成员</h3><p>your projects -&gt; project -&gt; settings -&gt; member<br>invite user<br>invite group</p>
<p>GitLab member or Email address</p>
<p>Choose a role permission<br>  guest<br>  reporter<br>  developer<br>  maintainer</p>
<p>Access expiration date</p>
<h3 id="leader-（-设置里程碑，设置list-）"><a href="#leader-（-设置里程碑，设置list-）" class="headerlink" title="leader （ 设置里程碑，设置list ）"></a>leader （ 设置里程碑，设置list ）</h3><p>git clone <a href="http://119.84.8.43:10097/youlv/b1.git" target="_blank" rel="noopener">http://119.84.8.43:10097/youlv/b1.git</a></p>
<p>Username : leader1<br>Password :<br>git config —global user.name “leader1”<br>git config —global user.email “leader1@123.com”</p>
<p>设置远程分支<br>git add ./*<br>git commit -m “update v0.1”<br>git push —set-upstream origin develop （开发人员没有此权限）</p>
<h4 id="设置git-flow-分支"><a href="#设置git-flow-分支" class="headerlink" title="设置git-flow 分支"></a>设置git-flow 分支</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化git-flow</span></span><br><span class="line">git-flow init</span><br><span class="line"><span class="comment"># 获取状态</span></span><br><span class="line">git status</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">git tag -a v0.0.1 -m <span class="string">'version 0.0.1'</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">git add ./*</span><br><span class="line">git commit -m <span class="string">"develop 0.0.1"</span></span><br><span class="line"><span class="comment"># 在远程设置一个 develop 分支</span></span><br><span class="line">git push --<span class="built_in">set</span>-upstream origin develop</span><br></pre></td></tr></table></figure>
<h3 id="开发人员获取代码-（获取list-进行开发）"><a href="#开发人员获取代码-（获取list-进行开发）" class="headerlink" title="开发人员获取代码 （获取list 进行开发）"></a>开发人员获取代码 （获取list 进行开发）</h3><p>git clone  <a href="http://119.84.8.43:10097/youlv/business1.git" target="_blank" rel="noopener">http://119.84.8.43:10097/youlv/business1.git</a><br>下载 gitflow 安装</p>
<ul>
<li><a href="/2020/06/gitflow-install/" title="gitflow_install">gitflow_install</a>
</li>
</ul>
<p>cd business1/</p>
<h2 id="git-flow-init"><a href="#git-flow-init" class="headerlink" title="git-flow init"></a>git-flow init</h2><p>No branches exist yet. Base branches must be created now.<br>Branch name for production releases: [master]<br>Branch name for “next release” development: [develop]</p>
<p>How to name your supporting branch prefixes?<br>Feature branches? [feature/]<br>Release branches? [release/]<br>Hotfix branches? [hotfix/]<br>Support branches? [support/]<br>Version tag prefix? []<br>alertyandeMacBook-Pro:business1 alert$ git status<br>位于分支 develop<br>无文件要提交，干净的工作区</p>
<hr>
<h3 id="开发代码"><a href="#开发代码" class="headerlink" title="开发代码"></a>开发代码</h3><p>cd business1/<br>cat &lt;&lt;’EOF’ &gt; HelloWorld.java<br>public class HelloWorld {<br>    public static void main(String []args) {<br>       System.out.println(“Hello World”);<br>    }<br>}<br>EOF</p>
<hr>
<p>alert$ git add ./*<br>alert$ git commit -m “v0.1”<br>[master（根提交） fad4b7a] v0.1<br> 1 file changed, 5 insertions(+)<br> create mode 100644 HelloWorld.java<br>alert$ git push<br>枚举对象: 3, 完成.<br>对象计数中: 100% (3/3), 完成.<br>使用 8 个线程进行压缩<br>压缩对象中: 100% (2/2), 完成.<br>写入对象中: 100% (3/3), 304 bytes | 304.00 KiB/s, 完成.<br>总共 3 （差异 0），复用 0 （差异 0）<br>To <a href="http://119.84.8.43:10097/youlv/business1.git" target="_blank" rel="noopener">http://119.84.8.43:10097/youlv/business1.git</a><br>[new branch]      master -&gt; master</p>
<hr>
]]></content>
      <categories>
        <category>devops</category>
      </categories>
  </entry>
  <entry>
    <title>shell例程序</title>
    <url>/2020/06/shell%E4%BE%8B%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="log-输出"><a href="#log-输出" class="headerlink" title="log 输出"></a>log 输出</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">log</span></span>()&#123;</span><br><span class="line"><span class="comment"># 用法：log 1</span></span><br><span class="line"><span class="comment"># 方法在函数或模块前加上注释，会将注释打印出来</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\e[0;32m ------<span class="variable">$1</span>、`sed -n "</span>/\&lt;<span class="built_in">log</span> <span class="variable">$1</span>\&gt;/&#123;x;p&#125;;h<span class="string">" <span class="variable">$0</span>|grep # `\t------- \e[m"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>shell</category>
      </categories>
  </entry>
  <entry>
    <title>gitflow_install</title>
    <url>/2020/06/gitflow-install/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Gitflow安装"><a href="#Gitflow安装" class="headerlink" title="Gitflow安装"></a>Gitflow安装</h2><h3 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'GEOF'</span> &gt;gitflow-installer.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># git-flow make-less installer for *nix systems, by Rick Osborne</span></span><br><span class="line"><span class="comment"># Based on the git-flow core Makefile:</span></span><br><span class="line"><span class="comment"># http://github.com/nvie/gitflow/blob/master/Makefile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Licensed under the same restrictions as git-flow:</span></span><br><span class="line"><span class="comment"># http://github.com/nvie/gitflow/blob/develop/LICENSE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Does this need to be smarter for each host OS?</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$INSTALL_PREFIX</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">	INSTALL_PREFIX=<span class="string">"/usr/local/bin"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$REPO_NAME</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">	REPO_NAME=<span class="string">"gitflow"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$REPO_HOME</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">	REPO_HOME=<span class="string">"http://github.com/nvie/gitflow.git"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">EXEC_FILES=<span class="string">"git-flow"</span></span><br><span class="line">SCRIPT_FILES=<span class="string">"git-flow-init git-flow-feature git-flow-hotfix git-flow-release git-flow-support git-flow-version gitflow-common gitflow-shFlags"</span></span><br><span class="line">SUBMODULE_FILE=<span class="string">"gitflow-shFlags"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"### gitflow no-make installer ###"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">	uninstall)</span><br><span class="line">		<span class="built_in">echo</span> <span class="string">"Uninstalling git-flow from <span class="variable">$INSTALL_PREFIX</span>"</span></span><br><span class="line">		<span class="keyword">if</span> [ -d <span class="string">"<span class="variable">$INSTALL_PREFIX</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">			<span class="keyword">for</span> script_file <span class="keyword">in</span> <span class="variable">$SCRIPT_FILES</span> <span class="variable">$EXEC_FILES</span> ; <span class="keyword">do</span></span><br><span class="line">				<span class="built_in">echo</span> <span class="string">"rm -vf <span class="variable">$INSTALL_PREFIX</span>/<span class="variable">$script_file</span>"</span></span><br><span class="line">				rm -vf <span class="string">"<span class="variable">$INSTALL_PREFIX</span>/<span class="variable">$script_file</span>"</span></span><br><span class="line">			<span class="keyword">done</span></span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">"The '<span class="variable">$INSTALL_PREFIX</span>' directory was not found."</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">"Do you need to set INSTALL_PREFIX ?"</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line">		<span class="built_in">exit</span></span><br><span class="line">		;;</span><br><span class="line">	<span class="built_in">help</span>)</span><br><span class="line">		<span class="built_in">echo</span> <span class="string">"Usage: [environment] gitflow-installer.sh [install|uninstall]"</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="string">"Environment:"</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="string">"   INSTALL_PREFIX=<span class="variable">$INSTALL_PREFIX</span>"</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="string">"   REPO_HOME=<span class="variable">$REPO_HOME</span>"</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="string">"   REPO_NAME=<span class="variable">$REPO_NAME</span>"</span></span><br><span class="line">		<span class="built_in">exit</span></span><br><span class="line">		;;</span><br><span class="line">	*)</span><br><span class="line">		<span class="built_in">echo</span> <span class="string">"Installing git-flow to <span class="variable">$INSTALL_PREFIX</span>"</span></span><br><span class="line">		<span class="keyword">if</span> [ -d <span class="string">"<span class="variable">$REPO_NAME</span>"</span> -a -d <span class="string">"<span class="variable">$REPO_NAME</span>/.git"</span> ] ; <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">"Using existing repo: <span class="variable">$REPO_NAME</span>"</span></span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">"Cloning repo from GitHub to <span class="variable">$REPO_NAME</span>"</span></span><br><span class="line">			git <span class="built_in">clone</span> <span class="string">"<span class="variable">$REPO_HOME</span>"</span> <span class="string">"<span class="variable">$REPO_NAME</span>"</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line">		<span class="keyword">if</span> [ -f <span class="string">"<span class="variable">$REPO_NAME</span>/<span class="variable">$SUBMODULE_FILE</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">"Submodules look up to date"</span></span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">echo</span> <span class="string">"Updating submodules"</span></span><br><span class="line">			lastcwd=<span class="variable">$PWD</span></span><br><span class="line">			<span class="built_in">cd</span> <span class="string">"<span class="variable">$REPO_NAME</span>"</span></span><br><span class="line">			git submodule init</span><br><span class="line">			git submodule update</span><br><span class="line">			<span class="built_in">cd</span> <span class="string">"<span class="variable">$lastcwd</span>"</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line">		install -v -d -m 0755 <span class="string">"<span class="variable">$INSTALL_PREFIX</span>"</span></span><br><span class="line">		<span class="keyword">for</span> exec_file <span class="keyword">in</span> <span class="variable">$EXEC_FILES</span> ; <span class="keyword">do</span></span><br><span class="line">			install -v -m 0755 <span class="string">"<span class="variable">$REPO_NAME</span>/<span class="variable">$exec_file</span>"</span> <span class="string">"<span class="variable">$INSTALL_PREFIX</span>"</span></span><br><span class="line">		<span class="keyword">done</span></span><br><span class="line">		<span class="keyword">for</span> script_file <span class="keyword">in</span> <span class="variable">$SCRIPT_FILES</span> ; <span class="keyword">do</span></span><br><span class="line">			install -v -m 0644 <span class="string">"<span class="variable">$REPO_NAME</span>/<span class="variable">$script_file</span>"</span> <span class="string">"<span class="variable">$INSTALL_PREFIX</span>"</span></span><br><span class="line">		<span class="keyword">done</span></span><br><span class="line">		<span class="built_in">exit</span></span><br><span class="line">		;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">GEOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行</span></span><br><span class="line">sh gitflow-installer.sh</span><br></pre></td></tr></table></figure>
<h3 id="gitflow-版本分支"><a href="#gitflow-版本分支" class="headerlink" title="gitflow 版本分支"></a>gitflow 版本分支</h3><div class="table-container">
<table>
<thead>
<tr>
<th>分支</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>develop 分支</td>
<td>开发版</td>
</tr>
<tr>
<td>-&gt; feature 分支</td>
<td>新功能</td>
</tr>
<tr>
<td>release 分支</td>
<td>发布版</td>
</tr>
<tr>
<td>master 分支</td>
<td>稳定版，审核</td>
</tr>
<tr>
<td>-&gt;hotfix 分支</td>
<td>修复线上bug</td>
</tr>
</tbody>
</table>
</div>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L -O https://raw.github.com/nvie/gitflow/develop/contrib/gitflow-installer.sh</span><br><span class="line">sudo bash gitflow-installer.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># master、develop、feature、relase、hotfix等分支 </span></span><br><span class="line"><span class="comment"># 常用指令</span></span><br><span class="line">指令|解释</span><br><span class="line">-|-</span><br><span class="line">git flow init |初始化</span><br><span class="line">git flow feature start MYFEATURE|开始新Feature</span><br><span class="line">git flow feature publish MYFEATURE|Publish一个Feature</span><br><span class="line">git flow feature pull origin MYFEATURE|获取Publish的Feature</span><br><span class="line">git flow feature finish MYFEATURE|完成一个Feature</span><br><span class="line">git flow release start RELEASE [BASE]|开始一个Release</span><br><span class="line">git flow release publish RELEASE|Publish一个Release</span><br><span class="line">git flow release finish RELEASE|发布Release</span><br><span class="line">git flow hotfix start VERSION [BASENAME]|开始一个Hotfix</span><br><span class="line">git flow hotfix finish VERSION|发布一个Hotfix</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>jenkinsK8s</title>
    <url>/2020/06/jenkinsK8s/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>使用jenkins 进行 k8s 发布</p>
<p>jenkins 上安装 Git,Maven,JDK,helm</p>
<ul>
<li><a href="/2020/05/Jenkins/" title="Jenkins docker安装">Jenkins docker安装</a></li>
<li><a href="/2020/06/helm%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/" title="Helm安装">Helm安装</a></li>
<li>
</li>
</ul>
<h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p>源码 + dockerfile<br>|（gitlab）<br>发布到 master<br>| (触发 webhook)<br>jenkins 构建<br>| (执行 build-image.sh,将镜像发送到 registry仓库）<br>ssh<br>| (执行对应的 helm 把镜像推送到 k8s 集群)<br>finished</p>
<h3 id="源代码要求"><a href="#源代码要求" class="headerlink" title="源代码要求"></a>源代码要求</h3><p>源代码中需要包含 dockerfile<br>git clone <a href="http://119.84.8.43:10097/youlv/go-meta-auth-service.git" target="_blank" rel="noopener">http://119.84.8.43:10097/youlv/go-meta-auth-service.git</a><br>git add ./*<br>git commit -m “v1.0.0”<br>git push</p>
<h3 id="新建-view，新建项目"><a href="#新建-view，新建项目" class="headerlink" title="新建 view，新建项目"></a>新建 view，新建项目</h3><p>view:youlv<br>project: go-meta-auth-service</p>
<h3 id="配置-webhook"><a href="#配置-webhook" class="headerlink" title="配置 webhook"></a>配置 webhook</h3><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="string">url:</span><span class="string">http:</span><span class="comment">//182.92.67.154:8080/project/go-meta-auth-service</span></span><br><span class="line">Secret <span class="string">token:</span> <span class="number">86</span>cf9557098741074f10a43721368fd2</span><br></pre></td></tr></table></figure>
<h3 id="设置-ssh-key"><a href="#设置-ssh-key" class="headerlink" title="设置 ssh key"></a>设置 ssh key</h3><p>ssh-keygen -t rsa -C “youremail@example.com”<br>cat ~/.ssh/id_rsa.pub<br>把 公钥复制到gitlab 项目中</p>
<h2 id="创建pipeline"><a href="#创建pipeline" class="headerlink" title="创建pipeline"></a>创建pipeline</h2><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">   agent any</span><br><span class="line">   </span><br><span class="line">   <span class="comment">// 获取jenkins 配置</span></span><br><span class="line">   tools &#123;</span><br><span class="line">      <span class="comment">// 获取maven插件</span></span><br><span class="line">      maven <span class="string">"maven3"</span></span><br><span class="line">      jdk <span class="string">"jdk8"</span></span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">// 设置环境变量</span></span><br><span class="line">   environment&#123;</span><br><span class="line">       <span class="comment">// JAVA_HOME = tool "jdk8"</span></span><br><span class="line">       VERSION_ID=<span class="string">"$&#123;BUILD_ID&#125;"</span></span><br><span class="line">       GIT_PROJECT_ADDR=<span class="string">"http://119.84.8.43:13201/go-meta/go-meta-service.git"</span> <span class="comment">//项目的git地址</span></span><br><span class="line">       JENKINS_WORKSPACE=<span class="string">"/var/jenkins_home/workspace"</span>    <span class="comment">//jenkins存放文件的地址</span></span><br><span class="line">       PROJECT_NAME=<span class="string">"$&#123;JOB_NAME&#125;"</span>       <span class="comment">// 项目名</span></span><br><span class="line">       JAR_NAME=<span class="string">"$&#123;PROJECT_NAME&#125;-0.0.$&#123;VERSION_ID&#125;.jar"</span>   <span class="comment">// 项目生成的jar的名字</span></span><br><span class="line">       IMAGE_NAME=<span class="string">"$&#123;PROJECT_NAME&#125;"</span>                    <span class="comment">// 镜像名一般和项目名相同</span></span><br><span class="line">       IMAGE_ADDR=<span class="string">"119.84.8.43:10096/youlv/go-meta-auth-service"</span>    <span class="comment">// 镜像的位置</span></span><br><span class="line">       </span><br><span class="line">   &#125;</span><br><span class="line">   stages&#123;</span><br><span class="line">       stage('prepare')&#123;</span><br><span class="line">           steps&#123;</span><br><span class="line">               <span class="keyword">sh</span> <span class="string">"rm -rf ./*"</span></span><br><span class="line">               <span class="keyword">sh</span> <span class="string">"printenv"</span></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       stage('pull source')&#123;</span><br><span class="line">           steps&#123;</span><br><span class="line">               echo <span class="string">"pull source"</span></span><br><span class="line">               <span class="comment">// git credentialsId: 'go-meta-service', url: 'http://119.84.8.43:13201/go-meta/go-meta-service.git'</span></span><br><span class="line">               git branch: 'dev', credentialsId: 'go-<span class="keyword">meta</span>-service', url: 'http:<span class="comment">//119.84.8.43:13201/go-meta/go-meta-service.git'</span></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       stage('build')&#123;</span><br><span class="line">           steps&#123;</span><br><span class="line">               echo <span class="string">"build"</span></span><br><span class="line">               <span class="comment">//sh "mvn -Dmaven.test.failure.ignore=true clean package"</span></span><br><span class="line">               <span class="comment">//sh "mvn clean"</span></span><br><span class="line">               <span class="comment">//sh "mvn package"</span></span><br><span class="line">               <span class="keyword">sh</span> <span class="string">"mvn -Dmaven.test.failure.ignore=true -pl go-meta-auth-service -am clean package"</span></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       stage(<span class="string">"make image"</span>)&#123;</span><br><span class="line">           steps&#123;</span><br><span class="line">               echo <span class="string">"make image"</span></span><br><span class="line">               <span class="keyword">sh</span> '''<span class="keyword">cat</span> &lt;&lt;'EOF' &gt; dockerfile</span><br><span class="line">FROM centos</span><br><span class="line"><span class="keyword">RUN</span> <span class="keyword">rm</span> -f /etc/localtime \</span><br><span class="line">&amp;&amp; ln -sv /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \</span><br><span class="line">&amp;&amp; echo <span class="string">"Asia/Shanghai"</span> &gt; /etc/timezone</span><br><span class="line"></span><br><span class="line">ARG project=go-<span class="keyword">meta</span>-auth-service</span><br><span class="line">ARG jdk_dir=/opt/java</span><br><span class="line"><span class="keyword">RUN</span> <span class="keyword">mkdir</span> -p <span class="variable">$&#123;jdk_dir&#125;</span>/<span class="keyword">app</span></span><br><span class="line">ADD http:<span class="comment">//127.0.0.1/jdk-8u251-linux-x64.tar.tgz $&#123;jdk_dir&#125;</span></span><br><span class="line">WORKDIR <span class="variable">$&#123;jdk_dir&#125;</span></span><br><span class="line"><span class="keyword">RUN</span> tar -xzf jdk-8u251-linux-x64.tar.tgz&amp;&amp; <span class="keyword">rm</span> -f jdk-8u251-linux-x64.tar.tgz</span><br><span class="line">ADD <span class="variable">$&#123;project&#125;</span>/target/go-<span class="keyword">meta</span>-auth-service-1.0.0.jar <span class="variable">$&#123;jdk_dir&#125;</span>/<span class="keyword">app</span></span><br><span class="line">ENV PATH <span class="string">"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin:$&#123;jdk_dir&#125;/jdk1.8.0_251/bin"</span></span><br><span class="line"># EXPOSE 22</span><br><span class="line">EXPOSE 9090</span><br><span class="line">WORKDIR /opt/java/<span class="keyword">app</span>/</span><br><span class="line">CMD [<span class="string">"/bin/bash"</span>,<span class="string">"-c"</span>,<span class="string">"java -jar -Dserver.port=9090 ./go-meta-auth-service-1.0.0.jar"</span>]</span><br><span class="line">'''</span><br><span class="line">                <span class="keyword">sh</span> 'docker build -t <span class="variable">$&#123;IMAGE_ADDR&#125;</span>:latest .'</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       stage('push image')&#123;</span><br><span class="line">           steps&#123;</span><br><span class="line">               <span class="keyword">sh</span> <span class="string">"docker login 119.84.8.43:10096 -u yanqi -p yanqi"</span></span><br><span class="line">               <span class="keyword">sh</span> <span class="string">"docker push $&#123;IMAGE_ADDR&#125;:latest"</span></span><br><span class="line">               <span class="keyword">sh</span> <span class="string">"docker logout"</span></span><br><span class="line">               <span class="keyword">sh</span> <span class="string">"curl http://119.84.8.43:10096/v2/_catalog"</span></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="web-服务提供jdk包下载"><a href="#web-服务提供jdk包下载" class="headerlink" title="web 服务提供jdk包下载"></a>web 服务提供jdk包下载</h3><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">wget <span class="symbol">http:</span>/<span class="regexp">/tengine.taobao.org/download</span><span class="regexp">/tengine-2.3.2.tar.gz</span></span><br><span class="line"><span class="regexp">yum -y install pcre-devel openssl-devel</span></span><br><span class="line"><span class="regexp">./configure</span> --prefix=<span class="regexp">/opt/tengine</span></span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
<h3 id="dockerfile"><a href="#dockerfile" class="headerlink" title="dockerfile"></a>dockerfile</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt; dockerfile</span><br><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> rm -f /etc/localtime \</span></span><br><span class="line"><span class="bash">&amp;&amp; ln -sv /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \</span></span><br><span class="line"><span class="bash">&amp;&amp; <span class="built_in">echo</span> <span class="string">"Asia/Shanghai"</span> &gt; /etc/timezone</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ARG</span> project=go-meta-auth-service</span><br><span class="line"><span class="keyword">ARG</span> jdk_dir=/opt/java</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> mkdir -p <span class="variable">$&#123;jdk_dir&#125;</span>/app</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> http://127.0.0.1/jdk-8u251-linux-x64.tar.tgz <span class="variable">$&#123;jdk_dir&#125;</span></span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> <span class="variable">$&#123;jdk_dir&#125;</span></span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> tar -xzf jdk-8u251-linux-x64.tar.tgz&amp;&amp; rm -f jdk-8u251-linux-x64.tar.tgz</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> <span class="variable">$&#123;project&#125;</span>/target/go-meta-auth-service-1.0.0.jar <span class="variable">$&#123;jdk_dir&#125;</span>/app</span></span><br><span class="line"><span class="keyword">ENV</span> PATH <span class="string">"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin:$&#123;jdk_dir&#125;/jdk1.8.0_251/bin"</span></span><br><span class="line"><span class="comment"># EXPOSE 22</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">9090</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /opt/java/app/</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">"/bin/bash"</span>,<span class="string">"-c"</span>,<span class="string">"java -jar -Dserver.port=9090 ./go-meta-auth-service-1.0.0.jar"</span>]</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<h2 id="jenkins-插件"><a href="#jenkins-插件" class="headerlink" title="jenkins 插件"></a>jenkins 插件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># gitlab 插件</span></span><br><span class="line"><span class="comment"># maven 插件</span></span><br></pre></td></tr></table></figure>
<h3 id="git-拉取源码"><a href="#git-拉取源码" class="headerlink" title="git 拉取源码"></a>git 拉取源码</h3><p>使用 Gitlab Hook Plugin</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">node &#123;</span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">mvnHome</span></span></span><br><span class="line"><span class="function">   <span class="title">stage</span></span>(<span class="symbol">'Preparatio</span>n') &#123; <span class="comment">// for display purposes</span></span><br><span class="line">      git <span class="symbol">'https</span>:<span class="comment">//github.com/itcrazy2016/springboot-demo.git'</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="mvn-build"><a href="#mvn-build" class="headerlink" title="mvn build"></a>mvn build</h3><p>/root/.jenkins/workspace/springboot-demo<br><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">node &#123;</span><br><span class="line">   <span class="keyword">def</span> mvnHome</span><br><span class="line">   stage(<span class="string">'Preparation'</span>) &#123; <span class="comment">// for display purposes</span></span><br><span class="line">      git <span class="string">'https://github.com/wuzhenzhao/springboot-demo.git'</span></span><br><span class="line">   &#125;</span><br><span class="line">   dir(<span class="string">'/root/.jenkins/workspace/springboot-demo/springboot-demo'</span>) &#123; <span class="comment">// 切换到/home/jenkins目录中做一些事情</span></span><br><span class="line">    <span class="comment">// some block</span></span><br><span class="line">    stage(<span class="string">'Maven Build'</span>) &#123; </span><br><span class="line">       sh <span class="string">"mvn clean package"</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="git-push触发jenkins自动构建"><a href="#git-push触发jenkins自动构建" class="headerlink" title="git push触发jenkins自动构建"></a>git push触发jenkins自动构建</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在github上配置jenkins的webhook地址，</span></span><br><span class="line"><span class="comment"># 配置GitHub Server  [系统管理]-&gt;[系统配置]-&gt;[找到github服务器]-&gt;找到Github，这里有 Web Hook的地址：</span></span><br><span class="line"><span class="comment"># 选择构建触发器，并且选择Github Hook触发</span></span><br><span class="line"><span class="comment"># 生成Personal access tokens</span></span><br><span class="line"><span class="comment"># Jenkins访问github需要授权，所以在github上生成token交给jenkins使用，即 Personal access tokens.</span></span><br><span class="line"><span class="comment"># github的Settings[个人信息右上角]--&gt;Developer settings--&gt;Personal access tokens</span></span><br></pre></td></tr></table></figure>
<h3 id="build-amp-push镜像"><a href="#build-amp-push镜像" class="headerlink" title="build&amp;push镜像"></a>build&amp;push镜像</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># springboot-demo-build-image.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入到springboot-demo目录</span></span><br><span class="line"><span class="built_in">cd</span> ../springboot-demo</span><br><span class="line"><span class="comment"># 编写Dockerfile文件</span></span><br><span class="line">cat &lt;&lt;EOF &gt; Dockerfile</span><br><span class="line">FROM openjdk:8-jre-alpine</span><br><span class="line">COPY target/springboot-demo-1.0-SNAPSHOT.jar /springboot-demo.jar</span><br><span class="line">ENTRYPOINT [<span class="string">"java"</span>,<span class="string">"-jar"</span>,<span class="string">"/springboot-demo.jar"</span>]</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Dockerfile created successfully!"</span></span><br><span class="line"><span class="comment"># 基于指定目录下的Dockerfile构建镜像</span></span><br><span class="line">docker build -t registry.cn-hangzhou.aliyuncs.com/wuzz-docker/springboot-demo:v1.0 .</span><br><span class="line"><span class="comment"># push镜像，这边需要阿里云镜像仓库登录，在当前安装了jenkins主机上登录</span></span><br><span class="line">docker push registry.cn-hangzhou.aliyuncs.com/wuzz-docker/springboot-demo:v1.0</span><br></pre></td></tr></table></figure>
<h3 id="使用shell-进行构建"><a href="#使用shell-进行构建" class="headerlink" title="使用shell 进行构建"></a>使用shell 进行构建</h3><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">node &#123;</span><br><span class="line">   <span class="keyword">def</span> mvnHome</span><br><span class="line">   stage(<span class="string">'Preparation'</span>) &#123; <span class="comment">// for display purposes</span></span><br><span class="line">      git <span class="string">'https://github.com/wuzhenzhao/springboot-demo.git'</span></span><br><span class="line">   &#125;</span><br><span class="line">   dir(<span class="string">'/root/.jenkins/workspace/springboot-demo/springboot-demo'</span>) &#123; <span class="comment">// 切换到/home/jenkins目录中做一些事情</span></span><br><span class="line">    <span class="comment">// some block</span></span><br><span class="line">    stage(<span class="string">'Maven Build'</span>) &#123; </span><br><span class="line">       sh <span class="string">"mvn clean package"</span></span><br><span class="line">    &#125;</span><br><span class="line">    stage(<span class="string">'Build Image'</span>) &#123;</span><br><span class="line">           sh <span class="string">"/root/.jenkins/workspace/scripts/springboot-demo-build-image.sh"</span></span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="编写-build-image-sh"><a href="#编写-build-image-sh" class="headerlink" title="编写 build-image.sh"></a>编写 build-image.sh</h1><h3 id="使用-helm-部署到k8s"><a href="#使用-helm-部署到k8s" class="headerlink" title="使用 helm 部署到k8s"></a>使用 helm 部署到k8s</h3><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">node &#123;</span><br><span class="line">   <span class="keyword">def</span> mvnHome</span><br><span class="line">   stage(<span class="string">'Preparation'</span>) &#123; <span class="comment">// for display purposes</span></span><br><span class="line">      git <span class="string">'https://github.com/wuzhenzhao/springboot-demo.git'</span></span><br><span class="line">   &#125;</span><br><span class="line">   dir(<span class="string">'/root/.jenkins/workspace/springboot-demo/springboot-demo'</span>) &#123; <span class="comment">// 切换到/home/jenkins目录中做一些事情</span></span><br><span class="line">    <span class="comment">// some block</span></span><br><span class="line">    stage(<span class="string">'Maven Build'</span>) &#123; </span><br><span class="line">       sh <span class="string">"mvn clean package"</span></span><br><span class="line">    &#125;</span><br><span class="line">    stage(<span class="string">'Build Image'</span>) &#123;</span><br><span class="line">           sh <span class="string">"/root/.jenkins/workspace/scripts/springboot-demo-build-image.sh"</span></span><br><span class="line">    &#125;</span><br><span class="line">    stage(<span class="string">'K8S Deploy'</span>) &#123;</span><br><span class="line">        sh <span class="string">"/root/.jenkins/workspace/scripts/k8s-deploy-springboot-demo.sh"</span></span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Ali公有云管理</title>
    <url>/2020/06/Ali%E5%85%AC%E6%9C%89%E4%BA%91%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id><a href="#" class="headerlink" title=" "></a> </h2><ul>
<li><p>计算引擎</p>
<ul>
<li>虚拟化</li>
<li>容器</li>
<li>nodejs</li>
</ul>
</li>
<li><p>数据库</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 计算资源成本(月)</span></span><br><span class="line">CPU: 85元/C/月</span><br><span class="line">MEMORY: 10元/G/月</span><br><span class="line">DISK: 0.35元/G/月</span><br><span class="line">NETFLOW: 0.6/G</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例成本</span></span><br><span class="line">40C,192G=5280元/月</span><br><span class="line">1C,1G,20G=52元/月</span><br><span class="line"></span><br><span class="line"><span class="comment"># k8s 集群成本</span></span><br><span class="line">CPU: 24core</span><br><span class="line">MEM: 96G</span><br><span class="line">DISK: 500G  31/小时 31*24*30  29760元/月</span><br><span class="line"></span><br><span class="line"><span class="comment"># 价格另算</span></span><br><span class="line">SLB</span><br><span class="line">NAT</span><br><span class="line">弹性IP</span><br><span class="line"><span class="comment"># admin#123.Com</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># IDC 托管成本</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>公有云</category>
      </categories>
  </entry>
  <entry>
    <title>华为交换机基本配置命令详解</title>
    <url>/2020/06/%E5%8D%8E%E4%B8%BA%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="华为交换机基本配置命令详解"><a href="#华为交换机基本配置命令详解" class="headerlink" title="华为交换机基本配置命令详解"></a>华为交换机基本配置命令详解</h2><p>1、配置文件相关命令<br>system-view                    进入特权模式<br>display current-configuration      显示当前生效的配置<br>display saved-configuration        显示flash中配置文件，即下次上电启动时所用的配置文件<br>reset saved-configuration           檫除旧的配置文件<br>reboot                                          交换机重启<br>display version                             显示系统版本信息</p>
<p>2、基本配置<br>super password                          修改特权用户密码<br>sysname                                     交换机命名<br>interface GigabitEthernet 1/0/1            进入接口视图<br>interface vlan 1                           进入接口视图<br>ip address 192.168.100.253 255.255.255.0            配置VLAN的IP地址<br>ip route-static 0.0.0.0 0.0.0.0 10.1.1.1     静态路由＝网关</p>
<p>3、telnet配置<br>user-interface vty 0 4                                                                                     进入虚拟终端<br>[S3026-ui-vty0-4]authentication-mode password                                     设置口令模式<br>[S3026-ui-vty0-4]set authentication password simple fesf1qaz               设置口令<br>[S3026-ui-vty0-4]user-role network-admin                                                 用户级</p>
<p>4、端口配置<br>[Quidway-Ethernet1/0/1]duplex {half|full|auto}                    配置端口工作状态<br>[Quidway-Ethernet1/0/1]speed {10|100|auto}                      配置端口工作速率<br>[Quidway-Ethernet1/0/1]flow-control                                  配置端口流控<br>[Quidway-Ethernet1/0/1]mdi {across|auto|normal}              配置端口平接扭接<br>[Quidway-Ethernet1/0/1]port link-type {trunk|access|hybrid}     设置端口工作模式<br>[Quidway-Ethernet1/0/1]undo shutdown                                     激活端口<br>[Quidway-Ethernet1/0/2]quit                                                        退出系统视图</p>
<p>5、链路聚合配置</p>
<p>[DeviceA] link-aggregation group 1 mode manual       创建手工聚合组1<br>[Qw_A] interface ethernet 1/0/1                     将以太网端口Ethernet1/0/1加入聚合组1<br>[Qw_A-Ethernet1/0/1] port link-aggregation group 1<br>[Qw_A-Ethernet1/0/1] interface ethernet 1/0/2    将以太网端口Ethernet1/0/1加入聚合组1<br>[Qw_A-Ethernet1/0/2] port link-aggregation group 1<br>[Qw_A] link-aggregation group 1 service-type tunnel     # 在手工聚合组的基础上创建tunnel业务环回组。<br>[Qw_A] interface ethernet 1/0/1               将以太网端口Ethernet1/0/1加入业务环回组。<br>[Qw_A-Ethernet1/0/1] undo stp<br>[Qw_A-Ethernet1/0/1] port link-aggregation group 1</p>
<p>6、端口镜像<br>monitor-port        　指定镜像端口<br>port mirror     　　 指定被镜像端口<br>port mirror int_list observing-port int_type int_num  指定镜像和被镜像</p>
<p>以太网端口有三种链路类型：Access、Hybrid和Trunk。<br>   Access类型的端口只能属于1个VLAN，一般用于连接计算机的端口；<br>   Trunk类型的端口可以允许多个VLAN通过，可以接收和发送多个VLAN的报文，一般用于交换机之间连接的端口；<br>    Hybrid类型的端口可以允许多个VLAN通过，可以接收和发送多个VLAN的报文，可以用于交换机之间连接，也可以用于连接用户的计算机。<br>    Hybrid端口和Trunk端口在接收数据时，处理方法是一样的，唯一不同之处在于发送数据时：Hybrid端口可以允许多个VLAN的报文发送时不打标签，而Trunk端口只允许缺省VLAN的报文发送时不打标签。</p>
<p>7、VLAN配置<br>vlan 4                                 　　　　　　   创建VLAN<br>[Quidway-vlan4]port ethernet 1/0/1 to ethernet 1/0/4 　　　  在VLAN中增加端口</p>
<p>① 配置基于access的VLAN<br>[Quidway-Ethernet1/0/2]port access vlan 4          　　　　　 当前端口加入到VLAN<br>注意：缺省情况下，端口的链路类型为Access类型，所有Access端口均属于且只属于VLAN1</p>
<p>② 配置基于trunk的VLAN<br>[Quidway-Ethernet 1/0/24]port link-type trunk                        设置当前端口为trunk<br>[Quidway-Ethernet 1/0/24]port trunk permit vlan {ID|All}     　设trunk允许的VLAN<br>注意：所有端口缺省情况下都是允许VLAN1的报文通过的<br>[Quidway-Ethernet1/0/2]port trunk pvid vlan 34   　　　　　  设置trunk端口的PVID</p>
<p>③ 配置基于Hybrid端口的VLAN<br>[Quidway-Ethernet1/0/2]port link-type hybrid              配置端口的链路类型为Hybrid类型<br>[Quidway-Ethernet1/0/2]port hybrid vlan vlan-id-list { tagged | untagged }  允许指定的VLAN通过当前Hybrid端口<br>注意：缺省情况下，所有Hybrid端口只允许VLAN1通过<br>[Quidway-Ethernet1/0/2]port hybrid pvid vlan vlan-id      设置Hybrid端口的缺省VLAN<br>注意：缺省情况下，Hybrid端口的缺省VLAN为VLAN1</p>
<p>④ VLAN描述<br>description string                      　　　　 指定VLAN描述字符<br>undo description                         　　  　删除VLAN描述字符<br>display vlan [vlan_id]                               查看VLAN设置</p>
<p>⑤ 私有VLAN配置<br>[Qw_A-vlanx]isolate-user-vlan enable          　　　 　　设置主vlan<br>[Qw_A]Isolate-user-vlan  secondary  　　　 　　           设置主vlan包括的子vlan<br>[Quidway-Ethernet1/0/2]port hybrid pvid vlan      　　 设置vlan的pvid<br>[Quidway-Ethernet1/0/2]port hybrid pvid             　　  删除vlan的pvid<br>[Quidway-Ethernet1/0/2]port hybrid vlan vlan_id_list untagged 　设置无标识的vlan</p>
<p>如果包的vlan id与PVId一致，则去掉vlan信息. 默认PVID=1。<br>所以设置PVID为所属vlan id, 设置可以互通的vlan为untagged.</p>
<p>8、STP配置<br>stp {enable|disable}                               设置生成树,默认关闭<br>stp mode rstp                                        设置生成树模式为rstp<br>stp priority 8192                         　　　 设置交换机的优先级<br>stp root {primary|secondary}             　设置为根或根的备份<br>[Quidway-Ethernet0/1]stp cost 200      设置交换机端口的花费</p>
<p>display mac-address                            显示地址表信息<br>display mac-address aging-time         显示地址表动态表项的老化时间<br>display port-mac                                  显示用户配置的以太网端口MAC地址的起始值</p>
<p>2、端口隔离配置</p>
<p>① 通过端口隔离特性，用户可以将需要进行控制的端口加入到一个隔离组中，实现隔离组中的端口之间二层、三层数据的隔离，既增强了网络的安全性，也为用户提供了灵活的组网方案。</p>
<p>[Sysname] interface ethernet1/0/2   将以太网端口Ethernet1/0/2加入隔离组。<br>[Sysname-Ethernet1/0/2] port isolate<br>[Sysname] display isolate port      显示隔离组中的端口信息</p>
<p>② 配置隔离组后，只有隔离组内各个端口之间的报文不能互通，隔离组内端口与隔离组外端口以及隔离组外端口之间的通信不会受到影响。<br>③ 端口隔离特性与以太网端口所属的VLAN无关。<br>④ 当汇聚组中的某个端口加入或离开隔离组后，本设备中同一汇聚组内的其它端口，均会自动加入或离开该隔离组。<br>⑤ 对于既处于某个聚合组又处于某个隔离组的一组端口，其中的一个端口离开聚合组时不会影响其他端口，即其他端口仍将处于原聚合组和原隔离组中。<br>⑥ 如果某个聚合组中的端口同时属于某个隔离组，当在系统视图下直接删除该聚合组后，该聚合组中的端口仍将处于该隔离组中。<br>⑦ 当隔离组中的某个端口加入聚合组时，该聚合组中的所有端口，会自动加入隔离组中。</p>
<p>13、端口安全配置<br>[Switch] port-security enable     启动端口安全功能<br>[Switch] interface Ethernet 1/0/1  进入以太网Ethernet1/0/1端口视图<br>[Switch-Ethernet1/0/1] port-security max-mac-count 80<br>设置端口允许接入的最大MAC地址数为80<br>[Switch-Ethernet1/0/1] port-security port-mode autolearn  配置端口的安全模式为autolearn<br>[Switch-Ethernet1/0/1] mac-address security 0001-0002-0003 vlan 1<br>将Host 的MAC地址0001-0002-0003作为Security MAC添加到VLAN 1中<br>[Switch-Ethernet1/0/1] port-security intrusion-mode disableport-temporarily<br>设置Intrusion Protection特性被触发后，暂时关闭该端口<br>[Switch]port-security timer disableport 30       关闭时间为30秒。</p>
<p>14、端口绑定配置<br>通过端口绑定特性，网络管理员可以将用户的MAC地址和IP地址绑定到指定的端口上。进行绑定操作后，交换机只对从该端口收到的指定MAC地址和IP地址的用户发出的报文进行转发，提高了系统的安全性，增强了对网络安全的监控。</p>
<p>[Qw_A-Ethernet1/0/1] am user-bind mac-addr 0001-0002-0003 ip-addr 10.12.1.1<br>将Host 1的MAC地址和IP地址绑定到Ethernet1/0/1端口。<br>有的交换机上绑定的配置不一样<br>[Qw_A] interface ethernet 1/0/2<br>[Qw_A-Ethernet1/0/2] user-bind ip-address 192.168.0.3 mac-address 0001-0203-0405<br>端口过滤配置<br>[Qw_A] interface ethernet1/0/1      配置端口Ethernet1/0/1的端口过滤功能。<br>[Qw_A-Ethernet1/0/1] ip check source ip-address mac-address<br>[Qw_A] dhcp-snooping             开启DHCP Snooping功能。<br>[Qw_A] interface ethernet1/0/2<br>设置与DHCP服务器相连的端口Ethernet1/0/2为信任端口。<br>[Qw_A-Ethernet1/0/2] dhcp-snooping trust<br>在端口Ethernet1/0/1上启用IP过滤功能，防止客户端使用伪造的不同源IP地址对服务器进行攻击</p>
]]></content>
  </entry>
  <entry>
    <title>ceph存储配置</title>
    <url>/2020/06/ceph%E5%AD%98%E5%82%A8%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="http://docs.ceph.org.cn/start/" target="_blank" rel="noopener">ceph 安装配置</a></p>
<h2 id><a href="#" class="headerlink" title=" "></a> </h2>]]></content>
  </entry>
  <entry>
    <title>逻辑思维题库</title>
    <url>/2020/06/%E9%80%BB%E8%BE%91%E6%80%9D%E7%BB%B4%E9%A2%98%E5%BA%93/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>jetbrain软件卸载</title>
    <url>/2020/06/jetbrain%E8%BD%AF%E4%BB%B6%E5%8D%B8%E8%BD%BD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="写了个脚本卸载"><a href="#写了个脚本卸载" class="headerlink" title="写了个脚本卸载"></a>写了个脚本卸载</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;uninstalljetbrain.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 产品列表</span></span><br><span class="line">group=<span class="string">"AppCode</span></span><br><span class="line"><span class="string">CLion</span></span><br><span class="line"><span class="string">DataGrip</span></span><br><span class="line"><span class="string">Datalore</span></span><br><span class="line"><span class="string">dotTrace</span></span><br><span class="line"><span class="string">Exposed</span></span><br><span class="line"><span class="string">GoLand</span></span><br><span class="line"><span class="string">Hub</span></span><br><span class="line"><span class="string">IntelliJ</span></span><br><span class="line"><span class="string">JetBrains</span></span><br><span class="line"><span class="string">Kotlin</span></span><br><span class="line"><span class="string">KotlinConf</span></span><br><span class="line"><span class="string">Ktor</span></span><br><span class="line"><span class="string">MPS</span></span><br><span class="line"><span class="string">PhpStorm</span></span><br><span class="line"><span class="string">PyCharm</span></span><br><span class="line"><span class="string">Resharper</span></span><br><span class="line"><span class="string">Resharper C++</span></span><br><span class="line"><span class="string">Rider</span></span><br><span class="line"><span class="string">RubyMine</span></span><br><span class="line"><span class="string">Space</span></span><br><span class="line"><span class="string">TeamCity</span></span><br><span class="line"><span class="string">Toolbox App</span></span><br><span class="line"><span class="string">Upsource</span></span><br><span class="line"><span class="string">Webstorm</span></span><br><span class="line"><span class="string">YouTrack"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 项目安装目录</span></span><br><span class="line">dir=<span class="string">"/Users/alert/Library/Preferences/</span></span><br><span class="line"><span class="string">/Users/alert/Library/Caches/</span></span><br><span class="line"><span class="string">/Users/alert/Library/Logs/"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> d <span class="keyword">in</span> <span class="variable">$dir</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$d</span></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> <span class="variable">$group</span></span><br><span class="line"> <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> $(<span class="built_in">pwd</span>) <span class="variable">$s</span></span><br><span class="line">  tree ./ -L 1|awk <span class="string">'&#123;print $2&#125;'</span>|grep -i <span class="string">"\&lt;<span class="variable">$s</span>"</span></span><br><span class="line">  tree ./ -L 1|awk <span class="string">'&#123;print $2&#125;'</span>|grep -i <span class="string">"\&lt;<span class="variable">$s</span>"</span>|xargs rm -rf -</span><br><span class="line"> <span class="keyword">done</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> <span class="variable">$group</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">cd</span> /Users/alert/Library/Application\ Support/</span><br><span class="line">tree ./ -L 1|awk <span class="string">'&#123;print $2&#125;'</span>|grep -i <span class="string">"\&lt;<span class="variable">$s</span>"</span></span><br><span class="line">tree ./ -L 1|awk <span class="string">'&#123;print $2&#125;'</span>|grep -i <span class="string">"\&lt;<span class="variable">$s</span>"</span>|xargs rm -rf -</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>免费ssl申请</title>
    <url>/2020/06/%E5%85%8D%E8%B4%B9ssl%E7%94%B3%E8%AF%B7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://freessl.cn/" target="_blank" rel="noopener">https://freessl.cn/</a>  免费证书申请</p>
<h2 id="填入申请域名"><a href="#填入申请域名" class="headerlink" title="填入申请域名"></a>填入申请域名</h2><h2 id="生成CSR文件"><a href="#生成CSR文件" class="headerlink" title="生成CSR文件"></a>生成CSR文件</h2><p><a href="https://www.racent.com/generate-csr" target="_blank" rel="noopener">https://www.racent.com/generate-csr</a> CSR 在线生成</p>
<h2 id="设置DNS-解析txt纪录"><a href="#设置DNS-解析txt纪录" class="headerlink" title="设置DNS 解析txt纪录"></a>设置DNS 解析txt纪录</h2><p>key：TXT 记录<br>值：记录值</p>
<p>验证域名：wx.xxxx.com<br>TXT 记录：_dnsauth.wx<br>记录值：202004120717021oq4s1ogkvbr3jw70a48u8w9ib3bfhqfvzpfq6gdzcxrrdcml7</p>
<h2 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h2><p>nslookup -q=txt _dnsauth.gitlab.uhetrip.com</p>
<h2 id="下载证书"><a href="#下载证书" class="headerlink" title="下载证书"></a>下载证书</h2><h2 id="配置到nginx中"><a href="#配置到nginx中" class="headerlink" title="配置到nginx中"></a>配置到nginx中</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen              443 ssl;</span><br><span class="line">        server_name        wx.xxxx.com;</span><br><span class="line">        keepalive_timeout   70;</span><br><span class="line">        &#x2F;&#x2F; pem 是生成的证书，key是csr生成的key</span><br><span class="line">        ssl_certificate      wx.xxx.com&#x2F;full_chain.pem; </span><br><span class="line">        ssl_certificate_key  wx.xxxx.com&#x2F;wx.xxxxp.com.key;</span><br><span class="line">        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">        ssl_ciphers         HIGH:!aNULL:!MD5;</span><br><span class="line">        &#x2F;&#x2F; 后端服务</span><br><span class="line">        location ~* &#123;</span><br><span class="line">            proxy_pass http:&#x2F;&#x2F;119.1.1.1:10090;</span><br><span class="line">            access_log  &#x2F;data&#x2F;log&#x2F;nginxlog&#x2F;weiinssl.log  main;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>idea反编译jar文件</title>
    <url>/2020/06/idea%E5%8F%8D%E7%BC%96%E8%AF%91jar%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="创建一个-Maven-项目"><a href="#创建一个-Maven-项目" class="headerlink" title="创建一个 Maven 项目"></a>创建一个 Maven 项目</h2><p>将 jar 拖拽到项目中<br>右击 jar 选择 As a library<br>-&gt; 选择 存放位置 prject library<br>然后就会反编译 jar 得到 java 文件和 配置文件<br>从 jar 中找到<br>BOOT-INF<br>  classes<br>    com.xxx 数据文件<br>    yml xml 配置文件<br>  lib 依赖库<br>META-INF maven pom.xml 文件<br>org.xxx 程序类</p>
]]></content>
      <categories>
        <category>develop</category>
      </categories>
  </entry>
  <entry>
    <title>SSL证书</title>
    <url>/2020/06/SSL%E8%AF%81%E4%B9%A6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="概念及原理"><a href="#概念及原理" class="headerlink" title="概念及原理"></a>概念及原理</h2><p>公钥 -&gt; 私钥<br>证书: 其实包含三部分，用户的信息，用户的公钥，还有CA中心对该证书里面的信息的签名<br>根证书: 根证书是未被签名的公钥证书或自签名的证书。<br>证书数字签名(hash): 公钥密码解决保密性问题数字签名解决完整性问题和有效性问题<br>根证书-&gt; 中间证书 -&gt; 颁发的其他证书</p>
<p>存储：<br>受信任的证书根植于主流浏览器的信任存储中。<br>Chrome -&gt; 设置 -&gt; 隐私和安全性 -&gt; 更多 -&gt; 管理证书</p>
<p>验证：<br>当您的浏览器在网站上验证最终用户SSL证书时，它使用提供的公钥来验证签名并在证书链上向上移动一个链接。重复这个过程：对签名进行身份验证，并跟踪签名的证书链，直到最终到达<strong>浏览器信任存储中的一个根证书</strong>。如果它不能将证书链回其受信任的根，它就不会信任该证书。</p>
<h2 id="自己签发根证书示例"><a href="#自己签发根证书示例" class="headerlink" title="自己签发根证书示例"></a>自己签发根证书示例</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 简单演示使用 ip 签发证书</span></span><br><span class="line"><span class="comment"># 生成根证书</span></span><br><span class="line">openssl genrsa -out ca.key 4096</span><br><span class="line"></span><br><span class="line">openssl req -x509 -new -nodes -sha512 -days 3650 \</span><br><span class="line"> -subj <span class="string">"/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=192.168.0.69"</span> \</span><br><span class="line"> -key ca.key \</span><br><span class="line"> -out ca.crt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对根证书签名</span></span><br><span class="line">openssl genrsa -out mycert.key 4096</span><br><span class="line"></span><br><span class="line">openssl req -sha512 -new \</span><br><span class="line">    -subj <span class="string">"/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=192.168.0.69"</span> \</span><br><span class="line">    -key mycert.key \</span><br><span class="line">    -out mycert.csr</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为registry生成证书</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"subjectAltName = IP:192.168.0.69"</span> &gt; extfile.cnf</span><br><span class="line"></span><br><span class="line">openssl x509 -req -sha512 -days 3650 \</span><br><span class="line">    -extfile extfile.cnf \</span><br><span class="line">    -CA ca.crt -CAkey ca.key -CAcreateserial \</span><br><span class="line">    -<span class="keyword">in</span> mycert.csr \</span><br><span class="line">    -out mycert.crt</span><br></pre></td></tr></table></figure>
<p>ssh 暴力破解<br><a href="http://server.51cto.com/sOS-569326.htm" target="_blank" rel="noopener">http://server.51cto.com/sOS-569326.htm</a></p>
<p><a href="https://www.bboysoul.com/2017/10/25/%E4%BD%BF%E7%94%A8SSHScan%E6%89%AB%E6%8F%8F%E7%A0%B4%E8%A7%A3ssh%E5%AF%86%E7%A0%81/" target="_blank" rel="noopener">https://www.bboysoul.com/2017/10/25/%E4%BD%BF%E7%94%A8SSHScan%E6%89%AB%E6%8F%8F%E7%A0%B4%E8%A7%A3ssh%E5%AF%86%E7%A0%81/</a></p>
<p><a href="http://www.my-ip-neighbors.com" target="_blank" rel="noopener">http://www.my-ip-neighbors.com</a>   reverse ip lookup<br>www.sameip.org  whois<br>国内: <a href="http://www.cmd5.com" target="_blank" rel="noopener">http://www.cmd5.com</a> (收费很.强大)<br>国内：<a href="http://www.md5.com.cn/" target="_blank" rel="noopener">http://www.md5.com.cn/</a> (有特色，还没怎么用)<br>国内：www.xmd5.com(还不错)<br>国外：<a href="http://www.c0llision.net/webcrack.php(免费，还不错" target="_blank" rel="noopener">http://www.c0llision.net/webcrack.php(免费，还不错</a>)<br>国外：<a href="http://hashkiller.com/" target="_blank" rel="noopener">http://hashkiller.com/</a> (免费，相当强大!!!)<br>国外：<a href="http://ops.conus.info/(免费，少有的oracle" target="_blank" rel="noopener">http://ops.conus.info/(免费，少有的oracle</a> hash在线破解网站)<br><a href="http://www.c0llision.net/webcrack.php" target="_blank" rel="noopener">http://www.c0llision.net/webcrack.php</a>  破解HASH<br><a href="http://www.objectif-securite.ch/en/products.php" target="_blank" rel="noopener">http://www.objectif-securite.ch/en/products.php</a>  破解HASH<br>linxer<br>看雪 <a href="http://www.pediy.com/" target="_blank" rel="noopener">http://www.pediy.com/</a><br>unpack  www.unpack.cn</p>
<p><a href="https://jobrest.gitbooks.io/kali-linux-cn/content/index.html" target="_blank" rel="noopener">https://jobrest.gitbooks.io/kali-linux-cn/content/index.html</a></p>
]]></content>
  </entry>
  <entry>
    <title>rancher使用维护</title>
    <url>/2020/06/rancher%E4%BD%BF%E7%94%A8%E7%BB%B4%E6%8A%A4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://docs.rancher.cn/rancher2x/quick-start.html" target="_blank" rel="noopener"> rander 2.x 新文档 </a></li>
</ul>
<h2 id="rancher-概念"><a href="#rancher-概念" class="headerlink" title="rancher 概念"></a>rancher 概念</h2><p>catalog：</p>
<p><a href="https://github.com/rancher/charts/tree/master/charts" target="_blank" rel="noopener">https://github.com/rancher/charts/tree/master/charts</a></p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><ul>
<li>通过 rancher 安装一个 k8s 集群。</li>
<li>建立一个 pod，并完成对 pod 迁移，扩容，更新。</li>
<li>建立存储卷，将容器目录映射到存储卷。</li>
<li>连接到私有的容器镜像库，启动自定义镜像。</li>
<li>添加Pod水平自动伸缩 HBA</li>
</ul>
<p>修改默认的 registry<br>在 系统管理 -&gt; 系统设置 -&gt; 高级设置, 点击 我确认已经知道修改高级设置可能导致问题.<br>找到registry.default 设置然后点击编辑按钮。</p>
<p>限制镜像库的使用</p>
<h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><h3 id="使用自建镜像库-issue"><a href="#使用自建镜像库-issue" class="headerlink" title="使用自建镜像库 issue"></a>使用自建镜像库 issue</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># x509: certificate signed by unknown authority</span></span><br><span class="line">使用了自签名证明，提示证书未受信任。</span><br><span class="line">解决方法:</span><br><span class="line">  申请个受信任证书</span><br><span class="line">  把镜像库改成公开</span><br></pre></td></tr></table></figure>
<h3 id="gitlab-挂载了nfs，启动不起来"><a href="#gitlab-挂载了nfs，启动不起来" class="headerlink" title="gitlab 挂载了nfs，启动不起来"></a>gitlab 挂载了nfs，启动不起来</h3><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">Errno::EPERM when <span class="built_in">running</span> Gitlab <span class="keyword">on</span> OpenShift <span class="keyword">and</span> NFS persistent Volume</span><br><span class="line">原因是 gitlab 需要改文件权限导致。建议后端存储不要用nfs</span><br></pre></td></tr></table></figure>
<h3 id="rancher2-x-pipeline-gitlab-不能自动触发"><a href="#rancher2-x-pipeline-gitlab-不能自动触发" class="headerlink" title="rancher2.x pipeline gitlab 不能自动触发"></a>rancher2.x pipeline gitlab 不能自动触发</h3><p>Admin Area -&gt; Settings -&gt; Network -&gt;Outbound requests</p>
<p><a href="https://gitlab.com/gitlab-org/omnibus-gitlab/-/issues/4929" target="_blank" rel="noopener">gitlab community</a></p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>helm安装使用</title>
    <url>/2020/06/helm%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://github.com/helm/helm/releases" target="_blank" rel="noopener">helm3.0 下载</a></li>
</ul>
<h1 id="kubernetes-helm"><a href="#kubernetes-helm" class="headerlink" title="kubernetes-helm"></a>kubernetes-helm</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># helm k8s包管理工具</span></span><br><span class="line">helm          <span class="comment"># 客户端工具</span></span><br><span class="line">Tiller        <span class="comment"># 服务端</span></span><br><span class="line">Chart         <span class="comment"># 软件包</span></span><br><span class="line">Repoistory    <span class="comment"># 软件仓库</span></span><br><span class="line">Release       <span class="comment"># 发布到k8s集群</span></span><br></pre></td></tr></table></figure>
<h1 id="helm2-to-helm3"><a href="#helm2-to-helm3" class="headerlink" title="helm2 to helm3"></a>helm2 to helm3</h1><ul>
<li><a href="https://helm.sh/docs/topics/v2_v3_migration/" target="_blank" rel="noopener">helm2 to helm3</a></li>
</ul>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、 移除了Tiller</span><br><span class="line"><span class="number">2</span>、 分布式仓库以及Helm Hub</span><br><span class="line">helm3 search hub hazelcast</span><br><span class="line"><span class="number">3</span>、 JSON Schema 验证</span><br><span class="line"><span class="number">4</span>、 Helm 测试</span><br><span class="line"><span class="number">5</span>、 命令行语法</span><br></pre></td></tr></table></figure>
<h1 id="helm3-0"><a href="#helm3-0" class="headerlink" title="helm3.0"></a>helm3.0</h1><h2 id="helm3-0-基本用法"><a href="#helm3-0-基本用法" class="headerlink" title="helm3.0 基本用法"></a>helm3.0 基本用法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用 kubeconfig 连接集群</span></span><br><span class="line"><span class="comment"># kubectl config view --raw</span></span><br><span class="line">cat &lt;&lt; EOF &gt;kubeconfig</span><br><span class="line">apiVersion: v1</span><br><span class="line">clusters:</span><br><span class="line">- cluster:</span><br><span class="line">    certificate-authority: ./ca.crt</span><br><span class="line">    server: https://192.168.0.71/k8s/clusters/c-lc9dm</span><br><span class="line">  name: Default</span><br><span class="line">contexts:</span><br><span class="line">- context:</span><br><span class="line">    cluster: Default</span><br><span class="line">    user: Default</span><br><span class="line">  name: Default</span><br><span class="line">current-context: Default</span><br><span class="line">kind: Config</span><br><span class="line">preferences: &#123;&#125;</span><br><span class="line">users:</span><br><span class="line">- name: Default</span><br><span class="line">  user:</span><br><span class="line">    token: kubectl-shell-user-prfbt:fsk2pxzz88bvsg7pjhrjpj7gbnxks9gzvgmvkb7zcvhlbtg929bqnd</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># /nonexistent/.kube/certs/ca.crt</span></span><br><span class="line">cat &lt;&lt; EOF &gt;./ca.crt</span><br><span class="line">-----BEGIN CERTIFICATE-----</span><br><span class="line">MIIBiDCCAS6gAwIBAgIBADAKBggqhkjOPQQDAjA7MRwwGgYDVQQKExNkeW5hbWlj</span><br><span class="line">bGlzdGVuZXItb3JnMRswGQYDVQQDExJkeW5hbWljbGlzdGVuZXItY2EwHhcNMjAw</span><br><span class="line">NjA1MDI1MzE4WhcNMzAwNjAzMDI1MzE4WjA7MRwwGgYDVQQKExNkeW5hbWljbGlz</span><br><span class="line">dGVuZXItb3JnMRswGQYDVQQDExJkeW5hbWljbGlzdGVuZXItY2EwWTATBgcqhkjO</span><br><span class="line">PQIBBggqhkjOPQMBBwNCAASstTayZLui2EZBF26Wbl5xvyxeYW9jQzlltfcFFFFZ</span><br><span class="line">+/1J0FktiOBSFiRRCP8MI9wqNzuWsdZkxJUec1fRfvftoyMwITAOBgNVHQ8BAf8E</span><br><span class="line">BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAKBggqhkjOPQQDAgNIADBFAiEAt3QuSmDc</span><br><span class="line">1/NeGi5taMHSAriP9goCw7ijP+sEXwwWWlgCIDmDyd/vGt6MO8WSIgOhciqwUBAa</span><br><span class="line">EyMQ53kc3iSgIuZ/</span><br><span class="line">-----END CERTIFICATE-----</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接 k8s</span></span><br><span class="line"><span class="comment"># helm --kubeconfig ./kubeconfig</span></span><br><span class="line"><span class="built_in">export</span> KUBECONFIG=<span class="string">"./kubeconfig"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出helm 环境变量</span></span><br><span class="line">helm env</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出本地仓库</span></span><br><span class="line">helm repo list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加阿里云公用的仓库</span></span><br><span class="line">helm repo add aliyun https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新本地仓库</span></span><br><span class="line">helm repo update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在本地仓库 search mysql</span></span><br><span class="line">helm search repo mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 mysql 信息</span></span><br><span class="line">helm show chart aliyun/mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># install chart 到 k8s</span></span><br><span class="line">helm --kubeconfig ./kubeconfig  install db aliyun/redis -n <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建本地索引</span></span><br><span class="line">helm repo index abc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置配置</span></span><br><span class="line">helm install my-web bitnami/tomcat \</span><br><span class="line">  --<span class="built_in">set</span> service.type=NodePort \</span><br><span class="line">  --<span class="built_in">set</span> persistence.enabled=<span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h2 id="helm-charts-目录结构"><a href="#helm-charts-目录结构" class="headerlink" title="helm charts 目录结构"></a>helm charts 目录结构</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">myapplication/v1.0 <span class="comment"># 应用</span></span><br><span class="line">charts             <span class="comment"># 其中包含了运行一个应用所需要的镜像、依赖和资源定义等</span></span><br><span class="line">templates          <span class="comment"># 部署应用的yaml文件</span></span><br><span class="line">Chart.yaml         <span class="comment"># 应用基本信息</span></span><br><span class="line">values.yaml        <span class="comment"># pod 信息</span></span><br></pre></td></tr></table></figure>
<h2 id="helm-自己构建-charts"><a href="#helm-自己构建-charts" class="headerlink" title="helm 自己构建 charts"></a>helm 自己构建 charts</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 自己构建 chart</span></span><br><span class="line">helm create nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打包</span></span><br><span class="line">helm package nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装到集群中,name       ,指定命名空间</span></span><br><span class="line">helm install n1 nginx -n <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">helm uninstall n1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 升级</span></span><br><span class="line">helm upgrade n1 nginx -n <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看升级版本</span></span><br><span class="line">helm list -n <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 回滚</span></span><br><span class="line">helm rollback n1 1 -n <span class="built_in">test</span></span><br></pre></td></tr></table></figure>
<h1 id="helm-2-0"><a href="#helm-2-0" class="headerlink" title="helm 2.0"></a>helm 2.0</h1><h2 id="helm-2-0-基本指令"><a href="#helm-2-0-基本指令" class="headerlink" title="helm 2.0 基本指令"></a>helm 2.0 基本指令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm init</span><br><span class="line">helm list <span class="comment">#查看在集群上安装的 Charts 列表</span></span><br><span class="line">helm repo list <span class="comment">#</span></span><br><span class="line">helm search <span class="comment">#</span></span><br><span class="line">  helm search 存储库名称 <span class="comment">#如 stable 或 incubator</span></span><br><span class="line">  helm search chart名称 <span class="comment">#如 wordpress 或 spark</span></span><br><span class="line">helm repo update <span class="comment"># 更新</span></span><br><span class="line">helm create app <span class="comment"># 创建应用</span></span><br><span class="line">helm lint <span class="comment"># 语法检查</span></span><br><span class="line">helm package <span class="comment"># 打包</span></span><br><span class="line">helm install <span class="comment"># 安装</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Helm客户端(helm)和Helm服务端(Tiller)。</span></span><br><span class="line">helm init</span><br><span class="line"></span><br><span class="line">--tiller-image</span><br><span class="line"><span class="built_in">export</span> HELM_HOST=localhost:44134</span><br><span class="line"></span><br><span class="line"><span class="comment"># Tiller可以升级使用helm init --upgrade</span></span><br><span class="line"><span class="comment"># 默认情况下，tiller将安装release信息存储在其运行的命名空间中的ConfigMaps中</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># helm 官方charts</span></span><br><span class="line">https://github.com/helm/charts/tree/master/stable</span><br><span class="line"></span><br><span class="line"><span class="comment"># rancher 官方应用中心</span></span><br><span class="line">rancher/charts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 云原生应用中心 for ali</span></span><br><span class="line">cloudnativeapp/charts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line"><span class="comment"># PiggyMetrics springcloud 应用 Docker Compose部署</span></span><br><span class="line">这个项目包含了3个业务微服务，分别是</span><br><span class="line">  统计服务（Statistics Service）、</span><br><span class="line">  账户服务（Account Service）</span><br><span class="line">  通知服务（Notification Service）。</span><br><span class="line">每个服务分别对应一个独立的MongoDB。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用kompose工具将 docker-compose 转成 kubernetes 应用</span></span><br><span class="line"><span class="comment"># 去掉一些不支持的指令</span></span><br><span class="line"><span class="comment"># 增加Kubernetes server type annotation</span></span><br><span class="line"><span class="comment"># 转换</span></span><br><span class="line">kompose convert -f docker-compose.yml -f docker-compose.dev.yml -o piggymetrics -c</span><br><span class="line"><span class="comment"># 运行helm install命令</span></span><br><span class="line">helm install --namespace pm --name piggy piggymetrics/</span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">helm delete --purge piggymetrics</span><br><span class="line">release <span class="string">"piggymetrics"</span> deleted</span><br></pre></td></tr></table></figure>
<h2 id="helm-安装到-rancher-server"><a href="#helm-安装到-rancher-server" class="headerlink" title="helm 安装到 rancher server"></a>helm 安装到 rancher server</h2><h3 id="helm2-0"><a href="#helm2-0" class="headerlink" title="helm2.0"></a>helm2.0</h3><ul>
<li><a href="https://docs.rancher.cn/rancher2x/installation/helm-ha-install/online/tcp-l4/helm-install.html#_1-%E9%85%8D%E7%BD%AEhelm%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90" target="_blank" rel="noopener"> rancher docs install helm </a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建ClusterRoleBinding以授予tiller帐户对集群的访问权限</span></span><br><span class="line"></span><br><span class="line">kubectl --kubeconfig=kube_configxxx.yml -n kube-system create serviceaccount tiller</span><br><span class="line">kubectl --kubeconfig=kube_configxxx.yml create clusterrolebinding tiller \</span><br><span class="line">--clusterrole cluster-admin --serviceaccount=kube-system:tiller</span><br><span class="line"></span><br><span class="line"><span class="comment"># Rancher中安装Tiller</span></span><br><span class="line">kubeconfig=xxx.yml</span><br><span class="line"></span><br><span class="line">helm_version=`helm version |grep Client | awk -F<span class="string">""</span>\" <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">helm init --kubeconfig=<span class="variable">$kubeconfig</span> \</span><br><span class="line">--service-account tiller --skip-refresh \</span><br><span class="line">--tiller-image registry.cn-shanghai.aliyuncs.com/rancher/tiller:<span class="variable">$helm_version</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>容器栈</title>
    <url>/2020/06/%E5%AE%B9%E5%99%A8%E6%A0%88/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul>
<li>DKE        容器引擎</li>
<li>containerd 容器引擎</li>
<li>docker 容器管理工具</li>
<li>kubernetes  容器编排工具</li>
<li>helm        包管理工具</li>
<li>rancher k8s 管理工具</li>
<li>harbor  私有镜像库</li>
<li>gitlab  代码托管</li>
<li>jenkins CI,CD 工具</li>
</ul>
<h2 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h2><p>研发 -&gt; 代码提交到(Gitlab) -&gt; 触发hook -&gt; (jenkins)通过pipeline开始构建代码打包镜像 -&gt; 发布到（k8s中)<br>-&gt; 开发环境<br>-&gt; 测试环境<br>-&gt; 生产环境</p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>k3s安装配置</title>
    <url>/2020/06/k3s%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://rancher.com/docs/k3s/latest/en/" target="_blank" rel="noopener">K3S docs</a></li>
</ul>
<h1 id="k3s-概念及原理"><a href="#k3s-概念及原理" class="headerlink" title="k3s 概念及原理"></a>k3s 概念及原理</h1><ul>
<li>helm controller</li>
<li>service LB</li>
<li>Traefik LB</li>
<li>持久化和存储</li>
<li>RootFS</li>
</ul>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>img</title>
    <url>/2020/06/img/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="内部使用，无内容展示"><a href="#内部使用，无内容展示" class="headerlink" title="内部使用，无内容展示"></a>内部使用，无内容展示</h2>]]></content>
  </entry>
  <entry>
    <title>一站式运维环境搭建</title>
    <url>/2020/06/%E4%B8%80%E7%AB%99%E5%BC%8F%E8%BF%90%E7%BB%B4%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="Hey, password is required here." /><label>Hey, password is required here.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="d7518add8c4b638dab598f1a04a4339c416d0673756962d515f9781de136809f">4dc7a94a957e0b6d366c4c57187f63c514b1838b6a28f070585cad84b1e80383823afa5695960eaf613334f5875bdfb08adf1b54968bae6f75323815871b97903d058ec2fb386405a9e110ec1beeb740f6856f37547d36edc7f37ad366d7409f1e297077bc40f01b219ff8cb5c589c06e7432033e859424280a9c215351504277ea5b72d0a3c88b439afcfcfdc4e7aebded72679b1186438d29cb186b1eb3d2a604610de7591ead960e6ac6a0fdc7050e1bd9c77129452c3e7353826a87967055af468b3eb78f35467f5e7c59312a86363202783497075341dfaf2f44295e15ec54e836936e224c6ad1fe2433cd11e99370f64b0de0f69b152d849268c6476a23b28e7f52e32b4036ec7ddc6491c30dbf1f17a6a57562c8153b4c7b0dec8a3e08d0b10ca2f9008c383d0e405355efaf9e4b7312b054cb98d2efc70cfbe8cfa569e5549c98c40924da24335d4b75d505bf8c0ddefd378e38fe37ab3045a212325782143f794f4d359e21179e7934d77e626c0c72d0b8b7a857afc1d2e1d0a42f179194918ed9482a1478e38a6ca10d2e2fbc24c0a45fbca85cfda1b90d7b3976db8ad925bf82514205db69b337976df4a6fccf1004e8b0853b77db34101b25d217afa9b3245e8a0192edbde797d420e088ffc16a408bda324bc7a6aacfe64498de3d662248720113de879d955aa130bf1652cbc6b6aed7b4ab487ca31a2dcad7307cf4278261002c196d431c1204a4bfc89878bf244f0ec2e2bef88b1760ed462def728ac5948806f0159f6ecef7a2d50a5b4409200e597655bf3f5e13bc1594a7883e5721564df15a537b7e73fdf308e19e223d14869d27a9423de4e4ecd9cd9a0de5457ec7f9b1ff83322ef29e86868456b7c8a9789f8eb68317402bd8e0a72243e04c29776bc671c33b1b4ae54485655fb09777df83f552e2bd2628113210fbb4ca521cb6dfd699e2502f93ec5693e755f471dc17ad47637f3073be199d4797b41e356524bd8da0d35d5e5665bfc816fdb962d32ea3071ddf1541db37da384211778de61e69cef599a0a4c6674c51271a6be7b32338e312f03b81bae7626695979a5e55634bac001114f173cb578fd4deabf3f831e7de8e2cee5c23ad4a8fbe3cb1281c78da5497dd1aa6370816d9c1817b937699dc4b7d4680798730df18aa133f6bb637cb20b97c2b5e94ababc27294f7ca807ef0bbaa625561b09bd9e71063055f7ce51a06356a226db967e2aa4ee2a20359893ccdac639a17fb7f8f4a20de0fe03118c363b6324bcd1de01e6f7c4d1ecd4778b2fef0da21c33b814d40904e06bcb9df2bd63ba3120ac7e5e0d4d895f388c46324541605b77e2e61464f75229b1e92b1a516d72486fd420356feea5aff98704bb3d66fb6c0e6ac5f6756ff2cc097eda318bb6f2e507db72501d7e4033f67f232077ba84c8dbe64c3e9dd8232ca6dae0380dd399f712b0e65d0330abf579e2283092e640f60001f0e34467175646850ce022ee57cf3027a0aae3ca4d1027155e333edd745bfd1d27281be69b68599e9cd79e4da4f89eb21adb5797c6ec6d21bdb980f600e41800ac3198d6fa9e72c1698328b699e08f63bcd8fb25bf36d15510ece87a6dd85d1c05f91085e4aabde8d49fe19075ae5ff33796bed1e3d13e05eff8685db4866c71b40a6b9d59853341061198dd390d55fbff7df9ad8d077f933c034552df21ab57c8c58331d099ab2e7dc172fb30fd2079afffd15777eef2bcfe1c58187650c23222075e38c5d4c8c52394c10489aa5cf3670e8180a832afd7895d7e1e6dec9368d5e445cee85c95f9204b6c29770f94ebf3317648190f4d9d376411a3ef555f30b1ff54a1dd79b3415a33f1a248724377ea1031918b1c7ede5912fc436f53ab3a146af59c0123dc45d6cd336651776f0ff7e0453b00fab93f7369c9b7c22d2890ffd3cbaa7bd7da943eb788887145529e408070423e356b3adc49374b80e0890492f627bacdaf34e7fca4ddb2d7b965c09f4b6f656732189325f729891ea22f4179466347db57b171d1419b8212a1c2813a23e7006da8d29ddfa3a7479aa6f6ba88913136936d87f35403eadf4d58c5e7cb691c825ee49992eacd49b07d56d995c1c3c908f00dec15ed2130c6c3ebb39ac19544454ad15169f80e77a225e0241b8edf7e7c6eea6f5a9eaaad56a4132be4154339c94ad20489972b1fd5c8a6f15d20b37f0cba2d72eb4e96d72543d2e38d344bd5e0074336ab1123e36e861c76f1e4407c779953bfba55b1d6b034b58de7469fc46178ab71370ff2da4ad778b227b6362bacaae4645c6200bdec4a3ca00295d21bb219502ada303ca03db23583a74f0efb097e2e298bd09342aa26e37026bd927c69492a7644f201fe601a409b1f2ea54131b5e0764a6f9e5011193f8586947440c07bb7da78fde0eef61ae61aa1e97ab84ca5ed2bd5e79ed6231bf7994971bf9c65a99baa93a5087c434751f73b1cad1f49ca0649d10bdbbce8521f6b8a4212e0db65f8298a475e6457ee34a29e6dfc1dbc347e301d5b9fd20053edddf8401dd87675c34fe83a4796f93eb93bf173b3c40eca768344dad72e992e88a769f7b43d8d3f38e695bae5b6f8bc4e149106fc1f33da6a999be5d36dabad9509528060bc36a40c49b7e2a3301c09bb1199bad3c2e3652b00e4dd986a5528e6b9b987ca1d432f3702a4d316373e2a89190596564377762ea483185b884c2bdc93187ff1edc2dac1d63fcf5a7ed575cff4bce88d92aa786de20d73298b76c6d03feb8c829e5f899d38a0d36b2dfcbc23227131b81126ede13ac9098a0bfb6044af36486b557e8d41d65851d0838315a1f0a26a6126d597673497924c3d035ccb98b95faf9d0e6f8146602ea479eee9cf688c56d52bba8cc59c55df86731b498927ad40e08fc685a05a776af6919644e7d2a4555a707d54c51c827a1de9545f836ee806736016638796cb3c72862e2efb0d57b1b51f24a2bdf8a992ec50a285c8b543df09633dbaaaeceeb8f5d6782ec59ac962d815908b4e9a6bdd28ce4369312fa5bd75ed019b942b7e636aa0e26889ad6b1ad70797a5a10db285713d9d21999f9ceb3c6df364dc9b98078a5a6a9cc28a538b549dc37c3bc7e8edab7bd0a3ade83f9c07698a9c4839bc8283a3e170f12840c5e38dfb2cff9ef9737c03616c2ac0d3aa92028a9048247bb62ebfc03ae02de71a1325b2c07f838b6ba17bb0c47cb6e03b8df6d7ffca20bd9911e40d7345c186f5693b34f710416211d423ae60ea3e6d77f4a63e83478ffd6c4b1d38184d3dba9f2be1c53a71a00ab86489cac7f87a8244a877ddb82ce2da5383c860ea5c39ffadbfca303da22459f2da71c24dd3c7bf41dbcc5ad359c18a47720fcca758f033af62d36bd24bad3632e82abd231840a575c6ea286fdbc79c193e97ceb634a962a3a683c3e4c1093196aec1ebd476874e52e75037aa4a4df286f400779a48e570c57af67257c7c22ed0ec17fdcc13d8a6b5eb306c77d5658415f177cb4a136a0a9944e1eb8cc5ec8819d51c62166c41052c867dfc166859578c9f43733402c7d733d0fdd319baf1dcd863a35d9b9b6dc1d60a498e8140eae5e00ab220c441c1faa878439ed43b75b2ded02c5797ba33f07d6415a72832eac83f64b882ae6ea02c73004b3517b90a09fee4c1a8ae2ad47411e14e17f2c30bc93e84e06bbfb08a33ba04d7caebc18acd79eede6cab7498b850675ecaeab1ebf7544ffed5202d850bf6658dbf9726f2fbf85116a6f50f7c0f4cde443ea40842ab24beb462cd687d8afaa8d663f4dfee927588117ea60ed2f835fb5cd6d885882a3d548aab3f6db8eae04d70657c25e60af34629a01aef2e30dc73a53e33084d5f08acf436033a6f2ad7cd9d98c84a9aab7bd2ba76bb5b27be1bbbf004304d7df11ea03c4a7294c0ffaec07c21c78d978681181e770741936f0ad727d978136e9cd8c045d6612fa30d208c1ff93ee1e395b338611d63ff75c712b42b03d9db0ca0b7a97da5e3023707ad4a3508d9b43f8561b512f5649fa5e881bec0ff93288c1c88dbc26f732e540a0fc740ee8e4b00ab6844973cc4a979353946f0012ef02f49cec2c84c78bd60c5fb7b3a576eb973c544e6d25e867282146c0b6e61c2f9ef369ceb54a7e1876d8260a590284c3ef8bf32c7fa9e787569c1fed4d762c62eebad3b2c3001f81d47344df7af83213a65545d14ea033589b78812fd13974ab2f5be2b86e70f2a2dd80cd34267c82e141a80322f00be5e25486e3aa2ed36004abc09632aeb605ca3e31549b0fd857da6dd97ded93073938b2a5f146d5ab89911ccf1ab42b2769f877c50cae5e0575a51e7e6e6d7133834fc7067902a7e6e9a5a7c12956714012025e96a4c2f1b524b6ee8ab7e4d583432ba059b13a56f5ea635e09da88e062468bdb00dce42f0e660605e14e4753eb7e3c4383e220fb702b74ca088bcef8ddaba67722b92d4b5fbddbcf2b38050644f3f7e0e842ebb05f83f9d320f1d95b741abbd50f46aabbacd17b82fc64863c97579fd704db94a6563b9dc47541a7d29edebe57e9ad465bb5b4b86f945e162a25b5719af9915636238</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>rancher安装k8s</title>
    <url>/2020/06/rancher%E5%AE%89%E8%A3%85k8s/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="Hey, password is required here." /><label>Hey, password is required here.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="61132147810e210654ab23f2c1824ecbe0f2effdfd131489105f751d6627fd27"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>kubernetes备份恢复</title>
    <url>/2020/06/kubernetes%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>linux安装服务前配置</title>
    <url>/2020/06/linux%E5%AE%89%E8%A3%85%E6%9C%8D%E5%8A%A1%E5%89%8D%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="安装前配置"><a href="#安装前配置" class="headerlink" title="安装前配置"></a>安装前配置</h2><h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 停用防火墙</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line"><span class="comment"># 查看</span></span><br><span class="line">iptables -L -n</span><br></pre></td></tr></table></figure>
<h3 id="关闭-selinux"><a href="#关闭-selinux" class="headerlink" title="关闭 selinux"></a>关闭 selinux</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">"s/^SELINUX=enforcing/SELINUX=disabled/g"</span> /etc/selinux/config</span><br></pre></td></tr></table></figure>
<h3 id="关闭-swap"><a href="#关闭-swap" class="headerlink" title="关闭 swap"></a>关闭 swap</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">swapoff -a</span><br><span class="line">swapoff -a sed -i <span class="string">'s/.*swap.*/#&amp;/'</span> /etc/fstab</span><br></pre></td></tr></table></figure>
<h3 id="NTP-配置"><a href="#NTP-配置" class="headerlink" title="NTP 配置"></a>NTP 配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install chrony -y</span><br><span class="line"><span class="comment"># vim /etc/chrony.conf</span></span><br><span class="line">sed -i <span class="string">"/^server/d"</span> /etc/chrony.conf</span><br><span class="line">sed -i <span class="string">"2a server ntp1.cloud.aliyuncs.com iburst"</span> /etc/chrony.conf</span><br><span class="line">sed -i <span class="string">"2a server ntp2.cloud.aliyuncs.com iburst"</span> /etc/chrony.conf </span><br><span class="line">sed -i <span class="string">"/#allow/s/#//"</span> /etc/chrony.conf</span><br><span class="line">systemctl <span class="built_in">enable</span> chronyd.service;systemctl start chronyd.service</span><br></pre></td></tr></table></figure>
<h3 id="配置国内yum-源"><a href="#配置国内yum-源" class="headerlink" title="配置国内yum 源"></a>配置国内yum 源</h3><a href="/2020/05/%E9%85%8D%E7%BD%AE%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90/" title="配置国内各种镜像源">配置国内各种镜像源</a>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装下载工具</span></span><br><span class="line">yum install -y wget;</span><br><span class="line">rm  /etc/yum.repos.d/* -rf</span><br><span class="line"></span><br><span class="line"><span class="comment"># Aliyun 源</span></span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo</span><br></pre></td></tr></table></figure>
<h3 id="DNS-配置"><a href="#DNS-配置" class="headerlink" title="DNS 配置"></a>DNS 配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;EOF&gt;/etc/resolv.conf</span><br><span class="line">nameserver 114.114.114.114</span><br><span class="line">nameserver 8.8.8.8</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<h3 id="局域网扫描"><a href="#局域网扫描" class="headerlink" title="局域网扫描"></a>局域网扫描</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># arping</span></span><br><span class="line">arping -I eth0 192.168.0.59 -b</span><br><span class="line"></span><br><span class="line"><span class="comment"># arp-scan</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/royhills/arp-scan</span><br><span class="line"><span class="built_in">cd</span> arp-scan</span><br><span class="line">autoreconf --install</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">yum install epel-release</span><br><span class="line">yum install arp-scan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扫描</span></span><br><span class="line">arp-scan --interface=eth0 192.168.0.0/24</span><br><span class="line">arp-scan -l</span><br></pre></td></tr></table></figure>
<h3 id="grep中进行非贪婪的匹配"><a href="#grep中进行非贪婪的匹配" class="headerlink" title="grep中进行非贪婪的匹配"></a>grep中进行非贪婪的匹配</h3><p>grep -o -P “http.*?,” xxx.file</p>
<h3 id="Linux下Json格式化神器jq"><a href="#Linux下Json格式化神器jq" class="headerlink" title="Linux下Json格式化神器jq"></a>Linux下Json格式化神器jq</h3><p>yum -y install epel-release<br>yum -y install jq</p>
]]></content>
  </entry>
  <entry>
    <title>创建Yum源</title>
    <url>/2020/06/%E5%88%9B%E5%BB%BAYum%E6%BA%90/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="自定义yum-仓库"><a href="#自定义yum-仓库" class="headerlink" title="自定义yum 仓库"></a>自定义yum 仓库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建yum仓库目录</span></span><br><span class="line">mkdir -p /application/yum/centos7/x86_64/</span><br><span class="line"><span class="built_in">cd</span> /application/yum/centos7/x86_64/</span><br><span class="line"><span class="comment"># 上传rpm包(略)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装createrepo软件</span></span><br><span class="line">yum -y install createrepo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化repodata索引文件</span></span><br><span class="line">createrepo -pdo /application/yum/centos7/x86_64/ /application/yum/centos7/x86_64/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提供yum服务（使用python http）</span></span><br><span class="line"><span class="built_in">cd</span> /application/yum/centos6.6/x86_64/</span><br><span class="line">python -m SimpleHTTPServer 80 &amp;&gt;/dev/null &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加新的rpm包</span></span><br><span class="line">yum downloader pcre-devel openssl-devel </span><br><span class="line">createrepo --update /application/yum/centos6.6/x86_64/   </span><br><span class="line"></span><br><span class="line"><span class="comment"># 客户端配置</span></span><br><span class="line">[abc_com]</span><br><span class="line">name=Server</span><br><span class="line">baseurl=http://10.0.0.8</span><br><span class="line"><span class="built_in">enable</span>=1</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定使用yum库</span></span><br><span class="line">yum --enablerepo=abc_com --disablerepo=base,extras,updates,epel list </span><br><span class="line"></span><br><span class="line"><span class="comment"># 把ali的库指向自定义yum库</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'10.0.0.8 mirrors.aliyun.com'</span> &gt;&gt;/etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 同步线上的yum库</span></span><br></pre></td></tr></table></figure>
<h2 id="yum使用"><a href="#yum使用" class="headerlink" title="yum使用"></a>yum使用</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 列出 repo 库</span></span><br><span class="line">yum repolist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出repo所有包</span></span><br><span class="line">yum list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出已安装包</span></span><br><span class="line">yum list installed</span><br><span class="line">rpm -qa</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出可更新的包</span></span><br><span class="line">yum list updates</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出额外的包 </span></span><br><span class="line">yum list extras</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出依赖列表</span></span><br><span class="line">yum deplist zlib</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跳过依赖 --skip-broken</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出相关的包</span></span><br><span class="line">yum list php*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出软件包提供的文件</span></span><br><span class="line">yum provides ss</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出包信息</span></span><br><span class="line">yum info zlib</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出软件包所有文件</span></span><br><span class="line">rpm -ql zlib</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出文件所属的包</span></span><br><span class="line">rpm -qf /usr/lib64/libz.so.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索 nc命令 是哪个包提供的</span></span><br><span class="line">yum whatprovides <span class="string">"nc"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装包搜索</span></span><br><span class="line">yum search netstat</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装包</span></span><br><span class="line">yum -y install</span><br><span class="line">yum localinstall</span><br><span class="line"><span class="comment"># 指定库 --enablerepo=</span></span><br><span class="line"><span class="comment"># 指定下载目录 --downloaddir=</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载包</span></span><br><span class="line">yum remove</span><br><span class="line"></span><br><span class="line"><span class="comment"># 升级包</span></span><br><span class="line">yum upgrade</span><br><span class="line"></span><br><span class="line"><span class="comment"># 降级包</span></span><br><span class="line">yum downgrade</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出分组信息</span></span><br><span class="line">yum grouplist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装组</span></span><br><span class="line">yum groupinstall</span><br><span class="line"></span><br><span class="line"><span class="comment"># 组更新</span></span><br><span class="line">yum groupupdate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 组移除</span></span><br><span class="line">yum groupremove</span><br><span class="line"></span><br><span class="line"><span class="comment"># 组信息</span></span><br><span class="line">yum groupinfo</span><br><span class="line"></span><br><span class="line"><span class="comment"># localinstall</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装分类包</span></span><br><span class="line">yum -y install @base</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分类信息</span></span><br><span class="line">    103 @anaconda</span><br><span class="line">   9070 base</span><br><span class="line">    179 @base</span><br><span class="line">    250 extras</span><br><span class="line">    544 updates</span><br><span class="line">     23 @updates</span><br><span class="line"><span class="comment"># 查看yum 历史记录</span></span><br><span class="line">yum <span class="built_in">history</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 清空缓存</span></span><br><span class="line">yum clean all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建缓存</span></span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>devops</category>
      </categories>
  </entry>
  <entry>
    <title>Gradle安装使用</title>
    <url>/2020/06/Gradle%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>Maven安装使用</title>
    <url>/2020/06/Maven%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://maven.apache.org/" target="_blank" rel="noopener">Maven</a></li>
<li><a href="https://mirror.bit.edu.cn/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz" target="_blank" rel="noopener">Maven download</a></li>
<li><a href="https://maven.apache.org/ref/3.6.3/" target="_blank" rel="noopener">Maven docs</a></li>
<li><a href="/2020/05/Java%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/" title="Java环境配置">Java环境配置</a></li>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/AdoptOpenJDK/" target="_blank" rel="noopener">openJDK 镜像</a></li>
</ul>
<h3 id="设置-mvn-环境"><a href="#设置-mvn-环境" class="headerlink" title="设置 mvn 环境"></a>设置 mvn 环境</h3><p>目录结构<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir mavenproject</span><br><span class="line">├── apache-maven-3.6.3</span><br><span class="line">├── demo <span class="comment"># maven 示例</span></span><br><span class="line">├── env</span><br><span class="line">├── gen.sh  <span class="comment"># 用来生成整个项目</span></span><br><span class="line">├── java11 -&gt; jdk-11.0.7</span><br><span class="line">├── java14 -&gt; jdk-14.0.1</span><br><span class="line">├── java8 -&gt; jdk1.8.0_251</span><br><span class="line">├── jdk-11.0.7</span><br><span class="line">├── jdk-14.0.1</span><br><span class="line">├── jdk1.8.0_251</span><br><span class="line">└── maven -&gt; apache-maven-3.6.3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 封装</span></span><br><span class="line">base64 -i ~/Downloads/jdk-8u251-linux-x64.tar.gz -o .a&amp;&amp;cat .a &gt;&gt; gen.sh</span><br><span class="line">base64 -i ~/Downloads/jdk-11.0.7_linux-x64_bin.tar.gz -o .b&amp;&amp;cat .b &gt;&gt; gen.sh</span><br><span class="line">base64 -i ~/Downloads/jdk-14.0.1_linux-x64_bin.tar.gz -o .c&amp;&amp;cat .c &gt;&gt; gen.sh</span><br><span class="line">base64 -i ~/Downloads/apache-maven-3.6.3-bin.tar.gz -o .c&amp;&amp;cat .d &gt;&gt; gen.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># </span></span><br><span class="line">rm -rf .a .b .c .d</span><br><span class="line">cat .a .b .c .d &gt;&gt; gen.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># mac 解包</span></span><br><span class="line">base64 -Dd -i a.tgz -o jdk-8u251-linux-x64.tar.tgz</span><br><span class="line">base64 -Dd -i b.tgz -o jdk-11.0.7_linux-x64_bin.tar.gz</span><br><span class="line">base64 -Dd -i c.tgz -o jdk-14.0.1_linux-x64_bin.tar.gz</span><br><span class="line">base64 -Dd -i d.tgz -o apache-maven-3.6.3-bin.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">sed -i <span class="string">""</span> <span class="string">'150,160d'</span> gen.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># centos base64</span></span><br><span class="line">yum -y install coreutils</span><br><span class="line">base64 -d &lt; a.tgz &gt; jdk-8u251-linux-x64.tar.tgz</span><br><span class="line">base64 -d &lt; b.tgz &gt; jdk-11.0.7_linux-x64_bin.tar.gz</span><br><span class="line">base64 -d &lt; c.tgz &gt; jdk-14.0.1_linux-x64_bin.tar.gz</span><br><span class="line">base64 -d &lt; d.tgz &gt; apache-maven-3.6.3-bin.tar.gz</span><br></pre></td></tr></table></figure></p>
<ul>
<li><a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html" target="_blank" rel="noopener">java8</a></li>
<li><a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html" target="_blank" rel="noopener">java11</a></li>
<li><a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html" target="_blank" rel="noopener">java14</a></li>
</ul>
<h3 id="gen-sh-centos"><a href="#gen-sh-centos" class="headerlink" title="gen.sh (centos)"></a>gen.sh (centos)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'GEOF'</span> &gt;gen.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># packages</span></span><br><span class="line">grep -i linux /etc/redhat-release ||<span class="built_in">exit</span></span><br><span class="line"><span class="built_in">command</span> -v base64||yum -y install coreutils</span><br><span class="line"></span><br><span class="line">MAINDIR=<span class="variable">$PWD</span></span><br><span class="line"><span class="comment"># create directory</span></span><br><span class="line">mkdir -p env</span><br><span class="line">mkdir -p demo/src/main/java</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># java env</span></span><br><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;env/java8.sh</span><br><span class="line">MAINDIR=<span class="variable">$PWD</span></span><br><span class="line">JAVA_HOME=<span class="variable">$&#123;MAINDIR&#125;</span>/java8</span><br><span class="line">CLASSPATH=<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line">PATH=<span class="variable">$&#123;MAINDIR&#125;</span>/java8/bin:/usr/<span class="built_in">local</span>/bin:/usr/bin:/usr/<span class="built_in">local</span>/sbin:/usr/sbin:<span class="variable">$&#123;MAINDIR&#125;</span>/maven/bin</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME  CLASSPATH PATH</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;env/java11.sh</span><br><span class="line">MAINDIR=<span class="variable">$PWD</span></span><br><span class="line">JAVA_HOME=<span class="variable">$&#123;MAINDIR&#125;</span>/java11</span><br><span class="line">CLASSPATH=<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line">PATH=<span class="variable">$&#123;MAINDIR&#125;</span>/java11/bin:/usr/<span class="built_in">local</span>/bin:/usr/bin:/usr/<span class="built_in">local</span>/sbin:/usr/sbin:<span class="variable">$&#123;MAINDIR&#125;</span>/maven/bin</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME  CLASSPATH PATH</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;env/java14.sh</span><br><span class="line">MAINDIR=<span class="variable">$PWD</span></span><br><span class="line">JAVA_HOME=<span class="variable">$&#123;MAINDIR&#125;</span>/java14</span><br><span class="line">CLASSPATH=<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line">PATH=<span class="variable">$&#123;MAINDIR&#125;</span>/java14/bin:/usr/<span class="built_in">local</span>/bin:/usr/bin:/usr/<span class="built_in">local</span>/sbin:/usr/sbin:<span class="variable">$&#123;MAINDIR&#125;</span>/maven/bin</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME  CLASSPATH PATH</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># uncompress jdk</span></span><br><span class="line">sed -n <span class="string">'150p'</span> <span class="variable">$0</span> &gt;a.tgz</span><br><span class="line">sed -n <span class="string">'151p'</span> <span class="variable">$0</span> &gt;b.tgz</span><br><span class="line">sed -n <span class="string">'152p'</span> <span class="variable">$0</span> &gt;c.tgz</span><br><span class="line">sed -n <span class="string">'153p'</span> <span class="variable">$0</span> &gt;d.tgz</span><br><span class="line">base64 -d &lt; a.tgz &gt; jdk-8u251-linux-x64.tar.tgz</span><br><span class="line">base64 -d &lt; b.tgz &gt; jdk-11.0.7_linux-x64_bin.tar.gz</span><br><span class="line">base64 -d &lt; c.tgz &gt; jdk-14.0.1_linux-x64_bin.tar.gz</span><br><span class="line">base64 -d &lt; d.tgz &gt; apache-maven-3.6.3-bin.tar.gz</span><br><span class="line">tar -zxf jdk-8u251-linux-x64.tar.tgz</span><br><span class="line">tar -zxf jdk-11.0.7_linux-x64_bin.tar.gz</span><br><span class="line">tar -zxf jdk-14.0.1_linux-x64_bin.tar.gz</span><br><span class="line">tar -zxf apache-maven-3.6.3-bin.tar.gz</span><br><span class="line">ln -sf jdk1.8.0_251 java8</span><br><span class="line">ln -sf jdk-11.0.7 java11</span><br><span class="line">ln -sf jdk-14.0.1 java14</span><br><span class="line">ln -sf apache-maven-3.6.3 maven</span><br><span class="line">rm -f *.tgz *.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># HelloWorld.java</span></span><br><span class="line">cat &lt;&lt;EOF &gt; demo/src/main/java/HelloWorld.java</span><br><span class="line">package com.tianmaying.mavendemo;</span><br><span class="line"></span><br><span class="line">import org.joda.time.LocalTime;</span><br><span class="line"></span><br><span class="line">public class HelloWorld &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        LocalTime currentTime = new LocalTime();</span><br><span class="line">        System.out.println(<span class="string">"The current local time is: "</span> + currentTime);</span><br><span class="line">        Greeter greeter = new Greeter();</span><br><span class="line">        System.out.println(greeter.sayHello());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># Greeter.java</span></span><br><span class="line">cat &lt;&lt;EOF &gt; demo/src/main/java/Greeter.java</span><br><span class="line">package com.tianmaying.mavendemo;</span><br><span class="line"></span><br><span class="line">public class Greeter &#123;</span><br><span class="line">    public String <span class="function"><span class="title">sayHello</span></span>() &#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="string">"Hello world!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># pom.xml</span></span><br><span class="line">cat &lt;&lt;EOF &gt; demo/pom.xml</span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;project xmlns=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">    xsi:schemaLocation=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"</span>&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;gs-maven&lt;/artifactId&gt;</span><br><span class="line">    &lt;packaging&gt;jar&lt;/packaging&gt;</span><br><span class="line">    &lt;version&gt;0.1.0&lt;/version&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- tag::joda[] --&gt;</span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;joda-time&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;joda-time&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.2&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line">    &lt;!-- end::joda[] --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-shade-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;2.1&lt;/version&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;phase&gt;package&lt;/phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;shade&lt;/goal&gt;</span><br><span class="line">                        &lt;/goals&gt;</span><br><span class="line">                        &lt;configuration&gt;</span><br><span class="line">                            &lt;transformers&gt;</span><br><span class="line">                                &lt;transformer</span><br><span class="line">                                    implementation=<span class="string">"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"</span>&gt;</span><br><span class="line">                                    &lt;mainClass&gt;com.tianmaying.mavendemo.HelloWorld&lt;/mainClass&gt;</span><br><span class="line">                                &lt;/transformer&gt;</span><br><span class="line">                            &lt;/transformers&gt;</span><br><span class="line">                        &lt;/configuration&gt;</span><br><span class="line">                    &lt;/execution&gt;</span><br><span class="line">                &lt;/executions&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line">&lt;/project&gt;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建Java代码</span></span><br><span class="line"><span class="comment"># mvn compile</span></span><br><span class="line"><span class="comment"># mvn package</span></span><br><span class="line"><span class="comment"># mvn install</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 必须到149行</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">GEOF</span><br></pre></td></tr></table></figure>
<h3 id="maven-目录结构"><a href="#maven-目录结构" class="headerlink" title="maven 目录结构"></a>maven 目录结构</h3><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">└── <span class="attribute">src</span></span><br><span class="line">    └── main</span><br><span class="line">        └── java</span><br></pre></td></tr></table></figure>
<h3 id="配置-maven-镜像"><a href="#配置-maven-镜像" class="headerlink" title="配置 maven 镜像"></a>配置 maven 镜像</h3><p>conf/settings.xml<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>阿里云公共仓库<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="代理库"><a href="#代理库" class="headerlink" title="代理库"></a>代理库</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>spring<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/spring<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title>一键安装DevOps环境</title>
    <url>/2020/06/%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85DevOps%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="Hey, password is required here." /><label>Hey, password is required here.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="344f3cbcdc293cc3e5aba770c058d3ebf58988c1cdad4ee826bfab6ecece0f80"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>devops</category>
      </categories>
  </entry>
  <entry>
    <title>git使用</title>
    <url>/2020/06/git%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="git概念"><a href="#git概念" class="headerlink" title="git概念"></a>git概念</h2><ul>
<li>本地库</li>
<li>远程库</li>
<li>clone</li>
<li>版本<ul>
<li>master（预发和生产版本）</li>
<li>dev（开发环境版本)</li>
<li>release（测试环境版本）</li>
<li>feature（本地或开发版本）</li>
<li>hotfix（测试、预发和生产版本）</li>
<li>tag（留存上线版本）</li>
<li>bugfix（本地或开发版本）</li>
</ul>
</li>
<li>分支<ul>
<li>分支清理</li>
<li>分支保护</li>
</ul>
</li>
<li>合并</li>
<li>冲突</li>
<li>Git Flow</li>
</ul>
<h2 id="git-使用"><a href="#git-使用" class="headerlink" title="git 使用"></a>git 使用</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 小组成员需要建立属于自己的分支，每个分支代表着开发不同的功能</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化一个本地库,生成一个隐藏目录 .git/</span></span><br><span class="line">git init</span><br><span class="line"><span class="comment"># 目录结构</span></span><br><span class="line">├── HEAD</span><br><span class="line">├── config</span><br><span class="line">├── description</span><br><span class="line">├── hooks</span><br><span class="line">│   ├── applypatch-msg.sample</span><br><span class="line">│   ├── commit-msg.sample</span><br><span class="line">│   ├── fsmonitor-watchman.sample</span><br><span class="line">│   ├── post-update.sample</span><br><span class="line">│   ├── pre-applypatch.sample</span><br><span class="line">│   ├── pre-commit.sample</span><br><span class="line">│   ├── pre-push.sample</span><br><span class="line">│   ├── pre-rebase.sample</span><br><span class="line">│   ├── pre-receive.sample</span><br><span class="line">│   ├── prepare-commit-msg.sample</span><br><span class="line">│   └── update.sample</span><br><span class="line">├── info</span><br><span class="line">│   └── exclude</span><br><span class="line">├── objects</span><br><span class="line">│   ├── info</span><br><span class="line">│   └── pack</span><br><span class="line">└── refs</span><br><span class="line">    ├── heads</span><br><span class="line">    └── tags</span><br><span class="line"></span><br><span class="line"><span class="comment"># 全局配置</span></span><br><span class="line">git config --global core.autocrlf <span class="literal">false</span>  <span class="comment">#关闭自动换行</span></span><br><span class="line">git config --global user.mail <span class="string">"blyanqi@163.com"</span></span><br><span class="line">git config --global user.name <span class="string">"blyanqi"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置远程库地址</span></span><br><span class="line">git remote add origin https://gitee.com/blyanqi/devops.git</span><br><span class="line"><span class="comment"># 从远程库拉取</span></span><br><span class="line">git pull origin master</span><br><span class="line"><span class="comment"># 创建新文件</span></span><br><span class="line">touch help.c</span><br><span class="line"><span class="comment"># 提交到本地库</span></span><br><span class="line">git add ./*</span><br><span class="line">git commit -m <span class="string">"v1"</span></span><br><span class="line"><span class="comment"># 推送到远程库</span></span><br><span class="line">git push -u origin master</span><br><span class="line">git push origin master:master -f <span class="comment">#强制推送本地分支到远程分支</span></span><br><span class="line"><span class="comment"># 显示本地库状态</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">mkdir project</span><br><span class="line">git config --global user.mail <span class="string">"blyanqi@163.com"</span></span><br><span class="line">git config --global user.name <span class="string">"blyanqi"</span></span><br><span class="line">git remote add origin https://gitee.com/blyanqi/test.git</span><br><span class="line">git pull origin master</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="comment"># 建立分支</span></span><br><span class="line">git branch dev</span><br><span class="line">git branch <span class="built_in">test</span></span><br><span class="line">git branch pro</span><br><span class="line">git checkout dev</span><br><span class="line"><span class="comment"># 设置远程分支和本地分支映射</span></span><br><span class="line">git push --<span class="built_in">set</span>-upstream origin dev</span><br><span class="line"><span class="comment"># push 当前dev分支</span></span><br><span class="line">git push</span><br><span class="line"><span class="comment"># 查看分支间不同</span></span><br><span class="line">git diff master dev</span><br><span class="line">git merge dev master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="comment"># 打轻量级标签</span></span><br><span class="line">git tag v0.1</span><br><span class="line"><span class="comment"># 附注标签</span></span><br><span class="line">git tag -a v1.4 -m <span class="string">"my version 1.4"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出标签</span></span><br><span class="line">git tag -l <span class="string">"v0.*"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 commit 号</span></span><br><span class="line">git show v0.1</span><br><span class="line">git <span class="built_in">log</span> --pretty=oneline --abbrev-commit</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除tag</span></span><br><span class="line">git tag -d v0.1.2 </span><br><span class="line"><span class="comment"># 删除远程库</span></span><br><span class="line">git push origin :refs/tags/v0.1.2</span><br></pre></td></tr></table></figure>
<p><a href="https://gitee.com/" target="_blank" rel="noopener">gitee</a></p>
]]></content>
  </entry>
  <entry>
    <title>APP抓取指南</title>
    <url>/2020/05/APP%E6%8A%93%E5%8F%96%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="fiddler-概念"><a href="#fiddler-概念" class="headerlink" title="fiddler 概念"></a>fiddler 概念</h2><ul>
<li>左面板-抓包面板</li>
<li>右面版-处理面<ul>
<li>Statistics统计页签</li>
<li>inspectors检查页签<ul>
<li>HTTP Request</li>
<li>HTTPResponse</li>
<li>AutoResponse自动响应页签<ul>
<li>修改服务器端返回的数据</li>
</ul>
</li>
<li>composer构建页签<ul>
<li>支持手动构建和发送HTTP， HTTPS和FTP请求</li>
</ul>
</li>
<li>Filters过滤页签<ul>
<li>可以标记、 修改或隐藏某些特征的数据流</li>
<li>REGEX 过滤</li>
</ul>
</li>
<li>Timeline时间轴页签<ul>
<li>网络请求时间的功能</li>
</ul>
</li>
</ul>
</li>
<li>Fiddler命令行工具<ul>
<li>help ： 打开官方的使用页面介绍， 所有的命令都会列出来</li>
<li>cls ： 清屏 (Ctrl+x 也可以清屏)</li>
<li>select ： 选择会话的命令， 选择所有相应类型select image、select css、select html</li>
<li>?sometext ： 查找字符串并高亮显示查找到的会话列表的条目，？qq.com</li>
<li><blockquote>
<p>size : 选择请求响应大小小于size字节的会话</p>
</blockquote>
</li>
<li>=status/=method/@host:查找状态、方法、主机相对应的session会话，=504，=get，@<a href="http://www.qq.com" target="_blank" rel="noopener">http://www.qq.com</a></li>
<li>quit：退出fiddler<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Fiddler 是以代理web服务器的形式工作的</span></span><br></pre></td></tr></table></figure>
<h2 id="fiddler-配置使用"><a href="#fiddler-配置使用" class="headerlink" title="fiddler 配置使用"></a>fiddler 配置使用</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># fiddler 用来截获APP报文，获取APP接口</span></span><br><span class="line"><span class="comment"># fiddler 抓取两种流量HTTP,HTTPS</span></span><br><span class="line">http 可以直接抓取</span><br><span class="line">https 需要使用证书</span><br><span class="line"></span><br><span class="line">client -&gt; http -&gt; fiddler -&gt;http -&gt; server</span><br><span class="line">client -&gt; https1 -&gt; fiddler -&gt; https2 -&gt; server</span><br><span class="line"></span><br><span class="line">https1 为 fiddler 为客户端签发的证书</span><br><span class="line">https2 为 server 为代理签发的证书</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手机</span></span><br><span class="line">Fiddler</span><br><span class="line">手机需要指定代理到 Fiddler</span><br><span class="line"></span><br><span class="line">Tool-&gt; options -&gt; https -&gt; decycpt https traffic</span><br><span class="line"><span class="comment"># 第一次勾选会提出安装提示。</span></span><br><span class="line">没有提示勾选 Actions-&gt;Trust Root Certificate</span><br><span class="line">通过 Actions -&gt; 可以 <span class="built_in">export</span> certificate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置代理端口 Connections -&gt; port</span></span><br><span class="line">Allow remote computers to connect</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取 Fiddler 地址： ipconfig</span></span><br><span class="line">192.168.1.106</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手机修改代理配置</span></span><br><span class="line"><span class="comment"># 打开wifi -&gt;显示高级设置-&gt; 代理设置</span></span><br><span class="line">192.168.1.106 8888</span><br><span class="line"></span><br><span class="line"><span class="comment"># https 配置</span></span><br><span class="line">访问 http://192.168.1.106:8888 -&gt; 下载证书</span><br><span class="line">在 wifi 高级设置中安装证书</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟器使用（使用vitrualbox 构建）</span></span><br><span class="line">[逍遥](https://www.xyaz.cn/)</span><br><span class="line">夜游神</span><br><span class="line">mumu</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="Charles"><a href="#Charles" class="headerlink" title="Charles"></a>Charles</h2><p><a href="https://www.charlesproxy.com/documentation/installation/" target="_blank" rel="noopener">charles</a><br>Charles v4.1.4破解文件下载:<br>链接: <a href="https://pan.baidu.com/s/1sl5AeTJ密码" target="_blank" rel="noopener">https://pan.baidu.com/s/1sl5AeTJ密码</a>: cp7z<br>注：将文件名改为：charles.jar<br>Windows 平台,将下载的charles.jar文件覆盖到安装目录下的lib文件夹下即可完成破解!<br>Mac 平台,将下载的charles.jar文件右键 Charles.app 显示包内容,覆盖到Content-&gt;Java下即可完成破解!</p>
<p>安装证书<br>点击 Help -&gt; SSL Proxying -&gt; Install Charles Root Certificate on a Mobile Device<br><a href="https://www.jianshu.com/p/666d0b30a330" target="_blank" rel="noopener">https://www.jianshu.com/p/666d0b30a330</a></p>
<h2 id="appium介绍"><a href="#appium介绍" class="headerlink" title="appium介绍"></a>appium介绍</h2><p>python-client -&gt; app-client -&gt; app-server -&gt;IOS|Android<br><a href="https://github.com/appium/python-client" target="_blank" rel="noopener">python-client</a></p>
<p><a href="https://www.luoxudong.com/306.html" target="_blank" rel="noopener">https://www.luoxudong.com/306.html</a></p>
]]></content>
  </entry>
  <entry>
    <title>Gitlab</title>
    <url>/2020/05/Gitlab/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://github.com/gitlabhq" target="_blank" rel="noopener">gitlib</a></li>
<li><a href="/2020/05/Gitlab/" title="Gitlab管理">Gitlab管理</a></li>
<li><a href="/2020/05/gitlab%E8%BF%81%E7%A7%BB/" title="gitlab迁移">gitlab迁移</a>
</li>
</ul>
<h2 id="概念-conceptual"><a href="#概念-conceptual" class="headerlink" title="概念 conceptual"></a>概念 conceptual</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git     <span class="comment"># 版本管理工具</span></span><br><span class="line">gitlib  <span class="comment"># 实现git功能的开发库</span></span><br><span class="line">githup  <span class="comment"># git 公有仓库</span></span><br><span class="line">gitlab  <span class="comment"># git 私有仓库</span></span><br></pre></td></tr></table></figure>
<h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><p>nginx<br>gitlab-workhourse<br>gitlab-shell<br>logrotate<br>postgresql|mysql</p>
<h2 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h2><h3 id="设置新注册用户级别为外部"><a href="#设置新注册用户级别为外部" class="headerlink" title="设置新注册用户级别为外部"></a>设置新注册用户级别为外部</h3><p>admin-&gt; setting-&gt; account and limit -&gt; New users set to external</p>
<h3 id="添加一个新管理员用户"><a href="#添加一个新管理员用户" class="headerlink" title="添加一个新管理员用户"></a>添加一个新管理员用户</h3><p>删除默认管理员账号</p>
<h2 id="任务分配"><a href="#任务分配" class="headerlink" title="任务分配"></a>任务分配</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">议题：功能模块</span><br><span class="line">里程碑：功能模块的集合（开始日期，完成日期）</span><br><span class="line">  版本<span class="number">1.</span></span><br><span class="line">    list1 需要解决的问题（可以配置模板，）将问题指派给具体的执行人</span><br><span class="line">      标记的作用是分类</span><br><span class="line">    list2 </span><br><span class="line">  版本<span class="number">2.0</span></span><br><span class="line">  版本<span class="number">3.0</span></span><br></pre></td></tr></table></figure>
<h3 id="项目创建流程"><a href="#项目创建流程" class="headerlink" title="项目创建流程"></a>项目创建流程</h3><p>1、创建项目组<br>2、给组添加人员<br>3、创建项目</p>
<p>通过管理员工具 可以删除项目组、项目 、人员</p>
<h3 id="项目权限"><a href="#项目权限" class="headerlink" title="项目权限"></a>项目权限</h3><p>Private 私有的，只有你自己或者组内的成员能访问<br>Internal 所有登录的用户<br>Public 公开的，所有人都可以访问</p>
<h3 id="ssh配置"><a href="#ssh配置" class="headerlink" title="ssh配置"></a>ssh配置</h3><p>git仓库之间的代码传输协议主要使用ssh协议。<br>ssh-keygen -t rsa -C “$your_email”<br>cat ~/.ssh/id_rsa.pub</p>
<h3 id="创建-web-hook"><a href="#创建-web-hook" class="headerlink" title="创建 web-hook"></a>创建 web-hook</h3><ul>
<li><a href="https://docs.gitlab.com/ee/integration/jenkins.html#configure-the-jenkins-project" target="_blank" rel="noopener">gitlab CI/CD </a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 授权 jenkins 访问 gitlab 项目</span></span><br><span class="line">创建一个Gitlab用户或者选择一个存在的用户。</span><br><span class="line">对这个用户进行授权。（如果授权很多的gitlab项目，最好使用管理员授权）</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置 gitlab API</span></span><br><span class="line">用户 -&gt; setting -&gt; Access Tokens(侧边栏)</span><br><span class="line">创建一个 AT -&gt; 名字 -&gt; 有效期 -&gt; 授权范围（API）</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置 jenkins server</span></span><br><span class="line">在 jenkins 上配置 GitLab 插件。</span><br><span class="line">配置 jenkins 访问 gitlab 凭证</span><br><span class="line">Credentials -&gt; System -&gt; Global credentials -&gt; Add Credentials</span><br><span class="line"></span><br><span class="line">Manage Jenkins &gt; Configure System.</span><br><span class="line">-&gt; Enable authentication <span class="keyword">for</span> <span class="string">'/project'</span> end-point(勾选)</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置jenkins 项目</span></span><br><span class="line">新建一个 jenkins项目 -&gt; pipeline -&gt; general</span><br><span class="line">-&gt; GitHub project</span><br><span class="line"></span><br><span class="line">-&gt; build trigger </span><br><span class="line">Build when a change is pushed to GitLab. GitLab webhook（selected）</span><br><span class="line">URL: http://127.0.0.1:8080/project/youlv 这个地址是webhook地址，需要提供能gitlab</span><br><span class="line">advance -&gt; Secret token 这个token也需要提供给 gitlab</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置gitlab 项目</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#插件功能概览</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>devops</category>
      </categories>
  </entry>
  <entry>
    <title>网络维护</title>
    <url>/2020/05/%E7%BD%91%E7%BB%9C%E7%BB%B4%E6%8A%A4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="网络维护概念"><a href="#网络维护概念" class="headerlink" title="网络维护概念"></a>网络维护概念</h2><ul>
<li>路由</li>
<li>交换</li>
<li>局域网组网</li>
<li>城域网</li>
<li>广域网技术</li>
<li>OSI 模型</li>
<li>TCP/IP 协议栈<ul>
<li>IPV4</li>
<li>IPV6</li>
</ul>
</li>
<li>网络协议</li>
<li>网络安全</li>
<li>隧道技术</li>
</ul>
<h2 id="网络维护实践"><a href="#网络维护实践" class="headerlink" title="网络维护实践"></a>网络维护实践</h2><a href="/2020/06/%E5%8D%8E%E4%B8%BA%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/" title="华为交换机基本配置">华为交换机基本配置</a>
<h2 id="网络安全实践"><a href="#网络安全实践" class="headerlink" title="网络安全实践"></a>网络安全实践</h2><ul>
<li>攻击工具</li>
<li>防护策略</li>
</ul>
]]></content>
      <categories>
        <category>网络</category>
      </categories>
  </entry>
  <entry>
    <title>系统维护</title>
    <url>/2020/05/%E7%B3%BB%E7%BB%9F%E7%BB%B4%E6%8A%A4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="系统维护概念"><a href="#系统维护概念" class="headerlink" title="系统维护概念"></a>系统维护概念</h1><ul>
<li>系统安装、升级</li>
<li>包管理</li>
<li>用户管理</li>
<li>脚本</li>
<li>批量作业</li>
<li>计划任务</li>
<li>负载管理</li>
</ul>
<h2 id="linux-系统维护"><a href="#linux-系统维护" class="headerlink" title="linux 系统维护"></a>linux 系统维护</h2><h2 id="windows-系统维护"><a href="#windows-系统维护" class="headerlink" title="windows 系统维护"></a>windows 系统维护</h2>]]></content>
      <categories>
        <category>系统维护</category>
      </categories>
  </entry>
  <entry>
    <title>容器技术</title>
    <url>/2020/05/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="容器技术概念"><a href="#容器技术概念" class="headerlink" title="容器技术概念"></a>容器技术概念</h2><ul>
<li>namespace隔离</li>
<li>分层文件系统 overlay</li>
<li>镜像</li>
<li>容器</li>
<li>编排</li>
</ul>
<h2 id="容器技术实践"><a href="#容器技术实践" class="headerlink" title="容器技术实践"></a>容器技术实践</h2><ul>
<li><a href="/2020/05/linux%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/" title="linux容器技术">linux容器技术</a></li>
<li><a href="/2020/05/Docker/" title="Docker容器">Docker容器</a></li>
<li><a href="/2020/05/Docker%E5%AE%89%E8%A3%85/" title="Docker安装">Docker安装</a></li>
<li><a href="/2020/05/Harbor%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/" title="镜像仓库">镜像仓库</a></li>
<li><a href="/2020/05/Dockerfile/" title="制作镜像">制作镜像</a></li>
<li><a href="/2020/05/dockerInMac/" title="dockerInMac">dockerInMac</a></li>
<li><a href="/2020/05/kubernetes%E5%AE%89%E8%A3%85/" title="kubernetes安装">kubernetes安装</a></li>
<li><a href="/2020/05/kubernetes%E4%BD%BF%E7%94%A8/" title="k8s基本指令">k8s基本指令</a></li>
<li><a href="/2020/05/Rancher%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/" title="Rancher安装配置">Rancher安装配置</a></li>
<li><a href="/2020/06/rancher%E5%AE%89%E8%A3%85k8s/" title="rancher安装k8s">rancher安装k8s</a></li>
<li><a href="/2020/06/rancher%E4%BD%BF%E7%94%A8%E7%BB%B4%E6%8A%A4/" title="rancher管理">rancher管理</a></li>
</ul>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>Elasticsearch集群管理</title>
    <url>/2020/05/Elasticsearch%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="Hey, password is required here." /><label>Hey, password is required here.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="016b4317a2db739ebb6b96f1d6a05f8e620b576626802463c2eeaf0d3ed869f8">4dc7a94a957e0b6d366c4c57187f63c514b1838b6a28f070585cad84b1e80383823afa5695960eaf613334f5875bdfb08adf1b54968bae6f75323815871b97903d058ec2fb386405a9e110ec1beeb740f6856f37547d36edc7f37ad366d7409f1e297077bc40f01b219ff8cb5c589c06e7432033e859424280a9c215351504277ea5b72d0a3c88b439afcfcfdc4e7aebded72679b1186438d29cb186b1eb3d2a604610de7591ead960e6ac6a0fdc70501c9a8c2818c14c6af1f978cb253e5237</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>Elasticsearch故障处理</title>
    <url>/2020/05/Elasticsearch%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kibana 日志报错 /var/log/message</span></span><br><span class="line">circuit_breaking_exception] [parent] Data too large, data <span class="keyword">for</span> [&lt;transport_request&gt;]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决：</span></span><br><span class="line">vi /etc/elasticsearch/jvm.options</span><br><span class="line">-Xms10g</span><br><span class="line">-Xmx10g</span><br><span class="line"></span><br><span class="line">systemctl restart elasticsearch</span><br><span class="line"></span><br><span class="line"><span class="comment"># index-pattern 有问题，不出数。</span></span><br><span class="line"><span class="comment"># 重建一下index-pattern 就OK了</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取 indices 状态信息</span></span><br><span class="line">GET /_cat/indices/?v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取 index-pattern id</span></span><br><span class="line">GET .kibana/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_source"</span>: [<span class="string">"index-pattern.title"</span>],</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"term"</span>: &#123;</span><br><span class="line">      <span class="string">"type"</span>: <span class="string">"index-pattern"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取映射</span></span><br><span class="line">GET /engine-result/_mapping?pretty</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重建索引</span></span><br><span class="line">POST _reindex</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"source"</span>: &#123;</span><br><span class="line">    <span class="string">"index"</span>: <span class="string">"map-test*"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"dest"</span>: &#123;</span><br><span class="line">    <span class="string">"index"</span>: <span class="string">"new-index-test"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>ELK安装配置</title>
    <url>/2020/05/ELK%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="base-configuration"><a href="#base-configuration" class="headerlink" title="base configuration"></a>base configuration</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/hosts</span><br><span class="line">192.168.0.130 elastic1</span><br><span class="line">192.168.0.131 elastic2</span><br><span class="line">192.168.0.132 elastic3</span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line">ssh-copy-id 192.168.0.130</span><br><span class="line">ssh-copy-id 192.168.0.131</span><br><span class="line">ssh-copy-id 192.168.0.133</span><br><span class="line"></span><br><span class="line">192.168.0.130 master</span><br><span class="line">192.168.0.131 node1</span><br><span class="line">192.168.0.132 node2</span><br><span class="line"></span><br><span class="line">yum -y install rsync&amp;&amp;/usr/bin/rsync -avzuP --delete --port=873 monitor@106.15.137.193::autosh /opt/autosh/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置资源限制</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"* soft nofile 65536</span></span><br><span class="line"><span class="string">* hard nofile 65536</span></span><br><span class="line"><span class="string">* soft nproc 32000</span></span><br><span class="line"><span class="string">* hard nproc 32000</span></span><br><span class="line"><span class="string">* hard memlock unlimited</span></span><br><span class="line"><span class="string">* soft memlock unlimited"</span>&gt;&gt;/etc/security/limits.conf</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"DefaultLimitNOFILE=65536</span></span><br><span class="line"><span class="string">DefaultLimitNPROC=32000</span></span><br><span class="line"><span class="string">DefaultLimitMEMLOCK=infinity"</span>&gt;&gt; /etc/systemd/system.conf</span><br></pre></td></tr></table></figure>
<h2 id="easticsearch-Installation"><a href="#easticsearch-Installation" class="headerlink" title="easticsearch Installation"></a>easticsearch Installation</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导入repo</span></span><br><span class="line"><span class="comment">#ssh 192.168.0.130 rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># vim /etc/yum.repos.d/easticsearch-7.repo</span></span><br><span class="line">[elasticsearch-7.x]</span><br><span class="line">name=Elasticsearch repository <span class="keyword">for</span> 7.x packages</span><br><span class="line">baseurl=https://artifacts.elastic.co/packages/7.x/yum</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch</span><br><span class="line">enabled=1</span><br><span class="line">autorefresh=1</span><br><span class="line"><span class="built_in">type</span>=rpm-md</span><br><span class="line"></span><br><span class="line"><span class="comment"># 其他机器</span></span><br><span class="line">scp ./easticsearch-7.repo 192.168.0.130:/etc/yum.repos.d/</span><br><span class="line"><span class="comment"># rpm 安装</span></span><br><span class="line">ssh 192.168.0.130 yum -y install elasticsearch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载安装</span></span><br><span class="line">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.2.0-x86_64.rpm</span><br><span class="line">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.2.0-x86_64.rpm.sha512</span><br><span class="line">shasum -a 512 -c elasticsearch-7.2.0-x86_64.rpm.sha512</span><br><span class="line">rpm -ivh elasticsearch-7.2.0-x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 单机配置</span></span><br><span class="line">path.data: /data/lib/elasticsearch</span><br><span class="line">path.logs: /data/<span class="built_in">log</span>/elasticsearch</span><br><span class="line"></span><br><span class="line">mkdir /data/lib/elasticsearch -p</span><br><span class="line">mkdir  /data/<span class="built_in">log</span>/elasticsearch -p</span><br></pre></td></tr></table></figure>
<h2 id="elasticsearch-配置"><a href="#elasticsearch-配置" class="headerlink" title="elasticsearch 配置"></a>elasticsearch 配置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/elasticsearch/elasticsearch.yml</span></span><br><span class="line"><span class="comment">#集群的名称</span></span><br><span class="line">cluster.name: yanqi-clusters</span><br><span class="line"><span class="comment">#节点的名称</span></span><br><span class="line">node.name: es-node-1</span><br><span class="line"><span class="comment">#是否有资格成为主节点</span></span><br><span class="line">node.master: <span class="literal">true</span></span><br><span class="line"><span class="comment">#是否是数据节点</span></span><br><span class="line">node.data: <span class="literal">true</span></span><br><span class="line"><span class="comment">#数据和日志路径</span></span><br><span class="line">path.data: /var/lib/elasticsearch</span><br><span class="line">path.logs: /var/<span class="built_in">log</span>/elasticsearch</span><br><span class="line"><span class="comment">#设置访问的地址和端口</span></span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">http.port: 9200</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置集群中自动发现其它节点时ping连接超时时间，默认为3秒，对于比较差的网络环境可以高点的值来防止自动发现时出错。</span></span><br><span class="line">discovery.zen.ping.timeout: 3s</span><br><span class="line"><span class="comment">#设置是否打开多播发现节点，默认是true。</span></span><br><span class="line">discovery.zen.ping.multicast.enabled: <span class="literal">false</span></span><br><span class="line"><span class="comment">#集群地址设置</span></span><br><span class="line">discovery.zen.ping.unicast.hosts: [<span class="string">"192.168.0.130"</span>,<span class="string">"192.168.0.131"</span>,<span class="string">"192.168.0.132"</span>]</span><br><span class="line"><span class="comment">#设置这个参数来保证集群中的节点可以知道其它N个有master资格的节点。默认为1，对于大的集群来说，可以设置大一点的值（2-4）</span></span><br><span class="line">discovery.zen.minimum_master_nodes: 2</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置集群中N个节点启动时进行数据恢复</span></span><br><span class="line">gateway.recover_after_nodes: 3</span><br><span class="line"><span class="comment">#设置初始化数据恢复进程的超时时间，默认是5分钟。</span></span><br><span class="line">gateway.recover_after_time: 5m</span><br><span class="line"><span class="comment">#初始化数据恢复时，并发恢复线程的个数，默认为4。</span></span><br><span class="line">cluster.routing.allocation.node_initial_primaries_recoveries: 4</span><br><span class="line"><span class="comment">#进行内存交换</span></span><br><span class="line">bootstrap.memory_lock: <span class="literal">true</span></span><br><span class="line"><span class="comment">#索引分片个数，默认为5片。</span></span><br><span class="line">index.number_of_shards: 5</span><br><span class="line"><span class="comment">#索引副本个数，默认为1个副本。</span></span><br><span class="line">index.number_of_replicas: 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下面是一些查询时的慢日志参数设置</span></span><br><span class="line">index.search.slowlog.level: TRACE</span><br><span class="line">index.search.slowlog.threshold.query.warn: 10s</span><br><span class="line">index.search.slowlog.threshold.query.info: 5s</span><br><span class="line">index.search.slowlog.threshold.query.debug: 2s</span><br><span class="line">index.search.slowlog.threshold.query.trace: 500ms</span><br><span class="line">index.search.slowlog.threshold.fetch.warn: 1s</span><br><span class="line">index.search.slowlog.threshold.fetch.info: 800ms</span><br><span class="line">index.search.slowlog.threshold.fetch.debug:500ms</span><br><span class="line">index.search.slowlog.threshold.fetch.trace: 200ms</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">cluster.name: my-application</span><br><span class="line">node.name: node-1</span><br><span class="line">path.data: /var/lib/elasticsearch</span><br><span class="line">path.logs: /var/<span class="built_in">log</span>/elasticsearch</span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">http.port: 9200</span><br><span class="line">discovery.seed_hosts: [<span class="string">"host1"</span>, <span class="string">"host2"</span>, <span class="string">"host3"</span>]</span><br><span class="line">cluster.initial_master_nodes: [<span class="string">"node-1"</span>, <span class="string">"node-2"</span>,<span class="string">"node-3"</span>]</span><br><span class="line">---</span><br><span class="line">cluster.name: my-application</span><br><span class="line">node.name: node-2</span><br><span class="line">path.data: /var/lib/elasticsearch</span><br><span class="line">path.logs: /var/<span class="built_in">log</span>/elasticsearch</span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">http.port: 9200</span><br><span class="line">discovery.seed_hosts: [<span class="string">"host1"</span>, <span class="string">"host2"</span>, <span class="string">"host3"</span>]</span><br><span class="line">cluster.initial_master_nodes: [<span class="string">"node-1"</span>, <span class="string">"node-2"</span>,<span class="string">"node-3"</span>]</span><br><span class="line">---</span><br><span class="line">cluster.name: my-application</span><br><span class="line">node.name: node-3</span><br><span class="line">path.data: /var/lib/elasticsearch</span><br><span class="line">path.logs: /var/<span class="built_in">log</span>/elasticsearch</span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">http.port: 9200</span><br><span class="line">discovery.seed_hosts: [<span class="string">"host1"</span>, <span class="string">"host2"</span>, <span class="string">"host3"</span>]</span><br><span class="line">cluster.initial_master_nodes: [<span class="string">"node-1"</span>, <span class="string">"node-2"</span>,<span class="string">"node-3"</span>]</span><br><span class="line">---</span><br><span class="line"><span class="comment"># 开启 Auth 认证功能</span></span><br><span class="line">xpack.security.enabled: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> elasticsearch.service</span><br><span class="line">systemctl start elasticsearch.service</span><br><span class="line"></span><br><span class="line">/usr/share/elasticsearch/bin/elasticsearch-setup-passwords interactive</span><br><span class="line"></span><br><span class="line">sudo systemctl restart elasticsearch.service</span><br><span class="line">sudo systemctl restart kibana.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问</span></span><br><span class="line"><span class="comment">#curl -XGET 'http://localhost:9200/_cluster/state?pretty'</span></span><br><span class="line">curl -XGET <span class="string">'localhost:9200/_cluster/health?pretty'</span></span><br><span class="line">curl -XGET <span class="string">"127.0.0.1:9200"</span></span><br><span class="line"></span><br><span class="line">elasticsearch-head</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/mobz/elasticsearch-head.git</span><br><span class="line"><span class="built_in">cd</span> elasticsearch-head</span><br><span class="line">npm install</span><br><span class="line">npm run start</span><br><span class="line">curl http://localhost:9100/</span><br></pre></td></tr></table></figure>
<h2 id="安装-kibana"><a href="#安装-kibana" class="headerlink" title="安装 kibana"></a>安装 kibana</h2><figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line">yum -<span class="built_in">y</span> install kibana</span><br><span class="line"><span class="meta"># vim /etc/kibana/kibana.yml</span></span><br><span class="line"><span class="symbol">server.port:</span> <span class="number">5601</span></span><br><span class="line"><span class="symbol">server.host:</span> <span class="string">"0.0.0.0"</span></span><br><span class="line"><span class="symbol">elasticsearch.hosts:</span> [<span class="string">"http://127.0.0.1:9200"</span>]</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl enable kibana.service</span><br><span class="line">sudo systemctl start kibana.service</span><br></pre></td></tr></table></figure>
<h2 id="安装分词插件"><a href="#安装分词插件" class="headerlink" title="安装分词插件"></a>安装分词插件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/share/elasticsearch/bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.3.2/elasticsearch-analysis-ik-6.3.2.zip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志查看</span></span><br><span class="line">tail -200f /var/<span class="built_in">log</span>/elasticsearch/yanqi-clusters.log</span><br></pre></td></tr></table></figure>
<h2 id="logstash"><a href="#logstash" class="headerlink" title="logstash"></a>logstash</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://www.elastic.co/downloads/logstash</span><br><span class="line">yum install logstash</span><br><span class="line"></span><br><span class="line">bin/logstash -f logstash-simple.conf</span><br><span class="line"></span><br><span class="line">input &#123; stdin &#123; &#125; &#125;</span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123; hosts =&gt; [<span class="string">"localhost:9200"</span>] &#125;</span><br><span class="line">  stdout &#123; codec =&gt; rubydebug &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bin/logstash -e <span class="string">'input &#123; stdin &#123; &#125; &#125; output &#123; stdout &#123;&#125; &#125;'</span></span><br><span class="line">stdout &#123; codec =&gt; rubydebug &#125;的意思是输出到控制台</span><br><span class="line"></span><br><span class="line">----</span><br><span class="line">input &#123;</span><br><span class="line">    beats &#123;</span><br><span class="line">        port =&gt; <span class="string">"5044"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">    grok &#123;</span><br><span class="line">        match =&gt; &#123; <span class="string">"message"</span> =&gt; <span class="string">"%&#123;COMBINEDAPACHELOG&#125;"</span>&#125;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line"></span><br><span class="line">    stdout &#123; codec =&gt; rubydebug &#125;</span><br><span class="line">&#125;</span><br><span class="line">----</span><br><span class="line"> elasticsearch &#123;</span><br><span class="line">        hosts =&gt; [ <span class="string">"localhost:9200"</span> ]</span><br><span class="line">    &#125;</span><br><span class="line">geoip &#123;</span><br><span class="line">        <span class="built_in">source</span> =&gt; <span class="string">"clientip"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bin/logstash -f logstash.conf</span><br></pre></td></tr></table></figure>
<h2 id="filebeat-安装"><a href="#filebeat-安装" class="headerlink" title="filebeat 安装"></a>filebeat 安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># filebeat -&gt; logstash -&gt; elasticsearch</span></span><br><span class="line"><span class="comment"># https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.2.0-x86_64.rpm</span></span><br><span class="line">rpm -ivh https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.2.0-x86_64.rpm</span><br><span class="line">rpm -ivh filebeat-7.2.0-x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># vim filebeat.yml</span></span><br><span class="line">---</span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  enabled: <span class="literal">false</span></span><br><span class="line">  paths:</span><br><span class="line">    - /data/<span class="built_in">log</span>/java_web/ota-whitelist-service/ota-whitelist-service.2019-07-05.log</span><br><span class="line">filebeat.config.modules:</span><br><span class="line">  path: <span class="variable">$&#123;path.config&#125;</span>/modules.d/*.yml</span><br><span class="line">  reload.enabled: <span class="literal">false</span></span><br><span class="line">setup.template.settings:</span><br><span class="line">  index.number_of_shards: 1</span><br><span class="line">setup.kibana:</span><br><span class="line">  host: <span class="string">"119.84.8.41:6117"</span></span><br><span class="line">output.elasticsearch:</span><br><span class="line">  hosts: [<span class="string">"119.84.8.41:6116"</span>]</span><br><span class="line">output.logstash:</span><br><span class="line">  hosts: [<span class="string">"119.84.8.41:6118"</span>]</span><br><span class="line"><span class="comment">#processors:</span></span><br><span class="line"><span class="comment">#  - add_host_metadata: ~</span></span><br><span class="line"><span class="comment">#  - add_cloud_metadata: ~</span></span><br><span class="line"></span><br><span class="line">systemctl  start filebeat</span><br><span class="line"></span><br><span class="line"><span class="comment"># filebeat -e 直接输出到控制台</span></span><br><span class="line">./filebeat -e -c filebeat.yml -d <span class="string">"publish"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出到 elasticsearch</span></span><br><span class="line">filebeat setup -e \</span><br><span class="line">  -E output.logstash.enabled=<span class="literal">false</span> \</span><br><span class="line">  -E output.elasticsearch.hosts=[<span class="string">"119.84.8.41:6116"</span>] \</span><br><span class="line">  -E setup.kibana.host=119.84.8.41:6117</span><br><span class="line"><span class="comment"># </span></span><br><span class="line">./filebeat setup --template -E output.logstash.enabled=<span class="literal">false</span> \</span><br><span class="line">-E <span class="string">'output.elasticsearch.hosts=["119.84.8.41:6116"]'</span></span><br></pre></td></tr></table></figure>
<h2 id="elasticsearch-head-插件"><a href="#elasticsearch-head-插件" class="headerlink" title="elasticsearch-head 插件"></a>elasticsearch-head 插件</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">https://github.com/mobz/elasticsearch-head</span></span><br><span class="line"><span class="string">git</span> <span class="string">clone</span> <span class="string">git://github.com/mobz/elasticsearch-head.git</span></span><br><span class="line"><span class="string">cd</span> <span class="string">elasticsearch-head</span></span><br><span class="line"><span class="string">npm</span> <span class="string">install</span></span><br><span class="line"><span class="string">npm</span> <span class="string">run</span> <span class="string">start</span></span><br><span class="line"></span><br><span class="line"><span class="string">grunt</span> <span class="string">server</span></span><br><span class="line"></span><br><span class="line"><span class="attr">http.cors.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">http.cors.allow-origin:</span> <span class="string">"*"</span></span><br><span class="line"><span class="attr">http.cors.allow-credentials:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># http://192.168.0.130:9200 点击连接</span></span><br><span class="line"></span><br><span class="line"><span class="number">2019</span><span class="number">-07</span><span class="number">-05</span> <span class="number">00</span><span class="string">:23:32.965</span> <span class="string">INFO</span>  <span class="bullet">-</span> <span class="string">status:1,time:1947ms,request:KUL-SGN|20190815/|ctripDirect2016331|ABUS_F@IU3D|162257411018198086|1785362763|1</span></span><br><span class="line"></span><br><span class="line"><span class="string">"<span class="template-variable">%&#123;DATA:date&#125;</span> <span class="template-variable">%&#123;DATA:time&#125;</span> <span class="template-variable">%&#123;DATA:level&#125;</span> <span class="template-variable">%&#123;DATA:-&#125;</span> <span class="template-variable">%&#123;DATA:status&#125;</span>,<span class="template-variable">%&#123;DATA:delay&#125;</span>,<span class="template-variable">%&#123;DATA:airline&#125;</span>"</span><span class="string">|%&#123;DATA:startdt&#125;|%&#123;DATA:cid&#125;|%&#123;DATA:ipcc&#125;"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DATA是logstash定义好的正则</span></span><br><span class="line"></span><br><span class="line"><span class="string">overwrite</span> <span class="string">=&gt;</span> <span class="string">["message"]</span></span><br><span class="line"><span class="string">remove_field</span>  <span class="string">=&gt;</span> <span class="string">"message"</span></span><br><span class="line"><span class="string">add_field</span> <span class="string">=&gt;</span> <span class="string">&#123;</span> <span class="string">"shortHostname"</span> <span class="string">=&gt;</span> <span class="string">"<span class="template-variable">%&#123;hostname[0]&#125;</span>"</span> <span class="string">&#125;</span></span><br><span class="line"><span class="string">rename</span> <span class="string">=&gt;</span> <span class="string">["shortHostname",</span> <span class="string">"hostname"</span> <span class="string">]</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># https://doc.yonyoucloud.com/doc/logstash-best-practice-cn/filter/grok.html</span></span><br><span class="line"><span class="comment"># http://grokdebug.herokuapp.com/</span></span><br><span class="line">match =&gt; [</span><br><span class="line">    <span class="string">"message"</span>, <span class="string">"(?&lt;request_time&gt;\d+(?:\.\d+)?)"</span>,</span><br><span class="line">    <span class="string">"message"</span>, <span class="string">"%&#123;SYSLOGBASE&#125; %&#123;DATA:message&#125;"</span>,</span><br><span class="line">    <span class="string">"message"</span>, <span class="string">"(?m)%&#123;WORD&#125;"</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"input"</span> =&gt; &#123;</span><br><span class="line">        <span class="string">"type"</span> =&gt; <span class="string">"log"</span></span><br><span class="line">    &#125;,</span><br><span class="line">     <span class="string">"date"</span> =&gt; <span class="string">"2019-07-05"</span>,</span><br><span class="line">     <span class="string">"time"</span> =&gt; <span class="string">"00:24:32.708"</span>,</span><br><span class="line">     <span class="string">"tags"</span> =&gt; [</span><br><span class="line">        [0] <span class="string">"beats_input_codec_plain_applied"</span></span><br><span class="line">    ],</span><br><span class="line">     <span class="string">"host"</span> =&gt; &#123;</span><br><span class="line">        <span class="string">"name"</span> =&gt; <span class="string">"xc1-1"</span></span><br><span class="line">    &#125;,</span><br><span class="line">      <span class="string">"log"</span> =&gt; &#123;</span><br><span class="line">        <span class="string">"offset"</span> =&gt; 27560723,</span><br><span class="line">          <span class="string">"file"</span> =&gt; &#123;</span><br><span class="line">            <span class="string">"path"</span> =&gt; <span class="string">"/data/log/java_web/ota-whitelist-service/ota-whitelist-service.2019-07-05.log"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">      <span class="string">"ecs"</span> =&gt; &#123;</span><br><span class="line">        <span class="string">"version"</span> =&gt; <span class="string">"1.0.0"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input &#123;</span><br><span class="line">    beats &#123;</span><br><span class="line">        port =&gt; <span class="string">"5044"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">    grok&#123;</span><br><span class="line">        remove_field =&gt;<span class="string">"@timestamp"</span></span><br><span class="line">        remove_field =&gt;<span class="string">"log"</span></span><br><span class="line">        remove_field =&gt;<span class="string">"input"</span></span><br><span class="line">        remove_field =&gt;<span class="string">"tag"</span></span><br><span class="line">        remove_field =&gt;<span class="string">"ecs"</span></span><br><span class="line">        remove_field =&gt;<span class="string">"tags"</span></span><br><span class="line">        remove_field =&gt; <span class="string">"agent"</span></span><br><span class="line">        remove_field =&gt;<span class="string">"@version"</span></span><br><span class="line">        match =&gt; &#123;</span><br><span class="line">            <span class="string">"message"</span> =&gt; <span class="string">""</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">        index =&gt; <span class="string">"whitelog"</span></span><br><span class="line">        hosts =&gt; [ <span class="string">"119.84.8.41:6116"</span> ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="单机"><a href="#单机" class="headerlink" title="单机"></a>单机</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.2.0-linux-x86_64.tar.gz</span><br><span class="line">tar -xvf elasticsearch-7.2.0-linux-x86_64.tar.gz</span><br><span class="line"><span class="built_in">cd</span> elasticsearch-7.2.0/bin</span><br><span class="line">./elasticsearch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 匹配</span></span><br><span class="line"><span class="string">"patterns"</span>: [<span class="string">"%&#123;IP:client&#125; %&#123;WORD:method&#125; %&#123;URIPATHPARAM:request&#125; %&#123;NUMBER:bytes&#125; %&#123;NUMBER:duration&#125;"</span>],</span><br></pre></td></tr></table></figure>
<h2 id="ingest-对数据分字段"><a href="#ingest-对数据分字段" class="headerlink" title="ingest 对数据分字段"></a>ingest 对数据分字段</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 新建个pipeline</span></span><br><span class="line">curl -H <span class="string">'Content-Type: application/json'</span> -XPUT <span class="string">'http://119.84.8.41:6116/_ingest/pipeline/test-pipeline'</span> -d@pipeline.json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"description"</span> : <span class="string">"test desc"</span>,</span><br><span class="line">  <span class="string">"processors"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"grok"</span>: &#123;</span><br><span class="line"><span class="string">"field"</span>: <span class="string">"message"</span>,</span><br><span class="line">        <span class="string">"patterns"</span>: [<span class="string">"au_:%&#123;NUMBER:au_&#125;  9c_:%&#123;NUMBER:9c_&#125;  lcbx_f:%&#123;NUMBER:lcbx_f&#125;  lcjc_f:%&#123;NUMBER:lcjc_f&#125;  lcmm_f:%&#123;NUMBER:lcmm_f&#125;  lc6e_f:%&#123;NUMBER:lc6e_f&#125;  lcae_f:%&#123;NUMBER:lcae_f&#125;  lcub_f:%&#123;NUMBER:lcub_f&#125;  lc5j_f:%&#123;NUMBER:lc5j_f&#125;  lcij_f:%&#123;NUMBER:lcij_f&#125;  lcsg_f:%&#123;NUMBER:lcsg_f&#125;  lcfr_f:%&#123;NUMBER:lcfr_f&#125;  lcsl_f:%&#123;NUMBER:lcsl_f&#125;  lcbs_f:%&#123;NUMBER:lcbs_f&#125;  lcvj_f:%&#123;NUMBER:lcvj_f&#125;  vtae:%&#123;NUMBER:vtae&#125;  lcjt_f:%&#123;NUMBER:lcjt_f&#125; "</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"remove"</span>: &#123;</span><br><span class="line">        <span class="string">"field"</span>: [<span class="string">"agent"</span>, <span class="string">"log"</span>,<span class="string">"message"</span>,<span class="string">"ecs"</span>,<span class="string">"host"</span>,<span class="string">"input"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="string">"convert"</span> : &#123;</span><br><span class="line">        <span class="string">"field"</span> : <span class="string">"au_"</span>,</span><br><span class="line">        <span class="string">"type"</span>: <span class="string">"integer"</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>大数据</category>
      </categories>
  </entry>
  <entry>
    <title>使用flask_admin快速构建后台框架</title>
    <url>/2020/05/%E4%BD%BF%E7%94%A8flask-admin%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA%E5%90%8E%E5%8F%B0%E6%A1%86%E6%9E%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Config</span>:</span></span><br><span class="line">    MYSQLURI = <span class="string">'mysql+pymysql://yanqi:Bdp_288@127.0.0.1:3306/deployadmin?charset=utf8mb4&amp;autocommit=true'</span></span><br></pre></td></tr></table></figure>
<h2 id="主程序"><a href="#主程序" class="headerlink" title="主程序"></a>主程序</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding:utf8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,url_for</span><br><span class="line"><span class="keyword">from</span> flask_admin <span class="keyword">import</span> Admin,BaseView,expose</span><br><span class="line"><span class="keyword">from</span> flask_admin.contrib.sqla <span class="keyword">import</span> ModelView</span><br><span class="line"><span class="keyword">from</span> flask_sqlalchemy <span class="keyword">import</span> SQLAlchemy</span><br><span class="line"><span class="keyword">from</span> flask_admin.contrib <span class="keyword">import</span> sqla</span><br><span class="line"><span class="keyword">from</span> flask_babelex <span class="keyword">import</span> Babel</span><br><span class="line"><span class="keyword">from</span> manager <span class="keyword">import</span> (CataHost,SysMenu,SysHost,SysSer)</span><br><span class="line"><span class="keyword">from</span> config <span class="keyword">import</span> Config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成 app</span></span><br><span class="line">app = Flask(__name__,template_folder=<span class="string">'templates'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create dummy secrey key so we can use sessions</span></span><br><span class="line">app.config[<span class="string">'SECRET_KEY'</span>] = <span class="string">'123456790'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 国际化</span></span><br><span class="line">babel = Babel(app)</span><br><span class="line">app.config[<span class="string">'BABEL_DEFAULT_LOCALE'</span>] = <span class="string">'zh_CN'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create database</span></span><br><span class="line">app.config[<span class="string">'SQLALCHEMY_DATABASE_URI'</span>] = Config.MYSQLURI</span><br><span class="line">app.config[<span class="string">'SQLALCHEMY_ECHO'</span>] = <span class="literal">True</span></span><br><span class="line">db = SQLAlchemy(app)</span><br><span class="line"></span><br><span class="line"><span class="comment"># set optional bootswatch theme</span></span><br><span class="line">app.config[<span class="string">'FLASK_ADMIN_SWATCH'</span>] = <span class="string">'cerulean'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add administrative views here</span></span><br><span class="line">admin = Admin(app,name=<span class="string">u'后台管理系统'</span>, template_mode=<span class="string">'bootstrap3'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里类似于app.route()，处理url请求</span></span><br><span class="line"><span class="comment"># 普通视图</span></span><br><span class="line"><span class="comment"># class MyView(BaseView):</span></span><br><span class="line"><span class="comment">#     @expose('/')</span></span><br><span class="line"><span class="comment">#     def index(self):</span></span><br><span class="line"><span class="comment">#         return self.render('myview.html')</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定制数据库模型视图</span></span><br><span class="line"><span class="comment"># 在这里初始化Flask Flask-SQLAlchemy Flask-Admin</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SysMenuModelView</span><span class="params">(sqla.ModelView)</span>:</span></span><br><span class="line">    <span class="comment"># 这三个变量定义管理员是否可以增删改，默认为True</span></span><br><span class="line">    <span class="comment"># can_delete = False</span></span><br><span class="line">    <span class="comment"># can_edit = False</span></span><br><span class="line">    <span class="comment"># can_create = False</span></span><br><span class="line">    <span class="comment"># 分页</span></span><br><span class="line">    page_size = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 这里是为了自定义显示的column名字</span></span><br><span class="line">    column_labels = dict(</span><br><span class="line">        name=<span class="string">u'名称'</span>,</span><br><span class="line">        alias_name=<span class="string">u'别称'</span>,</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果不想显示某些字段，可以重载这个变量</span></span><br><span class="line">    column_exclude_list = (</span><br><span class="line">        <span class="string">'password'</span>,</span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># 认证</span></span><br><span class="line">    <span class="comment"># def is_accessible(self):</span></span><br><span class="line">    <span class="comment">#     return login.current_user.is_authenticated</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HostModelView</span><span class="params">(sqla.ModelView)</span>:</span></span><br><span class="line">    page_size = <span class="number">100</span></span><br><span class="line">    column_labels = dict(</span><br><span class="line">        hostname=<span class="string">u'主机名'</span>,</span><br><span class="line">        innerip=<span class="string">u'内网IP'</span>,</span><br><span class="line">    )</span><br><span class="line">    column_sortable_list = (<span class="string">'hostname'</span>, <span class="string">'innerip'</span>,<span class="string">'outerip'</span>,<span class="string">'memtotal'</span>,<span class="string">'cpucore'</span>)</span><br><span class="line">    column_exclude_list = (</span><br><span class="line">        <span class="string">'password'</span>,</span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># 是否显示主键</span></span><br><span class="line">    <span class="comment"># column_display_pk = True</span></span><br><span class="line">    column_editable_list = (<span class="string">'status'</span>,<span class="string">'cpucore'</span>,<span class="string">'outerip'</span>)</span><br><span class="line">    column_searchable_list = (<span class="string">'hostname'</span>, <span class="string">'innerip'</span>,<span class="string">'outerip'</span>)</span><br><span class="line">    can_export = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    column_list = (<span class="string">'hostname'</span>, <span class="string">'innerip'</span>,<span class="string">'outerip'</span>,<span class="string">'memtotal'</span>,<span class="string">'cpucore'</span>,<span class="string">'status'</span>)</span><br><span class="line">    <span class="comment"># 如果不想显示某些字段，可以重载这个变量</span></span><br><span class="line">    column_exclude_list = (</span><br><span class="line">        <span class="string">'password'</span>,</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CataHostModelView</span><span class="params">(sqla.ModelView)</span>:</span></span><br><span class="line">    page_size = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SysSerModelView</span><span class="params">(sqla.ModelView)</span>:</span></span><br><span class="line">    page_size = <span class="number">200</span></span><br><span class="line">    column_labels = dict(</span><br><span class="line">        businesstype=<span class="string">u'业务类型'</span>,</span><br><span class="line">        innerip=<span class="string">u'内网IP'</span>,</span><br><span class="line">        outurl=<span class="string">u'外网地址'</span>,</span><br><span class="line">        remark=<span class="string">u'备注'</span>,</span><br><span class="line">        hostname=<span class="string">u'主机名'</span>,</span><br><span class="line">    )</span><br><span class="line">    column_sortable_list = (<span class="string">'otasite'</span>,<span class="string">'outurl'</span>,<span class="string">'ipcc'</span>,<span class="string">'cid'</span>,<span class="string">'sername'</span>,<span class="string">'innerip'</span>)</span><br><span class="line">    column_exclude_list = (</span><br><span class="line">        <span class="string">'password'</span>,</span><br><span class="line">    )</span><br><span class="line">    column_editable_list = (<span class="string">'otasite'</span>,<span class="string">'outurl'</span>,<span class="string">'ipcc'</span>,<span class="string">'cid'</span>,<span class="string">'businesstype'</span>,<span class="string">'remark'</span>)</span><br><span class="line">    column_searchable_list = (<span class="string">'hostname'</span>,<span class="string">'otasite'</span>,<span class="string">'outurl'</span>,<span class="string">'ipcc'</span>,<span class="string">'cid'</span>,<span class="string">'appname'</span>,<span class="string">'innerip'</span>,<span class="string">'sername'</span>)</span><br><span class="line">    can_export = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 装载视图</span></span><br><span class="line"><span class="comment"># admin.add_view(MyView(name='myview', endpoint='myview'))</span></span><br><span class="line">admin.add_view(SysMenuModelView(SysMenu, db.session,name=<span class="string">u'导航管理'</span>, category=<span class="string">u'资源管理'</span>))</span><br><span class="line">admin.add_view(HostModelView(SysHost, db.session,name=<span class="string">u'主机管理'</span>, category=<span class="string">u'资源管理'</span>))</span><br><span class="line">admin.add_view(CataHostModelView(CataHost, db.session,name=<span class="string">u'主机分组'</span>, category=<span class="string">u'资源管理'</span>))</span><br><span class="line">admin.add_view(SysSerModelView(SysSer, db.session,name=<span class="string">u'服务管理'</span>, category=<span class="string">u'资源管理'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件上传</span></span><br><span class="line"><span class="keyword">from</span> flask_admin.contrib.fileadmin <span class="keyword">import</span> FileAdmin</span><br><span class="line"><span class="keyword">import</span> os.path <span class="keyword">as</span> op</span><br><span class="line">file_path = op.join(op.dirname(__file__), <span class="string">'static'</span>)</span><br><span class="line">admin.add_view(FileAdmin(file_path, <span class="string">'/temp/'</span>, name=<span class="string">'文件'</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>,port=<span class="number">8088</span>)</span><br></pre></td></tr></table></figure>
<h3 id="model"><a href="#model" class="headerlink" title="model"></a>model</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask_sqlalchemy <span class="keyword">import</span> SQLAlchemy</span><br><span class="line"><span class="keyword">from</span> flask_script <span class="keyword">import</span> Manager</span><br><span class="line"><span class="keyword">from</span> flask_migrate <span class="keyword">import</span> Migrate, MigrateCommand</span><br><span class="line"><span class="keyword">from</span> config <span class="keyword">import</span> Config</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">'SQLALCHEMY_DATABASE_URI'</span>] = Config.MYSQLURI</span><br><span class="line">app.config[<span class="string">'SQLALCHEMY_ECHO'</span>] = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">db = SQLAlchemy(app)</span><br><span class="line">migrate = Migrate(app, db)</span><br><span class="line"></span><br><span class="line">manager = Manager(app)</span><br><span class="line">manager.add_command(<span class="string">'db'</span>, MigrateCommand)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建导航表</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SysMenu</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">    name = db.Column(db.String(<span class="number">100</span>))</span><br><span class="line">    alias_name = db.Column(db.String(<span class="number">100</span>))</span><br><span class="line">    link = db.Column(db.String(<span class="number">1024</span>))</span><br><span class="line">    status = db.Column(db.INTEGER, default=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主机分组表</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CataHost</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    id = db.Column(db.Integer,primary_key=<span class="literal">True</span>)</span><br><span class="line">    cataname = db.Column(db.String(<span class="number">100</span>))</span><br><span class="line">    aliasname = db.Column(db.String(<span class="number">100</span>))</span><br><span class="line">    pid = db.Column(db.INTEGER,default=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.cataname</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建主机表</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SysHost</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">    hostname = db.Column(db.String(<span class="number">100</span>))</span><br><span class="line">    innerip = db.Column(db.String(<span class="number">18</span>))</span><br><span class="line">    loadavg = db.Column(db.FLOAT)</span><br><span class="line">    memuse = db.Column(db.FLOAT)</span><br><span class="line">    ethnet0 = db.Column(db.INTEGER)</span><br><span class="line">    ethnet1 = db.Column(db.INTEGER)</span><br><span class="line">    tcptotal = db.Column(db.INTEGER)</span><br><span class="line">    outerip = db.Column(db.String(<span class="number">18</span>))</span><br><span class="line">    memtotal = db.Column(db.INTEGER)</span><br><span class="line">    cpucore = db.Column(db.INTEGER)</span><br><span class="line">    uptime = db.Column(db.DateTime)</span><br><span class="line">    status = db.Column(db.INTEGER, default=<span class="number">1</span>)</span><br><span class="line">    cataid = db.Column(db.INTEGER,db.ForeignKey(<span class="string">'cata_host.id'</span>))</span><br><span class="line">    cata = db.relationship(<span class="string">"CataHost"</span>, backref=db.backref(<span class="string">'hostname'</span>,lazy=<span class="string">'dynamic'</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    __table_args__ = (</span><br><span class="line">        db.UniqueConstraint(<span class="string">'hostname'</span>, <span class="string">'innerip'</span>, name=<span class="string">'hostname_innerip'</span>),</span><br><span class="line">        db.Index(<span class="string">'hostname_innerip'</span>, <span class="string">'hostname'</span>, <span class="string">'innerip'</span>),</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.hostname</span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务表</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SysSer</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    id = db.Column(db.Integer,primary_key=<span class="literal">True</span>)</span><br><span class="line">    otasite = db.Column(db.String(<span class="number">100</span>))</span><br><span class="line">    cid = db.Column(db.String(<span class="number">100</span>))</span><br><span class="line">    outurl = db.Column(db.String(<span class="number">200</span>))</span><br><span class="line">    businesstype = db.Column(db.String(<span class="number">100</span>))</span><br><span class="line">    ipcc = db.Column(db.String(<span class="number">100</span>))</span><br><span class="line">    sername = db.Column(db.String(<span class="number">100</span>))</span><br><span class="line">    hostname = db.Column(db.String(<span class="number">100</span>))</span><br><span class="line">    innerip = db.Column(db.String(<span class="number">18</span>))</span><br><span class="line">    appname = db.Column(db.String(<span class="number">100</span>))</span><br><span class="line">    port = db.Column(db.INTEGER)</span><br><span class="line">    remark = db.Column(db.String(<span class="number">100</span>))</span><br><span class="line"></span><br><span class="line">    __table_args__ = (</span><br><span class="line">        db.UniqueConstraint(<span class="string">'sername'</span>, <span class="string">'innerip'</span>, name=<span class="string">'sername_innerip'</span>),</span><br><span class="line">        db.Index(<span class="string">'sername_innerip'</span>, <span class="string">'sername'</span>, <span class="string">'innerip'</span>),</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.sername</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 系统日志</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Syslog</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">    cur_date = db.Column(db.DateTime)</span><br><span class="line">    user = db.Column(db.String(<span class="number">100</span>) )</span><br><span class="line">    utype = db.Column(db.String(<span class="number">100</span>))</span><br><span class="line">    event = db.Column(db.TEXT )</span><br><span class="line"></span><br><span class="line"><span class="comment"># migrate_tab</span></span><br><span class="line"><span class="comment"># class AlembicVersion(db.Model):</span></span><br><span class="line"><span class="comment">#     pass</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@manager.command</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">build_db</span><span class="params">()</span>:</span></span><br><span class="line">    db.drop_all()</span><br><span class="line">    db.create_all()</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@manager.command</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deltab</span> <span class="params">(tabname)</span>:</span></span><br><span class="line">    db.session.delete(tabname)</span><br><span class="line">    db.session.commit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    manager.run()</span><br><span class="line"></span><br><span class="line"><span class="comment"># $ python manage.py db init</span></span><br><span class="line"><span class="comment"># $ python manage.py db migrate</span></span><br><span class="line"><span class="comment"># $ python manage.py db upgrade 第一次会创建表</span></span><br><span class="line"><span class="comment"># $ python manage.py db --help</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维开发</category>
      </categories>
  </entry>
  <entry>
    <title>golang微服务</title>
    <url>/2020/05/golang%E5%BE%AE%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="golang-微服务"><a href="#golang-微服务" class="headerlink" title="golang 微服务"></a>golang 微服务</h2><ul>
<li>go-micro</li>
<li>Protobuf</li>
<li>Etcd</li>
</ul>
<p>Install go-micro<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> GOPATH=<span class="string">"/Users/alert/go"</span></span><br><span class="line"><span class="built_in">export</span> GOROOT=<span class="string">"/usr/local/go"</span></span><br><span class="line"><span class="built_in">export</span> GOPROXY=https://goproxy.io</span><br><span class="line"><span class="comment"># enable go modules</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> GO111MODULE=on</span><br><span class="line"><span class="comment"># initialise go modules in your app</span></span><br><span class="line">go mod init</span><br><span class="line"><span class="comment"># now go get</span></span><br><span class="line"></span><br><span class="line">go get github.com/micro/protoc-gen-micro/v2</span><br></pre></td></tr></table></figure></p>
<h1 id="INSTALL-Protobuf"><a href="#INSTALL-Protobuf" class="headerlink" title="INSTALL Protobuf"></a>INSTALL Protobuf</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://github.com/protocolbuffers/protobuf/releases/download/v3.11.4/protoc-3.11.4-osx-x86_64.zip</span><br><span class="line"><span class="built_in">cd</span> protoc-3.6.1-osx-x86_64</span><br><span class="line">cp -r include/ /usr/<span class="built_in">local</span>/include/</span><br><span class="line">cp -r bin/ /usr/<span class="built_in">local</span>/bin/</span><br><span class="line">protoc</span><br><span class="line"></span><br><span class="line">go get -u github.com/golang/protobuf/protoc-gen-go</span><br><span class="line">protoc --proto_path=<span class="variable">$GOPATH</span>/src:. --micro_out=. --go_out=. greeter.proto</span><br></pre></td></tr></table></figure>
<h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├──<span class="built_in"> client </span> # 客户端</span><br><span class="line">│   ├── client</span><br><span class="line">│   └── client.go</span><br><span class="line">├── go.mod</span><br><span class="line">├── go.sum</span><br><span class="line">├──<span class="built_in"> server </span> # 服务端</span><br><span class="line">│   ├── server</span><br><span class="line">│   └── server.go</span><br><span class="line">└──<span class="built_in"> service </span># 协议</span><br><span class="line">    ├── greeter.pb.go</span><br><span class="line">    ├── greeter.pb.micro.go</span><br><span class="line">    └── greeter.proto</span><br></pre></td></tr></table></figure>
<h3 id="生成协议-Proto"><a href="#生成协议-Proto" class="headerlink" title="生成协议 Proto"></a>生成协议 Proto</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">protoc --proto_path=<span class="variable">$GOPATH</span>/src:. --micro_out=. --go_out=. path/to/greeter.proto</span><br></pre></td></tr></table></figure>
<h3 id="创建服务端"><a href="#创建服务端" class="headerlink" title="创建服务端"></a>创建服务端</h3><blockquote>
<p>server -&gt; server.go<br><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"context"</span></span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line">	micro <span class="string">"github.com/micro/go-micro/v2"</span></span><br><span class="line">	proto <span class="string">"mygomicro/service"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Greeter <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(g *Greeter)</span> <span class="title">Hello</span><span class="params">(ctx context.Context, req *proto.Request, rsp *proto.Response)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	rsp.Greeting = <span class="string">"Hello "</span> + req.Name</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// Create a new service. Optionally include some options here.</span></span><br><span class="line">	service := micro.NewService(</span><br><span class="line">		micro.Name(<span class="string">"greeter"</span>),</span><br><span class="line">	)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Init will parse the command line flags.</span></span><br><span class="line">	service.Init()</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Register handler</span></span><br><span class="line">	proto.RegisterGreeterHandler(service.Server(), <span class="built_in">new</span>(Greeter))</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Run the server</span></span><br><span class="line">	<span class="keyword">if</span> err := service.Run(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Println(err)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="创建客户端"><a href="#创建客户端" class="headerlink" title="创建客户端"></a>创建客户端</h3><blockquote>
<p>client -&gt; client.go<br><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"context"</span></span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line">	micro <span class="string">"github.com/micro/go-micro/v2"</span></span><br><span class="line">	proto <span class="string">"mygomicro/service"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// Create a new service</span></span><br><span class="line">	service := micro.NewService(micro.Name(<span class="string">"greeter.client"</span>))</span><br><span class="line">	<span class="comment">// Initialise the client and parse command line flags</span></span><br><span class="line">	service.Init()</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Create new greeter client</span></span><br><span class="line">	greeter := proto.NewGreeterService(<span class="string">"greeter"</span>, service.Client())</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Call the greeter</span></span><br><span class="line">	rsp, err := greeter.Hello(context.TODO(), &amp;proto.Request&#123;Name: <span class="string">"John"</span>&#125;)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Println(err)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Print response</span></span><br><span class="line">	fmt.Println(rsp.Greeting)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="Run-Service"><a href="#Run-Service" class="headerlink" title="Run Service"></a>Run Service</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 运行服务端</span></span><br><span class="line">go run server.go</span><br><span class="line"><span class="comment"># 运行客户端</span></span><br><span class="line">go run client.go</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>微服务</category>
      </categories>
      <tags>
        <tag>go-micro</tag>
      </tags>
  </entry>
  <entry>
    <title>为blog加速</title>
    <url>/2020/05/%E4%B8%BAblog%E5%8A%A0%E9%80%9F/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="Hey, password is required here." /><label>Hey, password is required here.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="14ec1427fd232c433e093b19ea8ed46123163ab6e487dc57a15994253571fe26"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>Dockerfile</title>
    <url>/2020/05/Dockerfile/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://hub.docker.com/" target="_blank" rel="noopener"> docker hub </a></p>
<h2 id="Dockerfile-指令"><a href="#Dockerfile-指令" class="headerlink" title="Dockerfile 指令"></a>Dockerfile 指令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># FROM：指定基础镜像，必须为第一个命令</span></span><br><span class="line"><span class="comment"># MAINTAINER: 维护者信息</span></span><br><span class="line">LABEL maintainer=blyanqi@163.com</span><br><span class="line"><span class="comment"># RUN：构建镜像时执行的命令</span></span><br><span class="line"><span class="comment"># ADD：将本地文件添加到容器中，tar类型文件会自动解压(网络压缩资源不会被解压)，可以访问网络资源，类似wget</span></span><br><span class="line"><span class="comment"># COPY：功能类似ADD，但是是不会自动解压文件，也不能访问网络资源</span></span><br><span class="line"><span class="comment"># CMD：构建容器后调用，也就是在容器启动时才进行调用。</span></span><br><span class="line"><span class="comment"># ENTRYPOINT：配置容器，使其可执行化。配合CMD可省去"application"，只使用参数。</span></span><br><span class="line"><span class="comment"># LABEL：用于为镜像添加元数据</span></span><br><span class="line"><span class="comment"># ARG：用于指定传递给构建运行时的变量</span></span><br><span class="line"><span class="comment"># ENV：设置环境变量</span></span><br><span class="line"><span class="comment"># EXPOSE：指定于外界交互的端口</span></span><br><span class="line"><span class="comment"># VOLUME：用于指定持久化目录</span></span><br><span class="line"><span class="comment"># WORKDIR：工作目录，类似于cd命令</span></span><br><span class="line"><span class="comment"># USER:指定运行容器时的用户名或 UID，后续的 RUN 也会使用指定用户。使用USER指定用户时，可以使用用户名、UID或GID，或是两者的组合。当服务不需要管理员权限时，可以通过该命令指定运行用户。并且可以在之前创建所需要的用户</span></span><br><span class="line"><span class="comment"># ONBUILD：用于设置镜像触发器,当所构建的镜像被用做其它镜像的基础镜像，该镜像中的触发器将会被钥触发</span></span><br><span class="line"><span class="comment"># ENV CONFIG /usr/local/config</span></span><br></pre></td></tr></table></figure>
<h2 id="制作镜像"><a href="#制作镜像" class="headerlink" title="制作镜像"></a>制作镜像</h2><h3 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1"></a>Example 1</h3><h4 id="查看镜像历史"><a href="#查看镜像历史" class="headerlink" title="查看镜像历史"></a>查看镜像历史</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">history</span> alpine</span><br></pre></td></tr></table></figure>
<h4 id="制作dockerfile"><a href="#制作dockerfile" class="headerlink" title="制作dockerfile"></a>制作dockerfile</h4><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> alpine</span><br><span class="line"><span class="comment"># 添加维护</span></span><br><span class="line"><span class="keyword">LABEL</span><span class="bash"> maintainer=blyanqi@163.com</span></span><br><span class="line"><span class="comment"># 使用清华大学源站</span></span><br><span class="line"><span class="keyword">run</span><span class="bash"> sed -i <span class="string">'s/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g'</span> /etc/apk/repositories</span></span><br><span class="line"><span class="comment"># 添加工具</span></span><br><span class="line"><span class="keyword">run</span><span class="bash"> apk add --no-cache bash mysql-client git</span></span><br></pre></td></tr></table></figure>
<h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 构建镜像</span></span><br><span class="line">docker build -t myalpine:0.1 .</span><br><span class="line"><span class="comment"># 指定dockerfile</span></span><br><span class="line">docker build -f /path/to/a/Dockerfile -t myalpine:0.1 .</span><br><span class="line"><span class="comment"># 启动 -d 后台运行 -it 交互方式 /bin/bash 会替换都最后一个 cmd</span></span><br><span class="line">docker run -d -it --name my1 myalpine:0.1 /bin/bash</span><br></pre></td></tr></table></figure>
<h2 id="springboot-dockerfile"><a href="#springboot-dockerfile" class="headerlink" title="springboot dockerfile"></a>springboot dockerfile</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#生成的新镜像以centos镜像为基础</span></span><br><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="comment"># 升级系统</span></span><br><span class="line"><span class="comment">#RUN yum -y update</span></span><br><span class="line"><span class="builtin-name">RUN</span> rm -f /etc/localtime \</span><br><span class="line">&amp;&amp; ln -sv /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \</span><br><span class="line">&amp;&amp; echo <span class="string">"Asia/Shanghai"</span> &gt; /etc/timezone</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加jdk安装包</span></span><br><span class="line">ARG <span class="attribute">jdk_dir</span>=/opt/java</span><br><span class="line"><span class="builtin-name">RUN</span> mkdir -p <span class="variable">$&#123;jdk_dir&#125;</span>/app</span><br><span class="line"><span class="builtin-name">ADD</span> jdk-8u251-linux-x64.tar.gz <span class="variable">$&#123;jdk_dir&#125;</span></span><br><span class="line"><span class="comment"># 添加业务包</span></span><br><span class="line"><span class="builtin-name">ADD</span> go-meta-auth-service-1.0.0.jar <span class="variable">$&#123;jdk_dir&#125;</span>/app</span><br><span class="line"><span class="comment"># 安装jdk</span></span><br><span class="line"><span class="builtin-name">RUN</span> sed -i <span class="string">'$a\export LANG=en_US.UTF-8'</span> /etc<span class="built_in">/profile </span>\</span><br><span class="line">&amp;&amp;sed -i <span class="string">'$a\JAVA_HOME=$&#123;jdk_dir&#125;/jdk1.8.0_251'</span> /etc<span class="built_in">/profile </span>\</span><br><span class="line">&amp;&amp;sed -i <span class="string">'$a\PATH=$PATH:$JAVA_HOME/bin'</span> /etc<span class="built_in">/profile </span>\</span><br><span class="line">&amp;&amp;sed -i <span class="string">'$a\CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib'</span> /etc<span class="built_in">/profile </span>\</span><br><span class="line">&amp;&amp;sed -i <span class="string">'$a\export JAVA_HOME JRE_HOME PATH CLASSPATH'</span> /etc/profile</span><br><span class="line">ENV PATH <span class="string">"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin:<span class="variable">$&#123;jdk_dir&#125;</span>/jdk1.8.0_251/bin"</span></span><br><span class="line"><span class="comment"># EXPOSE 22</span></span><br><span class="line">EXPOSE 9090</span><br><span class="line">WORKDIR /opt/java/app/</span><br><span class="line">CMD [<span class="string">"/bin/bash"</span>,<span class="string">"-c"</span>,<span class="string">"java -jar -Dserver.port=9090 ./go-meta-auth-service-1.0.0.jar"</span>]</span><br></pre></td></tr></table></figure>
<h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># WARNING: Ignoring http://dl-cdn.alpinelinux.org/alpine/v3.11/main/x86_64/APKINDEX.tar.gz: temporary error (try again later)</span></span><br><span class="line"><span class="comment"># 重启 docker-daemon</span></span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>docker-compose</title>
    <url>/2020/05/docker-compose/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://docs.docker.com/compose/install/" target="_blank" rel="noopener">compose docs</a></li>
<li><a href="https://docs.docker.com/compose/compose-file/" target="_blank" rel="noopener">compose file 参考</a></li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>curl -L <a href="https://get.daocloud.io/docker/compose/releases/download/1.26.0/docker-compose-`uname" target="_blank" rel="noopener">https://get.daocloud.io/docker/compose/releases/download/1.26.0/docker-compose-`uname</a> -s<code>-</code>uname -m` &gt; /usr/local/bin/docker-compose<br>chmod +x /usr/local/bin/docker-compose</p>
<h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">"3.8"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">webapp:</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">./dir</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">webapp:tag</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># build</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">"3.8"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">webapp:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">./dir</span></span><br><span class="line">      <span class="attr">dockerfile:</span> <span class="string">Dockerfile-alternate</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">webapp:tag</span></span><br><span class="line">      <span class="attr">args:</span></span><br><span class="line">        <span class="attr">buildno:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">network:</span> <span class="string">host</span></span><br><span class="line">      <span class="attr">command:</span> <span class="string">bundle</span> <span class="string">exec</span> <span class="string">thin</span> <span class="string">-p</span> <span class="number">3000</span></span><br></pre></td></tr></table></figure>
<h3 id="yaml-配置文件"><a href="#yaml-配置文件" class="headerlink" title="yaml 配置文件"></a>yaml 配置文件</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.8"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mariadb</span></span><br></pre></td></tr></table></figure>
<h4 id="volume"><a href="#volume" class="headerlink" title="volume"></a>volume</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.8"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mariadb</span></span><br></pre></td></tr></table></figure>
<p>network_mode：设置网络模式<br>network_mode: “bridge”<br>network_mode: “host”<br>network_mode: “none”<br>network_mode: “service:[service name]”<br>network_mode: “container:[container name/id]”</p>
<p>links<br>服务之间可以使用服务名称相互访问，links 允许定义一个别名，从而使用该别名访问其它服务</p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>系统信息采集</title>
    <url>/2020/05/%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF%E9%87%87%E9%9B%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>系统登录</title>
    <url>/2020/05/%E7%B3%BB%E7%BB%9F%E7%99%BB%E5%BD%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>CMDB</title>
    <url>/2020/05/CMDB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>Cobbler</title>
    <url>/2020/05/Cobbler/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://cobbler.readthedocs.io/en/release28/installation.html" target="_blank" rel="noopener">cobbler docs </a><br><a href="https://github.com/cobbler/cobbler.git" target="_blank" rel="noopener">cobbler github源</a></p>
<h2 id="所需服务"><a href="#所需服务" class="headerlink" title="所需服务"></a>所需服务</h2><p>  PXE (服务器需要支持PXE，一般都支持)<br>  DHCP<br>  DNS<br>  YUM<br>  TFTP<br>  HTTP<br>  Kickstart<br>  python</p>
<h2 id="docker-compose-构建"><a href="#docker-compose-构建" class="headerlink" title="docker compose 构建"></a>docker compose 构建</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.7'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">centos7-build:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">local/cobbler-centos7</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">cobbler-centos7</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">      <span class="attr">dockerfile:</span> <span class="string">./dockerfiles/CentOS7.dockerfile</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./rpm-build/el7:/usr/src/cobbler/rpm-build</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">centos8-build:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">local/cobbler-centos8</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">cobbler-centos8</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">      <span class="attr">dockerfile:</span> <span class="string">./dockerfiles/CentOS8.dockerfile</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./rpm-build/el8:/usr/src/cobbler/rpm-build</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">fedora31-build:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">local/cobbler-fedora31</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">cobbler-fedora31</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">      <span class="attr">dockerfile:</span> <span class="string">./dockerfiles/Fedora31.dockerfile</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./rpm-build/f31:/usr/src/cobbler/rpm-build</span></span><br></pre></td></tr></table></figure>
<h1 id><a href="#" class="headerlink" title="#"></a>#</h1><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">docker run -itd --name cobbler -v <span class="regexp">/Users/</span>alert<span class="regexp">/test/</span>cobbler<span class="regexp">/cobbler-3.1.2/</span>rpm-<span class="string">build:</span>/mnt centos</span><br><span class="line">docker exec -it <span class="number">24</span>df24a5b34d bash</span><br></pre></td></tr></table></figure>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><a href="/2020/06/linux%E5%AE%89%E8%A3%85%E6%9C%8D%E5%8A%A1%E5%89%8D%E9%85%8D%E7%BD%AE/" title="linux安装服务前配置">linux安装服务前配置</a>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 cobbler</span></span><br><span class="line">sudo rpm -Uvh http://mirror.atl.genesisadaptive.com/epel/6/x86_64/epel-release-6-8.noarch.rpm</span><br><span class="line">yum install cobbler</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置</span></span><br><span class="line">vim /etc/cobbler/settings</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认密码</span></span><br><span class="line">default_password_crypted: <span class="string">"<span class="variable">$1</span><span class="variable">$bfI7WLZz</span><span class="variable">$PxXetL97LkScqJFxnW7KS1</span>"</span></span><br><span class="line">openssl passwd -1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Next_Server</span></span><br><span class="line"><span class="comment"># default, HTTP and TFTP</span></span><br><span class="line">server: 127.0.0.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># DHCP/PXE</span></span><br><span class="line">next_server: 127.0.0.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># manage_dhcp setting</span></span><br><span class="line"><span class="comment"># default, don't manage</span></span><br><span class="line">manage_dhcp: 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># </span></span><br><span class="line">vi /etc/cobbler/dhcp.template</span><br><span class="line"></span><br><span class="line">subnet 192.168.1.0 netmask 255.255.255.0 &#123;</span><br><span class="line">     option routers             192.168.1.1;</span><br><span class="line">     option domain-name-servers 192.168.1.210,192.168.1.211;</span><br><span class="line">     option subnet-mask         255.255.255.0;</span><br><span class="line">     filename                   <span class="string">"/pxelinux.0"</span>;</span><br><span class="line">     default-lease-time         2.8.0;</span><br><span class="line">     max-lease-time             43200;</span><br><span class="line">     next-server                <span class="variable">$next_server</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># ks file</span></span><br><span class="line">/var/www/cobbler/ks_mirror</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">systemctl start cobblerd.service</span><br><span class="line">systemctl <span class="built_in">enable</span> cobblerd.service</span><br><span class="line">systemctl status cobblerd.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查</span></span><br><span class="line">cobbler check</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">cobbler sync</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载镜像</span></span><br><span class="line">mount -t iso9660 -o loop,ro /path/to/isos/Fedora-Server-dvd-x86_64-28-1.1.iso /mnt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入镜像</span></span><br><span class="line">cobbler import --name=fedora28 --arch=x86_64 --path=/mnt</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">cobbler distro list</span><br><span class="line">cobbler profile list</span><br><span class="line"></span><br><span class="line"><span class="comment"># </span></span><br><span class="line">cobbler distro report --name=fedora28-x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">cobbler system add --name=<span class="built_in">test</span> --profile=fedora28-x86_64</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">cobbler system list</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">cobbler system report --name=<span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">cobbler system edit --name=<span class="built_in">test</span> --interface=eth0 --mac=00:11:22:AA:BB:CC --ip-address=192.168.1.100 --netmask=255.255.255.0 --static=1 --dns-name=test.mydomain.com</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">cobbler system edit --name=<span class="built_in">test</span> --gateway=192.168.1.1 --hostname=test.mydomain.com</span><br></pre></td></tr></table></figure>
<h2 id="使用容器搭建"><a href="#使用容器搭建" class="headerlink" title="使用容器搭建"></a>使用容器搭建</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/cobbler/cobbler.git</span><br><span class="line"><span class="built_in">cd</span> cobbler</span><br><span class="line">git checkout release31</span><br><span class="line"></span><br><span class="line">wget https://codeload.github.com/cobbler/cobbler/tar.gz/v3.1.2</span><br><span class="line">tar -zxf cobbler-3.1.2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> cobbler-3.1.2</span><br><span class="line"><span class="comment"># 构建基于centos8镜像</span></span><br><span class="line">docker-compose up centos8-build</span><br></pre></td></tr></table></figure>
<p><a href="https://github.com/jasonlix5/docker-cobbler/blob/master/Dockerfile" target="_blank" rel="noopener"></a></p>
<h1 id="jdk1-8"><a href="#jdk1-8" class="headerlink" title="jdk1.8"></a>jdk1.8</h1><h1 id="java-jar-Dserver-port-9090-go-meta-auth-service-jar"><a href="#java-jar-Dserver-port-9090-go-meta-auth-service-jar" class="headerlink" title="java -jar -Dserver.port=9090 go-meta-auth-service.jar"></a>java -jar -Dserver.port=9090 go-meta-auth-service.jar</h1><p>docker run \<br>-d \<br>—privileged \<br>—net host \<br>-v /sys/fs/cgroup:/sys/fs/cgroup:ro \<br>-v etc/cobbler/settings:/etc/cobbler/settings \<br>-v etc/cobbler/dhcp.template:/etc/cobbler/dhcp.template \<br>-v var/www/cobbler/images:/var/www/cobbler/images \<br>-v var/www/cobbler/ks_mirror:/var/www/cobbler/ks_mirror \<br>-v var/www/cobbler/links:/var/www/cobbler/links \<br>-v var/lib/cobbler/config:/var/lib/cobbler/config \<br>-v var/lib/tftpboot:/var/lib/tftpboot \<br>-v dist/centos:/mnt:ro \<br>-p 69:69 \<br>-p 80:80 \<br>-p 443:443 \<br>-p 25151:25151 \<br>—name cobbler cobbler</p>
<p>sudo mount -t iso9660 -o loop,ro -v dist/centos.iso dist/centos<br>docker exec -it cobbler cobbler import —name=centos7 —arch=x86_64 —path=/mnt</p>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>自动化安装</tag>
      </tags>
  </entry>
  <entry>
    <title>Openfalcon</title>
    <url>/2020/05/Openfalcon/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 数据上报</span></span><br><span class="line">falcon-agent(<span class="comment"># 客户端代理)</span></span><br><span class="line">| </span><br><span class="line">falcon-gateway</span><br><span class="line">|                  falcon-alarm <span class="comment"># 报警</span></span><br><span class="line">falcon-transfer -&gt; falcon-judge <span class="comment"># 告警判断</span></span><br><span class="line">                -&gt; falcon-graph <span class="comment"># 数据存储</span></span><br><span class="line">|</span><br><span class="line">falcon-api <span class="comment"># 数据查询</span></span><br><span class="line">  falcon-hbs</span><br><span class="line">  falcon-nodata <span class="comment">#数据未上报处理</span></span><br><span class="line">  falcon-aggregator <span class="comment">#聚合某集群下的所有机器的某个指标的值</span></span><br><span class="line">Dashboard</span><br></pre></td></tr></table></figure>
<ul>
<li>用户</li>
<li>endpoint 机器</li>
<li>HostGroup 主机组</li>
<li>counter tag</li>
<li>Template 模块,一个模板是可以绑定到多个HostGroup的</li>
<li>al</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="http://book.open-falcon.com/zh_0_2/quick_install/frontend.html" target="_blank" rel="noopener">falcon 0.2 docs</a></p>
<h3 id="安装前准备"><a href="#安装前准备" class="headerlink" title="安装前准备"></a>安装前准备</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装redis</span></span><br><span class="line">yum install -y redis</span><br><span class="line"><span class="comment"># 安装mysql</span></span><br><span class="line">yum install -y mysql-server</span><br><span class="line">注意，请确保redis和MySQL已启动。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化MySQL表结构</span></span><br><span class="line"><span class="built_in">cd</span> /tmp/ &amp;&amp; git <span class="built_in">clone</span> https://github.com/open-falcon/falcon-plus.git </span><br><span class="line"><span class="built_in">cd</span> /tmp/falcon-plus/scripts/mysql/db_schema/</span><br><span class="line">mysql -h 127.0.0.1 -u root -p &lt; 1_uic-db-schema.sql</span><br><span class="line">mysql -h 127.0.0.1 -u root -p &lt; 2_portal-db-schema.sql</span><br><span class="line">mysql -h 127.0.0.1 -u root -p &lt; 3_dashboard-db-schema.sql</span><br><span class="line">mysql -h 127.0.0.1 -u root -p &lt; 4_graph-db-schema.sql</span><br><span class="line">mysql -h 127.0.0.1 -u root -p &lt; 5_alarms-db-schema.sql</span><br><span class="line">rm -rf /tmp/falcon-plus/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果你是从v0.1.0升级到当前版本v0.2.0，那么只需要执行如下命令：</span></span><br><span class="line">mysql -h 127.0.0.1 -u root -p &lt; 5_alarms-db-schema.sql</span><br></pre></td></tr></table></figure>
<h3 id="下载-二进制包"><a href="#下载-二进制包" class="headerlink" title="下载 二进制包"></a>下载 <a href="https://github.com/open-falcon/falcon-plus/releases" target="_blank" rel="noopener">二进制包</a></h3><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建工作目录</span></span><br><span class="line"><span class="built_in">export</span> FALCON_HOME=/home/work</span><br><span class="line"><span class="built_in">export</span> WORKSPACE=<span class="variable">$FALCON_HOME</span>/open-falcon</span><br><span class="line">mkdir -p <span class="variable">$WORKSPACE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压二进制包</span></span><br><span class="line">tar -xzvf open-falcon-v0.2.1.tar.gz -C <span class="variable">$WORKSPACE</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$WORKSPACE</span></span><br><span class="line">grep -Ilr 3306  ./ | xargs -n1 -- sed -i <span class="string">'s/root:/real_user:real_password/g'</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$WORKSPACE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">./open-falcon start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查所有模块的启动状况</span></span><br><span class="line">./open-falcon check</span><br><span class="line"></span><br><span class="line"><span class="comment"># ./open-falcon [start|stop|restart|check|monitor|reload] module</span></span><br><span class="line">./open-falcon start agent</span><br></pre></td></tr></table></figure>
<h3 id="安装前端"><a href="#安装前端" class="headerlink" title="安装前端"></a>安装前端</h3><ul>
<li>版本 （不知道为啥官方连版本都不说明）<ul>
<li>CentOS Linux release 7.8.2003 (Core)</li>
<li>Python 2.7.5</li>
<li><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建工作目录</span></span><br><span class="line"><span class="built_in">export</span> HOME=/home/work</span><br><span class="line"><span class="built_in">export</span> WORKSPACE=<span class="variable">$HOME</span>/open-falcon</span><br><span class="line">mkdir -p <span class="variable">$WORKSPACE</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$WORKSPACE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># git clone code</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$WORKSPACE</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/open-falcon/dashboard.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 python 环境</span></span><br><span class="line">yum install -y python-virtualenv</span><br><span class="line">yum install -y python-devel</span><br><span class="line">yum install -y openldap-devel</span><br><span class="line">yum install -y mysql-devel</span><br><span class="line">yum groupinstall <span class="string">"Development tools"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$WORKSPACE</span>/dashboard/</span><br><span class="line">virtualenv ./env</span><br><span class="line"></span><br><span class="line">./env/bin/pip install -r pip_requirements.txt -i https://pypi.douban.com/simple</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置</span></span><br><span class="line">dashboard的配置文件为： <span class="string">'rrd/config.py'</span>，请根据实际情况修改</span><br><span class="line"></span><br><span class="line"><span class="comment"># API_ADDR 表示后端api组件的地址</span></span><br><span class="line">API_ADDR = <span class="string">"http://127.0.0.1:8080/api/v1"</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据实际情况，修改PORTAL_DB_*, 默认用户名为root，默认密码为""</span></span><br><span class="line"><span class="comment"># 根据实际情况，修改ALARM_DB_*, 默认用户名为root，默认密码为""</span></span><br><span class="line"><span class="comment"># 以开发者模式启动</span></span><br><span class="line">./env/bin/python wsgi.py</span><br><span class="line"><span class="comment"># open http://127.0.0.1:8081 in your browser.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在生产环境启动</span></span><br><span class="line">bash control start</span><br><span class="line"><span class="comment"># open http://127.0.0.1:8081 in your browser.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止dashboard运行</span></span><br><span class="line">bash control stop</span><br><span class="line"><span class="comment"># 查看日志</span></span><br><span class="line">bash control tail</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h2 id="docker-方式安装"><a href="#docker-方式安装" class="headerlink" title="docker 方式安装"></a>docker 方式安装</h2><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><p>git clone <a href="https://github.com/open-falcon/falcon-plus.git" target="_blank" rel="noopener">https://github.com/open-falcon/falcon-plus.git</a></p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Build container;</span></span><br><span class="line"><span class="keyword">FROM</span> openfalcon/makegcc-golang:<span class="number">1.10</span>-alpine</span><br><span class="line"><span class="keyword">LABEL</span><span class="bash"> maintainer=blyanqi@163.com</span></span><br><span class="line"><span class="keyword">USER</span> root</span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> FALCON_DIR=/open-falcon PROJ_PATH=$&#123;GOPATH&#125;/src/github.com/open-falcon/falcon-plus</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用清华大学源站</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> sed -i <span class="string">'s/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g'</span> /etc/apk/repositories</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> mkdir -p <span class="variable">$FALCON_DIR</span> &amp;&amp; \</span></span><br><span class="line"><span class="bash">    mkdir -p <span class="variable">$FALCON_DIR</span>/logs &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apk add --no-cache ca-certificates bash git supervisor</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> . <span class="variable">$&#123;PROJ_PATH&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> <span class="variable">$&#123;PROJ_PATH&#125;</span></span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> make all \</span></span><br><span class="line"><span class="bash">    &amp;&amp; make pack4docker \</span></span><br><span class="line"><span class="bash">    &amp;&amp; tar -zxf open-falcon-v*.tar.gz -C <span class="variable">$&#123;FALCON_DIR&#125;</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; rm -rf <span class="variable">$&#123;PROJ_PATH&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Final container;</span></span><br><span class="line"><span class="keyword">FROM</span> alpine:<span class="number">3.7</span></span><br><span class="line"><span class="keyword">LABEL</span><span class="bash"> maintainer=blyanqi@163.com</span></span><br><span class="line"><span class="keyword">USER</span> root</span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> FALCON_DIR=/open-falcon</span><br><span class="line"><span class="comment"># 使用清华大学源站</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> sed -i <span class="string">'s/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g'</span> /etc/apk/repositories</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> mkdir -p <span class="variable">$FALCON_DIR</span>/logs &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apk add --no-cache ca-certificates bash git supervisor</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> docker/supervisord.conf /etc/supervisord.conf</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> --from=0 <span class="variable">$&#123;FALCON_DIR&#125;</span> <span class="variable">$&#123;FALCON_DIR&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8433</span> <span class="number">8080</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> <span class="variable">$&#123;FALCON_DIR&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">"/usr/bin/supervisord"</span>, <span class="string">"-c"</span>, <span class="string">"/etc/supervisord.conf"</span>]</span></span><br></pre></td></tr></table></figure>
<h4 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h4><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">docker build -t falcon-<span class="keyword">plus</span>:<span class="number">0.1</span> .</span><br><span class="line"></span><br><span class="line">docker run -d --name falcon-<span class="keyword">plus</span> falcon-<span class="keyword">plus</span>:<span class="number">0.1</span></span><br></pre></td></tr></table></figure>
<h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><p>git clone <a href="https://github.com/open-falcon/dashboard.git" target="_blank" rel="noopener">https://github.com/open-falcon/dashboard.git</a></p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> python:<span class="number">2.7</span>-alpine3.<span class="number">7</span></span><br><span class="line"><span class="keyword">USER</span> root</span><br><span class="line"><span class="keyword">ENV</span> prefix=/open-falcon</span><br><span class="line"><span class="keyword">ENV</span> <span class="keyword">workdir</span><span class="bash">=<span class="variable">$prefix</span>/dashboard</span></span><br><span class="line"><span class="comment"># 使用清华大学源站</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> sed -i <span class="string">'s/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g'</span> /etc/apk/repositories</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apk add --no-cache \</span></span><br><span class="line"><span class="bash">    ca-certificates bash git g++ perl make \</span></span><br><span class="line"><span class="bash">    py-mysqldb \</span></span><br><span class="line"><span class="bash">    py-pyldap</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> mkdir -p <span class="variable">$prefix</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> PYTHONPATH <span class="string">"$&#123;PYTHONPATH&#125;:/usr/lib/python2.7/site-packages/"</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> <span class="variable">$workdir</span></span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> ./ ./</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> pip install \</span></span><br><span class="line"><span class="bash">    Flask==0.10.1 \</span></span><br><span class="line"><span class="bash">    Flask-Babel==0.9 \</span></span><br><span class="line"><span class="bash">    Jinja2==2.7.2 \</span></span><br><span class="line"><span class="bash">    Werkzeug==0.9.4 \</span></span><br><span class="line"><span class="bash">    gunicorn==19.9.0 \</span></span><br><span class="line"><span class="bash">    python-dateutil==2.2 \</span></span><br><span class="line"><span class="bash">    requests==2.3.0  -i https://mirrors.aliyun.com/pypi/simple</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">"/bin/sh"</span>, <span class="string">"-c"</span>]</span></span><br></pre></td></tr></table></figure>
<h4 id="构建-1"><a href="#构建-1" class="headerlink" title="构建"></a>构建</h4><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">docker build -t openfalcon-dashboard:<span class="number">0.1</span> .</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">run</span> -d -<span class="keyword">it</span> <span class="comment">--name falcon-dashboard openfalcon-dashboard:0.1 bash</span></span><br></pre></td></tr></table></figure>
<h3 id="故障"><a href="#故障" class="headerlink" title="故障"></a>故障</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">falcondashboard</span> docker centos8 中构建没成功</span><br><span class="line">主要是 mysql-devel的问题</span><br></pre></td></tr></table></figure>
<h3 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">"3.8"</span></span><br><span class="line">services:</span><br><span class="line">  <span class="comment"># 数据库</span></span><br><span class="line">  mysql:</span><br><span class="line">    container_name: mysql</span><br><span class="line">    image: mariadb</span><br><span class="line">    volumes:</span><br><span class="line">     - /data/db:/var/lib/mysql:Z</span><br><span class="line">    environment:</span><br><span class="line">     - MYSQL_ROOT_PASSWORD=root</span><br><span class="line">    ports:</span><br><span class="line">     - 3306:3306</span><br><span class="line">    restart: always</span><br><span class="line">  <span class="comment"># redis</span></span><br><span class="line">  redis:</span><br><span class="line">    container_name: redis</span><br><span class="line">    image: redis</span><br><span class="line">    volumes:</span><br><span class="line">     - /data/redis:/data</span><br><span class="line">    ports:</span><br><span class="line">     - 6379:6379</span><br><span class="line">  <span class="comment"># falcon 后端</span></span><br><span class="line">  falcon:</span><br><span class="line">    image: falcon-plus:0.1</span><br><span class="line">    container_name: falcon</span><br><span class="line">    <span class="comment">#command: echo 'start all;exit'|bash ./ctrl.sh</span></span><br><span class="line">    ports:</span><br><span class="line">     - 8443:8443</span><br><span class="line">     - 8080:8080</span><br><span class="line">    environment:</span><br><span class="line">     - MYSQL_PORT=root:root@tcp\(mysql:3306\)</span><br><span class="line">     - REDIS_PORT=redis:6379</span><br><span class="line">    volumes:</span><br><span class="line">     - /data/open-falcon/data:/open-falcon/data:Z</span><br><span class="line">     - /data/open-falcon/logs:/open-falcon/logs:Z</span><br><span class="line">    depends_on:</span><br><span class="line">     - mysql</span><br><span class="line">     - redis</span><br><span class="line">    restart: always</span><br></pre></td></tr></table></figure>
<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line">docker-compose up -d</span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">docker-compose stop</span><br><span class="line"><span class="comment"># 停止并删除容器</span></span><br><span class="line">docker-compose down</span><br></pre></td></tr></table></figure>
<p><a href="#前端">DashBoard 安装</a></p>
<h2 id="客户端部署"><a href="#客户端部署" class="headerlink" title="客户端部署"></a>客户端部署</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cfg.json</span><br><span class="line">./open-falcon start agent  <span class="comment"># 启动进程</span></span><br><span class="line">./open-falcon stop agent  <span class="comment"># 停止进程</span></span><br><span class="line">./open-falcon monitor agent  <span class="comment"># 查看日志</span></span><br><span class="line">./falcon-agent --check</span><br></pre></td></tr></table></figure>
<h3 id="api接口"><a href="#api接口" class="headerlink" title="api接口"></a>api接口</h3><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">ts=`<span class="type">date</span> +%s`; curl -X POST -d "[&#123;\"metric\": \"metric.demo\", \"endpoint\": \"qd-<span class="keyword">open</span>-falcon-judge01.hd\", \"<span class="type">timestamp</span>\": $ts,\"step\": 60,\"<span class="keyword">value</span>\": 9,\"counterType\": \"GAUGE\",\"tags\": \"project=falcon,module=judge\"&#125;]" http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">1988</span>/v1/push</span><br></pre></td></tr></table></figure>
<h2 id="graph存储"><a href="#graph存储" class="headerlink" title="graph存储"></a>graph存储</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim cfg.json</span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">./open-falcon start graph</span><br><span class="line"><span class="comment"># 停止服务</span></span><br><span class="line">./open-falcon stop graph</span><br><span class="line"><span class="comment"># 查看日志</span></span><br><span class="line">./open-falcon monitor graph</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维监控</category>
      </categories>
  </entry>
  <entry>
    <title>Prometheus</title>
    <url>/2020/05/Prometheus/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>Zabbix</title>
    <url>/2020/05/Zabbix/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>大数据</title>
    <url>/2020/05/%E5%A4%A7%E6%95%B0%E6%8D%AE-1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>云计算</title>
    <url>/2020/05/%E4%BA%91%E8%AE%A1%E7%AE%97/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="云计算概念"><a href="#云计算概念" class="headerlink" title="云计算概念"></a>云计算概念</h2><ul>
<li>OS 组成</li>
<li>虚拟化<ul>
<li>hypervisor</li>
</ul>
</li>
<li>qemu</li>
<li>kvm</li>
<li>xen</li>
<li>vmware</li>
<li>存储技术<ul>
<li>DAS</li>
<li>NFS</li>
<li>SAN</li>
<li>ISCSI</li>
<li>分布式文件系统<ul>
<li>ceph</li>
</ul>
</li>
</ul>
</li>
<li>镜像</li>
</ul>
<h2 id="云计算实践"><a href="#云计算实践" class="headerlink" title="云计算实践"></a>云计算实践</h2><ul>
<li><a href="/2020/05/OpenStack/" title="OpenStack">OpenStack</a></li>
<li><a href="/2020/05/OpenStack%E5%AE%89%E8%A3%85/" title="OpenStack安装">OpenStack安装</a></li>
</ul>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
  </entry>
  <entry>
    <title>AIops</title>
    <url>/2020/05/AIops/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://docs.moogsoft.com/en/getting-started.html" target="_blank" rel="noopener">Moogsoft</a></p>
]]></content>
      <categories>
        <category>AIops</category>
      </categories>
  </entry>
  <entry>
    <title>运维开发</title>
    <url>/2020/05/%E8%BF%90%E7%BB%B4%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="/2020/05/java%E7%BC%96%E7%A8%8B/" title="JAVA编程">JAVA编程</a></li>
<li><a href="/2020/05/python%E7%BC%96%E7%A8%8B/" title="PYTHON编程">PYTHON编程</a></li>
<li><a href="/2020/05/golang%E7%BC%96%E7%A8%8B/" title="GOLANG编程">GOLANG编程</a></li>
<li><a href="/2020/05/lua%E7%BC%96%E7%A8%8B/" title="LUA编程">LUA编程</a>
</li>
</ul>
<h2 id="WEB开发演变"><a href="#WEB开发演变" class="headerlink" title="WEB开发演变"></a>WEB开发演变</h2><figure class="highlight xl"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">url</span>-&gt;</span>功能模块-&gt;数据库</span><br><span class="line"><span class="function"><span class="title">view</span>-&gt;</span><span class="function"><span class="title">control</span>-&gt;</span><span class="function"><span class="title">model</span>-&gt;</span>数据库</span><br><span class="line">API网关-&gt;<span class="function"><span class="title">microservices</span>-&gt;</span>数据库</span><br></pre></td></tr></table></figure>
<h2 id="软件开发概念"><a href="#软件开发概念" class="headerlink" title="软件开发概念"></a>软件开发概念</h2><ul>
<li>ESB Enterprise Service Bus 企业服务总线</li>
<li>SOA Service-Oriented Architecture 面向服务的架构<ul>
<li>web service</li>
<li>microsevices</li>
</ul>
</li>
<li>Service Mesh 服务网格<ul>
<li>data plane 数据平面</li>
<li>control plane 控制平面</li>
<li>sidecar</li>
</ul>
</li>
<li>企业应用架构模式</li>
<li>UML Unified Modeling Language 统一建模语言<ul>
<li>功能模型</li>
<li>对象模型</li>
<li>动态模型</li>
</ul>
</li>
<li>API 网关</li>
</ul>
<h2 id="运维开发概念"><a href="#运维开发概念" class="headerlink" title="运维开发概念"></a>运维开发概念</h2><ul>
<li>CMDB 运维配置数据库<ul>
<li>主机</li>
<li>系统</li>
<li>网络</li>
<li>服务</li>
<li>平台 API(主要用于各系统间的整合)</li>
</ul>
</li>
<li>多租户<ul>
<li>企业空间（原子单位）<ul>
<li>区域(规模大的企业还会引入区域的概念)</li>
<li>项目</li>
<li>角色</li>
<li>用户</li>
<li>管理员</li>
</ul>
</li>
</ul>
</li>
<li><p>单租户（企业）</p>
<ul>
<li>项目</li>
<li>角色</li>
<li>用户</li>
<li>管理员</li>
</ul>
</li>
<li><p>项目</p>
<ul>
<li>应用<ul>
<li>应用框架</li>
<li>插件（插件接口是一个协议）<ul>
<li>通用插件接口<ul>
<li>初始化</li>
<li>反初始化</li>
<li>启动</li>
<li>停止</li>
</ul>
</li>
<li>专用插件接口</li>
<li>插件A</li>
<li>插件B</li>
</ul>
</li>
<li>公共函数库</li>
</ul>
</li>
<li>选型</li>
<li>源代码管理</li>
<li>三方接口</li>
<li>发布</li>
<li>升级</li>
</ul>
</li>
</ul>
<ul>
<li>接口（定义协议）</li>
<li>类 （定义功能）<ul>
<li>类&lt;-接口-&gt;类（实现依赖，设计模式产生）</li>
</ul>
</li>
<li>方法 (定义实现)</li>
<li>初始化方法 (对功能参数初始化)</li>
<li><p>属性 (定义功能的参数，机器学习本质不停调整参数，使之达到收敛)</p>
</li>
<li><p>抽象(抽象最简单的理解：把大象装冰箱需要几步？任何东西都可以这样抽象，再解构)</p>
</li>
<li><p>系统</p>
<ul>
<li>部分A</li>
<li>部分B …</li>
<li>部分间相互依赖 （最复杂的依赖关系：笛卡尔集）<ul>
<li>强依赖（影响系统正常运作）</li>
<li>弱依赖（不影响系统正常运作，功能性依赖）</li>
</ul>
</li>
</ul>
</li>
<li><a href="/2020/05/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/" title="数据结构">数据结构</a>
</li>
<li><a href="/2020/05/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/" title="设计模式">设计模式</a>
</li>
</ul>
<h2 id="运维开发实践"><a href="#运维开发实践" class="headerlink" title="运维开发实践"></a>运维开发实践</h2><p>运维开发的本质是对由于运维复杂度提升导致资源分散的整合</p>
<ul>
<li><a href="/2020/05/%E4%BD%BF%E7%94%A8flask-admin%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA%E5%90%8E%E5%8F%B0%E6%A1%86%E6%9E%B6/" title="使用flask_admin快速构建后台框架">使用flask_admin快速构建后台框架</a></li>
<li><a href="/2020/05/golang%E5%BE%AE%E6%9C%8D%E5%8A%A1/" title="使用golang构建微服务">使用golang构建微服务</a>
</li>
</ul>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>运维自动化</title>
    <url>/2020/05/%E8%BF%90%E7%BB%B4%E8%87%AA%E5%8A%A8%E5%8C%96/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="运维自动化概念"><a href="#运维自动化概念" class="headerlink" title="运维自动化概念"></a>运维自动化概念</h2><ul>
<li>安装自动化<ul>
<li>PXE</li>
<li>DHCP</li>
<li>TFTP</li>
<li>传输镜像</li>
</ul>
</li>
<li>CMDB 配置管理数据库</li>
<li>系统登录</li>
<li>系统信息采集</li>
<li>Jobs<ul>
<li>Schdule Jobs</li>
<li>cron Jobs</li>
</ul>
</li>
<li>系统部署自动化<ul>
<li>系统配置管理</li>
<li>包管理</li>
<li>系统升级</li>
<li>包依赖关系</li>
<li>命令执行</li>
</ul>
</li>
<li>业务部署自动化<ul>
<li>源代码</li>
<li>构建</li>
<li>发布<ul>
<li>开发环境</li>
<li>测试环境</li>
<li>生产环境</li>
</ul>
</li>
<li>发布方式<ul>
<li>金丝雀发布(灰度发布)</li>
<li>滚动发布</li>
<li>AB发布</li>
</ul>
</li>
<li>服务监控<ul>
<li>服务状态</li>
</ul>
</li>
<li>服务负载监控<ul>
<li>服务路由</li>
<li>服务熔断</li>
<li>服务降级</li>
</ul>
</li>
<li>服务扩缩容</li>
<li>服务回滚</li>
</ul>
</li>
</ul>
<h2 id="运维自动化实践"><a href="#运维自动化实践" class="headerlink" title="运维自动化实践"></a>运维自动化实践</h2><ul>
<li><a href="/2020/05/Cobbler/" title="Cobbler">Cobbler</a></li>
<li><a href="/2020/05/CMDB/" title="CMDB">CMDB</a></li>
<li><a href="/2020/05/%E7%B3%BB%E7%BB%9F%E7%99%BB%E5%BD%95/" title="系统登录">系统登录</a></li>
<li><a href="/2020/05/%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF%E9%87%87%E9%9B%86/" title="系统信息采集">系统信息采集</a></li>
<li><a href="/2020/05/DevOps/" title="DevOps">DevOps</a>
</li>
</ul>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>运维监控</title>
    <url>/2020/05/%E8%BF%90%E7%BB%B4%E7%9B%91%E6%8E%A7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="运维监控概念"><a href="#运维监控概念" class="headerlink" title="运维监控概念"></a>运维监控概念</h2><ul>
<li>时序数据库</li>
<li>数据留存期限</li>
<li>数据展现</li>
<li>数据采集<ul>
<li>采集精度</li>
<li>推送</li>
<li>拉取</li>
</ul>
</li>
<li>异常报警</li>
<li>阈值设定</li>
<li>报警级别</li>
<li>报警优先级</li>
<li>报警方式</li>
<li>报警组</li>
<li>报警人</li>
</ul>
<h2 id="运维监控实践"><a href="#运维监控实践" class="headerlink" title="运维监控实践"></a>运维监控实践</h2><ul>
<li><a href="/2020/05/Zabbix/" title="Zabbix">Zabbix</a></li>
<li><a href="/2020/05/Prometheus/" title="Prometheus">Prometheus</a></li>
<li><a href="/2020/05/Openfalcon/" title="Openfalcon">Openfalcon</a>
</li>
</ul>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>linux使用</title>
    <url>/2020/05/linux%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="EPEL源"><a href="#EPEL源" class="headerlink" title="EPEL源"></a>EPEL源</h3><blockquote>
<p>基于Fedora的一个项目，为“红帽系”的操作系统提供额外的软件包。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">yum -y install epel-release</span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">rpm -e epel-releas</span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure></p>
<h3 id="时区设置"><a href="#时区设置" class="headerlink" title="时区设置"></a>时区设置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看当前时区</span></span><br><span class="line">date -R</span><br><span class="line"><span class="comment"># </span></span><br><span class="line">tzselect</span><br><span class="line"></span><br><span class="line"><span class="comment"># RedHat Linux 和 CentOS</span></span><br><span class="line">timeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># dabian</span></span><br><span class="line">dpkg-reconfigure tzdata</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制相应的时区文件，替换系统时区文件</span></span><br><span class="line"><span class="comment"># cp /usr/share/zoneinfo/$主时区/$次时区 /etc/localtime</span></span><br><span class="line">cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将当前时间和日期写入BIOS</span></span><br><span class="line">hwclock -w</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示日期时间</span></span><br><span class="line">date</span><br><span class="line">cal</span><br></pre></td></tr></table></figure>
<h3 id="docker、pod-时区更改"><a href="#docker、pod-时区更改" class="headerlink" title="docker、pod 时区更改"></a>docker、pod 时区更改</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># dockerfile</span></span><br><span class="line">RUN rm -f /etc/localtime \</span><br><span class="line">&amp;&amp; ln -sv /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \</span><br><span class="line">&amp;&amp; <span class="built_in">echo</span> <span class="string">"Asia/Shanghai"</span> &gt; /etc/timezone</span><br><span class="line"></span><br><span class="line"><span class="comment"># 容器启动时指定</span></span><br><span class="line">docker run -it -v /etc/localtime:/etc/localtime centos /bin/sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># k8s pod 时区</span></span><br><span class="line">volumeMounts:</span><br><span class="line">    - name: date-config</span><br><span class="line">      mountPath: /etc/localtime</span><br><span class="line">volumes:</span><br><span class="line">  - name: date-config</span><br><span class="line">    hostPath:</span><br><span class="line">      path: /etc/localtime</span><br></pre></td></tr></table></figure>
</blockquote>
<h3 id="snap-包管理工具"><a href="#snap-包管理工具" class="headerlink" title="snap 包管理工具"></a>snap 包管理工具</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">yum install snapd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 unix socket</span></span><br><span class="line">systemctl <span class="built_in">enable</span> --now snapd.socket</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出已经安装的snap包</span></span><br><span class="line">snap list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出已安装的服务</span></span><br><span class="line">snap services</span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索要安装的snap包</span></span><br><span class="line">snap find lxd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装一个snap包</span></span><br><span class="line">snap install lxd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把一个包还原到以前安装的版本</span></span><br><span class="line">snap revert</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除一个snap包</span></span><br><span class="line">snap remove</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新软件包</span></span><br><span class="line">snap refresh</span><br><span class="line">snap refresh all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置path，否则找不到命令</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/var/lib/snapd/snap/bin</span><br></pre></td></tr></table></figure>
<h3 id="screan"><a href="#screan" class="headerlink" title="screan"></a>screan</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">yum install screen</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启会话</span></span><br><span class="line">screen -S first</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出当前会话</span></span><br><span class="line">screen -ls</span><br><span class="line">---</span><br><span class="line">There is a screen on:</span><br><span class="line">	2302.ttys003.alertyandeMacBook-Pro	(Detached)</span><br><span class="line">1 Socket <span class="keyword">in</span> /var/folders/6q/j94dgpfd7k94fq_4zpy7w7rc0000gn/T/.screen.</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="comment"># detach</span></span><br><span class="line">screen -d 2302.ttys003.alertyandeMacBook-Pro</span><br><span class="line"></span><br><span class="line"><span class="comment"># attach</span></span><br><span class="line">screen -r  2302.ttys003.alertyandeMacBook-Pro</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入screen</span></span><br><span class="line">screen -x 2302.ttys003.alertyandeMacBook-Pro</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭会话</span></span><br><span class="line">screen -X -S 2302 quit</span><br><span class="line">-X 执行命令</span><br><span class="line">-S 指定pid</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>linux容器技术</title>
    <url>/2020/05/linux%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://linuxcontainers.org/lxc/introduction/" target="_blank" rel="noopener">LXC</a></li>
</ul>
<h2 id="LXC"><a href="#LXC" class="headerlink" title="LXC"></a>LXC</h2><p>LXC是Linux内核包含功能的用户空间接口。通过功能强大的API和简单的工具，它使Linux用户可以轻松地创建和管理系统或应用程序容器。<br>LXC容器通常被认为是chroot和成熟的虚拟机之间的中间对象。<br>LXC当前由几个单独的组件组成：<br>  liblxc库<br>  API的几种语言绑定<br>  一组用于控制容器的标准工具<br>  分发容器模板</p>
<h2 id="LXD"><a href="#LXD" class="headerlink" title="LXD"></a>LXD</h2><p>LXD是下一代系统容器管理器。使用容器技术但类似于虚拟机<br>LXD是用Go编写的，它是免费软件，并根据Apache 2许可进行开发。。<br>通过nova-lxd 插件集成到 Openstack 中<br>无特权的容器，资源限制<br>基于镜像<br>高级资源控制（cpu，内存，网络I / O，块I / O，磁盘使用率和内核资源）<br>设备直通（USB，GPU，Unix字符和块设备，NIC，磁盘和路径）<br>网络管理（网桥创建和配置，跨主机隧道等）<br>存储管理（支持多个存储后端，存储池和存储卷）</p>
<p>LXD的核心是特权守护程序，该守护程序通过本地unix套接字以及网络（如果启用）公开REST API。<br>LXD不是LXC的改写，实际上，它是在LXC的基础上构建的，旨在提供新的，更好的用户体验。</p>
<p>LXD有两种发行版本：<br>  LTS版本<br>  功能发布</p>
<h3 id="使用LXD"><a href="#使用LXD" class="headerlink" title="使用LXD"></a>使用LXD</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 源码安装</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/lxc/lxd.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用snap安装</span></span><br><span class="line">sanp install lxd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化配置</span></span><br><span class="line">lxd init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出容器</span></span><br><span class="line">lxc list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建容器</span></span><br><span class="line">lxc launch ubuntu:18.04 first</span><br><span class="line">lxc <span class="built_in">exec</span> first -- /bin/bash</span><br><span class="line">lxc <span class="built_in">exec</span> first -- apt-get update</span><br><span class="line">lxc file pull first/etc/hosts .</span><br><span class="line">lxc file push hosts first/tmp/</span><br><span class="line">lxc stop first</span><br><span class="line">lxc delete first</span><br><span class="line"></span><br><span class="line"><span class="comment"># 远程 image 地址</span></span><br><span class="line">lxc remote ls</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lxc config <span class="built_in">set</span> core.https_address [::]:8443</span><br><span class="line">lxc config <span class="built_in">set</span> core.trust_password something-secure</span><br><span class="line">lxc remote add foo 1.2.3.4</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>dockerInMac</title>
    <url>/2020/05/dockerInMac/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="mac-中的docker-用法"><a href="#mac-中的docker-用法" class="headerlink" title="mac 中的docker 用法"></a>mac 中的docker 用法</h2><blockquote>
<p>在mac和windows 中使用轻量级虚拟化工具包 hyperkit来构建。</p>
<p>HyperKit包括一个完整的虚拟机管理程序，针对轻量级虚拟机进行了优化。</p>
</blockquote>
<h2 id="Hyperkit-安装位置"><a href="#Hyperkit-安装位置" class="headerlink" title="Hyperkit 安装位置"></a>Hyperkit 安装位置</h2><ul>
<li>HyperKit</li>
<li>VPNKit</li>
<li>DataKit<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入 hyperkit 数据目录</span></span><br><span class="line"><span class="built_in">cd</span> /Users/alert/Library/Containers/com.docker.docker/Data/vms/0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连入 hyperkit (键入enter进入)</span></span><br><span class="line">screen tty</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入docker 数据目录</span></span><br><span class="line"><span class="comment"># /var/lib/docker/containers/[hash_of_the_container]/hostconfig.json 容器配置文件</span></span><br><span class="line"><span class="built_in">cd</span> /var/lib/docker</span><br><span class="line">ls -a</span><br></pre></td></tr></table></figure>
</li>
</ul>
<a href="/2020/05/linux%E4%BD%BF%E7%94%A8/" title="screen用法">screen用法</a>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>screen</tag>
      </tags>
  </entry>
  <entry>
    <title>lua编程</title>
    <url>/2020/05/lua%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://www.lua.org/manual/5.3/" target="_blank" rel="noopener">lua docs</a><h2 id="install-for-mac"><a href="#install-for-mac" class="headerlink" title="install for mac"></a>install for mac</h2><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">tar -zxf Downloads/<span class="keyword">lua</span>-<span class="number">5.3</span>.<span class="number">5</span>.tar.gz</span><br><span class="line"><span class="keyword">cd</span> Downloads/<span class="keyword">lua</span>-<span class="number">5.3</span>.<span class="number">5</span></span><br><span class="line"><span class="keyword">make</span> macosx</span><br><span class="line">sudo <span class="keyword">make</span> install</span><br><span class="line"><span class="keyword">lua</span> -v</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">num = <span class="number">100</span> <span class="comment">-- 全局</span></span><br><span class="line"><span class="keyword">local</span> num = <span class="number">100</span>  <span class="comment">--局部</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">max</span><span class="params">()</span></span> <span class="comment">--函数</span></span><br><span class="line"><span class="keyword">end</span> <span class="comment">--结束</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 控制语句</span></span><br><span class="line"><span class="keyword">for</span> var=<span class="number">1</span>,<span class="number">100</span> <span class="keyword">do</span></span><br><span class="line"><span class="built_in">print</span>(var)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- table （关联数组）</span></span><br><span class="line"><span class="keyword">local</span> tab = &#123;&#125;</span><br><span class="line">tab[<span class="string">"k1"</span>] = <span class="string">"hello"</span></span><br><span class="line"><span class="built_in">print</span>(tab.key)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> <span class="built_in">pairs</span>(tab) <span class="keyword">do</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
  </entry>
  <entry>
    <title>词根</title>
    <url>/2020/05/%E8%AF%8D%E6%A0%B9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><ul>
<li>man - hand</li>
<li>tra - draw</li>
<li>cor - heart</li>
<li>simil - same </li>
<li>spir - breathe</li>
<li>sembl - like</li>
<li>cre - trust</li>
<li>popul - people</li>
</ul>
<h3 id="list-1"><a href="#list-1" class="headerlink" title="list"></a>list</h3><p>* </p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
  </entry>
  <entry>
    <title>商务英语</title>
    <url>/2020/05/%E5%95%86%E5%8A%A1%E8%8B%B1%E8%AF%AD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Conference"><a href="#Conference" class="headerlink" title="Conference"></a>Conference</h3><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>explain</th>
</tr>
</thead>
<tbody>
<tr>
<td>headquarters</td>
<td>总公司，总部</td>
</tr>
<tr>
<td>LO ：liaison office</td>
<td>当地国家的分部</td>
</tr>
<tr>
<td>kick-off</td>
<td>启动某个项目</td>
</tr>
<tr>
<td>project</td>
<td>项目(破街)</td>
</tr>
<tr>
<td>team</td>
<td>团队</td>
</tr>
<tr>
<td>teamwork</td>
<td>团队精神</td>
</tr>
<tr>
<td>recognize</td>
<td>认可</td>
</tr>
<tr>
<td>amortize</td>
<td>分摊</td>
</tr>
<tr>
<td>partner</td>
<td>工作伙伴</td>
</tr>
<tr>
<td>boardroom</td>
<td>会议室</td>
</tr>
<tr>
<td>Conference call</td>
<td>这可是外企工作的主要工作方式</td>
</tr>
<tr>
<td>review</td>
<td>总结回顾</td>
</tr>
<tr>
<td>brainstorm</td>
<td>开动脑力，激起头脑风暴</td>
</tr>
<tr>
<td>Point</td>
<td>关键点;What’s your point? 你到底要讲什么？</td>
</tr>
<tr>
<td>proposal</td>
<td>待定的未经确认通过的提议，待讨论的方案</td>
</tr>
<tr>
<td>options</td>
<td>备选方案</td>
</tr>
<tr>
<td>My understanding is …</td>
<td>我的理解是…</td>
</tr>
<tr>
<td>solution</td>
<td>解决办法</td>
</tr>
<tr>
<td>ASAP</td>
<td>越快越好</td>
</tr>
<tr>
<td>deadline</td>
<td>完成某项目的最后期限</td>
</tr>
<tr>
<td>approach</td>
<td>达到 报告，会议中常用此词，尽量达到的意思</td>
</tr>
<tr>
<td>scenario</td>
<td>指某个大项目的其中一个阶段</td>
</tr>
<tr>
<td>in charge</td>
<td>对一个部门，一项有一定重要性的事务负责，也可以对人，与权力相关</td>
</tr>
<tr>
<td>responsible for</td>
<td>负责，介乎前两种表达之间</td>
</tr>
<tr>
<td>follow up</td>
<td>具体跟进某事，与事情的重要性</td>
</tr>
<tr>
<td>package</td>
<td>包裹，所谓“一揽子计划”就由此而来</td>
</tr>
<tr>
<td>creative / creativity</td>
<td>创造性思维</td>
</tr>
<tr>
<td>sign off</td>
<td>签发</td>
</tr>
<tr>
<td>assignment</td>
<td>任务，职责</td>
</tr>
</tbody>
</table>
</div>
<h3 id="employee"><a href="#employee" class="headerlink" title="employee"></a>employee</h3><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>explain</th>
</tr>
</thead>
<tbody>
<tr>
<td>Performance Evaluation</td>
<td>(定期的)员工个人评定</td>
</tr>
<tr>
<td>Quota</td>
<td>员工的计划任务量</td>
</tr>
<tr>
<td>manuel</td>
<td>工作手册，指南</td>
</tr>
<tr>
<td>pain in the ass</td>
<td>办公室口头禅</td>
</tr>
<tr>
<td>cell</td>
<td>手机</td>
</tr>
<tr>
<td>aggressive</td>
<td>表扬和批评人用的</td>
</tr>
<tr>
<td>Concern</td>
<td>要好好注意，别弄砸了!</td>
</tr>
<tr>
<td>promotion</td>
<td>升迁</td>
</tr>
<tr>
<td>credit</td>
<td>个人信用</td>
</tr>
<tr>
<td>reputation</td>
<td>名声，口碑</td>
</tr>
<tr>
<td>Appreciate</td>
<td>表达感谢</td>
</tr>
<tr>
<td>stand up meeting</td>
<td>非正式的短会，比如说三两个人站在过道中间讨论一下事情，老外喜欢这样干；</td>
</tr>
<tr>
<td>broadcast</td>
<td>外企发通知用的</td>
</tr>
<tr>
<td>push</td>
<td>推动工作</td>
</tr>
<tr>
<td>add sb.to loop</td>
<td>有的事知道的人少，这就很不好，应该让多些人知道，于是就把他绕到圈子里去。</td>
</tr>
<tr>
<td>intern</td>
<td>实习生</td>
</tr>
<tr>
<td>probation</td>
<td>试用期 新员工试用期：3 months probation</td>
</tr>
<tr>
<td>handover</td>
<td>工作交接</td>
</tr>
<tr>
<td>lunch break</td>
<td>午间休息</td>
</tr>
<tr>
<td>routine</td>
<td>例行事务</td>
</tr>
<tr>
<td>day in and day out</td>
<td>日复一日</td>
</tr>
<tr>
<td>on shifts</td>
<td>轮班</td>
</tr>
<tr>
<td>driver</td>
<td>推动者</td>
</tr>
</tbody>
</table>
</div>
<h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>explain</th>
</tr>
</thead>
<tbody>
<tr>
<td>involve</td>
<td>介入，大佬很生气，后果很严重。</td>
</tr>
<tr>
<td>Do me a favor</td>
<td>帮个忙</td>
</tr>
<tr>
<td>Unacceptable</td>
<td>不能接受</td>
</tr>
<tr>
<td>Challenge</td>
<td>谴责、批评、指责</td>
</tr>
<tr>
<td>Follow up</td>
<td>跟办</td>
</tr>
<tr>
<td>To Do List</td>
<td>待办事项</td>
</tr>
<tr>
<td>You deserve it</td>
<td>褒义“当之无愧”，贬义“你活该”</td>
</tr>
<tr>
<td>harassment</td>
<td>骚扰</td>
</tr>
<tr>
<td>misunderstanding</td>
<td>误解，误会</td>
</tr>
<tr>
<td>You screw it up</td>
<td>搞砸了</td>
</tr>
<tr>
<td>fall guy</td>
<td>替罪羊</td>
</tr>
<tr>
<td>face music</td>
<td>挨骂，被上司训斥</td>
</tr>
<tr>
<td>kick somebody’s ass</td>
<td>老板训人</td>
</tr>
<tr>
<td>tough</td>
<td>两个意思，一指办事手段果断，不留情面；一指棘手的事情</td>
</tr>
<tr>
<td>lay off</td>
<td>解雇</td>
</tr>
</tbody>
</table>
</div>
<h3 id="travel-on-business"><a href="#travel-on-business" class="headerlink" title="travel on business"></a>travel on business</h3><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>explain</th>
</tr>
</thead>
<tbody>
<tr>
<td>jetlag</td>
<td>越洋出差</td>
</tr>
<tr>
<td>memo</td>
<td>备忘录</td>
</tr>
<tr>
<td>reminder</td>
<td>提醒一下</td>
</tr>
<tr>
<td>sticker</td>
<td>便签一种名为“post-it”的黄色小纸片</td>
</tr>
<tr>
<td>book</td>
<td>订机票，订酒店</td>
</tr>
<tr>
<td>go by book</td>
<td>按规章办事</td>
</tr>
<tr>
<td>expense</td>
<td>费用</td>
</tr>
<tr>
<td>budget</td>
<td>预算</td>
</tr>
<tr>
<td>petty cash</td>
<td>出差或办事前，跟财务领取的备用金</td>
</tr>
<tr>
<td>operator/receptionist</td>
<td>前台/接线员</td>
</tr>
<tr>
<td>extension</td>
<td>分机</td>
</tr>
<tr>
<td>reserve</td>
<td>秘书经常干的活，定餐位</td>
</tr>
<tr>
<td>beverage bar</td>
<td>喝水休息的地方</td>
</tr>
<tr>
<td>coffee/tea break</td>
<td>大公司工作时间内的小休</td>
</tr>
<tr>
<td>first-aid</td>
<td>指公司内的医药箱</td>
</tr>
<tr>
<td>presentation</td>
<td>简报，一般用ppt来做</td>
</tr>
<tr>
<td>outing</td>
<td>重要项目完成后，老板带大家出去疯一次</td>
</tr>
<tr>
<td>hangout</td>
<td>出去玩</td>
</tr>
<tr>
<td>gettogether</td>
<td>聚一聚</td>
</tr>
<tr>
<td>stand tree</td>
<td>请客“I stand tree this time.”这次我请客。</td>
</tr>
<tr>
<td>go dutch</td>
<td>各付各帐</td>
</tr>
<tr>
<td>localize</td>
<td>本地化</td>
</tr>
</tbody>
</table>
</div>
<h3 id="外企公司常用缩写"><a href="#外企公司常用缩写" class="headerlink" title="外企公司常用缩写"></a>外企公司常用缩写</h3><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>explain</th>
</tr>
</thead>
<tbody>
<tr>
<td>RGDS</td>
<td>regards 关于</td>
</tr>
<tr>
<td>TKS</td>
<td>thanks</td>
</tr>
<tr>
<td>ASAP</td>
<td>as soon as posible</td>
</tr>
<tr>
<td>BTW</td>
<td>by the way</td>
</tr>
<tr>
<td>FW</td>
<td>forward</td>
</tr>
<tr>
<td>COD</td>
<td>code of conduct</td>
</tr>
</tbody>
</table>
</div>
<h3 id="公司行为规范准则"><a href="#公司行为规范准则" class="headerlink" title="公司行为规范准则"></a>公司行为规范准则</h3><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>explain</th>
</tr>
</thead>
<tbody>
<tr>
<td>OL</td>
<td>office lady</td>
</tr>
<tr>
<td>EG</td>
<td>for example</td>
</tr>
<tr>
<td>FYI</td>
<td>for you information</td>
</tr>
<tr>
<td>ETC</td>
<td>esmated time of complete</td>
</tr>
<tr>
<td>ETS</td>
<td>esmated time of shipping</td>
</tr>
<tr>
<td>NG</td>
<td>no good</td>
</tr>
<tr>
<td>NFG</td>
<td>no fxxking good</td>
</tr>
<tr>
<td>FNG</td>
<td>fxxking new guy 常指把事情搞得一团糟的新员工</td>
</tr>
<tr>
<td>SOB</td>
<td>son of a bitch</td>
</tr>
<tr>
<td>cc</td>
<td>copies send to</td>
</tr>
</tbody>
</table>
</div>
<p>When are you free? 你什么时候有空?<br>Friday after 3:00. 星期五3点以后有空。<br>When are you available? 你什么时候有空？<br>That’s a bad day for me. 那天我不行。<br>That day is fine. 那天我可以。<br>When can I come over? 我什么时候去合适? （*come over“顺便拜访”。）<br>When can I stop by? 我什么时候可以去你那儿坐坐?<br>When should I come? 我什么时候来合适?<br>You decide when. 你定时间吧。<br>I’ll leave it up to you. 全交给你了。<br>It’s your decision. 你定吧。<br>You decide where. 你定地点吧。<br>Wherever you want is okay. 哪儿都行，只要你觉得好。<br>Is seven convenient for you? / Is seven okay for you? 7点行吗?<br>When can you come over? / What time can you make it? 你几点能来?<br>Is it too early? 太早了吗?<br>Is it too late? 太晚了吗<br>How’s the project going? 项目进展得怎么样？<br>Great! We’re way ahead of schedule. 非常好！我们要提前完工了。<br>We’re right on target. 我们正按计划进行。<br>Well, frankly, we’re running a little behind. 坦白地说，我们有点落后了。<br>Folks, we’re behind the eight-ballin meeting our sales target. Let’s speed things up. 兄弟们，我们都快完不成销售目标了。我们得抓紧啊。<br>It’s 70% done. 已经完成70％了。<br>It’ll be completed on time. 会按时完成的。<br>We’re halfway there. 我们已经完成一半了。<br>Have the milestones been identified for the new project? 新项目的关键活动都已经确定了吗？<br>What delivery date are we looking at? 什么时候交货？<br>There must be no further delays. The drop-dead date/deadline is next Friday’s close of business.不能再推迟了，最后期限是下周五下班的时候。<br>We are approaching the critical point for success or failure of this project. 我们正处在关系到整个工程成败的关键时刻。<br>I’ve been back and forth.我犹豫不定。<br>what was tonight?今晚本来要做什么？<br>this is so meant to be!这就是天意！<br>she’s gonna be crushed.她会崩溃的。<br>he can’t come to the phone now.他现在不能接电话<br>ready for a refill?我再给你倒一杯吧？<br>I love what u have done with this place.我喜欢这里的布置。<br>I can’t feel my hands.我手麻了。<br>have an affair 外遇<br>will anyone miss me if i weren’t here? 我在不在这里有什么区别吗？<br>I saw a lot of stuff.我大开眼界了<br>call security 通知警卫<br>does sth. mean squat to u? 对你来说sth狗屁不是吗？<br>what’s up with the greedy? 怎么这么贪啊？<br>work an extra shift 多轮一班<br>go on, i dare u! 有种你就去！<br>u r a freak! 你这个变态！<br>I sensed it was u.我感觉到是你了、<br>I apologize on behalf of him. 我替他道歉。<br>why are u changing the subject? 为什么要转移话题？<br>there’s no need to place blame.没有指责的必要。<br>it’s gonna leave a stain。这要留印子的。<br>I have part of the fault.我也有责任。<br>they are all well received 收到的反响都很好<br>talk u up 说你的好话<br>stand firm to 努力坚持<br>I was just leering 我只是用余光看看<br>organize my thoughts 整理思绪<br>get a little preoccupied 事先有事<br>no way to recover 没有掩饰的机会了<br>admire your candor你还真胆大<br>we are rolling 摄像机正在拍摄<br>go through this stack 看看这一叠<br>r u spying on me？你监视我？<br>just messing with u！跟你开玩笑呢！<br>enough is enough！闹够了<br>flyers 寻人（物）海报<br>it’s insensitive of me。我这么做很伤人<br>nod along 跟着点头<br>a totally separate subject 完全题外话<br>I thought it was the other way around 我以为是反过来的<br>close my bank account 注销银行卡<br>I feel wild today 我今天好亢奋！<br>I’m kind of beat 我有点累了<br>can u get the door?你能去开门吗<br>make a huge fool of myself 出了洋相<br>r u mocking me? 你嘲笑我？<br>sth.is beyond crap 那是扯淡<br>any luck?找到了吗？<br>don’t u rush me.别催我！<br>it doesn’t count.那不算。<br>she’s healed.她好了。（病或者伤害）<br>overreact 反应过度<br>patch things up with sb.和某人修复关系<br>corss that off my list 从单子上划掉<br>how did it go?怎么样？<br>present an award 颁奖<br>cut him some slack 放他一马<br>get over with 忘记<br>get in line排队（everybody get in line)大家排好队<br>I don’t have the energy for this我没有能力应付这个<br>you got me.你还真问住我了<br>The proposal is due two weeks from Monday.这个方案两周后的那个周一交。<br>We have to submit the final report by Thursday.我们必须在星期四前把最终报告交上去。<br>We need to report every other week. 或者 We need to report every two weeks.我们每隔一周就要汇报. （我们每两周汇报一次）<br>We need to do research every single day.我们每一天都必须做研究。<br>You can take your time though.不过你可以慢慢做。<br>It took me a while to figure out how to solve this problem.我花了好一会儿才想出如何解决这个问题。<br>We are out of time. 或者We run out of time.|我们时间不够了。<br>How much longer will it take you to get all of this stuff done? 你还要多久才能把事情做完?<br>How much longer would you need? 你还要多久才能把事情做完?<br>How long?是询问需要多长时间，How much longer? 是还需要多久？<br>Give me ten more minutes.再给我十分钟。<br>I don’t want to be the last-minute person next time.我下次不要再临时抱佛脚了。</p>
<h3 id="公司高层职位的英文缩写"><a href="#公司高层职位的英文缩写" class="headerlink" title="公司高层职位的英文缩写"></a>公司高层职位的英文缩写</h3><div class="table-container">
<table>
<thead>
<tr>
<th>position</th>
<th>explain</th>
</tr>
</thead>
<tbody>
<tr>
<td>CEO</td>
<td>Chief Executive Officer 首席执行官</td>
</tr>
<tr>
<td>CFO</td>
<td>Chief Financial Officer 首席财务官</td>
</tr>
<tr>
<td>COO</td>
<td>Chief Operated Officer 首席运营官</td>
</tr>
<tr>
<td>CTO</td>
<td>Chief Technology Officer 首席技术官</td>
</tr>
<tr>
<td>CIO</td>
<td>Chief Information Officer 首席信息官</td>
</tr>
<tr>
<td>CRO</td>
<td>Chief Risk Officer 首席风险官</td>
</tr>
</tbody>
</table>
</div>
<p>==========================================================<br>艺术总监 【CAO】 chief Artistic officer<br>首席品牌官【CBO】 chief brand officer<br>首席文化官【CCO】 Chief Cultural Officer<br>开发总监 【CDO】 chief Development officer<br>首席执行官【CEO】 Chief Executive officer<br>首席财务官【CFO】 Chief finance officer<br>人事总监 【CHO】 Chief Human resource officer<br>首席信息官【CIO】 chief information officer<br>首席知识官【CKO】 chief knowledge officer<br>首席市场官【CMO】 chief Marketing officer<br>首席谈判官【CNO】 chief Negotiation officer<br>首席营运官【COO】 chief Operation officer<br>公关总监 【CPO】 chief Public relation officer<br>质量总监 【CQO】 chief Quality officer<br>销售总监 【CSO】 chief Sales officer<br>首席技术官【CTO】 chief Technology officer<br>评估总监 【CVO】 chief Valuation officer</p>
<hr>
<p>GM：General Manager 总经理<br>VP：Vice President 副总裁FVP（First Vice President）第一副总裁<br>AVP：Assistant Vice President 副总裁助理<br>HRD：Human Resource Director 人力资源总监<br>OD：Operations Director 运营总监<br>MD：Marketing Director 市场总监<br>OM：Operations Manager 运作经理<br>PM：Production Manager生产经理、Product Manager产品经理、Project Manager项目经理)<br>注：这里面变化比较多，要结合谈话时的背景来判断究竟是指哪种身份）<br>BM（Branch Manager）部门经理<br>DM（District Manager）区域经理<br>RM（Regional Manager）区域经理</p>
<hr>
<h3 id="广告公司职位英文对照"><a href="#广告公司职位英文对照" class="headerlink" title="广告公司职位英文对照"></a>广告公司职位英文对照</h3><p>AAD〔Associated Account Director〕——副客户总监<br>AAD〔Associated Art Director〕——副美术指导<br>ACD〔Associated Creative Director〕——副创作总监<br>AD 〔Account Director〕——客户服务总监、业务指导<br>AD〔Art Director〕——美术指导（在创作部可以独挡一面执行美术指导工作的美术监督）<br>AE〔Account Executive〕——客户执行、客户服务、客户主任；预算执行者，负责广告代理商和广告主之间的一切有关业务，观念，预算，广告表现之联系<br>AM 〔Account Manager〕——客户经理<br>AP〔Account Planner〕——客户企划（分策略企划和业务企划两种）</p>
<p>ASM〔Area Sale Manager〕——大区销售经理<br>CD〔Creative Director〕——创作总监、创意总监、创意指导（CD的前身，不是撰稿人便　　是美术设计，因为积累了丰富的经验，并有优异的创作成绩而成为督导）<br>CGH〔Creative Group Head 〕——创意组长〔Computer Visualizer〕——计算机绘图员<br>CW〔Copywriter〕——撰稿人<br>DCS〔Director of Client Service〕——客户主管<br>ECD〔Executive Creative Director〕——执行创意总监<br>FA〔Finish Artist〕——完稿、画师〔Finish Artist Group Head〕——完稿组长<br>GAD〔Group Account Director〕——客户群总监<br>GCD〔Group Creative Director〕——创意群总监<br>GMD〔General Managing Director〕——总经理<br>MD〔Media Director〕——媒体指导、媒介部经理<br>SAD〔Senior Art Director〕——高级美术指导<br>SCW〔Senior Copywriter〕——高级文案〔Copy Director〕——文案指导</p>
<p>〔Media Supervisor〕——媒介主任、媒介总监<br>〔Media Planner〕——媒介策划<br>〔Planning Director〕——企划指导<br>〔Planning Supervisor〕——企划总监<br>〔Print Production Manager〕——平面制作经理<br>〔Production Manager〕——制作经理<br>〔Research Supervisor〕——调查总监<br>〔Studio Manager〕——画房经理、作业室经理<br>〔Traffic Control Specialist（简称Traffic）〕——制管人员<br>〔Traffic Coordinator〕——平面制作统筹<br>〔TV Producer〕——制片<br>〔Visualizer〕——插图家、插画师、绘图员、视觉设计<br>〔Visualizer Group Head〕——视觉设计组长<br>〔Artist〕——正稿员</p>
<hr>
<p>President 总裁<br>Vice-President 副总裁<br>Assistant VP 副总裁助理<br>Executive Marketing Director 市场行政总监<br>General Manager 总经理<br>Branch Manager 部门经理<br>Product Manager 产品经理<br>Project Manager 项目经理<br>Regional Manager 区域经理<br>Production Manager 生产经理<br>Transportation Manager 运输经理<br>Applications Programmer 应用软件程序员<br>Computer Operator 电脑操作员<br>Computer Operations Supervisor 电脑操作主管<br>Hardware Engineer 硬件工程师<br>Computer Technician 电脑技术员<br>MIS Manager 管理信息系统部经理<br>Developmental Engineer 开发工程师<br>Operations Analyst 操作分析<br>Director of Information Services 信息服务主管<br>LAN Administrator 局域网管理员<br>Systems Analyst 系统分析<br>Manager of Network Administration 网络管理经理<br>Systems Engineer 系统工程师<br>Product Support Manager 产品支持经理<br>Systems Programmer 系统程序员<br>VP Sales 销售副总裁<br>VP Marketing 市场副总裁<br>Senior Account Manager 高级客户经理<br>Telemarketing Director 电话销售总监<br>Sales Administrator 销售主管<br>Telemarketer 电话销售员<br>Regional Sales Manager 地区销售经理<br>Tele-Interviewer 电话调查员<br>Regional Account Manager 地区客户经理<br>Salesperson 销售员<br>Sales Representative 销售代表<br>Merchandising Manager 采购经理<br>Sales Manager 销售经理<br>Marketing Consultant 市场顾问<br>Sales Executive 销售执行者<br>Marketing Assistant 市场助理<br>Sales Assistant 销售助理<br>Marketing and Sales Director 市场与销售总监<br>Retail Buyer 零售采购员<br>Market Research Analyst 市场调查分析员<br>Manufacturer’s Representative 厂家代表<br>Purchasing Agent 采购代理<br>Assistant Account Executive 客户管理助理<br>Marketing Manager 市场经理<br>Advertising Manager 广告经理<br>Marketing Intern 市场实习<br>Advertising Coordinator 广告协调员<br>Marketing Director 市场总监<br>Advertising Assistant 广告助理<br>Account Manager 客户经理<br>Account Representative 客户代表<br>Accounting Payable Clerk 应付帐款文员<br>Accounting Assistant 会计助理<br>Accounting Manager 会计经理<br>Accounts Receivable Clerk 应收帐款文员<br>Accounting Clerk 会计文员<br>Certified Public Accountant 注册会计师<br>Senior Accountant 高级会计<br>Chief Financial Officer 首席财务官<br>Audit Manager 审计经理<br>Collections Officer 收款负责人<br>Actuarial Analyst 保险分析员<br>Auditor 审计师<br>Junior Accountant 初级会计<br>Loan Administrator 贷款管理员<br>Management Accountant 管理会计<br>Billing Clerk 票据文员<br>Billing Supervisor 票据管理员<br>Bookkeeper 档案管理<br>Staff Auditor 审计员<br>Bookkeeping Clerk 档案管理助理<br>Budget Analyst 预算分析<br>Tax Accountant 税务会计<br>Credit Analyst 信用分析<br>Credit Manager 信用管理经理<br>Vice-President of Administration and Finance 财务行政副总裁<br>Financial Analyst 财务分析<br>Vice-President of Finance 财务副总裁<br>Financial Consultant 财务顾问<br>Financial Manager 财务经理<br>Financial Planner 财务计划员<br>VP HR 人力资源副总裁<br>Assistant VP HR 人力资源副总裁助理<br>HR Director 人力资源总监<br>Compensation &amp; Benefit Manager 薪酬福利经理<br>Staffing Manager 招聘经理<br>Training Manager 培训经理<br>Benefits Coordinator 员工福利协调员<br>Employer Relations Representative 员工关系代表<br>Payroller 工资专员<br>Training Coordinator 培训协调员<br>Training Specialist 培训专员<br>HR Supervisor (Training) 培训主管<br>Vice-President of Administration 行政副总裁<br>Administrative Director 行政总监<br>Office Manager 办公室经理<br>File Clerk 档案管理员<br>Administration Assistant 行政助理<br>Receptionist 接待员<br>General Office Clerk 办公室文员<br>Secretary 秘书<br>Order Entry Clerk 订单输入文员<br>Operator 接线员<br>Typist 打字员<br>visiting professor 客座教授</p>
<hr>
<p>计算机/互联网/通讯 Technology/Internet<br>首席技术执行官 CTO/VP Engineering<br>技术总监/经理 Technical Director/Manager<br>信息技术经理 IT Manager<br>信息技术主管 IT Supervisor<br>信息技术专员 IT Specialist<br>项目经理/主管 Project Manager/Supervisor<br>项目执行/协调人员 Project Specialist / Coordinator<br>系统分析员 System Analyst<br>高级软件工程师 Senior Software Engineer<br>软件工程师 Software Engineer<br>系统工程师 System Engineer<br>高级硬件工程师 Senior Hardware Engineer<br>硬件工程师 Hardware Engineer<br>通信技术工程师 Communications Engineer<br>ERP技术/应用顾问 ERP Technical/Application Consultant<br>数据库工程师 Database Engineer<br>技术支持经理 Technical Support Manager<br>技术支持工程师 Technical Support Engineer<br>品质经理 QA Manager<br>信息安全工程师 Information Security Engineer<br>软件测试工程师 Software QA Engineer<br>硬件测试工程师 Hardware QA Engineer<br>测试员 Test Engineer<br>网站营运经理/主管 Web Operations Manager/Supervisor<br>网络工程师 Network Engineer<br>系统管理员/网管 System Manager/Webmaster<br>网页设计/制作 Web Designer/Production<br>技术文员/助理 Technical Clerk/Assistant</p>
<p>销售 Sales<br>销售总监 Sales Director<br>销售经理 Sales Manager<br>区域销售经理 Regional Sales Manager<br>客户经理 Sales Account Manager<br>渠道/分销经理 Channel/Distribution Manager<br>渠道主管 Channel Supervisor<br>销售主管 Sales Supervisor<br>销售代表 Sales Representative / Executive<br>销售工程师 Sales Engineer<br>医药代表 Pharmaceutical Sales Representative<br>保险代理 Insurance Agent<br>销售助理 Sales Assistant / Trainee<br>商务经理 Business Manager<br>商务专员/助理 Business Executive/Assistant<br>销售行政经理 Sales Admin. Manager<br>销售行政主管 Sales Admin. Supervisor<br>售前/售后技术服务经理 Technical Service Manager<br>售前/售后技术服务主管 Technical Service Supervisor<br>售前/售后技术服务工程师 Technical Service Engineer<br>售后/客户服务（非技术）经理 Customer Service Manager<br>售后/客户服务（非技术）主管 Customer Service Supervisor<br>售后/客户服务（非技术）专员 Customer Service Executive<br>经销商 Distributor</p>
<p>市场/公关/广告 Marketing/PR/Advertising<br>市场/广告总监 Marketing/Advertising Director/VP<br>市场/营销经理 Marketing Manager<br>市场/营销主管 Marketing Supervisor<br>市场/营销专员 Marketing Executive/Communication<br>市场助理 Marketing Assistant / Trainee<br>产品/品牌经理 Product/Brand Manager<br>产品/品牌主管 Product/Brand Supervisor<br>市场通路经理 Trade Marketing Manager<br>市场通路主管 Trade Marketing Supervisor<br>促销经理 Promotions Manager<br>促销主管 Promotions Supervisor<br>促销员 Promotions Specialist<br>市场分析/调研人员 Market Analyst/ Research Analyst<br>公关/会务经理 Public Relations Manager<br>公关/会务主管 Public Relations Supervisor<br>公关/会务专员 Public Relations Executive<br>媒介经理 Media Manager<br>媒介人员 Media Specialist<br>企业/业务发展经理 Business Development Manager<br>企业策划人员 Corporate Planning<br>广告策划/设计/文案 Advertising Creative/Design/Copy writer</p>
<p>财务/审计/统计/金融 Finance/Accounting/Banking<br>财务总监 CFO/Finance Director/VP<br>财务经理 Finance Manager<br>财务主管/总帐主管 Finance Supervisor<br>会计经理/会计主管 Accounting Manager/Supervisor<br>会计 Accountant / Accounting Trainee<br>出纳员 Cashier<br>财务/会计助理 Finance/Accounting Assistant<br>财务分析经理/主管 Financial Analysis Manager/Supervisor<br>财务分析员 Financial Analyst<br>成本经理/成本主管 Cost Accounting Manager/Supervisor<br>成本管理员 Cost Accounting Specialist<br>审计经理/主管 Audit Manager/Supervisor<br>审计专员/助理 Audit Executive/Assistant<br>税务经理/税务主管 Tax Manager/Supervisor<br>税务专员 Tax Executive<br>证券经纪人 Stock Broker<br>投资顾问 Investment Advisor<br>注册分析师 Certified Investment/Financial Analyst<br>投资/基金项目经理 Investment Manager<br>融资经理/融资主管 Treasury Manager/Supervisor<br>融资专员 Treasury Specialist<br>行长/副行长 President/Vice-President/Branch Manager<br>风险控制 Risk Management<br>进出口/信用证结算 Trading / LC Officer<br>清算人员 Settlement Officer<br>外汇主管 Foreign Exchange Supervisor<br>高级客户经理/客户经理 Senior Relationship Manager<br>客户主管/专员 Relationship?Supervisor/Executive<br>信贷/信用调查/分析人员 Loan/Credit Officer<br>银行柜台出纳 Bank Teller<br>统计员 Statistician</p>
<p>生产/营运/工程 Manufacturing/Operations/Engineering<br>工厂经理/厂长 Plant/Factory Manager<br>总工程师/副总工程师 Chief Engineer<br>项目经理/主管 Project Manager/Supervisor<br>项目工程师 Project Engineer<br>营运经理 Operations Manager<br>营运主管 Operations Supervisor<br>生产经理/车间主任 Production Manager/Workshop Supervisor<br>生产计划协调员 Production Planning Executive/Officer<br>生产主管/督导/领班 Production Supervisor/Team Leader<br>技术/工艺设计经理/主管 Technical/Industrial Design Mgr./Spvr.<br>技术/工艺设计工程师 Technical/Industrial Design Engineer<br>实验室负责人/工程师 Lab Manager/Engineer<br>工程/设备经理 Engineering/Facility Manager<br>工程/设备主管 Engineering/Facility Supervisor<br>工程/设备工程师 Engineering/Facility Engineer<br>电气/电子工程师 Electrical/Electronics Engineer<br>机械工程师 Mechanical Engineer<br>机电工程师 Electrical &amp; Mechanical Engineer<br>维修工程师 Maintenance Engineer<br>质量经理 QA Manager<br>质量主管 QA Supervisor<br>质量工程师 QA Engineer<br>质量检验员/测试员 QA Inspector<br>认证工程师 Certification Engineer<br>安全/健康/环境经理/主管 Safety/Health/Environment Manager/Supervisor<br>安全/健康/环境工程师 Safety/Health/Environment Engineer<br>工程绘图员 Project Drafting Specialist<br>机械制图员 Drafting Specialist<br>化验员 Laboratory Technician<br>技工 Technician / Engineer Trainee<br>电工 Electrician<br>服装打样/制版 Clothing/Apparel Sample Production</p>
<p>行政/人事/后勤 Admin./HR/Support Services<br>行政/人事总监 Admin/Human Resources Director<br>人事经理 Human Resources Manager<br>人事主管 Human Resources Supervisor<br>人事专员 Human Resources Specialist<br>人事助理 Human Resources Assistant<br>招聘经理/主管 Recruiting Manager/Supervisor<br>薪资福利经理/主管 Compensation &amp; Benefits Mgr./Supervisor<br>薪资福利专员/助理 Compensation &amp; Benefits Specialist/Assistant<br>培训经理/主管 Training Manager/Supervisor<br>培训专员/助理 Training Specialist/Assistant<br>行政经理/主管/办公室主任 Admin Manager/Supervisor/Office Manager<br>行政专员/助理 Admin Staff/Assistant<br>经理助理/秘书 Executive Assistant/Secretary<br>前台接待/总机 Receptionist<br>后勤 Office Support<br>资料管理员 Information / Data Management Specialist<br>电脑操作员/打字员 Computer Operator/Typist</p>
<p>高级管理 Senior Management<br>首席执行官/总经理 CEO/GM/President<br>副总经理 Deputy GM/VP/Management Trainee<br>总监 Director<br>合伙人 Partner<br>总裁/总经理助理 CEO/GM/President Assistant</p>
<p>物流/贸易/采购 Logis./Trading/Merchand./Purch.<br>物流经理 Logistics Manager<br>物流主管 Logistics Supervisor<br>物流专员/助理 Logistics Specialist/Assistant<br>物料经理 Materials Manager<br>物料主管 Materials Supervisor<br>采购经理 Purchasing Manager<br>采购主管 Purchasing Supervisor<br>采购员 Purchasing Specialist/Staff<br>外贸/贸易经理/主管 Trading Manager/Supervisor<br>外贸/贸易专员/助理 Trading Specialist/Assistant<br>业务跟单经理 Merchandiser Manager<br>高级业务跟单 Senior Merchandiser<br>业务跟单 Merchandiser<br>助理业务跟单 Assistant Merchandiser<br>仓库经理/主管 Warehouse Manager<br>仓库管理员 Warehouse Specialist<br>运输经理/主管 Distribution Manager/Supervisor<br>报关员 Customs Specialist<br>单证员 documentation Specialist<br>船务人员 Shipping Specialist<br>快递员 Courier<br>理货员 Warehouse Stock Management</p>
<p>文字/艺术/设计 Writer/Editor/Creative Artist/Designer<br>编辑/作家/撰稿人 Editor/Writer<br>记者 Journalist / Reporter<br>校对/录入 Proofreader/Data Entry Staff<br>排版设计 Layout Designer<br>艺术/设计总监 Creative/Design Director<br>影视策划/制作人员 Entertainment Planning / Production<br>导演 Director<br>摄影师 Photographer<br>音效师 Recording / Sounds Specialist<br>演员/模特/主持人 Actor/Actress/Model/MC<br>平面设计/美术设计 Graphic Artist/Designer<br>纺织/服装设计 Clothing / Apparel Designer<br>工业/产品设计 Industrial Designer<br>工艺品/珠宝设计 Artwork/Jewelry Designer</p>
<p>科研人员 Research Specialist Staff<br>科研管理人员 Research Management<br>科研人员 Research Specialist Staff</p>
<p>律师/法务 Legal<br>律师 Lawyer<br>法务人员 Legal Personnel<br>律师助理 Paralegal/Legal Assistant<br>书记员 Court Clerk</p>
<p>教师 Professor/Teacher<br>教师 ProfessorTeacher<br>教学/教务管理人员 Education/School Administrator<br>助教 Teaching Assistant<br>讲师 Lecturer<br>家教 Tutor</p>
<p>医疗/护理 Medicine / Nursing<br>医生（中、西医） Medical Doctor<br>医学管理人员 Healthcare / Medical Management<br>医药技术人员 Medical Technician<br>药库主任/药剂师 Pharmacist<br>护士/护理人员 Nurse / Nursing Personnel<br>临床协调员 Clinical Coodinator<br>临床研究员 Clinical Researcher<br>麻醉师 Anesthesiologist<br>心理医生 Psychologist/Psychiatrist<br>医药学检验 Clinical Laboratory</p>
<p>咨询/顾问 Consultant<br>专业顾问 Senior Consultant<br>咨询总监 Consulting Director / Partner<br>咨询经理 Consulting Manager<br>咨询员 Consultant</p>
<p>公务员 Official</p>
<p>在校学生 Student<br>应届毕业生 Graduating Student<br>实习生 Intern/Trainee</p>
<p>培训生 Trainee/Intern<br>培训生 Trainee</p>
<p>服务 Service<br>美容/健身顾问 Exercise Coach/Fitness Trainer<br>餐饮/娱乐经理 Banquet Services Manager<br>宾馆/酒店经理 Reception Manager<br>领班 Supervisor<br>服务员 Service Staff<br>营业员/收银员/理货员 Shop Clerk/Salesperson<br>厨师 Chief/Cook<br>导游 Tour Guide<br>司机 Chauffeur/Driver<br>保安 Security<br>寻呼员/话务员 Paging Operator</p>
<p>建筑/房地产 Construction/Real Estate<br>建筑工程师 Architect<br>结构/土建工程师 Structural Engineer<br>电气工程师 Electrical Engineer<br>给排水/暖通工程师 Drainage/HVAC Engineer<br>工程造价师/预结算 Budgeting Specialist<br>建筑工程管理 Construction Management<br>工程监理 Engineering Project Supervisor<br>室内外装潢设计 Decorator<br>城市规划与设计 Urban Design/Planning<br>建筑制图 CAD Drafter<br>施工员 Construction Crew<br>房地产开发/策划 Real Estate Development/Planning<br>房地产评估 Real Estate Appraisal<br>房地产中介/交易 Real Estate Agent/Broker<br>物业管理 Property Management</p>
<p>翻译 Translator<br>英语翻译 English Translation<br>日语翻译 Japanese Translator<br>德语翻译 German Translator<br>法语翻译 French Translator<br>俄语翻译 Russian Translator<br>西班牙语翻译 Spanish Translator<br>朝鲜语翻译 Korean Translator<br>其他语种翻译 Other Language Translator<br>兼职 Part Time</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
  </entry>
  <entry>
    <title>考研5500</title>
    <url>/2020/05/%E8%80%83%E7%A0%945500/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      <categories>
        <category>英语</category>
      </categories>
  </entry>
  <entry>
    <title>项目管理</title>
    <url>/2020/05/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h2><h3 id="架构评审"><a href="#架构评审" class="headerlink" title="架构评审"></a>架构评审</h3><h3 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h3><h3 id="代码重构"><a href="#代码重构" class="headerlink" title="代码重构"></a>代码重构</h3><h3 id="看板管理"><a href="#看板管理" class="headerlink" title="看板管理"></a>看板管理</h3><h3 id="开发模型"><a href="#开发模型" class="headerlink" title="开发模型"></a>开发模型</h3><h4 id="SCRUM"><a href="#SCRUM" class="headerlink" title="SCRUM"></a>SCRUM</h4><h4 id="极限编程"><a href="#极限编程" class="headerlink" title="极限编程"></a>极限编程</h4><h4 id="PDCA-循环质量管理"><a href="#PDCA-循环质量管理" class="headerlink" title="PDCA 循环质量管理"></a>PDCA 循环质量管理</h4><h2 id="政策、法规"><a href="#政策、法规" class="headerlink" title="政策、法规"></a>政策、法规</h2><h2 id="团队管理"><a href="#团队管理" class="headerlink" title="团队管理"></a>团队管理</h2>]]></content>
      <categories>
        <category>计算机</category>
      </categories>
  </entry>
  <entry>
    <title>设计思想</title>
    <url>/2020/05/%E8%AE%BE%E8%AE%A1%E6%80%9D%E6%83%B3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>分布式原理</title>
    <url>/2020/05/%E5%88%86%E5%B8%83%E5%BC%8F%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="分布式"><a href="#分布式" class="headerlink" title="分布式"></a>分布式</h2><h3 id="CAP-原则"><a href="#CAP-原则" class="headerlink" title="CAP 原则"></a>CAP 原则</h3><h3 id="扩展性设计"><a href="#扩展性设计" class="headerlink" title="扩展性设计"></a>扩展性设计</h3><h3 id="稳定性和高可用"><a href="#稳定性和高可用" class="headerlink" title="稳定性和高可用"></a>稳定性和高可用</h3><h3 id="分布式锁"><a href="#分布式锁" class="headerlink" title="分布式锁"></a>分布式锁</h3><h2 id="分布式算法"><a href="#分布式算法" class="headerlink" title="分布式算法"></a>分布式算法</h2><h2 id="唯一-ID-生成"><a href="#唯一-ID-生成" class="headerlink" title="唯一 ID 生成"></a>唯一 ID 生成</h2>]]></content>
  </entry>
  <entry>
    <title>网络攻击</title>
    <url>/2020/05/%E7%BD%91%E7%BB%9C%E6%94%BB%E5%87%BB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>安全</title>
    <url>/2020/05/%E5%AE%89%E5%85%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h2><h3 id="web-安全"><a href="#web-安全" class="headerlink" title="web 安全"></a>web 安全</h3><h3 id="DDos-防范"><a href="#DDos-防范" class="headerlink" title="DDos 防范"></a>DDos 防范</h3><h3 id="加解密"><a href="#加解密" class="headerlink" title="加解密"></a>加解密</h3><h3 id="服务器安全"><a href="#服务器安全" class="headerlink" title="服务器安全"></a>服务器安全</h3><h3 id="数据安全"><a href="#数据安全" class="headerlink" title="数据安全"></a>数据安全</h3><h3 id="授权和认证"><a href="#授权和认证" class="headerlink" title="授权和认证"></a>授权和认证</h3>]]></content>
      <categories>
        <category>计算机</category>
      </categories>
  </entry>
  <entry>
    <title>大数据</title>
    <url>/2020/05/%E5%A4%A7%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>性能优化</title>
    <url>/2020/05/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>搜索引擎</title>
    <url>/2020/05/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>网络原理</title>
    <url>/2020/05/%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><h3 id="网络模型"><a href="#网络模型" class="headerlink" title="网络模型"></a>网络模型</h3><h3 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h3><h3 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h3><h3 id="IP-地址转换"><a href="#IP-地址转换" class="headerlink" title="IP 地址转换"></a>IP 地址转换</h3><h3 id="路由交换"><a href="#路由交换" class="headerlink" title="路由交换"></a>路由交换</h3><h4 id="路由协议"><a href="#路由协议" class="headerlink" title="路由协议"></a>路由协议</h4><h4 id="交换协议"><a href="#交换协议" class="headerlink" title="交换协议"></a>交换协议</h4>]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>数据库原理</title>
    <url>/2020/05/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>中间件</title>
    <url>/2020/05/%E4%B8%AD%E9%97%B4%E4%BB%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h2><h3 id="web-server"><a href="#web-server" class="headerlink" title="web server"></a>web server</h3><h3 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h3><h3 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h3><h3 id="定时调度"><a href="#定时调度" class="headerlink" title="定时调度"></a>定时调度</h3><h3 id="RPC"><a href="#RPC" class="headerlink" title="RPC"></a>RPC</h3><h3 id="API-网关"><a href="#API-网关" class="headerlink" title="API 网关"></a>API 网关</h3>]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>设计模式</title>
    <url>/2020/05/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id><a href="#" class="headerlink" title="#"></a>#</h1><h3 id="设计模式的六大原则"><a href="#设计模式的六大原则" class="headerlink" title="设计模式的六大原则"></a>设计模式的六大原则</h3><h3 id="常见的设计模式"><a href="#常见的设计模式" class="headerlink" title="常见的设计模式"></a>常见的设计模式</h3><h3 id="MVC"><a href="#MVC" class="headerlink" title="MVC"></a>MVC</h3><h3 id="IOC"><a href="#IOC" class="headerlink" title="IOC"></a>IOC</h3><h3 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h3><h3 id="UML"><a href="#UML" class="headerlink" title="UML"></a>UML</h3><h3 id="SOA"><a href="#SOA" class="headerlink" title="SOA"></a>SOA</h3><h3 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h3>]]></content>
      <categories>
        <category>计算机</category>
      </categories>
  </entry>
  <entry>
    <title>操作系统原理</title>
    <url>/2020/05/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><a href="/2020/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/" title="计算机组成原理">计算机组成原理</a>
<h2 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h2><h3 id="BootLoader"><a href="#BootLoader" class="headerlink" title="BootLoader"></a>BootLoader</h3><h3 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h3><h3 id="内存管理"><a href="#内存管理" class="headerlink" title="内存管理"></a>内存管理</h3><h3 id="文件系统管理"><a href="#文件系统管理" class="headerlink" title="文件系统管理"></a>文件系统管理</h3><h3 id="设备管理"><a href="#设备管理" class="headerlink" title="设备管理"></a>设备管理</h3><h3 id="系统驱动管理"><a href="#系统驱动管理" class="headerlink" title="系统驱动管理"></a>系统驱动管理</h3><h3 id="系统调用"><a href="#系统调用" class="headerlink" title="系统调用"></a>系统调用</h3><h3 id="交互"><a href="#交互" class="headerlink" title="交互"></a>交互</h3>]]></content>
      <categories>
        <category>计算机</category>
      </categories>
  </entry>
  <entry>
    <title>并发处理</title>
    <url>/2020/05/%E5%B9%B6%E5%8F%91%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h2><blockquote>
<p>并行和并发的区别</p>
</blockquote>
<ul>
<li>多线程<ul>
<li>线程安全</li>
</ul>
</li>
<li>一致性、事务<ul>
<li>事务 ACID 特性</li>
<li>事务的隔离级别</li>
<li>MVCC</li>
</ul>
</li>
<li>锁<ul>
<li>悲观锁</li>
<li>乐观锁</li>
<li>公平锁 和 非公平锁</li>
<li>互斥锁</li>
<li>共享锁</li>
<li>死锁</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>计算机</category>
      </categories>
  </entry>
  <entry>
    <title>KVM安装</title>
    <url>/2020/05/KVM%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="KVM-安装配置"><a href="#KVM-安装配置" class="headerlink" title="KVM 安装配置"></a>KVM 安装配置</h2><h3 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h3><ul>
<li>操作系统：centos7.x</li>
<li>内核版本：3.10.0-327.el7.x86_64</li>
<li>IP地址：192.168.1.1</li>
</ul>
<h3 id="检查CPU"><a href="#检查CPU" class="headerlink" title="检查CPU"></a>检查CPU</h3><ul>
<li>和Xen不同，KVM需要有CPU的支持（IntelVT)或(AMDSVM)</li>
<li>在安装KVM之前检查一下CPU是否提供了虚拟技术的支持<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">egrep<span class="string">'vmx|svm'</span> / proc / cpuinfo</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="安装KVM"><a href="#安装KVM" class="headerlink" title="安装KVM"></a>安装KVM</h3><h4 id="安装虚拟化的组件"><a href="#安装虚拟化的组件" class="headerlink" title="安装虚拟化的组件"></a>安装虚拟化的组件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install kvm pytho-virtinst libvirt bridge-utils virt-manager \</span><br><span class="line">qemu-kvm-tools virt-viewer virt-v2v libguestfs-tools-c \</span><br><span class="line">libguestfs-tools virt-install.noarch \</span><br></pre></td></tr></table></figure>
<h4 id="远程管理配置"><a href="#远程管理配置" class="headerlink" title="远程管理配置"></a>远程管理配置</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim / etc / sysconfig / libvirtd</span><br><span class="line">LIBVIRTD_CONFIG=/etc/libvirt/libvirtd.conf</span><br><span class="line">LIBVIRTD_ARGS=<span class="string">"--listen"</span></span><br><span class="line"></span><br><span class="line">sed  -i <span class="string">'/LIBVIRTD_CONFIG/s#=.*#=/etc/libvirt/libvirtd.conf#g'</span> /etc/sysconfig/libvirtd</span><br><span class="line">sed  -i <span class="string">'/LIBVIRTD_ARGS/s#=.*#=="--listen"#g'</span> /etc/sysconfig/libvirtd</span><br><span class="line"></span><br><span class="line"><span class="comment"># libvirtd tcp连接的设置</span></span><br><span class="line">vim /etc/libvirt/libvirtd.conf</span><br><span class="line"><span class="comment"># 这里主要是tcp连接的设置末尾添加如下：</span></span><br><span class="line">listen_tls = 0</span><br><span class="line">listen_tcp = 1</span><br><span class="line">tcp_port = <span class="string">"16509"</span>  <span class="comment"># tcp端口</span></span><br><span class="line">listen_addr = <span class="string">"192.168.0.103"</span>  <span class="comment"># 监听IP</span></span><br><span class="line">unix_sock_ro_perms = <span class="string">"0777"</span></span><br><span class="line">unix_sock_rw_perms = <span class="string">"0770"</span></span><br><span class="line">auth_tcp = <span class="string">"none"</span></span><br><span class="line">max_clients = 1024  <span class="comment"># 最大连接书</span></span><br><span class="line">min_workers = 100</span><br><span class="line">max_workers = 200</span><br><span class="line">max_requests = 20</span><br><span class="line">max_client_requests = 50</span><br></pre></td></tr></table></figure>
<h4 id="virsh控制台"><a href="#virsh控制台" class="headerlink" title="virsh控制台"></a>virsh控制台</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">virsh -c qemu+tcp://192.168.1.1/system</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1006错误</span></span><br><span class="line">yum -y install novnc</span><br></pre></td></tr></table></figure>
<h4 id="对vnc的设置"><a href="#对vnc的设置" class="headerlink" title="对vnc的设置"></a>对vnc的设置</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 这里主要是对vnc的设置，一会儿通过vnc - viewer连接来进行安装，末尾添加</span></span><br><span class="line">vim /etc/libvirt/qemu.conf</span><br><span class="line">vnc_listen = <span class="string">"0.0.0.0"</span></span><br><span class="line">vnc_password = <span class="string">"m23456"</span>  <span class="comment"># vnc连接密码</span></span><br><span class="line">remote_display_port_min = 5900  <span class="comment"># vnc最小端口</span></span><br><span class="line">remote_display_port_max = 65500  <span class="comment"># vnc最大端口</span></span><br></pre></td></tr></table></figure>
<h4 id="确认一下是否kvm安装成功"><a href="#确认一下是否kvm安装成功" class="headerlink" title="确认一下是否kvm安装成功"></a>确认一下是否kvm安装成功</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/init.d/libvirtd restart</span><br><span class="line">or</span><br><span class="line">systemctl restart libvirtd.service</span><br></pre></td></tr></table></figure>
<h4 id="查看是否启动"><a href="#查看是否启动" class="headerlink" title="查看是否启动"></a>查看是否启动</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ps - ef | grep libvirtd</span><br><span class="line">systemctl status libvirtd.service</span><br></pre></td></tr></table></figure>
<h4 id="查看kvm模块是否正常加载"><a href="#查看kvm模块是否正常加载" class="headerlink" title="查看kvm模块是否正常加载"></a>查看kvm模块是否正常加载</h4><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">lsmod <span class="string">|grep kvm</span></span><br></pre></td></tr></table></figure>
<h5 id="配置网桥连接"><a href="#配置网桥连接" class="headerlink" title="配置网桥连接"></a>配置网桥连接</h5><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置网桥br0</span></span><br><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-br0</span><br><span class="line">DEVICE = br0</span><br><span class="line">TYPE = Bridge</span><br><span class="line">ONBOOT = <span class="literal">yes</span></span><br><span class="line">NM_CONTROLLED = <span class="literal">yes</span></span><br><span class="line">BOOTPROTO = static</span><br><span class="line">IPADDR = 192.168.1.1</span><br><span class="line">NETMASK = 255.255.255.0</span><br><span class="line">GATEWAY = 192.168.1.254</span><br><span class="line">DNS1 = 202.106.0.20</span><br><span class="line"></span><br><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-em1</span><br><span class="line">DEVICE = em1</span><br><span class="line">TYPE = Ethernet</span><br><span class="line">ONBOOT = <span class="literal">yes</span></span><br><span class="line">BRIDGE = br0</span><br><span class="line">NM_CONTROLLED = <span class="literal">yes</span></span><br></pre></td></tr></table></figure>
<h5 id="重启网络"><a href="#重启网络" class="headerlink" title="重启网络"></a>重启网络</h5><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">/etc/init.d<span class="built_in">/network </span>restart</span><br></pre></td></tr></table></figure>
<h5 id="查看网络连接"><a href="#查看网络连接" class="headerlink" title="查看网络连接"></a>查看网络连接</h5><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">brctl show</span><br><span class="line"><span class="comment"># 如果配置成功，会有以下输出：</span></span><br><span class="line">bridge name    <span class="built_in"> bridge </span>id               STP enabled     interfaces</span><br><span class="line">br0             8000.1866daecc2c4       <span class="literal">no</span>              em1</span><br><span class="line">                                                        vnet0</span><br><span class="line">                                                        vnet1</span><br><span class="line">                                                        vnet10</span><br><span class="line">                                                        vnet2</span><br><span class="line">                                                        vnet3</span><br><span class="line">                                                        vnet4</span><br><span class="line">                                                        vnet5</span><br><span class="line">virbr0          8000.5254003912f1       <span class="literal">yes</span>             virbr0-nic</span><br></pre></td></tr></table></figure>
<h5 id="检查ip转发是否开启"><a href="#检查ip转发是否开启" class="headerlink" title="检查ip转发是否开启"></a>检查ip转发是否开启</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat / etc / sysctl.conf | grep</span><br><span class="line">ip_forward</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">如果没有开启：</span><br><span class="line">vim / etc / sysctl.conf</span><br><span class="line">修改net.ipv4.ip_forward = 1</span><br><span class="line">/ sbin / sysctl - p</span><br></pre></td></tr></table></figure>
<h3 id="安装虚拟机"><a href="#安装虚拟机" class="headerlink" title="安装虚拟机"></a>安装虚拟机</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir /data/images - p</span><br><span class="line">mkdir /data/software/ -p</span><br><span class="line"></span><br><span class="line">virt-install --name=<span class="built_in">test</span> --ram 4096 --vcpus = 2 \</span><br><span class="line">--disk path = / data / images / test.img, size = 10, format = raw, bus = virtio \</span><br><span class="line">--cdrom / home / software / CentOS - 7 - x86_64 - DVD - 1810.iso - -network bridge = br0, model = virtio \</span><br><span class="line">--vnc --accelerate --force --autostart</span><br><span class="line"></span><br><span class="line">yum - y install acpid</span><br><span class="line"></span><br><span class="line">virsh dumpxml mechine1</span><br><span class="line">virsh create mechine1.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里解释一下主要的几个参数含义：</span></span><br><span class="line">--name      给虚拟机起个名字</span><br><span class="line">--ram       分配给虚拟机的内存，单位MB</span><br><span class="line">--vcpus     分配给虚拟机的cpu个数</span><br><span class="line">--cdrom     指定安装文件的全路径</span><br><span class="line">--disk      指定虚拟机img文件路径，如果虚拟机使用lvm分区，这里就指向到lvm的分区就行</span><br><span class="line">size        虚拟机文件大小，单位GB</span><br><span class="line">bus         虚拟机磁盘使用的总线类型，为了使虚拟机达到好的性能，这里使用virtio</span><br><span class="line">cache       虚拟机磁盘的cache类型</span><br><span class="line">--network</span><br><span class="line">bridge      指定桥接网卡</span><br><span class="line">model       网卡模式，这里也是使用性能更好的virtio</span><br><span class="line">--graphics  图形参数</span><br></pre></td></tr></table></figure>
<h3 id="vnc-连接虚拟机"><a href="#vnc-连接虚拟机" class="headerlink" title="vnc 连接虚拟机"></a>vnc 连接虚拟机</h3><p>通过在windows下使用vnc - viewer来连接172.16.57.24: 5902，并输入设置的密码，即可进行安装。</p>
<h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 克隆虚拟机</span></span><br><span class="line">一般制作一个常用的虚拟机模板，下次安装可以直接来克隆这个模板。</span><br><span class="line">virt-clone --connect</span><br><span class="line"><span class="symbol">qemu:</span>/<span class="regexp">//system</span> --original=tomcat_01 --name=tomcat_02 --file=<span class="regexp">//var</span><span class="regexp">/lib/libvirt</span><span class="regexp">/images/tomcat</span>_02.img</span><br><span class="line">--original  克隆的虚拟机对象</span><br><span class="line">--name      克隆的新虚拟机名称</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加磁盘</span></span><br><span class="line"><span class="comment"># 一般虚拟机的磁盘结构为系统盘加数据盘，当系统发生故障时，可以重新建一个系统盘，而数据盘不会丢失。 添加磁盘操作:</span></span><br><span class="line">cd /var/<span class="class"><span class="keyword">lib</span>/<span class="title">libvirt</span>/<span class="title">images</span>/</span></span><br><span class="line"><span class="comment"># 创建一块100G的磁盘</span></span><br><span class="line">qemu-img create -f raw test_add.img <span class="number">100</span>G</span><br><span class="line"><span class="comment"># 添加到虚拟机</span></span><br><span class="line">virsh attach -disk tomcat_01 /var/<span class="class"><span class="keyword">lib</span>/<span class="title">libvirt</span>/<span class="title">images</span>/<span class="title">test_add</span>.<span class="title">img</span> <span class="title">vdb</span> --<span class="title">cache</span> <span class="title">none</span></span></span><br><span class="line"><span class="comment"># 动态添加磁盘</span></span><br><span class="line"><span class="comment"># 备份xml文件</span></span><br><span class="line">virsh dumpxml tomcat_01&gt;tomcat_01.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将最新的虚拟机配置重定向到其配置文件中</span></span><br><span class="line">virsh define tomcat_01.xml</span><br><span class="line"><span class="comment"># 这样，新增的磁盘就不会丢了。 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># virsh命令的一些操作</span></span><br><span class="line">Autostart   自动开始一个域</span><br><span class="line">Create      从一个 XML 文件创建一个域</span><br><span class="line">Define      从一个 XML 文件定义（但不开始）一个域</span><br><span class="line">edit        编辑某个域的 XML 配置</span><br><span class="line">shutdown    关闭一个域 </span><br><span class="line">start       开始一个（以前定义的）非活跃的域</span><br><span class="line">reboot      重新启动一个域</span><br><span class="line">suspend     挂起一个域</span><br><span class="line">resume      重新恢复一个域</span><br><span class="line">vncdisplay  vnc 显示</span><br></pre></td></tr></table></figure>
<h3 id="查看镜像信息"><a href="#查看镜像信息" class="headerlink" title="查看镜像信息"></a>查看镜像信息</h3><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">qemu</span>-img <span class="meta">info</span> /<span class="meta">opt</span>/CentOS6.<span class="number">5</span>-x86_64.raw</span><br></pre></td></tr></table></figure>
<h3 id="导入系统镜像"><a href="#导入系统镜像" class="headerlink" title="导入系统镜像"></a>导入系统镜像</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果是光盘就需要拷贝 我这边是使用的centos6.5</span></span><br><span class="line">dd <span class="keyword">if</span>=<span class="string">/dev/cdrom</span> of=<span class="string">/opt/CentOS-6.5-x86_64.ios</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建虚拟机</span></span><br><span class="line">virt-install <span class="params">--name</span> CentOS6.5 \</span><br><span class="line"><span class="params">--virt-type</span> kvm \</span><br><span class="line"><span class="params">--ram</span> 512 \</span><br><span class="line"><span class="params">--cdrom=/opt/CentOS-6</span>.5-x86_64.ios \</span><br><span class="line"><span class="params">--disk</span> path=<span class="string">/opt/CentOS6.5-x86_64.raw</span> \</span><br><span class="line"><span class="params">--network</span> network=default \</span><br><span class="line"><span class="params">--graphics</span> vnc,listen=0.0.0.0 \</span><br><span class="line"><span class="params">--noautoconsole</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看虚拟机列表</span></span><br><span class="line">virsh list <span class="params">--all</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动虚拟机</span></span><br><span class="line">virsh start CentOS6.5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有虚拟机列表</span></span><br><span class="line">virsh list <span class="params">--all</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 虚拟机网络基本设置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装电源服务</span></span><br><span class="line">yum -y install acpid</span><br><span class="line"><span class="string">/etc/init.d/acpid</span> start</span><br><span class="line">chkconfig acpid on</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建网桥</span></span><br><span class="line"><span class="comment"># 把br0添加到eth0</span></span><br><span class="line">brctl addbr br0</span><br><span class="line">brctl addif br0 eth0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动一台虚拟机使用刚才创建的网桥</span></span><br><span class="line">virt-install <span class="params">--name</span> CentOS7.2 <span class="params">--virt-type</span> kvm <span class="params">--ram</span> 1024 <span class="params">--cdrom=/opt/CentOS7</span>.2-x86_64.ios <span class="params">--disk</span> path=<span class="string">/opt/CentOS7.2.raw</span> <span class="params">--network</span> bridge=br0 <span class="params">--graphics</span> vnc,listen=0.0.0.0 <span class="params">--noautoconsole</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>虚拟化</category>
      </categories>
  </entry>
  <entry>
    <title>Docker安装</title>
    <url>/2020/05/Docker%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><a href="/2020/05/Docker/" title="Docker概念及原理">Docker概念及原理</a>
<h2 id="安装-Docker-CE"><a href="#安装-Docker-CE" class="headerlink" title="安装 Docker CE"></a>安装 Docker CE</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">sudo yum -y remove docker \</span><br><span class="line">docker-client \</span><br><span class="line">docker-client-latest \</span><br><span class="line">docker-common \</span><br><span class="line">docker-latest \</span><br><span class="line">docker-latest-logrotate \</span><br><span class="line">docker-logrotate \</span><br><span class="line">docker-engine</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新系统</span></span><br><span class="line">yum -y <span class="keyword">update</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装所需包</span></span><br><span class="line">yum -y <span class="keyword">install</span> yum-utils device-mapper-persistent-<span class="keyword">data</span> lvm2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增 Docker 仓库。</span></span><br><span class="line">yum-config-manager \</span><br><span class="line">  <span class="comment">--add-repo \</span></span><br><span class="line">  https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 Docker CE.</span></span><br><span class="line">yum -y <span class="keyword">install</span> docker-ce</span><br><span class="line"></span><br><span class="line"><span class="comment">### 创建 /etc/docker 目录。</span></span><br><span class="line">mkdir /etc/docker</span><br><span class="line"></span><br><span class="line"><span class="comment">### 设置 daemon。</span></span><br><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"exec-opts"</span>: [<span class="string">"native.cgroupdriver=systemd"</span>],</span><br><span class="line">  <span class="string">"log-driver"</span>: <span class="string">"json-file"</span>,</span><br><span class="line">  <span class="string">"log-opts"</span>: &#123;</span><br><span class="line">    <span class="string">"max-size"</span>: <span class="string">"100m"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"storage-driver"</span>: <span class="string">"overlay2"</span>,</span><br><span class="line">  <span class="string">"storage-opts"</span>: [</span><br><span class="line">    <span class="string">"overlay2.override_kernel_check=true"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://pe80e41t.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># docker 启动服务</span></span><br><span class="line">systemctl <span class="keyword">start</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># mkdir -p /etc/systemd/system/docker.service.d</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># docker compose install</span></span><br><span class="line">sudo curl -L <span class="string">"https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)"</span> -o /usr/<span class="keyword">local</span>/<span class="keyword">bin</span>/docker-compose</span><br><span class="line">sudo chmod +x /usr/<span class="keyword">local</span>/<span class="keyword">bin</span>/docker-compose</span><br><span class="line">sudo <span class="keyword">ln</span> -s /usr/<span class="keyword">local</span>/<span class="keyword">bin</span>/docker-compose /usr/<span class="keyword">bin</span>/docker-compose</span><br><span class="line">docker-compose <span class="comment">--version</span></span><br></pre></td></tr></table></figure>
<h3 id="重启-Docker"><a href="#重启-Docker" class="headerlink" title="重启 Docker"></a>重启 Docker</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>
<h3 id="使用脚本安装"><a href="#使用脚本安装" class="headerlink" title="使用脚本安装"></a>使用脚本安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line">sudo sh get-docker.sh</span><br></pre></td></tr></table></figure>
<h3 id="Docker-镜像加速"><a href="#Docker-镜像加速" class="headerlink" title="Docker 镜像加速"></a>Docker 镜像加速</h3><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">cat <span class="params">&lt;&lt;'EOF' &gt;</span><span class="meta-keyword">/etc/</span>docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://pe80e41t.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">systemctl reload docker</span><br><span class="line"></span><br><span class="line"><span class="meta"># 如果重启报错，查看这个文件是不是已经注册了 registry</span></span><br><span class="line">cat <span class="meta-keyword">/etc/</span>systemd<span class="meta-keyword">/system/</span>docker.service.d/docker-options.conf</span><br><span class="line"></span><br><span class="line">rm -rf <span class="meta-keyword">/etc/</span>docker/daemon.json</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>
<h2 id="简易-docker-安装脚本（Centos版-包含基本主机配置）"><a href="#简易-docker-安装脚本（Centos版-包含基本主机配置）" class="headerlink" title="简易 docker 安装脚本（Centos版,包含基本主机配置）"></a>简易 docker 安装脚本（Centos版,包含基本主机配置）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'GEOF'</span>&gt;docker_install.sh</span><br><span class="line"><span class="function"><span class="title">log</span></span>()&#123;</span><br><span class="line"><span class="comment"># 注释</span></span><br><span class="line"><span class="comment"># log 1 ，使用方法（会将 注释打印出来）</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\e[0;32m ------<span class="variable">$1</span>、`sed -n "</span>/\&lt;<span class="built_in">log</span> <span class="variable">$1</span>\&gt;/&#123;x;p&#125;;h<span class="string">" <span class="variable">$0</span>`\t------- \e[m"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置主机名</span></span><br><span class="line"><span class="built_in">log</span> 1</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"127.0.0.1   localhost</span></span><br><span class="line"><span class="string">::1         localhost</span></span><br><span class="line"><span class="string">192.168.0.72 k8sn-1</span></span><br><span class="line"><span class="string">192.168.0.73 k8sn-2"</span>&gt;/etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改时区</span></span><br><span class="line">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭防火墙</span></span><br><span class="line"><span class="built_in">log</span> 2</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭selinux</span></span><br><span class="line"><span class="built_in">log</span> 3</span><br><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">"s/^SELINUX=enforcing/SELINUX=disabled/g"</span> /etc/selinux/config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭 swap</span></span><br><span class="line"><span class="built_in">log</span> 4</span><br><span class="line">swapoff -a;sed -i <span class="string">'s/.*swap.*/#&amp;/'</span> /etc/fstab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置dns</span></span><br><span class="line"><span class="built_in">log</span> 5</span><br><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;/etc/resolv.conf</span><br><span class="line">nameserver 202.106.0.20</span><br><span class="line">nameserver 8.8.8.8</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置镜像源</span></span><br><span class="line"><span class="built_in">log</span> 6</span><br><span class="line">rm  /etc/yum.repos.d/* -rf</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-$(grep -o <span class="string">"release ."</span> /etc/redhat-release |awk <span class="string">'&#123;print $2&#125;'</span>).repo</span><br><span class="line"><span class="comment">#yum -y install epel-release</span></span><br><span class="line">yum -y install wget</span><br><span class="line">wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo</span><br><span class="line">yum clean all &amp;&amp; yum makecache</span><br><span class="line">yum -y update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 ntp</span></span><br><span class="line"><span class="built_in">log</span> 7</span><br><span class="line">yum install chrony -y</span><br><span class="line">sed -i <span class="string">"/^server/d"</span> /etc/chrony.conf</span><br><span class="line">sed -i <span class="string">"2a server ntp1.cloud.aliyuncs.com iburst"</span> /etc/chrony.conf</span><br><span class="line">sed -i <span class="string">"2a server ntp2.cloud.aliyuncs.com iburst"</span> /etc/chrony.conf</span><br><span class="line">sed -i <span class="string">"/#allow/s/#//"</span> /etc/chrony.conf</span><br><span class="line">systemctl <span class="built_in">enable</span> chronyd.service;systemctl start chronyd.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 docker</span></span><br><span class="line"><span class="built_in">log</span> 8</span><br><span class="line">yum -y install yum-utils device-mapper-persistent-data lvm2</span><br><span class="line">yum -y install docker-ce-18.06.2.ce</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 docker</span></span><br><span class="line"><span class="built_in">log</span> 9</span><br><span class="line">mkdir /etc/docker</span><br><span class="line"></span><br><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"exec-opts"</span>: [<span class="string">"native.cgroupdriver=systemd"</span>],</span><br><span class="line">  <span class="string">"log-driver"</span>: <span class="string">"json-file"</span>,</span><br><span class="line">  <span class="string">"log-opts"</span>: &#123;</span><br><span class="line">    <span class="string">"max-size"</span>: <span class="string">"100m"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"storage-driver"</span>: <span class="string">"overlay2"</span>,</span><br><span class="line">  <span class="string">"storage-opts"</span>: [</span><br><span class="line">    <span class="string">"overlay2.override_kernel_check=true"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://pe80e41t.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 docker</span></span><br><span class="line"><span class="built_in">log</span> 10</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示 docker 版本</span></span><br><span class="line"><span class="built_in">log</span> 11</span><br><span class="line">docker --version</span><br><span class="line">GEOF</span><br></pre></td></tr></table></figure>
<h3 id="使用-daocloud-加速"><a href="#使用-daocloud-加速" class="headerlink" title="使用 daocloud 加速"></a>使用 daocloud 加速</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>kubernetes使用</title>
    <url>/2020/05/kubernetes%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://kubernetes.io/zh/docs/home/" target="_blank" rel="noopener"> Kubernetes 官网 </a></li>
<li><a href="/2020/05/kubernetes%E5%AE%89%E8%A3%85/" title="kubernetes安装">kubernetes安装</a></li>
<li><a href="/2020/05/kubernetes%E4%BD%BF%E7%94%A8/" title="Kubernetes管理">Kubernetes管理</a>
</li>
</ul>
<h2 id="CLI"><a href="#CLI" class="headerlink" title="CLI"></a>CLI</h2><h3 id="查看命令"><a href="#查看命令" class="headerlink" title="查看命令"></a>查看命令</h3><p>kubectl get pods -A -o wide<br>kubectl describe pods -n test<br>kubectl logs $POD_NAME<br>kubectl exec $POD_NAME env<br>kubectl exec -ti $POD_NAME bash<br>kubectl expose deployment/kubernetes-bootcamp —type=”NodePort” —port 8080<br>kubectl describe service/kubernetes-bootcamp<br>kubectl get pods -l run=kubernetes-bootcamp<br>kubectl label pod $POD_NAME app=v1<br>kubectl delete service -l run=kubernetes-bootcamp</p>
<h3 id="创建-pod"><a href="#创建-pod" class="headerlink" title="创建 pod"></a>创建 pod</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建命名空间（项目）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>Serverless使用</title>
    <url>/2020/05/Serverless%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="conceptual"><a href="#conceptual" class="headerlink" title="conceptual"></a>conceptual</h2><ul>
<li>云函数</li>
<li>云数据库</li>
<li>云存储</li>
</ul>
<h2 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h2><ul>
<li>nodejs</li>
<li>vuejs</li>
</ul>
<h2 id="平台"><a href="#平台" class="headerlink" title="平台"></a>平台</h2><p><a href>unicloud</a></p>
<h2 id="开发流程"><a href="#开发流程" class="headerlink" title="开发流程"></a>开发流程</h2><p>创建APP uni-app<br>创建服务空间 </p>
]]></content>
  </entry>
  <entry>
    <title>golang基金抓取</title>
    <url>/2020/05/golang%E5%9F%BA%E9%87%91%E6%8A%93%E5%8F%96/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="Hey, password is required here." /><label>Hey, password is required here.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="09e7242c20ab703fbb4ce57587519c8d6ff856dd40e1ddb2b76588dffa1bfe89"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>投资</tag>
      </tags>
  </entry>
  <entry>
    <title>Nacos安装配置</title>
    <url>/2020/05/Nacos%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://nacos.io/en-us/docs/quick-start.html" target="_blank" rel="noopener">Nacos docs</a></p>
<h2 id="conceptual"><a href="#conceptual" class="headerlink" title="conceptual"></a>conceptual</h2><ul>
<li>配置中心<ul>
<li>发布配置</li>
<li>获取最新配置</li>
<li>更新通知<blockquote>
<p>spring cloud,apollo,nacos</p>
</blockquote>
</li>
</ul>
</li>
<li>服务发现</li>
<li>服务治理</li>
<li>动态配置管理</li>
<li>动态DNS服务</li>
<li>服务和元数据管理</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://nacos.io/zh-cn/docs/quick-start-docker.html" target="_blank" rel="noopener">Nacos docker</a></p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="meta"># 安装</span></span><br><span class="line">git clone https:<span class="comment">//github.com/nacos-group/nacos-docker.git</span></span><br><span class="line">cd nacos-docker/example</span><br><span class="line"></span><br><span class="line"><span class="meta"># docker-compose 配置 docker-compose.yml</span></span><br><span class="line">cat <span class="params">&lt;&lt;'EOF' &gt;</span>docker-compose.yml</span><br><span class="line"><span class="symbol">version:</span> <span class="string">"2"</span></span><br><span class="line"><span class="symbol">services:</span></span><br><span class="line"><span class="symbol">  nacos:</span></span><br><span class="line"><span class="symbol">    image:</span> nacos/nacos-server:latest</span><br><span class="line"><span class="symbol">    container_name:</span> nacos-standalone-mysql</span><br><span class="line"><span class="symbol">    environment:</span></span><br><span class="line">      - PREFER_HOST_MODE=hostname</span><br><span class="line">      - MODE=standalone</span><br><span class="line">      - SPRING_DATASOURCE_PLATFORM=mysql</span><br><span class="line">      - MYSQL_SERVICE_HOST=mysql</span><br><span class="line">      - MYSQL_SERVICE_DB_NAME=nacos_dev</span><br><span class="line">      - MYSQL_SERVICE_PORT=<span class="number">3306</span></span><br><span class="line">      - MYSQL_SERVICE_USER=nacos</span><br><span class="line">      - MYSQL_SERVICE_PASSWORD=nacos<span class="meta">#123</span></span><br><span class="line"><span class="symbol">    volumes:</span></span><br><span class="line">      - <span class="meta-keyword">/data/</span>nacos-volume<span class="meta-keyword">/standalone-logs/</span>:<span class="meta-keyword">/home/</span>nacos/logs</span><br><span class="line">      - ./init.d/custom.properties:<span class="meta-keyword">/home/</span>nacos/init.d/custom.properties</span><br><span class="line"><span class="symbol">    ports:</span></span><br><span class="line">      - <span class="string">"8848:8848"</span></span><br><span class="line">      - <span class="string">"9555:9555"</span></span><br><span class="line"><span class="symbol">    depends_on:</span></span><br><span class="line">      - mysql</span><br><span class="line"><span class="symbol">    restart:</span> on-failure</span><br><span class="line"><span class="symbol">  mysql:</span></span><br><span class="line"><span class="symbol">    container_name:</span> mysql</span><br><span class="line"><span class="symbol">    image:</span> nacos/nacos-mysql:<span class="number">5.7</span></span><br><span class="line"><span class="symbol">    environment:</span></span><br><span class="line">      - MYSQL_ROOT_PASSWORD=root</span><br><span class="line">      - MYSQL_DATABASE=nacos_dev</span><br><span class="line">      - MYSQL_USER=nacos</span><br><span class="line">      - MYSQL_PASSWORD=nacos<span class="meta">#123</span></span><br><span class="line"><span class="symbol">    volumes:</span></span><br><span class="line">      - <span class="meta-keyword">/data/</span>nacos-volume/mysql:<span class="meta-keyword">/var/</span>lib/mysql</span><br><span class="line"><span class="symbol">    ports:</span></span><br><span class="line">      - <span class="string">"3306:3306"</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta"># 启动</span></span><br><span class="line">docker-compose up -d</span><br><span class="line"></span><br><span class="line"><span class="meta"># 启动日志</span></span><br><span class="line">tail <span class="number">-200</span>f <span class="meta-keyword">/data/</span>nacos-volume<span class="meta-keyword">/standalone-logs/</span>start.out</span><br><span class="line"></span><br><span class="line"><span class="meta"># 查看</span></span><br><span class="line">curl http:<span class="comment">//192.168.0.70:8848/nacos</span></span><br><span class="line"><span class="meta"># user nacos，pwd nacos</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>分布式计算</category>
      </categories>
      <tags>
        <tag>nacos</tag>
        <tag>配置中心</tag>
        <tag>服务发现</tag>
      </tags>
  </entry>
  <entry>
    <title>LVM逻辑卷管理</title>
    <url>/2020/05/LVM%E9%80%BB%E8%BE%91%E5%8D%B7%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="conceptual"><a href="#conceptual" class="headerlink" title="conceptual"></a>conceptual</h2><ul>
<li>LVM是逻辑盘卷管理（Logical Volume Manager）</li>
<li>物理卷(PV) （磁盘分区）</li>
<li>卷组(VG) （多个磁盘分区组成卷组）</li>
<li>逻辑卷(LV) （在卷组上划分分区）</li>
</ul>
<h2 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h2><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># 物理卷 PV</span></span><br><span class="line">pvdisplay -v</span><br><span class="line"><span class="meta"># v verbose</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 卷组 VG</span></span><br><span class="line">vgdisplay</span><br><span class="line"></span><br><span class="line"><span class="meta"># 显示更多(VG,PV,LV)</span></span><br><span class="line">vgdisplay -v</span><br></pre></td></tr></table></figure>
<h2 id="新创建-LVM"><a href="#新创建-LVM" class="headerlink" title="新创建(LVM)"></a>新创建(LVM)</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fdisk -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建磁盘分区</span></span><br><span class="line">fdisk /dev/vdc</span><br><span class="line">&gt; n p w</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建物理分区</span></span><br><span class="line">pvcreate /dev/vdc1</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入文件系统，使扩容生效。</span></span><br><span class="line">xfs_growfs /dev/centos/root</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看是否生效</span></span><br><span class="line">df -h</span><br></pre></td></tr></table></figure>
<h2 id="扩展-LVM"><a href="#扩展-LVM" class="headerlink" title="扩展(LVM)"></a>扩展(LVM)</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看新加磁盘</span></span><br><span class="line"><span class="attr">fdisk</span> <span class="string">-l</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建磁盘分区</span></span><br><span class="line"><span class="attr">fdisk</span> <span class="string">/dev/vdc</span></span><br><span class="line"><span class="meta">&gt;</span> <span class="string">n p w</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建物理分区</span></span><br><span class="line"><span class="attr">pvcreate</span> <span class="string">/dev/vdc1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入卷组</span></span><br><span class="line"><span class="attr">vgextend</span> <span class="string">centos /dev/vdc1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定量加入逻辑卷</span></span><br><span class="line"><span class="attr">lvextend</span> <span class="string">-L +10G /dev/centos/root</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入文件系统，使扩容生效。</span></span><br><span class="line"><span class="attr">xfs_growfs</span> <span class="string">/dev/centos/root</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看是否生效</span></span><br><span class="line"><span class="attr">df</span> <span class="string">-h</span></span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>配置国内镜像源</title>
    <url>/2020/05/%E9%85%8D%E7%BD%AE%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/" target="_blank" rel="noopener">清华大学镜像源</a></li>
<li><a href="https://developer.aliyun.com/mirror/" target="_blank" rel="noopener">Ali 镜像源</a></li>
<li><a href="http://get.daocloud.io/" target="_blank" rel="noopener">Daocloud 镜像源</a></li>
</ul>
<h2 id="删除所有源"><a href="#删除所有源" class="headerlink" title="删除所有源"></a>删除所有源</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rm  /etc/yum.repos.d/* -rf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新缓存</span></span><br><span class="line">yum clean all &amp;&amp; yum makecache</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看源</span></span><br><span class="line">yum repolist all</span><br></pre></td></tr></table></figure>
<h2 id="centos-镜像源"><a href="#centos-镜像源" class="headerlink" title="centos 镜像源"></a>centos 镜像源</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Aliyun 源</span></span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这两个源有时候访问不通</span></span><br><span class="line">sed -i <span class="string">"/cloud.aliyuncs.com/s/^/#/"</span> /etc/yum.repos.d/CentOS-Base.repo</span><br><span class="line">sed -i <span class="string">"/.aliyuncs.com/s/^/#/"</span> /etc/yum.repos.d/CentOS-Base.repo</span><br></pre></td></tr></table></figure>
<h2 id="ubuntu-镜像源"><a href="#ubuntu-镜像源" class="headerlink" title="ubuntu 镜像源"></a>ubuntu 镜像源</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/apt/sources.list</span><br><span class="line"><span class="comment"># http://archive.ubuntu.com/</span></span><br><span class="line"><span class="comment"># mirrors.aliyun.com</span></span><br><span class="line">sed -i <span class="string">'s/archive.ubuntu.com/mirrors.aliyun.com/'</span> /etc/apt/sources.list</span><br></pre></td></tr></table></figure>
<h2 id="docker-镜像源"><a href="#docker-镜像源" class="headerlink" title="docker 镜像源"></a>docker 镜像源</h2><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">wget http<span class="variable">s:</span>//mirrors.aliyun.<span class="keyword">com</span>/docker-<span class="keyword">ce</span>/linux/centos/docker-<span class="keyword">ce</span>.repo -O /etc/yum.repos.d/docker-<span class="keyword">ce</span>.repo</span><br></pre></td></tr></table></figure>
<h2 id="docker-registry-源"><a href="#docker-registry-源" class="headerlink" title="docker registry 源"></a>docker registry 源</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://pe80e41t.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载 reload</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl reload docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># github 加速</span></span><br><span class="line">http://tool.chinaz.com/dns?<span class="built_in">type</span>=1&amp;host=github.com&amp;ip=</span><br></pre></td></tr></table></figure>
<h2 id="debian-源"><a href="#debian-源" class="headerlink" title="debian 源"></a>debian 源</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># debian 8源</span></span><br><span class="line">cat&lt;&lt;EOF &gt;/etc/apt/sources.list</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ jessie main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ jessie-proposed-updates main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ jessie main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ jessie-proposed-updates main non-free contrib</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'deb http://mirrors.aliyun.com/debian/ jessie main non-free contrib</span></span><br><span class="line"><span class="string">deb http://mirrors.aliyun.com/debian/ jessie-proposed-updates main non-free contrib</span></span><br><span class="line"><span class="string">deb-src http://mirrors.aliyun.com/debian/ jessie main non-free contrib</span></span><br><span class="line"><span class="string">deb-src http://mirrors.aliyun.com/debian/ jessie-proposed-updates main non-free contrib'</span> &gt;/etc/apt/sources.list</span><br><span class="line"></span><br><span class="line"><span class="comment">#  debian 9源</span></span><br><span class="line">cat&lt;&lt;<span class="string">'EOF'</span> &gt;./sources.list</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ stretch main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ stretch main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian-security stretch/updates main</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian-security stretch/updates main</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<p>开源镜像: <a href="http://npm.taobao.org/mirrors" target="_blank" rel="noopener">http://npm.taobao.org/mirrors</a><br>Node.js 镜像: <a href="http://npm.taobao.org/mirrors/node" target="_blank" rel="noopener">http://npm.taobao.org/mirrors/node</a><br>alinode 镜像: <a href="http://npm.taobao.org/mirrors/alinode" target="_blank" rel="noopener">http://npm.taobao.org/mirrors/alinode</a><br>phantomjs 镜像: <a href="http://npm.taobao.org/mirrors/phantomjs" target="_blank" rel="noopener">http://npm.taobao.org/mirrors/phantomjs</a><br>ChromeDriver 镜像: <a href="http://npm.taobao.org/mirrors/chromedriver" target="_blank" rel="noopener">http://npm.taobao.org/mirrors/chromedriver</a><br>OperaDriver 镜像: <a href="http://npm.taobao.org/mirrors/operadriver" target="_blank" rel="noopener">http://npm.taobao.org/mirrors/operadriver</a><br>Selenium 镜像: <a href="http://npm.taobao.org/mirrors/selenium" target="_blank" rel="noopener">http://npm.taobao.org/mirrors/selenium</a><br>Node.js 文档镜像: <a href="http://npm.taobao.org/mirrors/node/latest/docs/api/index.html" target="_blank" rel="noopener">http://npm.taobao.org/mirrors/node/latest/docs/api/index.html</a><br>NPM 镜像: <a href="https://npm.taobao.org/mirrors/npm/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/npm/</a><br>electron 镜像: <a href="https://npm.taobao.org/mirrors/electron/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/electron/</a><br>node-inspector 镜像: <a href="https://npm.taobao.org/mirrors/node-inspector/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/node-inspector/</a></p>
]]></content>
  </entry>
  <entry>
    <title>数据结构</title>
    <url>/2020/05/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="数据结构概念"><a href="#数据结构概念" class="headerlink" title="数据结构概念"></a>数据结构概念</h2><ul>
<li>什么是数据？<figure class="highlight haskell"><table><tr><td class="code"><pre><span class="line">数据(<span class="class"><span class="keyword">data</span>) 是事实或观察的结果，是对客观事物的逻辑归纳，是用于表示客观事物的未经加工的原始素材。</span></span><br><span class="line">数据 是科学实验、检验、统计等所获得的和用于科学研究、技术设计、查证、决策等的数值。</span><br></pre></td></tr></table></figure></li>
<li><p>问题求解方法</p>
<ul>
<li>感觉、经验</li>
<li>占卜、求神</li>
<li>逻辑、数学推理、实验</li>
<li>工程、计算</li>
<li>模型、模拟、仿真</li>
<li>哲学</li>
</ul>
</li>
<li><p>不可解问题</p>
<ul>
<li>无解</li>
<li>不可分问题</li>
<li>熵无限大问题</li>
<li>悖论<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 列举两个经典的悖论</span></span><br><span class="line">(理发师)我只给村里不给自己理发的人理发</span><br><span class="line">A 集合（村里的人）</span><br><span class="line"><span class="keyword">B </span>集合（村里不给自己理发的人）</span><br><span class="line">c 理发师（我）</span><br><span class="line"><span class="comment"># 悖论产生的原因（集合内元素产生递归的行为）</span></span><br><span class="line">当 c 属于 A</span><br><span class="line">且 c 属于 <span class="keyword">B</span></span><br><span class="line"><span class="keyword">B </span>又是 A 的真子集</span><br><span class="line">结论：理发师不能属于<span class="keyword">B</span></span><br><span class="line"><span class="keyword"># </span>理发师产生了递归的行为，因此集合内元素不能产生递归行为。</span><br><span class="line"></span><br><span class="line">一尺之棰，日取其半，万世不竭</span><br><span class="line"><span class="comment"># 悖论产生的原因（降维，信息丢失导致）</span></span><br><span class="line">一尺之锤 理应是多维对象。被抽象数学中的线后变成了一维</span><br><span class="line">日取其半 </span><br><span class="line">万世不竭 因为维度降低，信息有丢失。</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>什么是问题？</p>
<blockquote>
<p>问题求解的过程是从未知到已知过程，熵在不断减小。熵趋近于0，则问题有解。<br>下降的过程叫梯度<br>数学问题-&gt;明确到明确过程</p>
</blockquote>
</li>
<li><p>熵</p>
<blockquote>
<p>指混乱程度</p>
</blockquote>
</li>
<li><p>分类问题用判断</p>
</li>
<li>求因、证明问题 用公理、数学证明</li>
<li>构建问题用流程和算法</li>
</ul>
<blockquote>
<p>计算的边界： 有穷，能行问题。</p>
</blockquote>
<ul>
<li>什么是抽象？<blockquote>
<p>从众多的具体事物中，抽取共同的、本质的属性，舍弃个别的、非本质的属性，从而形成概念。<br>算法 + 数据结构 = 程序</p>
</blockquote>
</li>
</ul>
<h3 id="算法复杂度-从低到高"><a href="#算法复杂度-从低到高" class="headerlink" title="算法复杂度(从低到高)"></a>算法复杂度(从低到高)</h3><blockquote>
<p>问题求解的规模，大 O 是指主导部分。<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">O</span><span class="params">(<span class="number">1</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">O</span><span class="params">(log(n)</span></span>)</span><br><span class="line"><span class="function"><span class="title">O</span><span class="params">(n)</span></span></span><br><span class="line"><span class="function"><span class="title">O</span><span class="params">(nlog(n)</span></span>)</span><br><span class="line"><span class="function"><span class="title">O</span><span class="params">(n^<span class="number">2</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">O</span><span class="params">(n^<span class="number">3</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">O</span><span class="params">(<span class="number">2</span>^n)</span></span></span><br><span class="line">n! 举例(用随机数随机组合成一个已知顺序数)</span><br></pre></td></tr></table></figure></p>
<ul>
<li>程序实现的好坏<ul>
<li>是否可读</li>
<li>是否有冗余语句</li>
<li>健壮性</li>
<li>可维护性</li>
</ul>
</li>
<li>python 算法计量<ul>
<li>timeit 模块<br><a href="https://wiki.python.org/moin/TimeComplexity" target="_blank" rel="noopener">python 容器操作的算法复杂度</a></li>
</ul>
</li>
</ul>
</blockquote>
<h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><h3 id="划分1"><a href="#划分1" class="headerlink" title="划分1"></a>划分1</h3><ul>
<li>数据的逻辑结构<ul>
<li>集合</li>
<li>线性结构</li>
<li>树形结构<blockquote>
<p>DNS (互联网中最大的树结构）</p>
</blockquote>
</li>
<li>图形结构<blockquote>
<p>万维网（互联网中最大的图结构）</p>
</blockquote>
</li>
</ul>
</li>
<li>数据存储结构<ul>
<li>顺序存储</li>
<li>链式存储</li>
<li>索引存储</li>
<li>哈希存储</li>
</ul>
</li>
<li>常用算法<ul>
<li>检索</li>
<li>插入</li>
<li>删除</li>
<li>更新</li>
<li>排序</li>
</ul>
</li>
</ul>
<h3 id="划分2"><a href="#划分2" class="headerlink" title="划分2"></a>划分2</h3><ul>
<li>数据的逻辑结构<ul>
<li>集合</li>
<li>线性结构<ul>
<li>数组</li>
<li>栈</li>
<li>队列</li>
<li>链表</li>
</ul>
</li>
<li>树形结构<ul>
<li>二叉树</li>
<li>完全二叉树</li>
<li>平衡二叉树</li>
<li>二叉查找树</li>
<li>红黑树</li>
<li>B 树<ul>
<li>B-</li>
<li>B+</li>
<li>B*</li>
</ul>
</li>
<li>LSM树</li>
</ul>
</li>
<li>图形结构</li>
</ul>
</li>
<li>数据存储结构<ul>
<li>顺序存储</li>
<li>链式存储</li>
<li>索引存储</li>
<li>哈希存储</li>
</ul>
</li>
<li>常用算法<ul>
<li>检索</li>
<li>插入</li>
<li>删除</li>
<li>更新</li>
<li>排序<ul>
<li>选择排序</li>
<li>冒泡排序</li>
<li>快速排序</li>
<li>归并排序</li>
<li>希尔排序</li>
<li>堆排序</li>
<li>计数排序</li>
<li>桶排序</li>
<li>基数排序</li>
</ul>
</li>
</ul>
</li>
<li>二分查找</li>
<li>贪心算法</li>
<li>回溯算法</li>
<li>剪枝算法</li>
<li>动态规划</li>
<li>朴素贝叶斯</li>
<li>推荐算法</li>
<li>最小生成树算法</li>
<li>最短路径算法</li>
</ul>
<h3 id="栈的应用"><a href="#栈的应用" class="headerlink" title="栈的应用"></a>栈的应用</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">括号匹配，次序反转</span><br><span class="line">十进制转二进制，通过取余反转得到</span><br><span class="line">表达式转换，</span><br><span class="line">中缀 <span class="selector-tag">a</span> + b</span><br><span class="line">前缀 +ab</span><br><span class="line">后缀 ab+</span><br><span class="line">中缀转后缀表达式，利用栈</span><br><span class="line">后缀计算值，利用栈</span><br><span class="line">后缀表达式传值</span><br></pre></td></tr></table></figure>
<h3 id="队列的应用"><a href="#队列的应用" class="headerlink" title="队列的应用"></a>队列的应用</h3><blockquote>
<p>使用场景：处理资源速度慢于资源输入速度</p>
</blockquote>
<h3 id="递归-recursion"><a href="#递归-recursion" class="headerlink" title="递归 recursion"></a>递归 recursion</h3><blockquote>
<p>横向解决大规模问题<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">递归三定律</span><br><span class="line">    有结束条件</span><br><span class="line">    问题规模逐步减小</span><br><span class="line">    调用自身</span><br><span class="line">递归应用</span><br><span class="line">    任意进制转换</span><br><span class="line">    分形图</span><br></pre></td></tr></table></figure></p>
<h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">冒泡排序：两两交换</span><br><span class="line">选择排序：全表扫描，最大&#x2F;小 交换</span><br><span class="line">插入排序：新项和扫描过的子列表比对</span><br><span class="line">希尔排序：子列表进行插入排序</span><br><span class="line">归并排序：分治算法排序</span><br><span class="line">快速排序：找中值，按中值分裂</span><br></pre></td></tr></table></figure>
<h2 id="树结构"><a href="#树结构" class="headerlink" title="树结构"></a>树结构</h2><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">链表-&gt;二叉树-&gt;二叉查找树-&gt;特殊的二叉查找树（自平衡的二叉查找树）</span><br><span class="line"></span><br><span class="line">二分：有序数据，(min+max)/<span class="number">2</span>,二叉树查找树（左小，右大），时间复杂度是树的深度</span><br><span class="line">最优二叉树-赫夫曼树</span><br><span class="line">平衡二叉树-AVL树</span><br><span class="line"></span><br><span class="line">红黑树</span><br><span class="line">每个节点不是红色就是黑色</span><br><span class="line">不能出现连在一起的红色节点</span><br><span class="line">根节点是黑色（根节点入度为零）</span><br><span class="line">红色节点的两个叶子节点都是黑色，叶子节点都是黑色</span><br><span class="line">左旋：条件-&gt;</span><br><span class="line">右旋：条件-&gt;</span><br><span class="line">变颜色</span><br><span class="line"></span><br><span class="line">构建红黑树</span><br><span class="line">所有插入的点默认为红色</span><br><span class="line">按照二叉查找树插入</span><br><span class="line">插入节点后，不满足红黑树规则</span><br><span class="line">变颜色（父，叔节点都为红）：把父节点，叔节点变成黑色，把祖父节点变红色</span><br><span class="line">旋转（父，叔节点为红，黑）：右边都是红色，进行左旋</span><br><span class="line">旋转（父，叔节点为红，黑）：左边都是红色，进行右旋，要进行变颜色，父节点变黑色，祖父节点变红色</span><br></pre></td></tr></table></figure>
<h3 id="树的遍历"><a href="#树的遍历" class="headerlink" title="树的遍历"></a>树的遍历</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">前序遍历：根，左，右</span><br><span class="line">中序遍历：左，根，右</span><br><span class="line">后序遍历：左，右，根</span><br></pre></td></tr></table></figure>
<h3 id="树的应用"><a href="#树的应用" class="headerlink" title="树的应用"></a>树的应用</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">文件系统</span><br><span class="line">html文档 dom 处理</span><br><span class="line">DNS域名体系</span><br><span class="line">语法树（解析树）</span><br></pre></td></tr></table></figure>
</blockquote>
<h3 id="图"><a href="#图" class="headerlink" title="图"></a>图</h3><blockquote>
<p>树是特殊的图<br><figure class="highlight coq"><table><tr><td class="code"><pre><span class="line">图 <span class="keyword">Graph</span></span><br><span class="line">    顶点 Vertex</span><br><span class="line">    边 Edge</span><br><span class="line">    权重 Weight</span><br><span class="line">图的表示</span><br><span class="line">    邻接矩阵</span><br><span class="line">    邻接表：链表</span><br><span class="line"></span><br><span class="line">六度分隔理论</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="优化问题"><a href="#优化问题" class="headerlink" title="优化问题"></a>优化问题</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">移位操作应用</span><br><span class="line">    可以做倍数：左移位</span><br><span class="line">    可以做取余：与操作</span><br><span class="line">    可以做布尔运算：判断奇偶</span><br></pre></td></tr></table></figure>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">二进制编码</span><br><span class="line">补码作用：利用溢出，我们可以将减法变成加法</span><br><span class="line"><span class="number">-1</span> + <span class="number">1</span> = <span class="number">0</span></span><br><span class="line"><span class="number">1001</span> #原码 <span class="number">-1</span>       <span class="number">111</span> <span class="number">1</span> #补码 <span class="number">-1</span> 的补码（反码+<span class="number">1</span>），<span class="number">-1</span> 的反码 <span class="number">1110</span> </span><br><span class="line">+     <span class="number">0001</span> #原码  <span class="number">1</span>       <span class="number">0001</span> #原码</span><br><span class="line">---</span><br><span class="line">       <span class="number">1010</span> # <span class="number">-2</span>            <span class="number">10000</span> # 等于<span class="number">0</span> <span class="number">1</span>溢出</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>个字节能表示的最大整数是<span class="number">2</span>^<span class="number">8</span><span class="number">-1</span> =<span class="number">255</span></span><br><span class="line"><span class="number">1</span>个字节能表示的最大负数是-(<span class="number">2</span>^<span class="number">8</span>)/<span class="number">2</span> = <span class="number">-128</span></span><br><span class="line"><span class="number">1</span>个字节能表示的最大正数是 <span class="number">2</span>^<span class="number">8</span>/<span class="number">2</span><span class="number">-1</span> = <span class="number">127</span></span><br></pre></td></tr></table></figure>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编码符号表示</span></span><br><span class="line"><span class="attr">ascii</span> <span class="string">8bit</span></span><br><span class="line"><span class="attr">unicode16</span> <span class="string">16bit # 可以表示全世界所有的文字</span></span><br><span class="line"><span class="attr">unicode32</span> <span class="string">32bit</span></span><br><span class="line"><span class="attr">utf8</span> <span class="string">8-32bit</span></span><br><span class="line"><span class="attr">base64</span>  <span class="string"># 全都转换成 8bit  可显示的字符，便于传输，有病毒利用 base64 传输，禁用 base64 可以防止病毒传输</span></span><br><span class="line"></span><br><span class="line"><span class="attr">hashcode</span> <span class="string">把字符串转成数字</span></span><br></pre></td></tr></table></figure>
<h3 id="书籍推荐"><a href="#书籍推荐" class="headerlink" title="书籍推荐"></a>书籍推荐</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">数据结构</span><br><span class="line">大话数据结构</span><br><span class="line">算法入门经典</span><br><span class="line">算法导论</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Consul安装配置</title>
    <url>/2020/05/Consul%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href>consul</a></li>
</ul>
<h2 id="Consul-conceptual"><a href="#Consul-conceptual" class="headerlink" title="Consul conceptual"></a>Consul conceptual</h2><ul>
<li>微服务</li>
<li>服务网格</li>
<li>服务发现</li>
<li>服务间调用</li>
<li>限流</li>
<li>熔断</li>
<li>监控</li>
</ul>
<h2 id="Consul-集群安装"><a href="#Consul-集群安装" class="headerlink" title="Consul 集群安装"></a>Consul 集群安装</h2><h2 id="服务注册"><a href="#服务注册" class="headerlink" title="服务注册"></a>服务注册</h2><h2 id="限流"><a href="#限流" class="headerlink" title="限流"></a>限流</h2><h2 id="熔断"><a href="#熔断" class="headerlink" title="熔断"></a>熔断</h2><h2 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h2>]]></content>
  </entry>
  <entry>
    <title>kong安装配置</title>
    <url>/2020/05/kong%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://docs.konghq.com/" target="_blank" rel="noopener">Kong docs </a></li>
</ul>
<h2 id="kong-consul"><a href="#kong-consul" class="headerlink" title="kong consul"></a>kong consul</h2><ul>
<li>nginx</li>
<li>lua</li>
<li><p>API网关</p>
<ul>
<li>请求接入</li>
<li>业务聚合</li>
<li>中介策略</li>
<li>统一管理</li>
</ul>
</li>
<li><p>OpenResty</p>
</li>
</ul>
<h2 id="kong-安装"><a href="#kong-安装" class="headerlink" title="kong 安装"></a>kong 安装</h2><ul>
<li><a href="https://docs.konghq.com/install/docker/" target="_blank" rel="noopener">Docker Installation</a><ul>
<li>DB mode 数据库模式</li>
<li>DB-less mode 无数据库模式</li>
</ul>
</li>
<li><a href="https://docs.konghq.com/2.0.x/kong-for-kubernetes/install/" target="_blank" rel="noopener">kubernetes Installation</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Create a Docker network</span></span><br><span class="line">docker network create kong-net</span><br><span class="line"></span><br><span class="line"><span class="comment"># Start your database</span></span><br><span class="line">docker run -d --name kong-database \</span><br><span class="line">               --network=kong-net \</span><br><span class="line">               -p 9042:9042 \</span><br><span class="line">               cassandra:3</span><br><span class="line"></span><br><span class="line"><span class="comment"># PostgreSQL container</span></span><br><span class="line">docker run -d --name kong-database \</span><br><span class="line">               --network=kong-net \</span><br><span class="line">               -p 5432:5432 \</span><br><span class="line">               -e <span class="string">"POSTGRES_USER=kong"</span> \</span><br><span class="line">               -e <span class="string">"POSTGRES_DB=kong"</span> \</span><br><span class="line">               -e <span class="string">"POSTGRES_PASSWORD=kong"</span> \</span><br><span class="line">               postgres:9.6</span><br><span class="line"></span><br><span class="line"><span class="comment"># Prepare your database</span></span><br><span class="line">docker run --rm \</span><br><span class="line">     --network=kong-net \</span><br><span class="line">     -e <span class="string">"KONG_DATABASE=postgres"</span> \</span><br><span class="line">     -e <span class="string">"KONG_PG_HOST=kong-database"</span> \</span><br><span class="line">     -e <span class="string">"KONG_PG_PASSWORD=kong"</span> \</span><br><span class="line">     -e <span class="string">"KONG_CASSANDRA_CONTACT_POINTS=kong-database"</span> \</span><br><span class="line">     kong:latest kong migrations bootstrap</span><br><span class="line"></span><br><span class="line"><span class="comment"># Start Kong</span></span><br><span class="line">docker run -d --name kong \</span><br><span class="line">     --network=kong-net \</span><br><span class="line">     -e <span class="string">"KONG_DATABASE=postgres"</span> \</span><br><span class="line">     -e <span class="string">"KONG_PG_HOST=kong-database"</span> \</span><br><span class="line">     -e <span class="string">"KONG_PG_PASSWORD=kong"</span> \</span><br><span class="line">     -e <span class="string">"KONG_CASSANDRA_CONTACT_POINTS=kong-database"</span> \</span><br><span class="line">     -e <span class="string">"KONG_PROXY_ACCESS_LOG=/dev/stdout"</span> \</span><br><span class="line">     -e <span class="string">"KONG_ADMIN_ACCESS_LOG=/dev/stdout"</span> \</span><br><span class="line">     -e <span class="string">"KONG_PROXY_ERROR_LOG=/dev/stderr"</span> \</span><br><span class="line">     -e <span class="string">"KONG_ADMIN_ERROR_LOG=/dev/stderr"</span> \</span><br><span class="line">     -e <span class="string">"KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl"</span> \</span><br><span class="line">     -p 8000:8000 \</span><br><span class="line">     -p 8443:8443 \</span><br><span class="line">     -p 127.0.0.1:8001:8001 \</span><br><span class="line">     -p 127.0.0.1:8444:8444 \</span><br><span class="line">     kong:latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use Kong</span></span><br><span class="line">curl -i http://localhost:8001/</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>gitlab迁移</title>
    <url>/2020/05/gitlab%E8%BF%81%E7%A7%BB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://github.com/gitlabhq" target="_blank" rel="noopener">gitlib</a></li>
<li><a href="/2020/05/Gitlab/" title="Gitlab管理">Gitlab管理</a></li>
<li><a href="/2020/05/gitlab%E8%BF%81%E7%A7%BB/" title="gitlab迁移">gitlab迁移</a>
</li>
</ul>
<h1 id="docker-方式迁移"><a href="#docker-方式迁移" class="headerlink" title="docker 方式迁移"></a>docker 方式迁移</h1><a href="/2020/05/gitlab%E5%AE%89%E8%A3%85/" title="gitlab安装">gitlab安装</a>
<h2 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h2><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入容器</span></span><br><span class="line"><span class="comment"># docker container exec -it d0ff23550e14 bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入 compose 目录</span></span><br><span class="line"><span class="keyword">cd</span> <span class="string">/root/gitlab-container</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份</span></span><br><span class="line">docker-compose run <span class="params">--rm</span> gitlab app<span class="function">:rake</span> gitlab<span class="function">:backup</span><span class="function">:create</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看备份</span></span><br><span class="line"><span class="keyword">ls</span> <span class="string">/data/volumn-docker/gitlab/backups/</span></span><br></pre></td></tr></table></figure>
<h2 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 授权备份文件</span></span><br><span class="line">chmod 777 /data/volumn-docker/gitlab/backups/1590004949_gitlab_backup.tar</span><br><span class="line"></span><br><span class="line">docker-compose <span class="builtin-name">run</span> --rm gitlab app:rake gitlab:backup:restore <span class="attribute">BACKUP</span>=1590023823_2020_05_21_12.10.6</span><br><span class="line"><span class="comment"># 两次 entry yes</span></span><br></pre></td></tr></table></figure>
<h3 id="gitlab-版本不一致处理"><a href="#gitlab-版本不一致处理" class="headerlink" title="gitlab 版本不一致处理"></a>gitlab 版本不一致处理</h3><blockquote>
<p>把镜像导出来，在新环境中导入进去。</p>
</blockquote>
<a href="/2020/05/Docker/" title="Docker使用">Docker使用</a>
<hr>
<h1 id="daemon-方式迁移"><a href="#daemon-方式迁移" class="headerlink" title="daemon 方式迁移"></a>daemon 方式迁移</h1><h2 id="一、备份"><a href="#一、备份" class="headerlink" title="一、备份"></a>一、备份</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 关闭 nginx</span></span><br><span class="line">gitlab-ctl stop nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份</span></span><br><span class="line">gitlab-rake gitlab:backup:create</span><br><span class="line">---</span><br><span class="line">Dumping database ... </span><br><span class="line">Dumping PostgreSQL database gitlabhq_production ... [DONE]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">Dumping repositories ...</span><br><span class="line"> ...</span><br><span class="line"> * stool/wx-azf-app.wiki ...  [SKIPPED]</span><br><span class="line"> * go-meta/go-meta-web ... [DONE]</span><br><span class="line"> * go-meta/go-meta-web.wiki ...  [SKIPPED]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">Dumping uploads ... </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">Dumping builds ... </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">Dumping artifacts ... </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">Dumping pages ... </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">Dumping lfs objects ... </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">Dumping container registry images ... </span><br><span class="line">[DISABLED]</span><br><span class="line">Creating backup archive: 1589946460_2020_05_20_10.2.1_gitlab_backup.tar ... <span class="keyword">done</span></span><br><span class="line">Uploading backup archive to remote storage  ... skipped</span><br><span class="line">Deleting tmp directories ... <span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">Deleting old backups ... skipping</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 /var/opt/gitlab/backups 生成备份文件</span></span><br><span class="line">ls /var/opt/gitlab/backups</span><br><span class="line">---</span><br><span class="line">-rw------- 1 git git 372561920 May 20 11:47 1589946460_2020_05_20_10.2.1_gitlab_backup.tar</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份配置文件</span></span><br><span class="line">cp /etc/gitlab/gitlab.rb gitlab.rb`date <span class="string">"+%F"</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份nginx配置文件</span></span><br><span class="line">cp /var/opt/gitlab/nginx/conf/gitlab-http.conf gitlab-http.conf`date <span class="string">"+%F"</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份邮件配置</span></span><br><span class="line">cp /etc/postfix/main.cf main.cf`date <span class="string">"+%F"</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment"># [可修改备份文件目录]</span></span><br><span class="line">gitlab_rails[<span class="string">'backup_path'</span>] = <span class="string">"/var/opt/gitlab/backups"</span></span><br></pre></td></tr></table></figure>
<h2 id="二、将文件复制到新机器"><a href="#二、将文件复制到新机器" class="headerlink" title="二、将文件复制到新机器"></a>二、将文件复制到新机器</h2><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 复制相关文件到新服务器</span></span><br><span class="line">scp <span class="regexp">/var/</span>opt<span class="regexp">/gitlab/</span>backups<span class="regexp">/*_gitlab_backup.tar newserver:/</span>var<span class="regexp">/opt/gi</span>tlab<span class="regexp">/backups/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 授权</span></span><br><span class="line">chmod <span class="number">777</span> <span class="regexp">/var/</span>opt<span class="regexp">/gitlab/</span>backups<span class="regexp">/*_gitlab_backup.tar</span></span><br></pre></td></tr></table></figure>
<h2 id="三、恢复"><a href="#三、恢复" class="headerlink" title="三、恢复"></a>三、恢复</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 关闭 nginx</span></span><br><span class="line">gitlab-ctl <span class="keyword">stop</span> nginx</span><br><span class="line"></span><br><span class="line"><span class="comment">#停止相关数据连接服务</span></span><br><span class="line">gitlab-ctl <span class="keyword">stop</span> unicorn</span><br><span class="line">gitlab-ctl <span class="keyword">stop</span> sidekiq</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将备份文件复制到 new server：/var/opt/gitlab/backups/ 下</span></span><br><span class="line"><span class="comment"># 文件日期串</span></span><br><span class="line">gitlab-rake gitlab:<span class="keyword">backup</span>:<span class="keyword">restore</span> <span class="keyword">BACKUP</span>=文件日期串</span><br><span class="line"><span class="comment"># 两次 entry yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动相关数据连接服务</span></span><br><span class="line">gitlab-ctl <span class="keyword">start</span> unicorn</span><br><span class="line">gitlab-ctl <span class="keyword">start</span> sidekiq</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 nginx</span></span><br><span class="line">gitlab-ctl <span class="keyword">start</span> nginx</span><br></pre></td></tr></table></figure>
<h1 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 关闭 nginx</span></span><br><span class="line"><span class="string">gitlab-ctl</span> <span class="string">stop</span> <span class="string">nginx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份</span></span><br><span class="line"><span class="string">gitlab-rake</span> <span class="string">gitlab:backup:create</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 停服务</span></span><br><span class="line"><span class="string">gitlab-ctl</span> <span class="string">stop</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">ok: down: gitaly:</span> <span class="string">0s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: gitlab-monitor:</span> <span class="string">0s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: gitlab-workhorse:</span> <span class="string">0s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: logrotate:</span> <span class="string">1s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: nginx:</span> <span class="string">0s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: node-exporter:</span> <span class="string">1s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: postgres-exporter:</span> <span class="string">0s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: postgresql:</span> <span class="string">0s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: prometheus:</span> <span class="string">0s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: redis:</span> <span class="string">0s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: redis-exporter:</span> <span class="string">0s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: sidekiq:</span> <span class="string">0s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: unicorn:</span> <span class="string">1s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<h2 id="安装升级包"><a href="#安装升级包" class="headerlink" title="安装升级包"></a>安装升级包</h2><a href="/2020/05/gitlab%E5%AE%89%E8%A3%85/" title="gitlab安装">gitlab安装</a>
<h2 id="启动-gitlab"><a href="#启动-gitlab" class="headerlink" title="启动 gitlab"></a>启动 gitlab</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 重新加载配置并启动</span></span><br><span class="line"><span class="string">gitlab-ctl</span> <span class="string">reconfigure</span></span><br><span class="line"><span class="string">gitlab-ctl</span> <span class="string">restart</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动gitlab</span></span><br><span class="line"><span class="string">gitlab-ctl</span> <span class="string">start</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">ok: run: gitaly:</span> <span class="string">(pid</span> <span class="number">22544</span><span class="string">)</span> <span class="string">1s</span></span><br><span class="line"><span class="attr">ok: run: gitlab-monitor:</span> <span class="string">(pid</span> <span class="number">22546</span><span class="string">)</span> <span class="string">0s</span></span><br><span class="line"><span class="attr">ok: run: gitlab-workhorse:</span> <span class="string">(pid</span> <span class="number">22552</span><span class="string">)</span> <span class="string">1s</span></span><br><span class="line"><span class="attr">ok: run: logrotate:</span> <span class="string">(pid</span> <span class="number">22566</span><span class="string">)</span> <span class="string">0s</span></span><br><span class="line"><span class="attr">ok: run: nginx:</span> <span class="string">(pid</span> <span class="number">22578</span><span class="string">)</span> <span class="string">1s</span></span><br><span class="line"><span class="attr">ok: run: node-exporter:</span> <span class="string">(pid</span> <span class="number">22583</span><span class="string">)</span> <span class="string">0s</span></span><br><span class="line"><span class="attr">ok: run: postgres-exporter:</span> <span class="string">(pid</span> <span class="number">22588</span><span class="string">)</span> <span class="string">0s</span></span><br><span class="line"><span class="attr">ok: run: postgresql:</span> <span class="string">(pid</span> <span class="number">22593</span><span class="string">)</span> <span class="string">1s</span></span><br><span class="line"><span class="attr">ok: run: prometheus:</span> <span class="string">(pid</span> <span class="number">22601</span><span class="string">)</span> <span class="string">0s</span></span><br><span class="line"><span class="attr">ok: run: redis:</span> <span class="string">(pid</span> <span class="number">22609</span><span class="string">)</span> <span class="string">1s</span></span><br><span class="line"><span class="attr">ok: run: redis-exporter:</span> <span class="string">(pid</span> <span class="number">22613</span><span class="string">)</span> <span class="string">0s</span></span><br><span class="line"><span class="attr">ok: run: sidekiq:</span> <span class="string">(pid</span> <span class="number">22618</span><span class="string">)</span> <span class="string">0s</span></span><br><span class="line"><span class="attr">ok: run: unicorn:</span> <span class="string">(pid</span> <span class="number">22625</span><span class="string">)</span> <span class="string">1s</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>devops</category>
      </categories>
  </entry>
  <entry>
    <title>容器技术原理</title>
    <url>/2020/05/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="namespace-隔离"><a href="#namespace-隔离" class="headerlink" title="namespace 隔离"></a>namespace 隔离</h2><h2 id="分层文件系统-overlay"><a href="#分层文件系统-overlay" class="headerlink" title="分层文件系统 overlay"></a>分层文件系统 overlay</h2>]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>linux-kernel</title>
    <url>/2020/05/linux-kernel/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.kernel.org/doc/html/latest/" target="_blank" rel="noopener">kernel</a><br><a href="https://www.ibm.com/developerworks/cn/linux/kernel/syscall/part1/appendix.html" target="_blank" rel="noopener">Linux系统调用列表</a><br><a href="https://cmake.org/cmake/help/latest/" target="_blank" rel="noopener">cmake</a></p>
<h3 id="kernel-source-directory"><a href="#kernel-source-directory" class="headerlink" title="kernel source directory"></a>kernel source directory</h3><hr>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">linux-<span class="number">5.6</span>.<span class="number">13</span>/</span><br><span class="line">├── COPYING</span><br><span class="line">├── CREDITS</span><br><span class="line">├── Documentation</span><br><span class="line">├── Kbuild</span><br><span class="line">├── Kconfig</span><br><span class="line">├── LICENSES</span><br><span class="line">├── MAINTAINERS</span><br><span class="line">├── Makefile</span><br><span class="line">├── README</span><br><span class="line">├── arch            <span class="comment"># 体系结构相关的代码，例如arm, x86等等。</span></span><br><span class="line">├── block           <span class="comment"># 提供块设备的层次。</span></span><br><span class="line">├── certs           <span class="comment"># </span></span><br><span class="line">├── crypto          <span class="comment"># 加密、解密相关的库函数</span></span><br><span class="line">├── drivers         <span class="comment"># 设备驱动</span></span><br><span class="line">├── fs              <span class="comment"># VFS子系统</span></span><br><span class="line">├── <span class="keyword">include</span>         <span class="comment"># 内核头文件，需要提供给外部模块（例如用户空间代码）使用</span></span><br><span class="line">├── init            <span class="comment"># Linux系统启动初始化相关的代码</span></span><br><span class="line">├── ipc             <span class="comment"># IPC（进程间通信）子系统</span></span><br><span class="line">├── kernel          <span class="comment"># Linux内核的核心代码，包含了3.2小节所描述的进程调度子系统，以及和进程调度相关的模块。</span></span><br><span class="line">├── <span class="class"><span class="keyword">lib</span>             <span class="comment"># 实现需要在内核中使用的库函数</span></span></span><br><span class="line">├── mm              <span class="comment"># 内存管理子系统</span></span><br><span class="line">├── net             <span class="comment"># 不包括网络设备驱动的网络子系统</span></span><br><span class="line">├── samples         <span class="comment"># 示例代码</span></span><br><span class="line">├── scripts         <span class="comment"># 用于内核编译的配置文件、脚本等。</span></span><br><span class="line">├── security        <span class="comment"># 提供安全特性（SELinux）</span></span><br><span class="line">├── sound           <span class="comment"># 音频相关的驱动及子系统，可以看作“音频子系统”。</span></span><br><span class="line">├── tools           <span class="comment"># 一些常用工具，如性能剖析、自测试等</span></span><br><span class="line">├── usr             <span class="comment"># 用于生成initramfs的代码</span></span><br><span class="line">└── virt            <span class="comment"># 提供虚拟机技术（KVM等）的支持</span></span><br></pre></td></tr></table></figure>
<h3 id="kernel-实现功能"><a href="#kernel-实现功能" class="headerlink" title="kernel 实现功能"></a>kernel 实现功能</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">* </span>系统调用接口</span><br><span class="line"><span class="bullet">* </span>进程管理</span><br><span class="line"><span class="bullet">    * </span>调度策略</span><br><span class="line"><span class="bullet">    * </span>架构特定的调度</span><br><span class="line"><span class="bullet">    * </span>架构独立的调度</span><br><span class="line"><span class="bullet">    * </span>系统调用接口</span><br><span class="line"><span class="bullet">* </span>内存管理</span><br><span class="line"><span class="bullet">    * </span>架构相关管理</span><br><span class="line"><span class="bullet">    * </span>架构独立管理</span><br><span class="line"><span class="bullet">    * </span>系统调用接口</span><br><span class="line"><span class="bullet">* </span>虚拟文件系统</span><br><span class="line"><span class="bullet">* </span>网络堆栈</span><br><span class="line"><span class="bullet">    * </span>网络设备驱动</span><br><span class="line"><span class="bullet">    * </span>设备独立接口</span><br><span class="line"><span class="bullet">    * </span>网络协议</span><br><span class="line"><span class="bullet">    * </span>协议独立接口</span><br><span class="line"><span class="bullet">    * </span>系统调用接口</span><br><span class="line"><span class="bullet">* </span>设备驱动程序</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>计算机</category>
      </categories>
  </entry>
  <entry>
    <title>Linux操作系统原理</title>
    <url>/2020/05/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>计算机组成原理</title>
    <url>/2020/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="指令集"><a href="#指令集" class="headerlink" title="指令集"></a>指令集</h2><ul>
<li><p><a href="https://zh.wikipedia.org/wiki/%E5%A4%8D%E6%9D%82%E6%8C%87%E4%BB%A4%E9%9B%86" target="_blank" rel="noopener">CISC 复杂指令集</a></p>
<ul>
<li>X86架构 (<a href="http://www.zhaoxin.com/" target="_blank" rel="noopener">兆芯</a>)<ul>
<li><a href="https://zh.wikipedia.org/wiki/X86" target="_blank" rel="noopener">X86</a></li>
</ul>
</li>
</ul>
</li>
<li><p><a href="https://zh.wikipedia.org/wiki/%E7%B2%BE%E7%AE%80%E6%8C%87%E4%BB%A4%E9%9B%86" target="_blank" rel="noopener">RISC 精简指令集</a></p>
<ul>
<li>ARM架构 (<a href="https://e.huawei.com/cn/solutions/hic" target="_blank" rel="noopener">华为</a>)<ul>
<li><a href="https://zh.wikipedia.org/wiki/ARM%E6%9E%B6%E6%A7%8B" target="_blank" rel="noopener">ARM</a></li>
</ul>
</li>
<li>MIPS架构(<a href="http://www.loongson.cn/index.html" target="_blank" rel="noopener">龙芯</a>)<ul>
<li><a href="https://zh.wikipedia.org/wiki/MIPS%E6%9E%B6%E6%A7%8B" target="_blank" rel="noopener">MIPS</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="计算机组成"><a href="#计算机组成" class="headerlink" title="计算机组成"></a>计算机组成</h2><ul>
<li>CPU</li>
<li>MEMORY</li>
<li>DISK</li>
<li><p>IO</p>
<ul>
<li>GPU</li>
<li>NET</li>
</ul>
</li>
<li><p>主板</p>
<ul>
<li>北桥<ul>
<li>CPU</li>
<li>MEMORY</li>
<li>GPU</li>
<li>PCIE</li>
</ul>
</li>
<li>南桥<ul>
<li>DISK</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="hello-world-工作流程"><a href="#hello-world-工作流程" class="headerlink" title="hello world 工作流程"></a>hello world 工作流程</h2><p><a href="https://yangwang.hk/?p=281" target="_blank" rel="noopener">引用：用机器码写hello world</a></p>
<p>加电 -&gt; BIOS -&gt; 读取第一扇区 -&gt; bootloader -&gt; 操作系统</p>
<ul>
<li>加电</li>
<li>BIOS<ul>
<li>电池</li>
<li>只读 ROM</li>
</ul>
</li>
<li><p>第一扇区</p>
<ul>
<li>MBR（ Master Boot Record，主引导记录 ）<ul>
<li>466字节的引导程序</li>
<li>64字节的分区表<blockquote>
<p>为什么一块硬盘上最多只能有四个主分区的原因——第五个主分区放不下…</p>
</blockquote>
</li>
<li>2字节的校验位</li>
</ul>
</li>
</ul>
</li>
<li><p>实模式</p>
</li>
<li><p>保护模式</p>
<ul>
<li>286架构<blockquote>
<p>段寄存器保存的数据不再是内存物理地址，而是称作选择器（selector）</p>
<ul>
<li>选择器<ul>
<li>高13位指向描述符表</li>
<li>最低的两位数据定义了请求的权限，从0到3，0是最高权限，3是最低权限；</li>
<li>剩下的一位表示是使用全局描述符表（GDT）还是局部描述符表（LDT）。</li>
</ul>
</li>
<li>全局描述表（GDT Global Descriptor Table)</li>
</ul>
</blockquote>
</li>
<li>386架构 （CPU开创的分页内存管理）<ul>
<li>页目（page directory）</li>
<li>页表（page table）<blockquote>
<p>CR3寄存器保存了进程的页目的物理地址。页目与页表中每4字节为一个单元，是一个32位的值，当页目项第0位为1时，表明页表已经在物理内存中；当页表项第0位为1时，表明访问的数据已经在内存中。</p>
</blockquote>
</li>
</ul>
</li>
</ul>
</li>
<li><p>0x7c00</p>
<blockquote>
<p>8086设计出了20位的寻址总线(16位集群器寻20位地址)<br>16位最大是65536，也就是64kb。2^20=1MB。</p>
</blockquote>
</li>
<li>段寄存器（16位）一级<ul>
<li>段地址</li>
</ul>
</li>
<li><p>指针寄存器（4位）二级</p>
<ul>
<li>偏移地址</li>
</ul>
</li>
<li><p>显示器</p>
<ul>
<li>点距<blockquote>
<p>像素之间的距离</p>
</blockquote>
</li>
<li><p>分辨率</p>
<blockquote>
<p>显示分辨率（屏幕分辨率）是屏幕图像的精密度，是指显示器所能显示的像素有多少。</p>
</blockquote>
<ul>
<li>ppi（像素每英寸）</li>
<li>dpi（点每英寸）用于打印机    </li>
</ul>
</li>
<li>频率<blockquote>
<p>刷新率指每秒钟出现新图像的数量</p>
</blockquote>
</li>
</ul>
</li>
<li>显卡<blockquote>
<p>控制像素点显示，显卡有一块内存，叫显存。只需要把字符写入显存，显卡就会帮助我们将他显示在屏幕上。</p>
</blockquote>
</li>
<li>内存映射(会把显存映射到内存)</li>
<li>显示字符<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">086</span>下<span class="number">0X00000</span><span class="number">-0X9FFFF</span>是留给普通内存的，后面的<span class="number">0XF0000</span>-FFFFF则是存放BIOS的芯片。</span><br><span class="line">中间<span class="number">0XA0000</span>-EFFFFF的<span class="number">320</span>k字节，则由各种外围设备提供，比如显卡。</span><br><span class="line">显存的范围是<span class="number">0xB8000</span><span class="number">-0XBFFF</span></span><br><span class="line">显卡在启动后，会自动的被初始化为<span class="number">80</span>×<span class="number">25</span>的文本模式，一共两千个字符。</span><br><span class="line"><span class="number">0xB8000</span>就对应屏幕的左上角第一个字符，然后是往右依次类推</span><br><span class="line"></span><br><span class="line">一个字符并不是占用一个字节，而是两个。</span><br><span class="line">第一个字节是字符的ASCII，第二个字节指定了字符的显示属性，比如颜色，是否闪烁。</span><br><span class="line">颜色分为前景色和背景色（前四bit，后四bit）</span><br><span class="line">前四：K RGB K,控制是否闪烁</span><br><span class="line">后四：I RGB I,控制颜色深浅</span><br><span class="line"></span><br><span class="line">屏幕黑色时，显存里是空格。</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>计算机语言编译过程</title>
    <url>/2020/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="计算机组成原理"><a href="#计算机组成原理" class="headerlink" title="计算机组成原理"></a>计算机组成原理</h2><a href="/2020/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/" title="计算机组成原理">计算机组成原理</a>
<h2 id="汇编"><a href="#汇编" class="headerlink" title="汇编"></a>汇编</h2><blockquote>
<p>不同的指令集对应不同的汇编器</p>
</blockquote>
<ul>
<li><a href="https://www.ibm.com/developerworks/cn/linux/l-assembly/index.html" target="_blank" rel="noopener">Linux 汇编语言开发指南</a></li>
</ul>
<h2 id="C-语言编译过程"><a href="#C-语言编译过程" class="headerlink" title="C 语言编译过程"></a>C 语言编译过程</h2><ul>
<li>预处理<ul>
<li>处理预编译指令，例如 #define，#if，#ifdefine 等。</li>
<li>将 #include 包含文件插入到该预编译指令的位置</li>
<li>删除所有的注析 // 、/**/</li>
</ul>
</li>
<li>编译<ul>
<li>把预处理过的代码编译成汇编代码</li>
</ul>
</li>
<li>汇编<ul>
<li>把汇编代码编译成目标代码</li>
</ul>
</li>
<li>链接<ul>
<li>把目标代码链接成可执行文件</li>
</ul>
</li>
</ul>
<h2 id="以-nginx-代码为例，使用-gcc-编译器了解一下编译过程。"><a href="#以-nginx-代码为例，使用-gcc-编译器了解一下编译过程。" class="headerlink" title="以 nginx 代码为例，使用 gcc 编译器了解一下编译过程。"></a>以 nginx 代码为例，使用 gcc 编译器了解一下编译过程。</h2><h3 id="下载-nginx-代码"><a href="#下载-nginx-代码" class="headerlink" title="下载 nginx 代码"></a>下载 nginx 代码</h3><p><a href="http://nginx.org/download/nginx-1.17.10.tar.gz" target="_blank" rel="noopener">nginx 源码</a></p>
<h3 id="使用-gcc-编译器-gcc-version-4-8-5"><a href="#使用-gcc-编译器-gcc-version-4-8-5" class="headerlink" title="使用 gcc 编译器 (gcc version 4.8.5)"></a>使用 gcc 编译器 (gcc version 4.8.5)</h3><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">gcc -v # 显示编译过程</span><br><span class="line">gcc -### # 选项和命令不执行</span><br><span class="line">gcc -E # 预处理</span><br><span class="line">gcc -S # 编译成汇编代码</span><br><span class="line">gcc -c # 编译、汇编，不链接</span><br></pre></td></tr></table></figure>
<h3 id="gcc-编译过程"><a href="#gcc-编译过程" class="headerlink" title="gcc 编译过程"></a>gcc 编译过程</h3><a href="/2020/05/nginx/" title="nginx源码分析">nginx源码分析</a>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://nginx.org/download/nginx-1.17.10.tar.gz</span><br><span class="line">tar -zxf nginx-1.17.10.tar.gz</span><br><span class="line"><span class="built_in">cd</span> /root/nginx-1.17.10</span><br><span class="line"></span><br><span class="line"><span class="comment"># 先执行 configure 配置一下整个环境。因为要生成一些文件</span></span><br><span class="line">./configure --prefix=/opt/nginx</span><br><span class="line"><span class="built_in">cd</span> /src/core</span><br><span class="line"><span class="comment"># 备份一下源码</span></span><br><span class="line">cp nginx.c nginx.c.bak</span><br><span class="line"></span><br><span class="line"><span class="comment"># -I 用于预处理时，指定头文件</span></span><br><span class="line">gcc -I/root/nginx-1.17.10/src/core \</span><br><span class="line">-I../../objs/ \</span><br><span class="line">-I../../src/os/unix/ \</span><br><span class="line">-E nginx.c</span><br><span class="line"></span><br><span class="line">gcc -I/root/nginx-1.17.10/src/core -I../../objs/ -I../../src/os/unix/ -E nginx.c &gt;nginx1.c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 预处理前后的对比</span></span><br><span class="line">gcc -I/root/nginx-1.17.10/src/core -I../../objs/ -I../../src/os/unix/ -E nginx.c |less -N</span><br><span class="line">less -N nginx.c.bak</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">gcc -S nginx1.c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 汇编</span></span><br><span class="line">gcc -c nginx1.s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 链接</span></span><br><span class="line">gcc nginx1.o -o nginx1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译后文件大小(行)</span></span><br><span class="line">1590 nginx.c.bak    <span class="comment"># 源码</span></span><br><span class="line">13535 nginx1.c      <span class="comment"># 预处理后代码，把所有需要的头文件都 include 进来</span></span><br><span class="line">3726 nginx1.s       <span class="comment"># 编译后汇编代码</span></span><br><span class="line">139 nginx1.o        <span class="comment"># 编译成目标文件</span></span><br></pre></td></tr></table></figure>
<h2 id="linux-可执行文件介绍"><a href="#linux-可执行文件介绍" class="headerlink" title="linux 可执行文件介绍"></a>linux 可执行文件介绍</h2><blockquote>
<p>ELF 是Executable and Linking Format的缩写，即可执行和可链接的格式，是Unix/Linux系统ABI (Application Binary Interface)规范的一部分。</p>
</blockquote>
<h3 id="usr-include-elf-h"><a href="#usr-include-elf-h" class="headerlink" title="/usr/include/elf.h"></a>/usr/include/elf.h</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"># 定义了ELF文件的数据类型</span><br><span class="line"> <span class="number">30</span> <span class="comment">/* Type for a 16-bit quantity.  */</span></span><br><span class="line">  <span class="number">31</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>16_t Elf32_Half;</span><br><span class="line">  <span class="number">32</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>16_t Elf64_Half;</span><br><span class="line">  <span class="number">33</span> </span><br><span class="line">  <span class="number">34</span> <span class="comment">/* Types for signed and unsigned 32-bit quantities.  */</span></span><br><span class="line">  <span class="number">35</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>32_t Elf32_Word;</span><br><span class="line">  <span class="number">36</span> <span class="keyword">typedef</span> <span class="built_in">int</span>32_t  Elf32_Sword;</span><br><span class="line">  <span class="number">37</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>32_t Elf64_Word;</span><br><span class="line">  <span class="number">38</span> <span class="keyword">typedef</span> <span class="built_in">int</span>32_t  Elf64_Sword;</span><br><span class="line">  <span class="number">39</span> </span><br><span class="line">  <span class="number">40</span> <span class="comment">/* Types for signed and unsigned 64-bit quantities.  */</span></span><br><span class="line">  <span class="number">41</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>64_t Elf32_Xword;</span><br><span class="line">  <span class="number">42</span> <span class="keyword">typedef</span> <span class="built_in">int</span>64_t  Elf32_Sxword;</span><br><span class="line">  <span class="number">43</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>64_t Elf64_Xword;</span><br><span class="line">  <span class="number">44</span> <span class="keyword">typedef</span> <span class="built_in">int</span>64_t  Elf64_Sxword;</span><br><span class="line">  <span class="number">45</span> </span><br><span class="line">  <span class="number">46</span> <span class="comment">/* Type of addresses.  */</span></span><br><span class="line">  <span class="number">47</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>32_t Elf32_Addr;</span><br><span class="line">  <span class="number">48</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>64_t Elf64_Addr;</span><br><span class="line">  <span class="number">49</span> </span><br><span class="line">  <span class="number">50</span> <span class="comment">/* Type of file offsets.  */</span></span><br><span class="line">  <span class="number">51</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>32_t Elf32_Off;</span><br><span class="line">  <span class="number">52</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>64_t Elf64_Off;</span><br><span class="line">  <span class="number">53</span> </span><br><span class="line">  <span class="number">54</span> <span class="comment">/* Type for section indices, which are 16-bit quantities.  */</span></span><br><span class="line">  <span class="number">55</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>16_t Elf32_Section;</span><br><span class="line">  <span class="number">56</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>16_t Elf64_Section;</span><br><span class="line">  <span class="number">57</span> </span><br><span class="line">  <span class="number">58</span> <span class="comment">/* Type for version symbol information.  */</span></span><br><span class="line">  <span class="number">59</span> <span class="keyword">typedef</span> Elf32_Half Elf32_Versym;</span><br><span class="line">  <span class="number">60</span> <span class="keyword">typedef</span> Elf64_Half Elf64_Versym;</span><br><span class="line"></span><br><span class="line"># 定义了可执行文件头部--结构体</span><br><span class="line">  <span class="number">67</span> <span class="keyword">typedef</span> struct</span><br><span class="line">  <span class="number">68</span> &#123;</span><br><span class="line">  <span class="number">69</span>   unsigned char e_ident[EI_NIDENT];     <span class="comment">/* Magic number and other info */</span></span><br><span class="line">  <span class="number">70</span>   Elf32_Half    e_type;                 <span class="comment">/* Object file type */</span></span><br><span class="line">  <span class="number">71</span>   Elf32_Half    e_machine;              <span class="comment">/* Architecture */</span></span><br><span class="line">  <span class="number">72</span>   Elf32_Word    e_version;              <span class="comment">/* Object file version */</span></span><br><span class="line">  <span class="number">73</span>   Elf32_Addr    e_entry;                <span class="comment">/* Entry point virtual address */</span></span><br><span class="line">  <span class="number">74</span>   Elf32_Off     e_phoff;                <span class="comment">/* Program header table file offset */</span></span><br><span class="line">  <span class="number">75</span>   Elf32_Off     e_shoff;                <span class="comment">/* Section header table file offset */</span></span><br><span class="line">  <span class="number">76</span>   Elf32_Word    e_flags;                <span class="comment">/* Processor-specific flags */</span></span><br><span class="line">  <span class="number">77</span>   Elf32_Half    e_ehsize;               <span class="comment">/* ELF header size in bytes */</span></span><br><span class="line">  <span class="number">78</span>   Elf32_Half    e_phentsize;            <span class="comment">/* Program header table entry size */</span></span><br><span class="line">  <span class="number">79</span>   Elf32_Half    e_phnum;                <span class="comment">/* Program header table entry count */</span></span><br><span class="line">  <span class="number">80</span>   Elf32_Half    e_shentsize;            <span class="comment">/* Section header table entry size */</span></span><br><span class="line">  <span class="number">81</span>   Elf32_Half    e_shnum;                <span class="comment">/* Section header table entry count */</span></span><br><span class="line">  <span class="number">82</span>   Elf32_Half    e_shstrndx;             <span class="comment">/* Section header string table index */</span></span><br><span class="line">  <span class="number">83</span> &#125; Elf32_Ehdr;</span><br><span class="line">  <span class="number">84</span> </span><br><span class="line">  <span class="number">85</span> <span class="keyword">typedef</span> struct</span><br><span class="line">  <span class="number">86</span> &#123;</span><br><span class="line">  <span class="number">87</span>   unsigned char e_ident[EI_NIDENT];     <span class="comment">/* Magic number and other info */</span></span><br><span class="line">  <span class="number">88</span>   Elf64_Half    e_type;                 <span class="comment">/* Object file type */</span></span><br><span class="line">  <span class="number">89</span>   Elf64_Half    e_machine;              <span class="comment">/* Architecture */</span></span><br><span class="line">  <span class="number">90</span>   Elf64_Word    e_version;              <span class="comment">/* Object file version */</span></span><br><span class="line">  <span class="number">91</span>   Elf64_Addr    e_entry;                <span class="comment">/* Entry point virtual address */</span></span><br><span class="line">  <span class="number">92</span>   Elf64_Off     e_phoff;                <span class="comment">/* Program header table file offset */</span></span><br><span class="line">  <span class="number">93</span>   Elf64_Off     e_shoff;                <span class="comment">/* Section header table file offset */</span></span><br><span class="line">  <span class="number">94</span>   Elf64_Word    e_flags;                <span class="comment">/* Processor-specific flags */</span></span><br><span class="line">  <span class="number">95</span>   Elf64_Half    e_ehsize;               <span class="comment">/* ELF header size in bytes */</span></span><br><span class="line">  <span class="number">96</span>   Elf64_Half    e_phentsize;            <span class="comment">/* Program header table entry size */</span></span><br><span class="line">  <span class="number">97</span>   Elf64_Half    e_phnum;                <span class="comment">/* Program header table entry count */</span></span><br><span class="line">  <span class="number">98</span>   Elf64_Half    e_shentsize;            <span class="comment">/* Section header table entry size */</span></span><br><span class="line">  <span class="number">99</span>   Elf64_Half    e_shnum;                <span class="comment">/* Section header table entry count */</span></span><br><span class="line"> <span class="number">100</span>   Elf64_Half    e_shstrndx;             <span class="comment">/* Section header string table index */</span></span><br><span class="line"> <span class="number">101</span> &#125; Elf64_Ehdr;</span><br><span class="line"></span><br><span class="line"># 解释了数值表示的意义</span><br><span class="line"> <span class="number">160</span> <span class="comment">/* Legal values for e_type (object file type).  */</span></span><br><span class="line"> <span class="number">161</span> </span><br><span class="line"> <span class="number">162</span> #define ET_NONE         <span class="number">0</span>               <span class="comment">/* No file type */</span></span><br><span class="line"> <span class="number">163</span> #define ET_REL          <span class="number">1</span>               <span class="comment">/* Relocatable file */</span></span><br><span class="line"> <span class="number">164</span> #define ET_EXEC         <span class="number">2</span>               <span class="comment">/* Executable file */</span></span><br><span class="line"> <span class="number">165</span> #define ET_DYN          <span class="number">3</span>               <span class="comment">/* Shared object file */</span></span><br><span class="line"> <span class="number">166</span> #define ET_CORE         <span class="number">4</span>               <span class="comment">/* Core file */</span></span><br><span class="line"> <span class="number">167</span> #define ET_NUM          <span class="number">5</span>               <span class="comment">/* Number of defined types */</span></span><br><span class="line"> <span class="number">168</span> #define ET_LOOS         <span class="number">0xfe00</span>          <span class="comment">/* OS-specific range start */</span></span><br><span class="line"> <span class="number">169</span> #define ET_HIOS         <span class="number">0xfeff</span>          <span class="comment">/* OS-specific range end */</span></span><br><span class="line"> <span class="number">170</span> #define ET_LOPROC       <span class="number">0xff00</span>          <span class="comment">/* Processor-specific range start */</span></span><br><span class="line"> <span class="number">171</span> #define ET_HIPROC       <span class="number">0xffff</span>          <span class="comment">/* Processor-specific range end */</span></span><br></pre></td></tr></table></figure>
<h3 id="通过-readelf-命令了解-linux-可执行文件"><a href="#通过-readelf-命令了解-linux-可执行文件" class="headerlink" title="通过 readelf 命令了解 linux 可执行文件"></a>通过 readelf 命令了解 linux 可执行文件</h3><ul>
<li>section<blockquote>
<p>目标代码文件的内容是由section组成的,.text，.bss，.data这些指示，都指的是section。</p>
<ul>
<li>section header table</li>
</ul>
</blockquote>
</li>
<li>segment<blockquote>
<p>可执行文件的内容是由segment组成的。</p>
<ul>
<li>program header table</li>
</ul>
</blockquote>
</li>
<li>Magic number<blockquote>
<p>Magic number一般是指硬写到代码里的整数常量，数值是编程者自己指定的，其他人不知道数值有什么具体意义，表示不明觉厉，就称作magic number。</p>
</blockquote>
</li>
<li>Magic number 作用<blockquote>
<p>file命令是一个很神奇的命令。它能够根据文件中魔数来判断文件类型。这比根据后缀来判断文件类型要靠谱一点。比如，即使把一张位图文件后缀名改为.jpg，file命令依然大公无私地告诉你它是一张bmp图片。<br>ELF文件头会写入一个magic number，检查这个数和自己预想的是否一致可以判断文件是否损坏。<br>在缓冲区数组旁放一个magic number（称作canary金丝雀），通过检查是否一致可检测缓冲区溢出攻击。</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看segment 和 section 对应关系</span></span><br><span class="line"><span class="attr">readelf</span> <span class="string">-l /usr/bin/sleep</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 反编译</span></span><br><span class="line"><span class="attr">readelf</span> <span class="string">-S nginx1.o</span></span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<h2 id="反汇编工具-objdump"><a href="#反汇编工具-objdump" class="headerlink" title="反汇编工具 objdump"></a>反汇编工具 objdump</h2><blockquote>
<p>objdump是用查看目标文件或者可执行的目标文件的构成</p>
</blockquote>
<ul>
<li><p>符号表</p>
<blockquote>
<p>在计算机科学中，符号表是一种用于语言翻译器（例如编译器和解释器）中的数据结构。<br>在符号表中，程序源代码中的每个标识符都和它的声明或使用信息绑定在一起，比如其数据类型、作用域以及内存地址。<br>散列表是用来实现符号表的一种常用技术。<br>编译器可能会使用一个很大的符号表来包含所有的符号，或是针对不同的作用域使用层次结构的多个独立的符号表。</p>
</blockquote>
</li>
<li><p>文件头</p>
</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">objdump</span> <span class="string">-f</span> <span class="string">nginx1.o</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">nginx1.o:</span>     <span class="string">file</span> <span class="string">format</span> <span class="string">elf64-x86-64</span></span><br><span class="line"><span class="attr">architecture:</span> <span class="string">i386:x86-64,</span> <span class="attr">flags 0x00000011:</span></span><br><span class="line"><span class="string">HAS_RELOC,</span> <span class="string">HAS_SYMS</span></span><br><span class="line"><span class="string">start</span> <span class="string">address</span> <span class="number">0x0000000000000000</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>计算机语言编译</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx</title>
    <url>/2020/05/nginx/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.kancloud.cn/digest/understandingnginx/202599" target="_blank" rel="noopener">理解 nginx 源码</a></p>
<h2 id="nginx-代码结构"><a href="#nginx-代码结构" class="headerlink" title="nginx 代码结构"></a>nginx 代码结构</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── core  <span class="meta"># Nginx的核心源代码，包括常用数据结构的以及Nginx 内核实现的核心代码；</span></span><br><span class="line">├── <span class="keyword">event</span> <span class="meta"># Nginx事件驱动模型，以及定时器的实现相关代码；</span></span><br><span class="line">├── http  <span class="meta"># Nginx 实现http 服务器相关的代码；</span></span><br><span class="line">├── mail  <span class="meta"># Nginx 实现邮件代理服务器相关的代码；</span></span><br><span class="line">├── misc  <span class="meta"># 辅助代码，测试C++头 的兼容性，以及对Google_PerfTools 的支持；</span></span><br><span class="line">├── os    <span class="meta"># 不同体系统结构所提供的系统函数的封装，提供对外统一的系统调用接口；</span></span><br><span class="line">└── stream <span class="meta">#</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>多语言helloworld示例</title>
    <url>/2020/05/%E5%A4%9A%E8%AF%AD%E8%A8%80helloworld%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="多语言helloworld示例"><a href="#多语言helloworld示例" class="headerlink" title="多语言helloworld示例"></a>多语言helloworld示例</h1><p><a href="https://www.runoob.com/w3cnote/hello-world-programs-of-24-programing-language.html" target="_blank" rel="noopener">runoob 示例</a></p>
<h3 id="python-示例"><a href="#python-示例" class="headerlink" title="python 示例"></a>python 示例</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">"Hello World"</span>)</span><br></pre></td></tr></table></figure>
<h3 id="C-示例"><a href="#C-示例" class="headerlink" title="C 示例"></a>C 示例</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">include <span class="string">"stdio.h"</span> <span class="comment">// 头文件</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;  <span class="comment">// 入口函数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello World\n"</span>) <span class="comment">// 输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="C-示例-1"><a href="#C-示例-1" class="headerlink" title="C++ 示例"></a>C++ 示例</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; <span class="comment">// 命名空间</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello World!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="java"><a href="#java" class="headerlink" title="java"></a>java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123; <span class="comment">// 类</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []args)</span> </span>&#123; <span class="comment">// 入口函数</span></span><br><span class="line">        System.out.println(<span class="string">"Hello World"</span>); <span class="comment">// 输出</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="golang-示例"><a href="#golang-示例" class="headerlink" title="golang 示例"></a>golang 示例</h3><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main <span class="comment">// 命名空间</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span> <span class="comment">// 输出包</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    fmt.Println(<span class="string">"Hello World"</span>) <span class="comment">// 输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>hello world</tag>
        <tag>指令集</tag>
      </tags>
  </entry>
  <entry>
    <title>Java环境准备</title>
    <url>/2020/05/Java%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li>
</li>
</ul>
<h2 id="JDK-安装"><a href="#JDK-安装" class="headerlink" title="JDK 安装"></a>JDK 安装</h2><ul>
<li><a href="https://www.oracle.com/java/" target="_blank" rel="noopener">Java</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/14/" target="_blank" rel="noopener">JDK docs</a></li>
</ul>
<h3 id="下载-JDK-包"><a href="#下载-JDK-包" class="headerlink" title="下载 JDK 包"></a>下载 JDK 包</h3><ul>
<li><a href="https://www.oracle.com/java/technologies/javase-jdk14-downloads.html" target="_blank" rel="noopener">Oracle JDK</a></li>
<li><a href="https://www.oracle.com/java/technologies/javase-downloads.html" target="_blank" rel="noopener">JDK download</a></li>
<li><a href="https://openjdk.java.net/" target="_blank" rel="noopener">OPENJDK</a></li>
</ul>
<h3 id="JAVA-开发工具"><a href="#JAVA-开发工具" class="headerlink" title="JAVA 开发工具"></a>JAVA 开发工具</h3><ul>
<li><a href="https://www.eclipse.org/downloads/" target="_blank" rel="noopener">Eclipse</a></li>
<li><a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">Idea</a></li>
</ul>
<h3 id="Java-框架"><a href="#Java-框架" class="headerlink" title="Java 框架"></a>Java 框架</h3><p><a href="https://spring.io/" target="_blank" rel="noopener">Spring family</a></p>
<h3 id="配置三个变量"><a href="#配置三个变量" class="headerlink" title="配置三个变量"></a>配置三个变量</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">JAVA_HOME <span class="comment"># 安装java目录</span></span><br><span class="line">CLASSPATH <span class="comment"># java 类库</span></span><br><span class="line">PATH      <span class="comment"># java 可执行路径</span></span><br></pre></td></tr></table></figure>
<h3 id="hello-world-示例"><a href="#hello-world-示例" class="headerlink" title="hello world 示例"></a>hello world 示例</h3><p>新建一个 Helloworld.class 文件<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// java 类声明</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 入口函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// java 输出语句</span></span><br><span class="line">        System.out.println(<span class="string">"Hello World"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
  </entry>
  <entry>
    <title>markdown数学公式</title>
    <url>/2020/05/markdown%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="行内与独行"><a href="#行内与独行" class="headerlink" title="行内与独行"></a>行内与独行</h2><p>行内公式：将公式插入到本行内，一个美元符，$xyz$</p>
<p>独行公式：将公式插入到新的一行内，并且居中，两个美元符，<script type="math/tex">xyz</script></p>
<h2 id="上标、下标与组合"><a href="#上标、下标与组合" class="headerlink" title="上标、下标与组合"></a>上标、下标与组合</h2><div class="table-container">
<table>
<thead>
<tr>
<th>符号</th>
<th>表示</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr>
<td>上标符号</td>
<td>^</td>
<td>$x^4$</td>
</tr>
<tr>
<td>下标符号</td>
<td>_</td>
<td>$x_1$</td>
</tr>
<tr>
<td>组合符号</td>
<td>{}</td>
<td>${16}<em>{8}O{2+}</em>{2}$</td>
</tr>
</tbody>
</table>
</div>
<h2 id="汉字、字体与格式"><a href="#汉字、字体与格式" class="headerlink" title="汉字、字体与格式"></a>汉字、字体与格式</h2><div class="table-container">
<table>
<thead>
<tr>
<th>符号</th>
<th>表示</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr>
<td>汉字形式</td>
<td>\mbox{}</td>
<td>$V_{\mbox{初始}}$</td>
</tr>
<tr>
<td>字体控制</td>
<td>\displaystyle</td>
<td>$\displaystyle \frac{x+y}{y+z}$</td>
</tr>
<tr>
<td>下划线符号</td>
<td>\underline</td>
<td>$\underline{x+y}$</td>
</tr>
<tr>
<td>标签</td>
<td>\tag{数字}</td>
<td>$\tag{12}$</td>
</tr>
<tr>
<td>上大括号</td>
<td>\overbrace{算式}</td>
<td>$\overbrace{a+b+c+d}^{2.0}$</td>
</tr>
<tr>
<td>下大括号</td>
<td>\underbrace{算式}</td>
<td>$a+\underbrace{b+c}_{1.0}+d$</td>
</tr>
<tr>
<td>上位符号</td>
<td>\stacrel{上位符号}{基位符号}</td>
<td>$\vec{x}\stackrel{\mathrm{def}}{=}{x_1,\dots,x_n}$</td>
</tr>
</tbody>
</table>
</div>
<h2 id="占位符"><a href="#占位符" class="headerlink" title="占位符"></a>占位符</h2><div class="table-container">
<table>
<thead>
<tr>
<th>符号</th>
<th>表示</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr>
<td>两个quad空格</td>
<td>\qquad</td>
<td>$x \qquad y$</td>
</tr>
<tr>
<td>quad空格</td>
<td>\quad</td>
<td>$x \quad y$</td>
</tr>
<tr>
<td>大空格</td>
<td>符号\</td>
<td>$x \ y$</td>
</tr>
<tr>
<td>中空格</td>
<td>符号\:</td>
<td>$x : y$</td>
</tr>
<tr>
<td>小空格</td>
<td>符号\,</td>
<td>$x , y$</td>
</tr>
<tr>
<td>没有空格</td>
<td>符号``</td>
<td>$xy$</td>
</tr>
<tr>
<td>紧贴</td>
<td>符号!</td>
<td>$x ! y$</td>
</tr>
</tbody>
</table>
</div>
<h2 id="定界符与组合"><a href="#定界符与组合" class="headerlink" title="定界符与组合"></a>定界符与组合</h2><div class="table-container">
<table>
<thead>
<tr>
<th>符号</th>
<th>表示</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr>
<td>括号</td>
<td>（）\big(\big) \Big(\Big) \bigg(\bigg) \Bigg(\Bigg)</td>
<td>$（）\big(\big) \Big(\Big) \bigg(\bigg) \Bigg(\Bigg)$</td>
</tr>
<tr>
<td>中括号</td>
<td>[]</td>
<td>$[x+y]$</td>
</tr>
<tr>
<td>大括号</td>
<td>{ }</td>
<td>${x+y}$</td>
</tr>
<tr>
<td>自适应括号</td>
<td>\left</td>
<td>$\left(x\right)$</td>
</tr>
<tr>
<td>自适应括号</td>
<td>\right</td>
<td>$\left(x{yz}\right)$</td>
</tr>
<tr>
<td>组合公式</td>
<td>{上位公式 \choose 下位公式}</td>
<td>${n+1 \choose k}={n \choose k}+{n \choose k-1}$</td>
</tr>
<tr>
<td>组合公式</td>
<td>{上位公式 \atop 下位公式}</td>
<td>$\sum{k_0,k_1,\ldots&gt;0 \atop k_0+k_1+\cdots=n}A{k0}A{k_1}\cdots$</td>
</tr>
</tbody>
</table>
</div>
<blockquote>
<p>$\sum<em>{k_0,k_1,\ldots&gt;0 \atop k_0+k_1+\cdots=n}A</em>{k<em>0}A</em>{k_1}\cdots$</p>
</blockquote>
<h2 id="四则运算"><a href="#四则运算" class="headerlink" title="四则运算"></a>四则运算</h2><div class="table-container">
<table>
<thead>
<tr>
<th>运算符</th>
<th>符号</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr>
<td>加法运算</td>
<td>+</td>
<td>$x+y=z$</td>
</tr>
<tr>
<td>减法运算</td>
<td>-</td>
<td>$x-y=z$</td>
</tr>
<tr>
<td>加减运算</td>
<td>\pm</td>
<td>$x \pm y=z$</td>
</tr>
<tr>
<td>减甲运算</td>
<td>\mp</td>
<td>$x \mp y=z$</td>
</tr>
<tr>
<td>乘法运算</td>
<td>\times</td>
<td>$x \times y=z$</td>
</tr>
<tr>
<td>点乘运算</td>
<td>\cdot</td>
<td>$x \cdot y=z$</td>
</tr>
<tr>
<td>星乘运算</td>
<td>\ast</td>
<td>$x \ast y=z$</td>
</tr>
<tr>
<td>除法运算</td>
<td>\div</td>
<td>$x \div y=z$</td>
</tr>
<tr>
<td>斜法运算</td>
<td>/</td>
<td>$x/y=z$</td>
</tr>
<tr>
<td>分式表示</td>
<td>\frac{分子}{分母}</td>
<td>$\frac{x+y}{y+z}$</td>
</tr>
<tr>
<td>分式表示</td>
<td>{分子} \voer {分母}</td>
<td>${x+y} \over {y+z}$</td>
</tr>
<tr>
<td>绝对值表示</td>
<td></td>
<td>$x+y$</td>
</tr>
</tbody>
</table>
</div>
<h2 id="高级运算"><a href="#高级运算" class="headerlink" title="高级运算"></a>高级运算</h2><div class="table-container">
<table>
<thead>
<tr>
<th>运算符</th>
<th>符号</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr>
<td>平均数运算</td>
<td>\overline{算式}</td>
<td>$\overline{xyz}$</td>
</tr>
<tr>
<td>开二次方运算</td>
<td>\sqrt</td>
<td>$\sqrt x$</td>
</tr>
<tr>
<td>开方运算</td>
<td>\sqrt[开方数]{被开方数}</td>
<td>$\sqrt[3]{x+y}$</td>
</tr>
<tr>
<td>对数运算</td>
<td>\log</td>
<td>$\log(x)$</td>
</tr>
<tr>
<td>极限运算</td>
<td>\lim</td>
<td>$\lim^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</td>
</tr>
<tr>
<td>极限运算</td>
<td>\displaystyle \lim</td>
<td>$\displaystyle \lim^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</td>
</tr>
<tr>
<td>求和运算</td>
<td>\sum</td>
<td>$\sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</td>
</tr>
<tr>
<td>求和运算</td>
<td>\displaystyle \sum</td>
<td>$\displaystyle \sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</td>
</tr>
<tr>
<td>积分运算</td>
<td>\int</td>
<td>$\int^{\infty}_{0}{xdx}$</td>
</tr>
<tr>
<td>积分运算</td>
<td>\displaystyle \int</td>
<td>$\displaystyle \int^{\infty}_{0}{xdx}$</td>
</tr>
<tr>
<td>微分运算</td>
<td>\partial</td>
<td>$\frac{\partial x}{\partial y}$</td>
</tr>
<tr>
<td>矩阵表示</td>
<td>\begin{matrix} \end{matrix}</td>
<td>$\left[ \begin{matrix} 1 &amp; 2 &amp; 3 \cdots \vdots 4 &amp; 5 &amp; 6 \end{matrix} \right]$</td>
</tr>
</tbody>
</table>
</div>
<blockquote>
<p>\ddots \cdots</p>
</blockquote>
<h2 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h2><div class="table-container">
<table>
<thead>
<tr>
<th>逻辑运算</th>
<th>符号</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr>
<td>等于运算</td>
<td>=</td>
<td>$x+y=z$</td>
</tr>
<tr>
<td>大于运算</td>
<td>&gt;</td>
<td>$x+y&gt;z$</td>
</tr>
<tr>
<td>小于运算</td>
<td>&lt;</td>
<td>$x+y&lt;z$</td>
</tr>
<tr>
<td>大于等于运算</td>
<td>\geq</td>
<td>$x+y \geq z$</td>
</tr>
<tr>
<td>小于等于运算</td>
<td>\leq</td>
<td>$x+y \leq z$</td>
</tr>
<tr>
<td>不等于运算</td>
<td>\neq</td>
<td>$x+y \neq z$</td>
</tr>
<tr>
<td>不大于等于运算</td>
<td>\ngeq</td>
<td>$x+y \ngeq z$</td>
</tr>
<tr>
<td>不大于等于运算</td>
<td>\not\geq</td>
<td>$x+y \not\geq z$</td>
</tr>
<tr>
<td>不小于等于运算</td>
<td>\nleq</td>
<td>$x+y \nleq z$</td>
</tr>
<tr>
<td>不小于等于运算</td>
<td>\not\leq</td>
<td>$x+y \not\leq z$</td>
</tr>
<tr>
<td>约等于运算</td>
<td>\approx</td>
<td>$x+y \approx z$</td>
</tr>
<tr>
<td>恒定等于运算</td>
<td>\equiv</td>
<td>$x+y \equiv z$</td>
</tr>
</tbody>
</table>
</div>
<h2 id="集合运算"><a href="#集合运算" class="headerlink" title="集合运算"></a>集合运算</h2><div class="table-container">
<table>
<thead>
<tr>
<th>数学运算</th>
<th>符号</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr>
<td>属于运算</td>
<td>\in</td>
<td>$x \in y$</td>
</tr>
<tr>
<td>不属于运算</td>
<td>\notin</td>
<td>$x \notin y$</td>
</tr>
<tr>
<td>不属于运算</td>
<td>\not\in</td>
<td>$x \not\in y$</td>
</tr>
<tr>
<td>子集运算</td>
<td>\subset</td>
<td>$x \subset y$</td>
</tr>
<tr>
<td>子集运算</td>
<td>\supset</td>
<td>$x \supset y$</td>
</tr>
<tr>
<td>真子集运算</td>
<td>\subseteq</td>
<td>$x \subseteq y$</td>
</tr>
<tr>
<td>非真子集运算</td>
<td>\subsetneq</td>
<td>$x \subsetneq y$</td>
</tr>
<tr>
<td>真子集运算</td>
<td>\supseteq</td>
<td>$x \supseteq y$</td>
</tr>
<tr>
<td>非真子集运算</td>
<td>\supsetneq</td>
<td>$x \supsetneq y$</td>
</tr>
<tr>
<td>非子集运算</td>
<td>\not\subset</td>
<td>$x \not\subset y$</td>
</tr>
<tr>
<td>非子集运算</td>
<td>\not\supset</td>
<td>$x \not\supset y$</td>
</tr>
<tr>
<td>并集运算</td>
<td>\cup</td>
<td>$x \cup y$</td>
</tr>
<tr>
<td>交集运算</td>
<td>\cap</td>
<td>$x \cap y$</td>
</tr>
<tr>
<td>差集运算</td>
<td>\setminus</td>
<td>$x \setminus y$</td>
</tr>
<tr>
<td>同或运算</td>
<td>\bigodot</td>
<td>$x \bigodot y$</td>
</tr>
<tr>
<td>同与运算</td>
<td>\bigotimes</td>
<td>$x \bigotimes y$</td>
</tr>
<tr>
<td>实数集合</td>
<td>\mathbb{R}</td>
<td>\mathbb{R}</td>
</tr>
<tr>
<td>自然数集合</td>
<td>\mathbb{Z}</td>
<td>\mathbb{Z}</td>
</tr>
<tr>
<td>空集</td>
<td>\emptyset</td>
<td>$\emptyset$</td>
</tr>
</tbody>
</table>
</div>
<h2 id="数学符号"><a href="#数学符号" class="headerlink" title="数学符号"></a>数学符号</h2><div class="table-container">
<table>
<thead>
<tr>
<th>学名</th>
<th>符号</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr>
<td>无穷</td>
<td>\infty</td>
<td>$\infty$</td>
</tr>
<tr>
<td>虚数</td>
<td>\imath</td>
<td>$\imath$</td>
</tr>
<tr>
<td>虚数</td>
<td>\jmath</td>
<td>$\jmath$</td>
</tr>
<tr>
<td>数学符号</td>
<td>符号\hat{a}</td>
<td>$\hat{a}$</td>
</tr>
<tr>
<td>数学符号</td>
<td>符号\check{a}</td>
<td>$\check{a}$</td>
</tr>
<tr>
<td>数学符号</td>
<td>符号\breve{a}</td>
<td>$\breve{a}$</td>
</tr>
<tr>
<td>数学符号</td>
<td>符号\tilde{a}</td>
<td>$\tilde{a}$</td>
</tr>
<tr>
<td>数学符号</td>
<td>符号\bar{a}</td>
<td>$\bar{a}$</td>
</tr>
<tr>
<td>矢量符号</td>
<td>符号\vec{a}</td>
<td>$\vec{a}$</td>
</tr>
<tr>
<td>数学符号</td>
<td>符号\acute{a}</td>
<td>$\acute{a}$</td>
</tr>
<tr>
<td>数学符号</td>
<td>符号\grave{a}</td>
<td>$\grave{a}$</td>
</tr>
<tr>
<td>数学符号</td>
<td>符号\mathring{a}</td>
<td>$\mathring{a}$</td>
</tr>
<tr>
<td>一阶导数符号</td>
<td>符号\dot{a}</td>
<td>$\dot{a}$</td>
</tr>
<tr>
<td>二阶导数符号</td>
<td>符号\ddot{a}</td>
<td>$\ddot{a}$</td>
</tr>
<tr>
<td>上箭头</td>
<td>\uparrow</td>
<td>$\uparrow$</td>
</tr>
<tr>
<td>上箭头</td>
<td>\Uparrow</td>
<td>$\Uparrow$</td>
</tr>
<tr>
<td>下箭头</td>
<td>\downarrow</td>
<td>$\downarrow$</td>
</tr>
<tr>
<td>下箭头</td>
<td>\Downarrow</td>
<td>$\Downarrow$</td>
</tr>
<tr>
<td>左箭头</td>
<td>\leftarrow</td>
<td>$\leftarrow$</td>
</tr>
<tr>
<td>左箭头</td>
<td>\Leftarrow</td>
<td>$\Leftarrow$</td>
</tr>
<tr>
<td>右箭头</td>
<td>\rightarrow</td>
<td>$\rightarrow$</td>
</tr>
<tr>
<td>右箭头</td>
<td>\Rightarrow</td>
<td>$\Rightarrow$</td>
</tr>
<tr>
<td>底端对齐的省略号</td>
<td>\ldots</td>
<td>$1,2,\ldots,n$</td>
</tr>
<tr>
<td>中线对齐的省略号</td>
<td>\cdots</td>
<td>$x_1^2 + x_2^2 + \cdots + x_n^2$</td>
</tr>
<tr>
<td>竖直对齐的省略号</td>
<td>\vdots</td>
<td>$\vdots$</td>
</tr>
<tr>
<td>斜对齐的省略号</td>
<td>\ddots</td>
<td>$\ddots$</td>
</tr>
</tbody>
</table>
</div>
<h2 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h2><div class="table-container">
<table>
<thead>
<tr>
<th>字母</th>
<th>实现</th>
<th>字母</th>
<th>实现</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>A</td>
<td>α</td>
<td>\alhpa</td>
</tr>
<tr>
<td>B</td>
<td>B</td>
<td>β</td>
<td>\beta</td>
</tr>
<tr>
<td>Γ</td>
<td>\Gamma</td>
<td>γ</td>
<td>\gamma</td>
</tr>
<tr>
<td>Δ</td>
<td>\Delta</td>
<td>δ</td>
<td>\delta</td>
</tr>
<tr>
<td>E</td>
<td>E</td>
<td>ϵ</td>
<td>\epsilon</td>
</tr>
<tr>
<td>Z</td>
<td>Z</td>
<td>ζ</td>
<td>\zeta</td>
</tr>
<tr>
<td>H</td>
<td>H</td>
<td>η</td>
<td>\eta</td>
</tr>
<tr>
<td>Θ</td>
<td>\Theta</td>
<td>θ</td>
<td>\theta</td>
</tr>
<tr>
<td>I</td>
<td>I</td>
<td>ι</td>
<td>\iota</td>
</tr>
<tr>
<td>K</td>
<td>K</td>
<td>κ</td>
<td>\kappa</td>
</tr>
<tr>
<td>Λ</td>
<td>\Lambda</td>
<td>λ</td>
<td>\lambda</td>
</tr>
<tr>
<td>M</td>
<td>M</td>
<td>μ</td>
<td>\mu</td>
</tr>
<tr>
<td>N</td>
<td>N</td>
<td>ν</td>
<td>\nu</td>
</tr>
<tr>
<td>Ξ</td>
<td>\Xi</td>
<td>ξ</td>
<td>\xi</td>
</tr>
<tr>
<td>O</td>
<td>O</td>
<td>ο</td>
<td>\omicron</td>
</tr>
<tr>
<td>Π</td>
<td>\Pi</td>
<td>π</td>
<td>\pi</td>
</tr>
<tr>
<td>P</td>
<td>P</td>
<td>ρ</td>
<td>\rho</td>
</tr>
<tr>
<td>Σ</td>
<td>\Sigma</td>
<td>σ</td>
<td>\sigma</td>
</tr>
<tr>
<td>T</td>
<td>T</td>
<td>τ</td>
<td>\tau</td>
</tr>
<tr>
<td>Υ</td>
<td>\Upsilon</td>
<td>υ</td>
<td>\upsilon</td>
</tr>
<tr>
<td>Φ</td>
<td>\Phi</td>
<td>ϕ</td>
<td>\phi</td>
</tr>
<tr>
<td>X</td>
<td>X</td>
<td>χ</td>
<td>\chi</td>
</tr>
<tr>
<td>Ψ</td>
<td>\Psi</td>
<td>ψ</td>
<td>\psi</td>
</tr>
<tr>
<td>Ω</td>
<td>\v</td>
<td>ω</td>
<td>\omega</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>数学公式</tag>
      </tags>
  </entry>
  <entry>
    <title>python环境准备</title>
    <url>/2020/05/python%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://www.python.org/" target="_blank" rel="noopener">Python</a></li>
<li><a href="https://www.python.org/doc/" target="_blank" rel="noopener">Python docs</a><blockquote>
<p>练习时使用最新版，部署时尽量不要使用最新版。很多开发库没跟上。</p>
<p>对于初学者建议不要选用太多自动化的工具。云里雾里遇到问题就歇菜。</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>数据分析，直接选用 anaconda</p>
<p>数据分析也常用 jupter 工具</p>
<ul>
<li><a href="https://www.anaconda.com/products/individual#Downloads" target="_blank" rel="noopener">Anaconda</a></li>
<li><a href="https://jupyter.org/install" target="_blank" rel="noopener">jupter</a></li>
</ul>
</blockquote>
<ul>
<li><a href="https://pypi.org/project/pip/" target="_blank" rel="noopener">包管理工具 pip</a></li>
</ul>
<blockquote>
<p>交互工具选用 ipython<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install ipython</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="安装-Python-3-8-2"><a href="#安装-Python-3-8-2" class="headerlink" title="安装 Python 3.8.2"></a>安装 Python 3.8.2</h2><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">wget http<span class="variable">s:</span>//www.<span class="keyword">python</span>.org/ftp/<span class="keyword">python</span>/<span class="number">3.8</span>.<span class="number">2</span>/Python-<span class="number">3.8</span>.<span class="number">2</span>.tgz</span><br><span class="line">tar -zxf Python-<span class="number">3.8</span>.<span class="number">2</span>.tgz </span><br><span class="line"><span class="keyword">cd</span> Python-<span class="number">3.8</span>.<span class="number">2</span></span><br><span class="line">./configure  --prefix /usr/local/<span class="keyword">python</span></span><br><span class="line"><span class="keyword">make</span> -<span class="keyword">j</span> $(/proc/cpuinfo |<span class="keyword">grep</span> cores|wc -<span class="keyword">l</span>)</span><br><span class="line"><span class="keyword">make</span> install</span><br><span class="line"></span><br><span class="line"># 配置国内镜像源</span><br><span class="line"><span class="built_in">mkdir</span> ~/.pip</span><br><span class="line"><span class="keyword">cat</span> &lt;&lt;<span class="string">'EOF'</span> &gt;~/.pip/pip.<span class="keyword">conf</span> </span><br><span class="line">[<span class="keyword">global</span>]</span><br><span class="line"><span class="built_in">index</span>-url = http://pypi.douban.<span class="keyword">com</span>/simple</span><br><span class="line">extra-<span class="built_in">index</span>-url=http<span class="variable">s:</span>//mirrors.aliyun.<span class="keyword">com</span>/pypi/simple</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 配置虚拟环境</span><br><span class="line">/usr/local/<span class="keyword">python</span>/bin/pip3 install --upgrade pip</span><br><span class="line">/usr/local/<span class="keyword">python</span>/bin/pip3 install virtualenv</span><br><span class="line">/usr/local/<span class="keyword">python</span>/bin/virtualenv demo</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">". demo/bin/activate"</span> &gt;&gt;~/.bash_profile</span><br><span class="line">. demo/bin/activate</span><br><span class="line">pip install django</span><br><span class="line"></span><br><span class="line"><span class="keyword">python</span> --<span class="keyword">version</span></span><br><span class="line"># <span class="keyword">verbose</span> (跟踪导入的语句 trace import statements)</span><br><span class="line"><span class="keyword">python</span> -v</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Rancher安装配置</title>
    <url>/2020/05/Rancher%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://docs.rancher.cn/rancher2x/quick-start.html" target="_blank" rel="noopener"> rander 2.x 新文档 </a></li>
</ul>
<h2 id="Rancher-2-X-docker-安装"><a href="#Rancher-2-X-docker-安装" class="headerlink" title="Rancher 2.X docker 安装"></a>Rancher 2.X docker 安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载最新的镜像</span></span><br><span class="line">docker pull rancher/rancher</span><br><span class="line">docker image ls</span><br><span class="line"><span class="comment"># 查看镜像详情</span></span><br><span class="line">docker inspect rancher/rancher:latest</span><br><span class="line">---</span><br><span class="line"> <span class="string">"Volumes"</span>: &#123;</span><br><span class="line">                <span class="string">"/var/lib/rancher"</span>: &#123;&#125;,</span><br><span class="line">                <span class="string">"/var/log/auditlog"</span>: &#123;&#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"WorkingDir"</span>: <span class="string">"/var/lib/rancher"</span></span><br><span class="line">---</span><br><span class="line"><span class="comment"># 创建 pvc</span></span><br><span class="line">mkdir -p /docker_volume/rancher_home/rancher</span><br><span class="line">mkdir -p /docker_volume/rancher_home/auditlog</span><br><span class="line"><span class="comment"># 运行</span></span><br><span class="line">docker run -d --restart=unless-stopped -p 80:80 -p 443:443 \</span><br><span class="line">-v /docker_volume/rancher_home/rancher:/var/lib/rancher \</span><br><span class="line">-v /docker_volume/rancher_home/auditlog:/var/<span class="built_in">log</span>/auditlog \</span><br><span class="line">--name rancher rancher/rancher  </span><br><span class="line"><span class="comment"># 查看容器</span></span><br><span class="line">docker container ls</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问</span></span><br><span class="line">http://192.168.0.61</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 admin 密码</span></span><br><span class="line">admin@123456.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择页面底部 设置语言</span></span><br></pre></td></tr></table></figure>
<h2 id="docker-compose-启动"><a href="#docker-compose-启动" class="headerlink" title="docker-compose 启动"></a>docker-compose 启动</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir rancher;<span class="built_in">cd</span> rancher</span><br><span class="line">cat &lt;&lt;<span class="string">'EOF'</span>&gt;docker-compose.yml</span><br><span class="line">version: <span class="string">"3.7"</span></span><br><span class="line">services:</span><br><span class="line">  rancher:</span><br><span class="line">    container_name: rancher</span><br><span class="line">    image: rancher/rancher</span><br><span class="line">    restart: always</span><br><span class="line">    volumes:</span><br><span class="line">    - /data/rancher_home/rancher:/var/lib/rancher </span><br><span class="line">    - /data/rancher_home/auditlog:/var/<span class="built_in">log</span>/auditlog</span><br><span class="line">    ports:</span><br><span class="line">    - 80:80</span><br><span class="line">    - 443:443</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">docker-compose up -d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">docker-compose stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置</span></span><br><span class="line">docker-compose down</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>
<h2 id="导入现有的-kubernetes-集群"><a href="#导入现有的-kubernetes-集群" class="headerlink" title="导入现有的 kubernetes 集群"></a>导入现有的 kubernetes 集群</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加集群 -&gt; 导入现有集群 -&gt; 名称 -&gt; 导入命令 -&gt; 完成 </span></span><br><span class="line"><span class="comment"># 需要 kubernetes 管理员权限，已经有了无需执行</span></span><br><span class="line">kubectl create clusterrolebinding cluster-admin-binding --clusterrole cluster-admin --user [USER_ACCOUNT]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 kubernetes 集群执行</span></span><br><span class="line"><span class="comment"># 有证书</span></span><br><span class="line">kubectl apply -f https://192.168.0.61/v3/import/d2nkw8bzktbzrtsnfcdbxdzjbxqpbn8gwbhntxcpprwpf7jq9t9689.yaml</span><br><span class="line"><span class="comment"># 绕过证书检查</span></span><br><span class="line">curl --insecure -sfL https://192.168.0.61/v3/import/d2nkw8bzktbzrtsnfcdbxdzjbxqpbn8gwbhntxcpprwpf7jq9t9689.yaml | kubectl apply -f -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 会在kubernetes 上所有节点上创建 </span></span><br><span class="line">cattle-node-agent</span><br><span class="line"><span class="comment"># 在 master 上创建两个 pod</span></span><br><span class="line">cattle-cluster-agent</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>Harbor安装配置</title>
    <url>/2020/05/Harbor%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://github.com/goharbor/harbor/blob/master/docs/README.md" target="_blank" rel="noopener">Harbor docs</a></li>
<li><a href="https://docs.docker.com/engine/install/" target="_blank" rel="noopener">Docker engine install</a></li>
<li><a href="https://docs.docker.com/compose/install/" target="_blank" rel="noopener">Docker compose install</a></li>
</ul>
<h2 id="安装需求"><a href="#安装需求" class="headerlink" title="安装需求"></a>安装需求</h2><a href="/2020/05/%E9%85%8D%E7%BD%AE%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90/" title="配置国内镜像源">配置国内镜像源</a>
<a href="/2020/05/Docker%E5%AE%89%E8%A3%85/" title="Docker安装">Docker安装</a>
<a href="/2020/05/Dockerfile/" title="docker容器制作">docker容器制作</a>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Docker engine Version 17.06.0-ce+ or higher</span></span><br><span class="line"></span><br><span class="line">docker version</span><br><span class="line">---</span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           19.03.8</span><br><span class="line"> API version:       1.39 (downgraded from 1.40)</span><br><span class="line"> Go version:        go1.12.17</span><br><span class="line"> Git commit:        afacb8b</span><br><span class="line"> Built:             Wed Mar 11 01:27:04 2020</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Experimental:      <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          18.09.7</span><br><span class="line">  API version:      1.39 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.10.8</span><br><span class="line">  Git commit:       2d0083d</span><br><span class="line">  Built:            Thu Jun 27 17:26:28 2019</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     <span class="literal">false</span></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="comment"># Docker Compose Version 1.18.0 or higher</span></span><br><span class="line"></span><br><span class="line">sudo curl -L <span class="string">"https://github.com/docker/compose/releases/download/1.25.5/docker-compose-<span class="variable">$(uname -s)</span>-<span class="variable">$(uname -m)</span>"</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">sudo chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">sudo ln -s /usr/<span class="built_in">local</span>/bin/docker-compose /usr/bin/docker-compose</span><br><span class="line">docker-compose --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># Openssl Latest is preferred</span></span><br></pre></td></tr></table></figure>
<h2 id="harbor-下载"><a href="#harbor-下载" class="headerlink" title="harbor 下载"></a><a href="https://github.com/goharbor/harbor/releases" target="_blank" rel="noopener">harbor 下载</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxf harbor-offline-installer-v2.0.0.tgz</span><br><span class="line"><span class="built_in">cd</span> harbor</span><br><span class="line">cp harbor.yml.tmpl harbor.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 harbor.yml</span></span><br><span class="line">hostname 本机IP</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把 ssl 先注释</span></span><br><span class="line">https:</span><br><span class="line">  port: 443</span><br><span class="line">  certificate: /your/certificate/path</span><br><span class="line">  private_key: /your/private/key/path</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载镜像</span></span><br><span class="line">./prepare </span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">./install.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">docker-compose stop </span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新部署</span></span><br><span class="line">docker-compose down</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>
<h3 id="安装-17-个镜像，启动了10个容器"><a href="#安装-17-个镜像，启动了10个容器" class="headerlink" title="安装 17 个镜像，启动了10个容器"></a>安装 17 个镜像，启动了10个容器</h3><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">goharbor/chartmuseum-photon    <span class="comment">#</span></span><br><span class="line">goharbor/redis-photon          <span class="comment">#</span></span><br><span class="line">goharbor/trivy-adapter-photon  <span class="comment">#</span></span><br><span class="line">goharbor/clair-adapter-photon  <span class="comment">#</span></span><br><span class="line">goharbor/clair-photon          <span class="comment">#</span></span><br><span class="line">goharbor/notary-server-photon  </span><br><span class="line">goharbor/notary-signer-photon  </span><br><span class="line">goharbor/harbor-registryctl    </span><br><span class="line">goharbor/registry-photon       </span><br><span class="line">goharbor/nginx-photon          </span><br><span class="line">goharbor/harbor-<span class="built_in">log</span>            </span><br><span class="line">goharbor/harbor-jobservice     </span><br><span class="line">goharbor/harbor-core           </span><br><span class="line">goharbor/harbor-portal         </span><br><span class="line">goharbor/harbor-db             </span><br><span class="line">goharbor/<span class="built_in">prepare</span></span><br></pre></td></tr></table></figure>
<h3 id="Harbor-目录结构"><a href="#Harbor-目录结构" class="headerlink" title="Harbor 目录结构"></a>Harbor 目录结构</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/data/</span><br><span class="line">├── ca_download</span><br><span class="line">├── database <span class="comment"># pg 数据库</span></span><br><span class="line">│   ├── base</span><br><span class="line">│   ├── global</span><br><span class="line">│   ├── pg_clog</span><br><span class="line">│   ├── pg_commit_ts</span><br><span class="line">│   ├── pg_dynshmem</span><br><span class="line">│   ├── pg_hba.conf</span><br><span class="line">│   ├── pg_ident.conf</span><br><span class="line">│   ├── pg_logical</span><br><span class="line">│   ├── pg_multixact</span><br><span class="line">│   ├── pg_notify</span><br><span class="line">│   ├── pg_replslot</span><br><span class="line">│   ├── pg_serial</span><br><span class="line">│   ├── pg_snapshots</span><br><span class="line">│   ├── pg_stat</span><br><span class="line">│   ├── pg_stat_tmp</span><br><span class="line">│   ├── pg_subtrans</span><br><span class="line">│   ├── pg_tblspc</span><br><span class="line">│   ├── pg_twophase</span><br><span class="line">│   ├── PG_VERSION</span><br><span class="line">│   ├── pg_xlog</span><br><span class="line">│   ├── postgresql.auto.conf</span><br><span class="line">│   ├── postgresql.conf</span><br><span class="line">│   ├── postmaster.opts</span><br><span class="line">│   └── postmaster.pid</span><br><span class="line">├── job_logs</span><br><span class="line">├── redis</span><br><span class="line">│   └── dump.rdb</span><br><span class="line">├── registry <span class="comment">#仓库</span></span><br><span class="line">└── secret <span class="comment">#密码</span></span><br><span class="line">    ├── core</span><br><span class="line">    ├── keys</span><br><span class="line">    └── registry</span><br></pre></td></tr></table></figure>
<h3 id="web-管理"><a href="#web-管理" class="headerlink" title="web 管理"></a>web 管理</h3><p><a href="http://192.168.1.71/" target="_blank" rel="noopener">http://192.168.1.71/</a><br>默认用户名密码<br>admin,Harbor12345</p>
<h3 id="创建一个项目"><a href="#创建一个项目" class="headerlink" title="创建一个项目"></a>创建一个项目</h3><blockquote>
<p>登录后</p>
<ul>
<li>创建一个项目 newproject,分配大小。（ -1 不限制）</li>
<li>创建一个用户 new,New@1234</li>
<li>到项目中授权新用户为项目管理员</li>
<li>项目角色<ul>
<li>项目管理员</li>
<li>开发</li>
<li>维护</li>
<li>访客</li>
</ul>
</li>
</ul>
</blockquote>
<h2 id="客户端使用-配置docker信任"><a href="#客户端使用-配置docker信任" class="headerlink" title="客户端使用,配置docker信任"></a>客户端使用,配置docker信任</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"insecure-registries"</span>: [<span class="string">"192.168.1.61:81"</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">systemctl reload docker</span><br></pre></td></tr></table></figure>
<h3 id="制作上传镜像"><a href="#制作上传镜像" class="headerlink" title="制作上传镜像"></a>制作上传镜像</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"># 制作镜像</span><br><span class="line">docker tag busybox <span class="number">192.168</span><span class="number">.0</span><span class="number">.61</span>:<span class="number">81</span>/newproject/busybox:<span class="number">0.1</span></span><br><span class="line"># 将当前容器打为镜像 (docker commit 当前运行的容器名 新镜像名:版本号)</span><br><span class="line">docker commit busybox <span class="number">192.168</span><span class="number">.0</span><span class="number">.61</span>:<span class="number">81</span>/newproject/busybox:<span class="number">0.2</span></span><br><span class="line"></span><br><span class="line"># 登录镜像库</span><br><span class="line">docker login <span class="number">192.168</span><span class="number">.0</span><span class="number">.61</span>:<span class="number">81</span></span><br><span class="line"># 上传镜像</span><br><span class="line">docker push <span class="number">192.168</span><span class="number">.0</span><span class="number">.61</span>:<span class="number">81</span>/newproject/busybox:<span class="number">0.1</span></span><br></pre></td></tr></table></figure>
<h3 id="docker-login-镜像库"><a href="#docker-login-镜像库" class="headerlink" title="docker login 镜像库"></a>docker login 镜像库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker login 192.168.1.71:80</span><br><span class="line">docker <span class="built_in">logout</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 secret</span></span><br><span class="line">cat /root/.docker/config.json</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"auths"</span>: &#123;</span><br><span class="line">        <span class="string">"192.168.1.71:80"</span>: &#123;</span><br><span class="line">            <span class="string">"auth"</span>: <span class="string">"YWRtaW46SGFyYm9yMTIzNDU="</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"wm7z6zxl.mirror.aliyuncs.com"</span>: &#123;</span><br><span class="line">            <span class="string">"auth"</span>: <span class="string">"YWRtaWdfadfaYm9yMTIzNDU="</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># cat /root/.docker/config.json |base64 -w 0</span></span><br><span class="line"><span class="comment"># 在 kubernetes secret 中配置</span></span><br><span class="line">data:</span><br><span class="line">  .dockerconfigjson:</span><br></pre></td></tr></table></figure>
<h3 id="kubernetes-中使用-harbor"><a href="#kubernetes-中使用-harbor" class="headerlink" title="kubernetes 中使用 harbor"></a>kubernetes 中使用 harbor</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl run nginx-test --image=192.168.1.71:80/project1/nginx:1.2 --port=80 --replicas=1 -n <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># k8s 使用 secret</span></span><br><span class="line">kubectl create secret docker-registry registry-secret --namespace=default \</span><br><span class="line">--docker-server=192.168.1.71:80 --docker-username=<span class="built_in">test</span> \</span><br><span class="line">--docker-password=<span class="built_in">test</span>@123 --docker-email=<span class="built_in">test</span>@163.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看</span></span><br><span class="line">kubectl get secret  -n <span class="built_in">test</span></span><br><span class="line">kubectl delete secret registry-secret</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模板文件中加入</span></span><br><span class="line">spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx</span><br><span class="line">        image: 10.1.210.35/project1/nginx:latest  <span class="comment">#镜像地址</span></span><br><span class="line">        ports:</span><br><span class="line">          - containerPort: 80</span><br><span class="line">      imagePullSecrets:        <span class="comment">#使用的secret</span></span><br><span class="line">       - name: registry-secret</span><br></pre></td></tr></table></figure>
<h2 id="配置-https"><a href="#配置-https" class="headerlink" title="配置 https"></a>配置 https</h2><p>需要申请证书，也可以自签名证书。自签名证书不受信任，需要在浏览器端添加证书信任。</p>
<h3 id="生成根证书"><a href="#生成根证书" class="headerlink" title="生成根证书"></a>生成根证书</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果使用ip 则将所有 yourdomain.com 改成 IP （文件名称是可以随意的）</span></span><br><span class="line"><span class="comment"># 生成CA证书私钥</span></span><br><span class="line">openssl genrsa -out ca.key 4096</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成CA根证书</span></span><br><span class="line">openssl req -x509 -new -nodes -sha512 -days 3650 \</span><br><span class="line"> -subj <span class="string">"/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=yourdomain.com"</span> \</span><br><span class="line"> -key ca.key \</span><br><span class="line"> -out ca.crt</span><br></pre></td></tr></table></figure>
<h3 id="生成服务器证书"><a href="#生成服务器证书" class="headerlink" title="生成服务器证书"></a>生成服务器证书</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成私钥</span></span><br><span class="line">openssl genrsa -out yourdomain.com.key 4096</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对根证书签名</span></span><br><span class="line">openssl req -sha512 -new \</span><br><span class="line">    -subj <span class="string">"/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=yourdomain.com"</span> \</span><br><span class="line">    -key yourdomain.com.key \</span><br><span class="line">    -out yourdomain.com.csr</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成一个x509 v3扩展文件（可以简写）</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"subjectAltName = IP:192.168.0.69"</span> &gt; v3.ext</span><br><span class="line">or</span><br><span class="line">cat &gt; v3.ext &lt;&lt;-EOF</span><br><span class="line">authorityKeyIdentifier=keyid,issuer</span><br><span class="line">basicConstraints=CA:FALSE</span><br><span class="line">keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment</span><br><span class="line">extendedKeyUsage = serverAuth</span><br><span class="line">subjectAltName = @alt_names</span><br><span class="line"></span><br><span class="line">[alt_names]</span><br><span class="line">DNS.1=yourdomain.com</span><br><span class="line">DNS.2=yourdomain</span><br><span class="line">DNS.3=hostname</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用v3.ext文件为您的Harbor主机生成证书</span></span><br><span class="line">openssl x509 -req -sha512 -days 3650 \</span><br><span class="line">    -extfile v3.ext \</span><br><span class="line">    -CA ca.crt -CAkey ca.key -CAcreateserial \</span><br><span class="line">    -<span class="keyword">in</span> yourdomain.com.csr \</span><br><span class="line">    -out yourdomain.com.crt</span><br></pre></td></tr></table></figure>
<h3 id="提供证书给Harbor和Docker"><a href="#提供证书给Harbor和Docker" class="headerlink" title="提供证书给Harbor和Docker"></a>提供证书给Harbor和Docker</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 服务器证书复制到 Harbor</span></span><br><span class="line">cp yourdomain.com.crt /data/cert/</span><br><span class="line">cp yourdomain.com.key /data/cert/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把crt 转成 cert 给 docker 使用</span></span><br><span class="line">openssl x509 -inform PEM -<span class="keyword">in</span> yourdomain.com.crt -out yourdomain.com.cert</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将服务器证书，密钥和CA文件复制到Harbor主机上的Docker证书文件夹中。</span></span><br><span class="line">cp yourdomain.com.cert /etc/docker/certs.d/yourdomain.com/</span><br><span class="line">cp yourdomain.com.key /etc/docker/certs.d/yourdomain.com/</span><br><span class="line">cp ca.crt /etc/docker/certs.d/yourdomain.com/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制到 work docker 节点中</span></span><br><span class="line">scp ca.crt mycert.cert mycert.key 192.168.0.73:/etc/docker/certs.d/192.168.0.69/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 目录结构</span></span><br><span class="line">/etc/docker/certs.d/</span><br><span class="line">    └── yourdomain.com:port</span><br><span class="line">       ├── yourdomain.com.cert  &lt;-- Server certificate signed by CA</span><br><span class="line">       ├── yourdomain.com.key   &lt;-- Server key signed by CA</span><br><span class="line">       └── ca.crt               &lt;-- Certificate authority that signed the registry certificate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启 docker</span></span><br><span class="line">systemctl reload docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把 ssl 配置加上 vim harbor.yml</span></span><br><span class="line">https:</span><br><span class="line">  port: 443</span><br><span class="line">  certificate: /your/certificate/path</span><br><span class="line">  private_key: /your/private/key/path</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除容器</span></span><br><span class="line">docker-compose down -v</span><br><span class="line"><span class="comment"># 重新生成配置文件</span></span><br><span class="line">./prepare</span><br><span class="line"><span class="comment"># 启动 harbor</span></span><br><span class="line">docker-compose up -d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证</span></span><br><span class="line">docker login yourdomain.com</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>l2tpvpn安装</title>
    <url>/2020/05/l2tpvpn%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Script for automatic setup of an IPsec VPN server on CentOS/RHEL 6 and 7.</span></span><br><span class="line"><span class="comment"># Works on any dedicated server or virtual private server (VPS) except OpenVZ.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># DO NOT RUN THIS SCRIPT ON YOUR PC OR MAC!</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The latest version of this script is available at:</span></span><br><span class="line"><span class="comment"># https://github.com/hwdsl2/setup-ipsec-vpn</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Copyright (C) 2015-2019 Lin Song &lt;linsongui@gmail.com&gt;</span></span><br><span class="line"><span class="comment"># Based on the work of Thomas Sarlandie (Copyright 2012)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This work is licensed under the Creative Commons Attribution-ShareAlike 3.0</span></span><br><span class="line"><span class="comment"># Unported License: http://creativecommons.org/licenses/by-sa/3.0/</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Attribution required: please include my name in any derivative and let me</span></span><br><span class="line"><span class="comment"># know how you have improved it!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># =====================================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define your own values for these variables</span></span><br><span class="line"><span class="comment"># - IPsec pre-shared key, VPN username and password</span></span><br><span class="line"><span class="comment"># - All values MUST be placed inside 'single quotes'</span></span><br><span class="line"><span class="comment"># - DO NOT use these special characters within values: \ " '</span></span><br><span class="line"></span><br><span class="line">YOUR_IPSEC_PSK=<span class="string">'112233'</span></span><br><span class="line">YOUR_USERNAME=<span class="string">'yanqi'</span></span><br><span class="line">YOUR_PASSWORD=<span class="string">'yanqi123'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Important notes:   https://git.io/vpnnotes</span></span><br><span class="line"><span class="comment"># Setup VPN clients: https://git.io/vpnclients</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># =====================================================</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"</span></span><br><span class="line">SYS_DT=$(date +%F-%T)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">exiterr</span></span>()  &#123; <span class="built_in">echo</span> <span class="string">"Error: <span class="variable">$1</span>"</span> &gt;&amp;2; <span class="built_in">exit</span> 1; &#125;</span><br><span class="line"><span class="function"><span class="title">exiterr2</span></span>() &#123; exiterr <span class="string">"'yum install' failed."</span>; &#125;</span><br><span class="line"><span class="function"><span class="title">conf_bk</span></span>() &#123; /bin/cp -f <span class="string">"<span class="variable">$1</span>"</span> <span class="string">"<span class="variable">$1</span>.old-<span class="variable">$SYS_DT</span>"</span> 2&gt;/dev/null; &#125;</span><br><span class="line"><span class="function"><span class="title">bigecho</span></span>() &#123; <span class="built_in">echo</span>; <span class="built_in">echo</span> <span class="string">"## <span class="variable">$1</span>"</span>; <span class="built_in">echo</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">check_ip</span></span>() &#123;</span><br><span class="line">  IP_REGEX=<span class="string">'^(([0-9]|[1-9][0-9]|1[0-9]&#123;2&#125;|2[0-4][0-9]|25[0-5])\.)&#123;3&#125;([0-9]|[1-9][0-9]|1[0-9]&#123;2&#125;|2[0-4][0-9]|25[0-5])$'</span></span><br><span class="line">  <span class="built_in">printf</span> <span class="string">'%s'</span> <span class="string">"<span class="variable">$1</span>"</span> | tr -d <span class="string">'\n'</span> | grep -Eq <span class="string">"<span class="variable">$IP_REGEX</span>"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">vpnsetup</span></span>() &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! grep -qs -e <span class="string">"release 6"</span> -e <span class="string">"release 7"</span> /etc/redhat-release; <span class="keyword">then</span></span><br><span class="line">  exiterr <span class="string">"This script only supports CentOS/RHEL 6 and 7."</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -f /proc/user_beancounters ]; <span class="keyword">then</span></span><br><span class="line">  exiterr <span class="string">"OpenVZ VPS is not supported. Try OpenVPN: github.com/Nyr/openvpn-install"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$(id -u)</span>"</span> != 0 ]; <span class="keyword">then</span></span><br><span class="line">  exiterr <span class="string">"Script must be run as root. Try 'sudo sh <span class="variable">$0</span>'"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">def_iface=$(route 2&gt;/dev/null | grep -m 1 <span class="string">'^default'</span> | grep -o <span class="string">'[^ ]*$'</span>)</span><br><span class="line">[ -z <span class="string">"<span class="variable">$def_iface</span>"</span> ] &amp;&amp; def_iface=$(ip -4 route list 0/0 2&gt;/dev/null | grep -m 1 -Po <span class="string">'(?&lt;=dev )(\S+)'</span>)</span><br><span class="line">def_state=$(cat <span class="string">"/sys/class/net/<span class="variable">$def_iface</span>/operstate"</span> 2&gt;/dev/null)</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$def_state</span>"</span> ] &amp;&amp; [ <span class="string">"<span class="variable">$def_state</span>"</span> != <span class="string">"down"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">case</span> <span class="string">"<span class="variable">$def_iface</span>"</span> <span class="keyword">in</span></span><br><span class="line">    wl*)</span><br><span class="line">      exiterr <span class="string">"Wireless interface '<span class="variable">$def_iface</span>' detected. DO NOT run this script on your PC or Mac!"</span></span><br><span class="line">      ;;</span><br><span class="line">  <span class="keyword">esac</span></span><br><span class="line">  NET_IFACE=<span class="string">"<span class="variable">$def_iface</span>"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  eth0_state=$(cat <span class="string">"/sys/class/net/eth0/operstate"</span> 2&gt;/dev/null)</span><br><span class="line">  <span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$eth0_state</span>"</span> ] || [ <span class="string">"<span class="variable">$eth0_state</span>"</span> = <span class="string">"down"</span> ]; <span class="keyword">then</span></span><br><span class="line">    exiterr <span class="string">"Could not detect the default network interface."</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  NET_IFACE=eth0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">[ -n <span class="string">"<span class="variable">$YOUR_IPSEC_PSK</span>"</span> ] &amp;&amp; VPN_IPSEC_PSK=<span class="string">"<span class="variable">$YOUR_IPSEC_PSK</span>"</span></span><br><span class="line">[ -n <span class="string">"<span class="variable">$YOUR_USERNAME</span>"</span> ] &amp;&amp; VPN_USER=<span class="string">"<span class="variable">$YOUR_USERNAME</span>"</span></span><br><span class="line">[ -n <span class="string">"<span class="variable">$YOUR_PASSWORD</span>"</span> ] &amp;&amp; VPN_PASSWORD=<span class="string">"<span class="variable">$YOUR_PASSWORD</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$VPN_IPSEC_PSK</span>"</span> ] &amp;&amp; [ -z <span class="string">"<span class="variable">$VPN_USER</span>"</span> ] &amp;&amp; [ -z <span class="string">"<span class="variable">$VPN_PASSWORD</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  bigecho <span class="string">"VPN credentials not set by user. Generating random PSK and password..."</span></span><br><span class="line">  VPN_IPSEC_PSK=$(LC_CTYPE=C tr -dc <span class="string">'A-HJ-NPR-Za-km-z2-9'</span> &lt; /dev/urandom | head -c 20)</span><br><span class="line">  VPN_USER=vpnuser</span><br><span class="line">  VPN_PASSWORD=$(LC_CTYPE=C tr -dc <span class="string">'A-HJ-NPR-Za-km-z2-9'</span> &lt; /dev/urandom | head -c 16)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$VPN_IPSEC_PSK</span>"</span> ] || [ -z <span class="string">"<span class="variable">$VPN_USER</span>"</span> ] || [ -z <span class="string">"<span class="variable">$VPN_PASSWORD</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  exiterr <span class="string">"All VPN credentials must be specified. Edit the script and re-enter them."</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">printf</span> <span class="string">'%s'</span> <span class="string">"<span class="variable">$VPN_IPSEC_PSK</span> <span class="variable">$VPN_USER</span> <span class="variable">$VPN_PASSWORD</span>"</span> | LC_ALL=C grep -q <span class="string">'[^ -~]\+'</span>; <span class="keyword">then</span></span><br><span class="line">  exiterr <span class="string">"VPN credentials must not contain non-ASCII characters."</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$VPN_IPSEC_PSK</span> <span class="variable">$VPN_USER</span> <span class="variable">$VPN_PASSWORD</span>"</span> <span class="keyword">in</span></span><br><span class="line">  *[\\\"\<span class="string">']*)</span></span><br><span class="line"><span class="string">    exiterr "VPN credentials must not contain these special characters: \\ \" '</span><span class="string">"</span></span><br><span class="line"><span class="string">    ;;</span></span><br><span class="line"><span class="string">esac</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "</span>VPN setup <span class="keyword">in</span> progress... Please be patient.<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Create and change to working dir</span></span><br><span class="line"><span class="string">mkdir -p /opt/src</span></span><br><span class="line"><span class="string">cd /opt/src || exit 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "</span>Installing packages required <span class="keyword">for</span> setup...<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">yum -y install wget bind-utils openssl \</span></span><br><span class="line"><span class="string">  iptables iproute gawk grep sed net-tools || exiterr2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "</span>Trying to auto discover IP of this server...<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">cat &lt;&lt;'EOF'</span></span><br><span class="line"><span class="string">In case the script hangs here for more than a few minutes,</span></span><br><span class="line"><span class="string">press Ctrl-C to abort. Then edit it and manually enter IP.</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># In case auto IP discovery fails, enter server's public IP here.</span></span><br><span class="line"><span class="string">PUBLIC_IP=<span class="variable">$&#123;VPN_PUBLIC_IP:-''&#125;</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ -z "</span><span class="variable">$PUBLIC_IP</span><span class="string">" ] &amp;&amp; PUBLIC_IP=<span class="variable">$(dig @resolver1.opendns.com -t A -4 myip.opendns.com +short)</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">check_ip "</span><span class="variable">$PUBLIC_IP</span><span class="string">" || PUBLIC_IP=<span class="variable">$(wget -t 3 -T 15 -qO- http://ipv4.icanhazip.com)</span></span></span><br><span class="line"><span class="string">check_ip "</span><span class="variable">$PUBLIC_IP</span><span class="string">" || exiterr "</span>Cannot detect this server<span class="string">'s public IP. Edit the script and manually enter it."</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "Adding the EPEL repository..."</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">epel_url="https://dl.fedoraproject.org/pub/epel/epel-release-latest-$(rpm -E '</span>%&#123;rhel&#125;<span class="string">').noarch.rpm"</span></span><br><span class="line"><span class="string">yum -y install epel-release || yum -y install "$epel_url" || exiterr2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "Installing packages required for the VPN..."</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">REPO1='</span>--enablerepo=epel<span class="string">'</span></span><br><span class="line"><span class="string">REPO2='</span>--enablerepo=*server-optional*<span class="string">'</span></span><br><span class="line"><span class="string">REPO3='</span>--enablerepo=*releases-optional*<span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">yum -y install nss-devel nspr-devel pkgconfig pam-devel \</span></span><br><span class="line"><span class="string">  libcap-ng-devel libselinux-devel curl-devel \</span></span><br><span class="line"><span class="string">  flex bison gcc make ppp || exiterr2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">yum "$REPO1" -y install xl2tpd || exiterr2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if grep -qs "release 6" /etc/redhat-release; then</span></span><br><span class="line"><span class="string">  yum -y remove libevent-devel</span></span><br><span class="line"><span class="string">  yum "$REPO2" "$REPO3" -y install libevent2-devel fipscheck-devel || exiterr2</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  yum -y install systemd-devel iptables-services || exiterr2</span></span><br><span class="line"><span class="string">  yum "$REPO2" "$REPO3" -y install libevent-devel fipscheck-devel || exiterr2</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">case "$(uname -r)" in</span></span><br><span class="line"><span class="string">  4.1[456]*)</span></span><br><span class="line"><span class="string">    if grep -qs "release 6" /etc/redhat-release; then</span></span><br><span class="line"><span class="string">      L2TP_VER=1.3.12</span></span><br><span class="line"><span class="string">      l2tp_dir="xl2tpd-$L2TP_VER"</span></span><br><span class="line"><span class="string">      l2tp_file="$l2tp_dir.tar.gz"</span></span><br><span class="line"><span class="string">      l2tp_url="https://github.com/xelerance/xl2tpd/archive/v$L2TP_VER.tar.gz"</span></span><br><span class="line"><span class="string">      yum "$REPO2" "$REPO3" -y install libpcap-devel || exiterr2</span></span><br><span class="line"><span class="string">      wget -t 3 -T 30 -nv -O "$l2tp_file" "$l2tp_url" || exit 1</span></span><br><span class="line"><span class="string">      /bin/rm -rf "/opt/src/$l2tp_dir"</span></span><br><span class="line"><span class="string">      tar xzf "$l2tp_file" &amp;&amp; /bin/rm -f "$l2tp_file"</span></span><br><span class="line"><span class="string">      cd "$l2tp_dir" &amp;&amp; make -s 2&gt;/dev/null &amp;&amp; PREFIX=/usr make -s install</span></span><br><span class="line"><span class="string">      cd /opt/src || exit 1</span></span><br><span class="line"><span class="string">      /bin/rm -rf "/opt/src/$l2tp_dir"</span></span><br><span class="line"><span class="string">    fi</span></span><br><span class="line"><span class="string">    ;;</span></span><br><span class="line"><span class="string">esac</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "Installing Fail2Ban to protect SSH..."</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">yum "$REPO1" -y install fail2ban || exiterr2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "Compiling and installing Libreswan..."</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">SWAN_VER=3.27</span></span><br><span class="line"><span class="string">swan_file="libreswan-$SWAN_VER.tar.gz"</span></span><br><span class="line"><span class="string">swan_url1="https://github.com/libreswan/libreswan/archive/v$SWAN_VER.tar.gz"</span></span><br><span class="line"><span class="string">swan_url2="https://download.libreswan.org/$swan_file"</span></span><br><span class="line"><span class="string">if ! &#123; wget -t 3 -T 30 -nv -O "$swan_file" "$swan_url1" || wget -t 3 -T 30 -nv -O "$swan_file" "$swan_url2"; &#125;; then</span></span><br><span class="line"><span class="string">  exit 1</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">/bin/rm -rf "/opt/src/libreswan-$SWAN_VER"</span></span><br><span class="line"><span class="string">tar xzf "$swan_file" &amp;&amp; /bin/rm -f "$swan_file"</span></span><br><span class="line"><span class="string">cd "libreswan-$SWAN_VER" || exit 1</span></span><br><span class="line"><span class="string">cat &gt; Makefile.inc.local &lt;&lt;'</span>EOF<span class="string">'</span></span><br><span class="line"><span class="string">WERROR_CFLAGS =</span></span><br><span class="line"><span class="string">USE_DNSSEC = false</span></span><br><span class="line"><span class="string">USE_DH31 = false</span></span><br><span class="line"><span class="string">USE_GLIBC_KERN_FLIP_HEADERS = true</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">NPROCS=$(grep -c ^processor /proc/cpuinfo)</span></span><br><span class="line"><span class="string">[ -z "$NPROCS" ] &amp;&amp; NPROCS=1</span></span><br><span class="line"><span class="string">make "-j$((NPROCS+1))" -s base &amp;&amp; make -s install-base</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">cd /opt/src || exit 1</span></span><br><span class="line"><span class="string">/bin/rm -rf "/opt/src/libreswan-$SWAN_VER"</span></span><br><span class="line"><span class="string">if ! /usr/local/sbin/ipsec --version 2&gt;/dev/null | grep -qF "$SWAN_VER"; then</span></span><br><span class="line"><span class="string">  exiterr "Libreswan $SWAN_VER failed to build."</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "Creating VPN configuration..."</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">L2TP_NET=$&#123;VPN_L2TP_NET:-'</span>192.168.42.0/24<span class="string">'&#125;</span></span><br><span class="line"><span class="string">L2TP_LOCAL=$&#123;VPN_L2TP_LOCAL:-'</span>192.168.42.1<span class="string">'&#125;</span></span><br><span class="line"><span class="string">L2TP_POOL=$&#123;VPN_L2TP_POOL:-'</span>192.168.42.10-192.168.42.250<span class="string">'&#125;</span></span><br><span class="line"><span class="string">XAUTH_NET=$&#123;VPN_XAUTH_NET:-'</span>192.168.43.0/24<span class="string">'&#125;</span></span><br><span class="line"><span class="string">XAUTH_POOL=$&#123;VPN_XAUTH_POOL:-'</span>192.168.43.10-192.168.43.250<span class="string">'&#125;</span></span><br><span class="line"><span class="string">DNS_SRV1=$&#123;VPN_DNS_SRV1:-'</span>8.8.8.8<span class="string">'&#125;</span></span><br><span class="line"><span class="string">DNS_SRV2=$&#123;VPN_DNS_SRV2:-'</span>8.8.4.4<span class="string">'&#125;</span></span><br><span class="line"><span class="string">DNS_SRVS="\"$DNS_SRV1 $DNS_SRV2\""</span></span><br><span class="line"><span class="string">[ -n "$VPN_DNS_SRV1" ] &amp;&amp; [ -z "$VPN_DNS_SRV2" ] &amp;&amp; DNS_SRVS="$DNS_SRV1"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Create IPsec config</span></span><br><span class="line"><span class="string">conf_bk "/etc/ipsec.conf"</span></span><br><span class="line"><span class="string">cat &gt; /etc/ipsec.conf &lt;&lt;EOF</span></span><br><span class="line"><span class="string">version 2.0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">config setup</span></span><br><span class="line"><span class="string">  virtual-private=%v4:10.0.0.0/8,%v4:192.168.0.0/16,%v4:172.16.0.0/12,%v4:!$L2TP_NET,%v4:!$XAUTH_NET</span></span><br><span class="line"><span class="string">  protostack=netkey</span></span><br><span class="line"><span class="string">  interfaces=%defaultroute</span></span><br><span class="line"><span class="string">  uniqueids=no</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">conn shared</span></span><br><span class="line"><span class="string">  left=%defaultroute</span></span><br><span class="line"><span class="string">  leftid=$PUBLIC_IP</span></span><br><span class="line"><span class="string">  right=%any</span></span><br><span class="line"><span class="string">  encapsulation=yes</span></span><br><span class="line"><span class="string">  authby=secret</span></span><br><span class="line"><span class="string">  pfs=no</span></span><br><span class="line"><span class="string">  rekey=no</span></span><br><span class="line"><span class="string">  keyingtries=5</span></span><br><span class="line"><span class="string">  dpddelay=30</span></span><br><span class="line"><span class="string">  dpdtimeout=120</span></span><br><span class="line"><span class="string">  dpdaction=clear</span></span><br><span class="line"><span class="string">  ike=aes256-sha2,aes128-sha2,aes256-sha1,aes128-sha1,aes256-sha2;modp1024,aes128-sha1;modp1024</span></span><br><span class="line"><span class="string">  phase2alg=aes_gcm-null,aes128-sha1,aes256-sha1,aes256-sha2_512,aes128-sha2,aes256-sha2</span></span><br><span class="line"><span class="string">  sha2-truncbug=yes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">conn l2tp-psk</span></span><br><span class="line"><span class="string">  auto=add</span></span><br><span class="line"><span class="string">  leftprotoport=17/1701</span></span><br><span class="line"><span class="string">  rightprotoport=17/%any</span></span><br><span class="line"><span class="string">  type=transport</span></span><br><span class="line"><span class="string">  phase2=esp</span></span><br><span class="line"><span class="string">  also=shared</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">conn xauth-psk</span></span><br><span class="line"><span class="string">  auto=add</span></span><br><span class="line"><span class="string">  leftsubnet=0.0.0.0/0</span></span><br><span class="line"><span class="string">  rightaddresspool=$XAUTH_POOL</span></span><br><span class="line"><span class="string">  modecfgdns=$DNS_SRVS</span></span><br><span class="line"><span class="string">  leftxauthserver=yes</span></span><br><span class="line"><span class="string">  rightxauthclient=yes</span></span><br><span class="line"><span class="string">  leftmodecfgserver=yes</span></span><br><span class="line"><span class="string">  rightmodecfgclient=yes</span></span><br><span class="line"><span class="string">  modecfgpull=yes</span></span><br><span class="line"><span class="string">  xauthby=file</span></span><br><span class="line"><span class="string">  ike-frag=yes</span></span><br><span class="line"><span class="string">  ikev2=never</span></span><br><span class="line"><span class="string">  cisco-unity=yes</span></span><br><span class="line"><span class="string">  also=shared</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Specify IPsec PSK</span></span><br><span class="line"><span class="string">conf_bk "/etc/ipsec.secrets"</span></span><br><span class="line"><span class="string">cat &gt; /etc/ipsec.secrets &lt;&lt;EOF</span></span><br><span class="line"><span class="string">%any  %any  : PSK "$VPN_IPSEC_PSK"</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Create xl2tpd config</span></span><br><span class="line"><span class="string">conf_bk "/etc/xl2tpd/xl2tpd.conf"</span></span><br><span class="line"><span class="string">cat &gt; /etc/xl2tpd/xl2tpd.conf &lt;&lt;EOF</span></span><br><span class="line"><span class="string">[global]</span></span><br><span class="line"><span class="string">port = 1701</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[lns default]</span></span><br><span class="line"><span class="string">ip range = $L2TP_POOL</span></span><br><span class="line"><span class="string">local ip = $L2TP_LOCAL</span></span><br><span class="line"><span class="string">require chap = yes</span></span><br><span class="line"><span class="string">refuse pap = yes</span></span><br><span class="line"><span class="string">require authentication = yes</span></span><br><span class="line"><span class="string">name = l2tpd</span></span><br><span class="line"><span class="string">pppoptfile = /etc/ppp/options.xl2tpd</span></span><br><span class="line"><span class="string">length bit = yes</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Set xl2tpd options</span></span><br><span class="line"><span class="string">conf_bk "/etc/ppp/options.xl2tpd"</span></span><br><span class="line"><span class="string">cat &gt; /etc/ppp/options.xl2tpd &lt;&lt;EOF</span></span><br><span class="line"><span class="string">+mschap-v2</span></span><br><span class="line"><span class="string">ipcp-accept-local</span></span><br><span class="line"><span class="string">ipcp-accept-remote</span></span><br><span class="line"><span class="string">noccp</span></span><br><span class="line"><span class="string">auth</span></span><br><span class="line"><span class="string">mtu 1280</span></span><br><span class="line"><span class="string">mru 1280</span></span><br><span class="line"><span class="string">proxyarp</span></span><br><span class="line"><span class="string">lcp-echo-failure 4</span></span><br><span class="line"><span class="string">lcp-echo-interval 30</span></span><br><span class="line"><span class="string">connect-delay 5000</span></span><br><span class="line"><span class="string">ms-dns $DNS_SRV1</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if [ -z "$VPN_DNS_SRV1" ] || [ -n "$VPN_DNS_SRV2" ]; then</span></span><br><span class="line"><span class="string">cat &gt;&gt; /etc/ppp/options.xl2tpd &lt;&lt;EOF</span></span><br><span class="line"><span class="string">ms-dns $DNS_SRV2</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Create VPN credentials</span></span><br><span class="line"><span class="string">conf_bk "/etc/ppp/chap-secrets"</span></span><br><span class="line"><span class="string">cat &gt; /etc/ppp/chap-secrets &lt;&lt;EOF</span></span><br><span class="line"><span class="string">"$VPN_USER" l2tpd "$VPN_PASSWORD" *</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">conf_bk "/etc/ipsec.d/passwd"</span></span><br><span class="line"><span class="string">VPN_PASSWORD_ENC=$(openssl passwd -1 "$VPN_PASSWORD")</span></span><br><span class="line"><span class="string">cat &gt; /etc/ipsec.d/passwd &lt;&lt;EOF</span></span><br><span class="line"><span class="string">$VPN_USER:$VPN_PASSWORD_ENC:xauth-psk</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "Updating sysctl settings..."</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if ! grep -qs "hwdsl2 VPN script" /etc/sysctl.conf; then</span></span><br><span class="line"><span class="string">  conf_bk "/etc/sysctl.conf"</span></span><br><span class="line"><span class="string">  if [ "$(getconf LONG_BIT)" = "64" ]; then</span></span><br><span class="line"><span class="string">    SHM_MAX=68719476736</span></span><br><span class="line"><span class="string">    SHM_ALL=4294967296</span></span><br><span class="line"><span class="string">  else</span></span><br><span class="line"><span class="string">    SHM_MAX=4294967295</span></span><br><span class="line"><span class="string">    SHM_ALL=268435456</span></span><br><span class="line"><span class="string">  fi</span></span><br><span class="line"><span class="string">cat &gt;&gt; /etc/sysctl.conf &lt;&lt;EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Added by hwdsl2 VPN script</span></span><br><span class="line"><span class="string">kernel.msgmnb = 65536</span></span><br><span class="line"><span class="string">kernel.msgmax = 65536</span></span><br><span class="line"><span class="string">kernel.shmmax = $SHM_MAX</span></span><br><span class="line"><span class="string">kernel.shmall = $SHM_ALL</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">net.ipv4.ip_forward = 1</span></span><br><span class="line"><span class="string">net.ipv4.conf.all.accept_source_route = 0</span></span><br><span class="line"><span class="string">net.ipv4.conf.all.accept_redirects = 0</span></span><br><span class="line"><span class="string">net.ipv4.conf.all.send_redirects = 0</span></span><br><span class="line"><span class="string">net.ipv4.conf.all.rp_filter = 0</span></span><br><span class="line"><span class="string">net.ipv4.conf.default.accept_source_route = 0</span></span><br><span class="line"><span class="string">net.ipv4.conf.default.accept_redirects = 0</span></span><br><span class="line"><span class="string">net.ipv4.conf.default.send_redirects = 0</span></span><br><span class="line"><span class="string">net.ipv4.conf.default.rp_filter = 0</span></span><br><span class="line"><span class="string">net.ipv4.conf.$NET_IFACE.send_redirects = 0</span></span><br><span class="line"><span class="string">net.ipv4.conf.$NET_IFACE.rp_filter = 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">net.core.wmem_max = 12582912</span></span><br><span class="line"><span class="string">net.core.rmem_max = 12582912</span></span><br><span class="line"><span class="string">net.ipv4.tcp_rmem = 10240 87380 12582912</span></span><br><span class="line"><span class="string">net.ipv4.tcp_wmem = 10240 87380 12582912</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "Updating IPTables rules..."</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Check if rules need updating</span></span><br><span class="line"><span class="string">ipt_flag=0</span></span><br><span class="line"><span class="string">IPT_FILE="/etc/sysconfig/iptables"</span></span><br><span class="line"><span class="string">if ! grep -qs "hwdsl2 VPN script" "$IPT_FILE" \</span></span><br><span class="line"><span class="string">   || ! iptables -t nat -C POSTROUTING -s "$L2TP_NET" -o "$NET_IFACE" -j MASQUERADE 2&gt;/dev/null \</span></span><br><span class="line"><span class="string">   || ! iptables -t nat -C POSTROUTING -s "$XAUTH_NET" -o "$NET_IFACE" -m policy --dir out --pol none -j MASQUERADE 2&gt;/dev/null; then</span></span><br><span class="line"><span class="string">  ipt_flag=1</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Add IPTables rules for VPN</span></span><br><span class="line"><span class="string">if [ "$ipt_flag" = "1" ]; then</span></span><br><span class="line"><span class="string">  service fail2ban stop &gt;/dev/null 2&gt;&amp;1</span></span><br><span class="line"><span class="string">  iptables-save &gt; "$IPT_FILE.old-$SYS_DT"</span></span><br><span class="line"><span class="string">  iptables -I INPUT 1 -p udp --dport 1701 -m policy --dir in --pol none -j DROP</span></span><br><span class="line"><span class="string">  iptables -I INPUT 2 -m conntrack --ctstate INVALID -j DROP</span></span><br><span class="line"><span class="string">  iptables -I INPUT 3 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT</span></span><br><span class="line"><span class="string">  iptables -I INPUT 4 -p udp -m multiport --dports 500,4500 -j ACCEPT</span></span><br><span class="line"><span class="string">  iptables -I INPUT 5 -p udp --dport 1701 -m policy --dir in --pol ipsec -j ACCEPT</span></span><br><span class="line"><span class="string">  iptables -I INPUT 6 -p udp --dport 1701 -j DROP</span></span><br><span class="line"><span class="string">  iptables -I FORWARD 1 -m conntrack --ctstate INVALID -j DROP</span></span><br><span class="line"><span class="string">  iptables -I FORWARD 2 -i "$NET_IFACE" -o ppp+ -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT</span></span><br><span class="line"><span class="string">  iptables -I FORWARD 3 -i ppp+ -o "$NET_IFACE" -j ACCEPT</span></span><br><span class="line"><span class="string">  iptables -I FORWARD 4 -i ppp+ -o ppp+ -s "$L2TP_NET" -d "$L2TP_NET" -j ACCEPT</span></span><br><span class="line"><span class="string">  iptables -I FORWARD 5 -i "$NET_IFACE" -d "$XAUTH_NET" -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT</span></span><br><span class="line"><span class="string">  iptables -I FORWARD 6 -s "$XAUTH_NET" -o "$NET_IFACE" -j ACCEPT</span></span><br><span class="line"><span class="string">  # Uncomment if you wish to disallow traffic between VPN clients themselves</span></span><br><span class="line"><span class="string">  # iptables -I FORWARD 2 -i ppp+ -o ppp+ -s "$L2TP_NET" -d "$L2TP_NET" -j DROP</span></span><br><span class="line"><span class="string">  # iptables -I FORWARD 3 -s "$XAUTH_NET" -d "$XAUTH_NET" -j DROP</span></span><br><span class="line"><span class="string">  iptables -A FORWARD -j DROP</span></span><br><span class="line"><span class="string">  iptables -t nat -I POSTROUTING -s "$XAUTH_NET" -o "$NET_IFACE" -m policy --dir out --pol none -j MASQUERADE</span></span><br><span class="line"><span class="string">  iptables -t nat -I POSTROUTING -s "$L2TP_NET" -o "$NET_IFACE" -j MASQUERADE</span></span><br><span class="line"><span class="string">  echo "# Modified by hwdsl2 VPN script" &gt; "$IPT_FILE"</span></span><br><span class="line"><span class="string">  iptables-save &gt;&gt; "$IPT_FILE"</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "Creating basic Fail2Ban rules..."</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if [ ! -f /etc/fail2ban/jail.local ] ; then</span></span><br><span class="line"><span class="string">cat &gt; /etc/fail2ban/jail.local &lt;&lt;'</span>EOF<span class="string">'</span></span><br><span class="line"><span class="string">[ssh-iptables]</span></span><br><span class="line"><span class="string">enabled  = true</span></span><br><span class="line"><span class="string">filter   = sshd</span></span><br><span class="line"><span class="string">action   = iptables[name=SSH, port=ssh, protocol=tcp]</span></span><br><span class="line"><span class="string">logpath  = /var/log/secure</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "Enabling services on boot..."</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if grep -qs "release 6" /etc/redhat-release; then</span></span><br><span class="line"><span class="string">  chkconfig iptables on</span></span><br><span class="line"><span class="string">  chkconfig fail2ban on</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  systemctl --now mask firewalld 2&gt;/dev/null</span></span><br><span class="line"><span class="string">  systemctl enable iptables fail2ban 2&gt;/dev/null</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if ! grep -qs "hwdsl2 VPN script" /etc/rc.local; then</span></span><br><span class="line"><span class="string">  if [ -f /etc/rc.local ]; then</span></span><br><span class="line"><span class="string">    conf_bk "/etc/rc.local"</span></span><br><span class="line"><span class="string">  else</span></span><br><span class="line"><span class="string">    echo '</span><span class="comment">#!/bin/sh' &gt; /etc/rc.local</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">cat &gt;&gt; /etc/rc.local &lt;&lt;<span class="string">'EOF'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Added by hwdsl2 VPN script</span></span><br><span class="line">(sleep 15</span><br><span class="line">modprobe -q pppol2tp</span><br><span class="line">service ipsec restart</span><br><span class="line">service xl2tpd restart</span><br><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/ip_forward)&amp;</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">bigecho <span class="string">"Starting services..."</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Restore SELinux contexts</span></span><br><span class="line">restorecon /etc/ipsec.d/*db 2&gt;/dev/null</span><br><span class="line">restorecon /usr/<span class="built_in">local</span>/sbin -Rv 2&gt;/dev/null</span><br><span class="line">restorecon /usr/<span class="built_in">local</span>/libexec/ipsec -Rv 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line"><span class="comment"># Reload sysctl.conf</span></span><br><span class="line">sysctl -e -q -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># Update file attributes</span></span><br><span class="line">chmod +x /etc/rc.local</span><br><span class="line">chmod 600 /etc/ipsec.secrets* /etc/ppp/chap-secrets* /etc/ipsec.d/passwd*</span><br><span class="line"></span><br><span class="line"><span class="comment"># Apply new IPTables rules</span></span><br><span class="line">iptables-restore &lt; <span class="string">"<span class="variable">$IPT_FILE</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Fix xl2tpd on CentOS 7, if kernel module "l2tp_ppp" is unavailable</span></span><br><span class="line"><span class="keyword">if</span> grep -qs <span class="string">"release 7"</span> /etc/redhat-release; <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">if</span> ! modprobe -q l2tp_ppp; <span class="keyword">then</span></span><br><span class="line">    sed -i <span class="string">'/^ExecStartPre/s/^/#/'</span> /usr/lib/systemd/system/xl2tpd.service</span><br><span class="line">    systemctl daemon-reload</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Restart services</span></span><br><span class="line">mkdir -p /run/pluto</span><br><span class="line">modprobe -q pppol2tp</span><br><span class="line">service fail2ban restart 2&gt;/dev/null</span><br><span class="line">service ipsec restart 2&gt;/dev/null</span><br><span class="line">service xl2tpd restart 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF</span><br><span class="line"></span><br><span class="line">================================================</span><br><span class="line"></span><br><span class="line">IPsec VPN server is now ready <span class="keyword">for</span> use!</span><br><span class="line"></span><br><span class="line">Connect to your new VPN with these details:</span><br><span class="line"></span><br><span class="line">Server IP: <span class="variable">$PUBLIC_IP</span></span><br><span class="line">IPsec PSK: <span class="variable">$VPN_IPSEC_PSK</span></span><br><span class="line">Username: <span class="variable">$VPN_USER</span></span><br><span class="line">Password: <span class="variable">$VPN_PASSWORD</span></span><br><span class="line"></span><br><span class="line">Write these down. You<span class="string">'ll need them to connect!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Important notes:   https://git.io/vpnnotes</span></span><br><span class="line"><span class="string">Setup VPN clients: https://git.io/vpnclients</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">================================================</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## Defer setup until we have the complete script</span></span><br><span class="line"><span class="string">vpnsetup "$@"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">exit 0</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>frp内网穿透</title>
    <url>/2020/05/frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://github.com/fatedier/frp/blob/master/README_zh.md" target="_blank" rel="noopener">Frp</a></p>
<h2 id="获取包"><a href="#获取包" class="headerlink" title="获取包"></a>获取包</h2><p>git clone <a href="https://github.com/fatedier/frp.git" target="_blank" rel="noopener">https://github.com/fatedier/frp.git</a></p>
<h3 id="服务端安装"><a href="#服务端安装" class="headerlink" title="服务端安装"></a>服务端安装</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 一键安装脚本</span></span><br><span class="line">wget --no-check-certificate https:<span class="regexp">//</span>raw.githubusercontent.com<span class="regexp">/clangcn/</span>onekey-install-shell<span class="regexp">/master/</span>frps<span class="regexp">/install-frps.sh -O ./i</span>nstall-frps.sh</span><br><span class="line"><span class="comment"># 安装位置：/usr/local/frps/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一路回车，就可以安装成功。</span></span><br></pre></td></tr></table></figure>
<h4 id="Congratulations-frps-install-completed"><a href="#Congratulations-frps-install-completed" class="headerlink" title="Congratulations, frps install completed!"></a>Congratulations, frps install completed!</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">You Server IP      :</span> <span class="number">11.84</span><span class="number">.8</span><span class="number">.4</span></span><br><span class="line"><span class="attr">Bind port          :</span> <span class="number">7000</span></span><br><span class="line"><span class="attr">KCP support        :</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">vhost http port    :</span> <span class="number">80</span></span><br><span class="line"><span class="attr">vhost https port   :</span> <span class="number">443</span></span><br><span class="line"><span class="attr">Dashboard port     :</span> <span class="number">6443</span></span><br><span class="line"><span class="attr">token              :</span> <span class="string">TrVhUVLCoZltnuLA</span></span><br><span class="line"><span class="attr">tcp_mux            :</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">Max Pool count     :</span> <span class="number">50</span></span><br><span class="line"><span class="attr">Log level          :</span> <span class="string">info</span></span><br><span class="line"><span class="attr">Log max days       :</span> <span class="number">3</span></span><br><span class="line"><span class="attr">Log file           :</span> <span class="string">enable</span></span><br><span class="line"><span class="string">==============================================</span></span><br><span class="line"><span class="attr">frps Dashboard     :</span> <span class="string">http://11.84.8.4:6443/</span></span><br><span class="line"><span class="attr">Dashboard user     :</span> <span class="string">admin</span></span><br><span class="line"><span class="attr">Dashboard password :</span> <span class="string">JFvEzm</span></span><br><span class="line"><span class="string">==============================================</span></span><br><span class="line"></span><br><span class="line"><span class="attr">frps status manage :</span> <span class="string">frps</span> <span class="string">&#123;start|stop|restart|status|config|version&#125;</span></span><br><span class="line"><span class="attr">Example:</span></span><br><span class="line">  <span class="attr">start:</span> <span class="string">frps</span> <span class="string">start</span></span><br><span class="line">   <span class="attr">stop:</span> <span class="string">frps</span> <span class="string">stop</span></span><br><span class="line"><span class="attr">restart:</span> <span class="string">frps</span> <span class="string">restart</span></span><br></pre></td></tr></table></figure>
<h4 id="配置服务端"><a href="#配置服务端" class="headerlink" title="配置服务端"></a>配置服务端</h4><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frps.ini</span></span><br><span class="line">[common]</span><br><span class="line">bind_port = 7000</span><br><span class="line">启动 frps：</span><br><span class="line"><span class="string">./frps</span> -c <span class="string">./frps.ini</span></span><br></pre></td></tr></table></figure>
<h3 id="客户端安装"><a href="#客户端安装" class="headerlink" title="客户端安装"></a>客户端安装</h3><figure class="highlight nix"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/fatedier/frp.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 frpc.ini 文件，假设 frps 所在服务器的公网 IP 为 x.x.x.x；</span></span><br><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line">[common]</span><br><span class="line"><span class="attr">server_addr</span> = x.x.x.x <span class="comment"># 服务端IP</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span>    <span class="comment"># 服务端端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ssh 配置样例</span></span><br><span class="line">[ssh]</span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">22</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6000</span> <span class="comment">#服务端转发端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 客户端frpc：</span></span><br><span class="line">./frpc -c ./frpc.ini</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过 ssh 访问内网机器，假设用户名为 test：</span></span><br><span class="line">ssh <span class="attr">-oPort=6000</span> test@x.x.x.x</span><br></pre></td></tr></table></figure>
<h4 id="squid-配置样例"><a href="#squid-配置样例" class="headerlink" title="squid 配置样例"></a>squid 配置样例</h4><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">frpc.ini </span><br><span class="line">[common]</span><br><span class="line">server_addr = x.x.x.x # 服务端IP</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">[squid]</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 8000</span><br><span class="line">remote_port = 8809</span><br><span class="line">use_compression = <span class="literal">true</span></span><br><span class="line">use_encryption = <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h4 id="gitlab-配置样例"><a href="#gitlab-配置样例" class="headerlink" title="gitlab 配置样例"></a>gitlab 配置样例</h4><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = <span class="number">11.84</span>.<span class="number">8.4</span> <span class="comment"># 服务端IP</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[gitlab]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">443</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">443</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">false</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>webvirtmgr安装</title>
    <url>/2020/05/webvirtmgr%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="CentOS-7-x-安装"><a href="#CentOS-7-x-安装" class="headerlink" title="CentOS 7.x 安装"></a>CentOS 7.x 安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum -y install http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm</span><br><span class="line"><span class="comment"># if this doesn't work, use yum install epel-release</span></span><br><span class="line">sudo yum -y install git python-pip libvirt-python libxml2-python python-websockify supervisor nginx</span><br><span class="line">sudo yum -y install gcc python-devel</span><br><span class="line">sudo pip install numpy</span><br></pre></td></tr></table></figure>
<h2 id="Install-python-requirements-and-setup-Django-environment"><a href="#Install-python-requirements-and-setup-Django-environment" class="headerlink" title="Install python requirements and setup Django environment"></a>Install python requirements and setup Django environment</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git://github.com/retspen/webvirtmgr.git</span><br><span class="line"><span class="built_in">cd</span> webvirtmgr</span><br><span class="line">pyvenv webvirt</span><br><span class="line">. webvirt/bin/activate</span><br><span class="line">sudo pip install -r requirements.txt <span class="comment"># or python-pip (RedHat, Fedora, CentOS, OpenSuse)</span></span><br><span class="line">./manage.py syncdb</span><br><span class="line">./manage.py collectstatic</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Adding additional superusers</span></span><br><span class="line">$ ./manage.py createsuperuser</span><br></pre></td></tr></table></figure>
<h2 id="Setup-Nginx"><a href="#Setup-Nginx" class="headerlink" title="Setup Nginx"></a>Setup Nginx</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">sudo</span> mv webvirtmgr /var/www/         ( CentOS, RedHat, Fedora, Ubuntu )</span><br><span class="line"> </span><br><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;/etc/nginx/conf.d/webvirtmgr.conf</span><br><span class="line">server &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span> default_server;</span><br><span class="line">    <span class="attribute">server_name</span> <span class="variable">$hostname</span>;</span><br><span class="line">    <span class="comment">#access_log /var/log/nginx/webvirtmgr_access_log;</span></span><br><span class="line">    <span class="attribute">location</span> /static/ &#123;</span><br><span class="line">            <span class="attribute">root</span> /var/www/webvirtmgr/webvirtmgr; <span class="comment"># or /srv instead of /var</span></span><br><span class="line">            <span class="attribute">expires</span> max;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ .*\.(js|css)$</span> &#123;</span><br><span class="line">               <span class="attribute">proxy_pass</span> http://127.0.0.1:8000;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://127.0.0.1:8000;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-for <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>:<span class="variable">$server_port</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">            <span class="attribute">proxy_connect_timeout</span> <span class="number">600</span>;</span><br><span class="line">            <span class="attribute">proxy_read_timeout</span> <span class="number">600</span>;</span><br><span class="line">            <span class="attribute">proxy_send_timeout</span> <span class="number">600</span>;</span><br><span class="line">            <span class="attribute">client_max_body_size</span> <span class="number">1024M</span>; <span class="comment"># Set higher depending on your needs</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"><span class="attribute">sudo</span> service nginx restart</span><br><span class="line">sudo chown -R nginx:nginx /var/www/webvirtmgr</span><br></pre></td></tr></table></figure>
<h3 id="Setup-Supervisor"><a href="#Setup-Supervisor" class="headerlink" title="Setup Supervisor"></a>Setup Supervisor</h3><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[program:webvirtmgr]</span></span><br><span class="line"><span class="attr">command</span>=/usr/bin/python /var/www/webvirtmgr/manage.py run_gunicorn -c /var/www/webvirtmgr/conf/gunicorn.conf.py</span><br><span class="line"><span class="attr">directory</span>=/var/www/webvirtmgr</span><br><span class="line"><span class="attr">autostart</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">autorestart</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">logfile</span>=/var/log/supervisor/webvirtmgr.log</span><br><span class="line"><span class="attr">log_stderr</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">user</span>=nginx</span><br><span class="line"><span class="section">[program:webvirtmgr-console]</span></span><br><span class="line"><span class="attr">command</span>=/usr/bin/python /var/www/webvirtmgr/console/webvirtmgr-console</span><br><span class="line"><span class="attr">directory</span>=/var/www/webvirtmgr</span><br><span class="line"><span class="attr">autostart</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">autorestart</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">stdout_logfile</span>=/var/log/supervisor/webvirtmgr-console.log</span><br><span class="line"><span class="attr">redirect_stderr</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">user</span>=nginx</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo  chkconfig supervisord on</span><br><span class="line">sudo service supervisord stop</span><br><span class="line">sudo service supervisord start</span><br></pre></td></tr></table></figure>
<h3 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/www/webvirtmgr</span><br><span class="line">sudo git pull</span><br><span class="line">sudo ./manage.py collectstatic</span><br><span class="line">sudo service supervisord restart</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">./manage.py runserver 0:8000</span><br></pre></td></tr></table></figure>
<h3 id="使用tcp方式连接libvirtd"><a href="#使用tcp方式连接libvirtd" class="headerlink" title="使用tcp方式连接libvirtd"></a>使用tcp方式连接libvirtd</h3><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">vim /etc/libvirt/libvirtd.conf</span><br><span class="line"></span><br><span class="line">listen_tls = 0</span><br><span class="line">listen_tcp = 1</span><br><span class="line">tcp_port = <span class="string">"16509"</span> <span class="comment">#tcp端口</span></span><br><span class="line">listen_addr = <span class="string">"0.0.0.0"</span> <span class="comment">#监听IP</span></span><br><span class="line">unix_sock_ro_perms = <span class="string">"0777"</span></span><br><span class="line">unix_sock_rw_perms = <span class="string">"0770"</span></span><br><span class="line">auth_tcp = <span class="string">"none"</span></span><br><span class="line">max_clients = 1024 <span class="comment">#最大连接书</span></span><br><span class="line">min_workers = 100</span><br><span class="line">max_workers = 200</span><br><span class="line">max_requests = 20</span><br><span class="line">max_client_requests = 50</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>虚拟化</category>
      </categories>
  </entry>
  <entry>
    <title>gitlab安装</title>
    <url>/2020/05/gitlab%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://github.com/gitlabhq" target="_blank" rel="noopener">gitlib</a></li>
<li><a href="/2020/05/Gitlab/" title="Gitlab管理">Gitlab管理</a></li>
<li><a href="/2020/05/gitlab%E8%BF%81%E7%A7%BB/" title="gitlab迁移">gitlab迁移</a></li>
<li><a href="https://docs.gitlab.com/omnibus/docker/" target="_blank" rel="noopener">gitlab hub</a></li>
</ul>
<h1 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h1><h2 id="docker-compose-方式安装（社区版）"><a href="#docker-compose-方式安装（社区版）" class="headerlink" title="docker-compose 方式安装（社区版）"></a>docker-compose 方式安装（社区版）</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.8'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">gitlab:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">gitlab</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gitlab/gitlab-ce</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">./data/gitlab/log:/var/log/gitlab:z</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">./data/gitlab/opt:/var/opt/gitlab:z</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">./data/gitlab/etc:/etc/gitlab:z</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="number">8080</span><span class="string">:80</span></span><br><span class="line">     <span class="bullet">-</span> <span class="number">8443</span><span class="string">:443</span></span><br></pre></td></tr></table></figure>
<h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line">docker-compose up -d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭</span></span><br><span class="line">docker-compose stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置</span></span><br><span class="line">docker-compose down</span><br><span class="line">rm /data/gitlab -rf</span><br><span class="line">docker-compose up -d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 管理员密码</span></span><br><span class="line">admin@example.com,admin@123.com</span><br></pre></td></tr></table></figure>
<h3 id="GitLab服务器IP地址设置"><a href="#GitLab服务器IP地址设置" class="headerlink" title="GitLab服务器IP地址设置"></a>GitLab服务器IP地址设置</h3><p>修改hosts 执行外网ip</p>
<h2 id="docker-方式安装-sameersbn-docker-gitlab"><a href="#docker-方式安装-sameersbn-docker-gitlab" class="headerlink" title="docker 方式安装 (sameersbn/docker-gitlab)"></a>docker 方式安装 (sameersbn/docker-gitlab)</h2><p><a href="https://github.com/sameersbn/docker-gitlab/blob/master/README.md#installation" target="_blank" rel="noopener">docker-gitlab docs</a></p>
<ul>
<li><a href="/2020/05/Docker/" title="Docker安装">Docker安装</a>
</li>
</ul>
<h3 id="下载镜像（sameersbn-gitlab）"><a href="#下载镜像（sameersbn-gitlab）" class="headerlink" title="下载镜像（sameersbn/gitlab）"></a>下载镜像（sameersbn/gitlab）</h3><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">docker</span> <span class="string">pull sameersbn/gitlab</span></span><br><span class="line"><span class="attr">docker</span> <span class="string">pull sameersbn/postgresql</span></span><br><span class="line"><span class="attr">or</span></span><br><span class="line"><span class="attr">docker</span> <span class="string">pull sameersbn/mysql</span></span><br><span class="line"><span class="attr">docker</span> <span class="string">pull sameersbn/redis</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mkdir</span> <span class="string">gitlab-container</span></span><br><span class="line"><span class="attr">cd</span> <span class="string">gitlab-container</span></span><br><span class="line"><span class="attr">wget</span> <span class="string">https://raw.githubusercontent.com/sameersbn/docker-gitlab/master/docker-compose.yml</span></span><br></pre></td></tr></table></figure>
<h3 id="简易配置-yml-文件-docker-compose-yml"><a href="#简易配置-yml-文件-docker-compose-yml" class="headerlink" title="简易配置 yml 文件 docker-compose.yml"></a>简易配置 yml 文件 docker-compose.yml</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建本地数据卷目录</span></span><br><span class="line">mkdir /data/volumn-docker/gitlab -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件</span></span><br><span class="line">DATADIR=<span class="string">"/data/volumn-docker/gitlab"</span></span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt;docker-compose.yml</span><br><span class="line">version: <span class="string">'2'</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  redis:</span><br><span class="line">    <span class="comment"># restart=always 配置容器退出后自动重启</span></span><br><span class="line">    restart: always</span><br><span class="line">    image: sameersbn/redis:latest</span><br><span class="line">    volumes:</span><br><span class="line">    - <span class="variable">$DATADIR</span>/redis:/var/lib/redis:Z</span><br><span class="line"></span><br><span class="line">  postgresql:</span><br><span class="line">    restart: always</span><br><span class="line">    image: sameersbn/postgresql:latest</span><br><span class="line">    volumes:</span><br><span class="line">    - <span class="variable">$DATADIR</span>/dbs:/var/lib/postgresql:Z</span><br><span class="line">    environment:</span><br><span class="line">    - DB_USER=gitlab</span><br><span class="line">    - DB_PASS=gitlab<span class="comment">#123</span></span><br><span class="line">    - DB_NAME=gitlabhq_production</span><br><span class="line">    - DB_EXTENSION=pg_trgm</span><br><span class="line"></span><br><span class="line">  gitlab:</span><br><span class="line">    restart: always</span><br><span class="line">    image: sameersbn/gitlab:latest</span><br><span class="line">    depends_on:</span><br><span class="line">    - redis</span><br><span class="line">    - postgresql</span><br><span class="line">    ports:</span><br><span class="line">    - <span class="string">"8088:80"</span></span><br><span class="line">    - <span class="string">"2222:22"</span></span><br><span class="line">    volumes:</span><br><span class="line">    - <span class="variable">$DATADIR</span>:/home/git/data:Z</span><br><span class="line">    environment:</span><br><span class="line">    <span class="comment"># - DEBUG=false</span></span><br><span class="line">    <span class="comment"># postgresql 配置</span></span><br><span class="line">    - DB_ADAPTER=postgresql</span><br><span class="line">    - DB_HOST=postgresql</span><br><span class="line">    - DB_PORT=5432</span><br><span class="line">    - DB_USER=gitlab</span><br><span class="line">    - DB_PASS=gitlab<span class="comment">#123</span></span><br><span class="line">    - DB_NAME=gitlabhq_production</span><br><span class="line"></span><br><span class="line">    <span class="comment"># redis 配置</span></span><br><span class="line">    - REDIS_HOST=redis</span><br><span class="line">    - REDIS_PORT=6379</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 端口配置</span></span><br><span class="line">    - GITLAB_PORT=80</span><br><span class="line">    - GITLAB_SSH_PORT=22</span><br><span class="line"></span><br><span class="line">    <span class="comment"># CI 所使用的加密密钥</span></span><br><span class="line">    - GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alphanumeric-string</span><br><span class="line">    <span class="comment"># Session 加密密钥</span></span><br><span class="line">    - GITLAB_SECRETS_SECRET_KEY_BASE=long-and-random-alphanumeric-string</span><br><span class="line">    <span class="comment"># 数据库2FA密钥</span></span><br><span class="line">    - GITLAB_SECRETS_OTP_KEY_BASE=long-and-random-alphanumeric-string</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<h3 id="VERBOSE-配置"><a href="#VERBOSE-配置" class="headerlink" title="VERBOSE 配置"></a>VERBOSE 配置</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="attribute">DATADIR</span>=<span class="string">"/data/volumn-docker/gitlab"</span></span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt;docker-compose.yml</span><br><span class="line">version: <span class="string">'2'</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  redis:</span><br><span class="line">    # <span class="attribute">restart</span>=always 配置容器退出后自动重启</span><br><span class="line">    restart: always</span><br><span class="line">    image: sameersbn/redis:latest</span><br><span class="line">    volumes:</span><br><span class="line">    - <span class="variable">$DATADIR</span>/redis:/var/lib/redis:Z</span><br><span class="line">    - /etc/localtime:/etc/localtime:ro</span><br><span class="line"></span><br><span class="line">  #postgresql:</span><br><span class="line">  #  restart: always</span><br><span class="line">  #  image: sameersbn/postgresql:latest</span><br><span class="line">  #  volumes:</span><br><span class="line">  #  - <span class="variable">$DATADIR</span>/dbs:/var/lib/postgresql:Z</span><br><span class="line">  #  environment:</span><br><span class="line">  #  - <span class="attribute">DB_USER</span>=gitlab</span><br><span class="line">  #  - <span class="attribute">DB_PASS</span>=xxxx</span><br><span class="line">  #  - <span class="attribute">DB_NAME</span>=gitlabhq_production</span><br><span class="line">  #  - <span class="attribute">DB_EXTENSION</span>=pg_trgm</span><br><span class="line"></span><br><span class="line">  mysql:</span><br><span class="line">    restart: always</span><br><span class="line">    image: sameersbn/mysql:latest</span><br><span class="line">    volumes:</span><br><span class="line">    - <span class="variable">$DATADIR</span>/dbs:/var/lib/mysql:Z</span><br><span class="line">    - /etc/localtime:/etc/localtime:ro</span><br><span class="line">    environment:</span><br><span class="line">    - <span class="attribute">DB_USER</span>=gitlab</span><br><span class="line">    - <span class="attribute">DB_PASS</span>=xxxx</span><br><span class="line">    - <span class="attribute">DB_NAME</span>=gitlabhq_production</span><br><span class="line"></span><br><span class="line">  gitlab:</span><br><span class="line">    restart: always</span><br><span class="line">    #image: sameersbn/gitlab:latest</span><br><span class="line">    image: sameersbn/gitlab:8.14.4</span><br><span class="line">    depends_on:</span><br><span class="line">    - redis</span><br><span class="line">    - mysql</span><br><span class="line">    ports:</span><br><span class="line">    - <span class="string">"8088:80"</span></span><br><span class="line">    - <span class="string">"2222:22"</span></span><br><span class="line">    volumes:</span><br><span class="line">    - <span class="variable">$DATADIR</span>:/home/git/data:Z</span><br><span class="line">    - /etc/localtime:/etc/localtime:ro</span><br><span class="line"></span><br><span class="line">    environment:</span><br><span class="line">    - <span class="attribute">DEBUG</span>=<span class="literal">false</span></span><br><span class="line">    - <span class="attribute">TZ</span>=Asia/Shanghai</span><br><span class="line">    - <span class="attribute">GITLAB_TIMEZONE</span>=Beijing</span><br><span class="line">    - <span class="attribute">GITLAB_BACKUPS</span>=daily</span><br><span class="line">    - <span class="attribute">PATH</span>=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line">    </span><br><span class="line">    #</span><br><span class="line">    - <span class="attribute">GITLAB_VERSION</span>=8.14.4</span><br><span class="line">    - <span class="attribute">RUBY_VERSION</span>=2.3</span><br><span class="line">    - <span class="attribute">GOLANG_VERSION</span>=1.6.3</span><br><span class="line">    - <span class="attribute">GITLAB_SHELL_VERSION</span>=4.0.3</span><br><span class="line">    - <span class="attribute">GITLAB_WORKHORSE_VERSION</span>=1.1.1</span><br><span class="line"></span><br><span class="line">    # Email 配置</span><br><span class="line">    - <span class="attribute">GITLAB_ROOT_EMAIL</span>=yuzhigang@uhetrip.com</span><br><span class="line">    - <span class="attribute">GITLAB_EMAIL</span>=xxxx@uhetrip.com</span><br><span class="line">    - <span class="attribute">GITLAB_EMAIL_DISPLAY_NAME</span>=Gitlab_Local</span><br><span class="line">    - <span class="attribute">GITLAB_EMAIL_ENABLED</span>=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    # Gitlab 配置</span><br><span class="line">    - <span class="attribute">RAILS_ENV</span>=production</span><br><span class="line">    - <span class="attribute">GITLAB_USER</span>=git</span><br><span class="line">    - <span class="attribute">GITLAB_HOME</span>=/home/git</span><br><span class="line">    - <span class="attribute">GITLAB_LOG_DIR</span>=/var/log/gitlab</span><br><span class="line">    - <span class="attribute">GITLAB_CACHE_DIR</span>=/etc/docker-gitlab</span><br><span class="line">    - <span class="attribute">GITLAB_INSTALL_DIR</span>=/home/git/gitlab</span><br><span class="line">    - <span class="attribute">GITLAB_SHELL_INSTALL_DIR</span>=/home/git/gitlab-shell</span><br><span class="line">    - <span class="attribute">GITLAB_WORKHORSE_INSTALL_DIR</span>=/home/git/gitlab-workhorse</span><br><span class="line">    - <span class="attribute">GITLAB_DATA_DIR</span>=/home/git/data</span><br><span class="line">    - <span class="attribute">GITLAB_BUILD_DIR</span>=/etc/docker-gitlab/build</span><br><span class="line">    - <span class="attribute">GITLAB_RUNTIME_DIR</span>=/etc/docker-gitlab/runtime</span><br><span class="line"></span><br><span class="line">    # mysql 配置</span><br><span class="line">    - <span class="attribute">DB_ADAPTER</span>=mysql2</span><br><span class="line">    - <span class="attribute">DB_HOST</span>=mysql</span><br><span class="line">    - <span class="attribute">DB_PORT</span>=3306</span><br><span class="line">    - <span class="attribute">DB_USER</span>=gitlab</span><br><span class="line">    - <span class="attribute">DB_PASS</span>=xxxx</span><br><span class="line">    - <span class="attribute">DB_NAME</span>=gitlabhq_production</span><br><span class="line">    - <span class="attribute">DB_ENCODING</span>=utf8</span><br><span class="line"></span><br><span class="line">    # SMTP</span><br><span class="line">    - <span class="attribute">SMTP_ENABLED</span>=<span class="literal">true</span></span><br><span class="line">    - <span class="attribute">SMTP_DOMAIN</span>=mail.126.com</span><br><span class="line">    - <span class="attribute">SMTP_HOST</span>=smtp.126.com</span><br><span class="line">    - <span class="attribute">SMTP_PORT</span>=465</span><br><span class="line">    - <span class="attribute">SMTP_USER</span>=xxxx@126.com</span><br><span class="line">    - <span class="attribute">SMTP_PASS</span>=xxxx</span><br><span class="line">    - <span class="attribute">SMTP_STARTTLS</span>=<span class="literal">true</span></span><br><span class="line">    - <span class="attribute">SMTP_TLS</span>=<span class="literal">true</span></span><br><span class="line">    - <span class="attribute">SMTP_AUTHENTICATION</span>=login</span><br><span class="line"></span><br><span class="line">    # redis 配置</span><br><span class="line">    - <span class="attribute">REDIS_HOST</span>=redis</span><br><span class="line">    - <span class="attribute">REDIS_PORT</span>=6379</span><br><span class="line"></span><br><span class="line">    # 端口配置</span><br><span class="line">    - <span class="attribute">GITLAB_HOST</span>=localserver.com</span><br><span class="line">    - <span class="attribute">GITLAB_PORT</span>=80</span><br><span class="line">    - <span class="attribute">GITLAB_SSH_PORT</span>=22</span><br><span class="line">    - <span class="attribute">GITLAB_HTTPS</span>=<span class="literal">false</span></span><br><span class="line">    - <span class="attribute">SSL_SELF_SIGNED</span>=<span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    # CI 所使用的加密密钥</span><br><span class="line">    - <span class="attribute">GITLAB_SECRETS_DB_KEY_BASE</span>=long-and-random-alphanumeric-string</span><br><span class="line">    # Session 加密密钥</span><br><span class="line">    - <span class="attribute">GITLAB_SECRETS_SECRET_KEY_BASE</span>=long-and-random-alphanumeric-string</span><br><span class="line">    # 数据库2FA密钥</span><br><span class="line">    - <span class="attribute">GITLAB_SECRETS_OTP_KEY_BASE</span>=long-and-random-alphanumeric-string</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># 运行</span></span><br><span class="line">docker-compose up</span><br><span class="line"></span><br><span class="line"><span class="meta"># 后台运行</span></span><br><span class="line">docker-compose up -d</span><br><span class="line"></span><br><span class="line"><span class="meta"># 配置发生改变加 --remove-orphans </span></span><br><span class="line">docker-compose up -d</span><br><span class="line"></span><br><span class="line"><span class="meta"># 停止 </span></span><br><span class="line">docker-compose stop</span><br></pre></td></tr></table></figure>
<h3 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h3><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># Whoops, GitLab is taking too much time to respond.</span></span><br><span class="line"><span class="meta"># 服务没完全起来，等一会就ok。或者查看一下日志</span></span><br><span class="line">docker logs -f ContainerID</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="Daemon-方式安装-Centos7环境"><a href="#Daemon-方式安装-Centos7环境" class="headerlink" title="Daemon 方式安装 (Centos7环境)"></a>Daemon 方式安装 (Centos7环境)</h1><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><h3 id="安装配置依赖包"><a href="#安装配置依赖包" class="headerlink" title="安装配置依赖包"></a>安装配置依赖包</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install -y curl policycoreutils-python openssh-server</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> sshd</span><br><span class="line">sudo systemctl start sshd</span><br></pre></td></tr></table></figure>
<h3 id="打开防火墙"><a href="#打开防火墙" class="headerlink" title="打开防火墙"></a>打开防火墙</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo firewall-cmd --permanent --add-service=http</span><br><span class="line">sudo systemctl reload firewalld</span><br></pre></td></tr></table></figure>
<h3 id="安装postfix"><a href="#安装postfix" class="headerlink" title="安装postfix"></a>安装postfix</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install postfix</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> postfix</span><br><span class="line">sudo systemctl start postfix</span><br></pre></td></tr></table></figure>
<h3 id="配置postfix"><a href="#配置postfix" class="headerlink" title="配置postfix"></a>配置postfix</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">fatal: parameter inet_interfaces: <span class="literal">no</span> local<span class="built_in"> interface </span>found <span class="keyword">for</span> ::1</span><br><span class="line">vim /etc/postfix/main.cf</span><br><span class="line">inet_interfaces = all</span><br></pre></td></tr></table></figure>
<h2 id="GitLab-安装"><a href="#GitLab-安装" class="headerlink" title="GitLab 安装"></a>GitLab 安装</h2><h3 id="添加-GitLab-安装库"><a href="#添加-GitLab-安装库" class="headerlink" title="添加 GitLab 安装库"></a>添加 GitLab 安装库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.rpm.sh | sudo bash</span><br><span class="line">EXTERNAL_URL=<span class="string">"http://gitlab.example.com"</span>;yum install -y gitlab-ee</span><br></pre></td></tr></table></figure>
<h3 id="gitlab服务列表"><a href="#gitlab服务列表" class="headerlink" title="gitlab服务列表"></a>gitlab服务列表</h3><ul>
<li>gitaly</li>
<li>gitlab-monitor</li>
<li>gitlab-workhorse</li>
<li>logrotate</li>
<li>nginx</li>
<li>node-exporter</li>
<li>postgres-exporter</li>
<li>postgresql</li>
<li>prometheus</li>
<li>redis</li>
<li>redis-exporter</li>
<li>sidekiq</li>
<li>unicorn</li>
</ul>
<h3 id="gitlab-配置文件"><a href="#gitlab-配置文件" class="headerlink" title="gitlab 配置文件"></a>gitlab 配置文件</h3><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># 设置访问url</span></span><br><span class="line">cat /etc/gitlab/gitlab.rb</span><br><span class="line">external_url <span class="string">'http://192.168.88.201'</span></span><br><span class="line"><span class="meta"># 修改url后需要重新reconfigure</span></span><br><span class="line"><span class="meta"># 重新配置(配置完成会启动各服务)</span></span><br><span class="line">gitlab-ctl reconfigure</span><br><span class="line"><span class="meta"># 访问</span></span><br><span class="line">http:<span class="comment">//192.168.88.201/</span></span><br><span class="line"><span class="meta"># 会提示更改新的账号密码，如下： </span></span><br><span class="line">root,<span class="number">5</span>th9ol</span><br></pre></td></tr></table></figure>
<h3 id="管理、配置gitlab"><a href="#管理、配置gitlab" class="headerlink" title="管理、配置gitlab"></a>管理、配置gitlab</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动所有gitlab组件：</span></span><br><span class="line">gitlab-ctl start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止所有gitlab组件：</span></span><br><span class="line">gitlab-ctl stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启所有gitlab组件：</span></span><br><span class="line">gitlab-ctl restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 管理员密码忘了：</span></span><br><span class="line">登录GitLab的Rails控制台</span><br><span class="line">gitlab-rails<span class="built_in"> console </span>production</span><br><span class="line">user = User.where(id: 1).first()</span><br><span class="line">user.password = 12345678</span><br><span class="line">user.<span class="attribute">password_confirmation</span>=12345678</span><br><span class="line">user.save!</span><br></pre></td></tr></table></figure>
<h3 id="备份计划："><a href="#备份计划：" class="headerlink" title="备份计划："></a>备份计划：</h3><p>备份GitLab repositories and GitLab metadata<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 加入计划任务：</span></span><br><span class="line"><span class="number">0</span> <span class="number">2</span> * * * <span class="regexp">/opt/gi</span>tlab<span class="regexp">/bin/gi</span>tlab-rake gitlab:backup:create</span><br></pre></td></tr></table></figure></p>
<h3 id="恢复gitlab："><a href="#恢复gitlab：" class="headerlink" title="恢复gitlab："></a>恢复gitlab：</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">root@puppet backups</span>]<span class="meta"># pwd</span></span><br><span class="line">/<span class="keyword">var</span>/opt/gitlab/backups</span><br><span class="line"></span><br><span class="line">[<span class="meta">root@puppet backups</span>]<span class="meta"># ls</span></span><br><span class="line"><span class="number">1406691018</span>_gitlab_backup.tar</span><br><span class="line"></span><br><span class="line">b.停止unicorn和sidekiq，保证数据库没有新的连接，不会有写数据情况</span><br><span class="line">[<span class="meta">root@puppet backups</span>]<span class="meta"># gitlab-ctl stop unicorn</span></span><br><span class="line">ok: down: unicorn: <span class="number">0</span>s, normally up</span><br><span class="line"></span><br><span class="line">[<span class="meta">root@puppet backups</span>]<span class="meta"># gitlab-ctl stop sidekiq</span></span><br><span class="line">ok: down: sidekiq: <span class="number">0</span>s, normally up</span><br><span class="line"></span><br><span class="line">c.恢复数据，<span class="number">1406691018</span>为备份文件的时间戳</span><br><span class="line">[<span class="meta">root@puppet backups</span>]<span class="meta"># gitlab-rake gitlab:backup:restore BACKUP=1406691018</span></span><br></pre></td></tr></table></figure>
<h3 id="目前使用http方式，没有使用ssh"><a href="#目前使用http方式，没有使用ssh" class="headerlink" title="目前使用http方式，没有使用ssh"></a>目前使用http方式，没有使用ssh</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下面用管理员 root 创建一个普通用户 yanqi,</span></span><br><span class="line"><span class="comment"># 从邮件中登录修改密码 yanqi , 5th9ol</span></span><br><span class="line"><span class="comment"># 然后使用yanqi创建一个git仓库girl，</span></span><br><span class="line">new project:<span class="string">"websystem"</span></span><br><span class="line"><span class="comment"># 最后在客户机下向新建的仓库里上传一个代码文件。</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"alarm_machine@163.com"</span></span><br></pre></td></tr></table></figure>
<h3 id="pycharm-配置gitlab"><a href="#pycharm-配置gitlab" class="headerlink" title="pycharm 配置gitlab"></a>pycharm 配置gitlab</h3><p><a href="http://192.168.88.201/yanqi/websystem.git" target="_blank" rel="noopener">http://192.168.88.201/yanqi/websystem.git</a><br><a href="http://www.cnblogs.com/derekchen/p/5873010.html" target="_blank" rel="noopener">参考配置</a></p>
<h3 id="linux-使用-gitlab"><a href="#linux-使用-gitlab" class="headerlink" title="linux 使用 gitlab"></a>linux 使用 gitlab</h3><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">yum</span> <span class="string">install git</span></span><br><span class="line"></span><br><span class="line"><span class="attr">git</span> <span class="string">clone http://192.168.88.201/yanqi/websystem.git</span></span><br><span class="line"><span class="attr">cd</span> <span class="string">websystem</span></span><br><span class="line"><span class="attr">git</span> <span class="string">pull</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>devops</category>
      </categories>
  </entry>
  <entry>
    <title>周易名言</title>
    <url>/2020/05/%E5%91%A8%E6%98%93%E5%90%8D%E8%A8%80/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="吉凶悔吝-周而复始"><a href="#吉凶悔吝-周而复始" class="headerlink" title="吉凶悔吝 周而复始"></a>吉凶悔吝 周而复始</h3><h4 id="修身"><a href="#修身" class="headerlink" title="修身"></a>修身</h4><ul>
<li>天行健，君子以自强不息。<blockquote>
<p>语出《易传》中的《象传》。意思是:宇宙不停运转，人应效法天地，永远不断地前进。</p>
</blockquote>
</li>
<li>地势坤，君子以厚德载物。<blockquote>
<p>意为大地的气势宽厚和顺，君子应增厚美德，容载万物。一个人要能承受自己能力以内，要自己权衡。</p>
</blockquote>
</li>
<li>君子以反身修德。<blockquote>
<p>出自《易经 蹇卦》,原文应是“山上有水,蹇,君子以反身修德”。意思是说君子在面对挫折、困难(蹇)的时候,应该反躬自问,修养品德。</p>
</blockquote>
</li>
<li><p>君子以自昭明德。</p>
</li>
<li><p>君子以顺德，积小以高大。</p>
</li>
<li>君子以见善则迁，有过则改。</li>
<li>见险而能止，智矣哉。</li>
<li>君子上交不谄，下交不渎。</li>
<li>君子以慎言语，节饮食。</li>
<li>君子以俭德辟难，不可荣以禄。</li>
<li>君子以独立不惧，遁世无闷。</li>
<li>君子藏器于身，待时而动。</li>
<li>君子以惩忿窒欲。</li>
<li>君子之道，或出或处，或默或语。</li>
<li>君子以非礼弗履。</li>
<li>君子以言有物而行有恒。</li>
<li>君子以思不出其位。</li>
<li>君子以恐惧修省。</li>
<li>君子以正位凝命。</li>
<li>君子敬以直内，义以方外，敬义立而德不孤。</li>
<li>君子以向晦入宴息。</li>
<li>君子以立不易方。</li>
<li>君子以果行育德。</li>
<li>君子以多识前言往行以畜其德。</li>
<li>君子以致命遂志。</li>
<li>君子以朋友讲习。</li>
<li>君子以思患而豫防之。</li>
<li>君子以同而异。</li>
<li>君子以行过乎恭，丧过乎哀，用过乎俭。</li>
</ul>
<h4 id="齐家"><a href="#齐家" class="headerlink" title="齐家"></a>齐家</h4><ul>
<li>方以类聚，物以群分。</li>
<li>积善之家，必有余庆；积不善之家，必有余殃。</li>
<li>德薄而位尊，知小而谋大，力小而任重，鲜不及矣。</li>
<li>仁者见之谓之仁，知者见之谓之知。</li>
<li>穷则变，变则通，通则久。</li>
<li>居上位而不骄，在下位而不忧。故乾乾因其时而惕，虽危而无咎矣。</li>
</ul>
<h4 id="平天下"><a href="#平天下" class="headerlink" title="平天下"></a>平天下</h4><ul>
<li>天地之道，恒久而不已也。</li>
<li>形而上者谓之道。形而下者谓之器。</li>
<li>几事不密则害成。</li>
<li>遏恶扬善，顺天休命。</li>
<li>知周乎万物，而道济天下。</li>
</ul>
<p>不易乎世，不成乎名；遁世无闷，不见是而无闷；乐则行之，忧则违之，确乎其不可拔。</p>
<p>探赜索隐，钩深致远。</p>
<p>劳尔不伐，有功而不德，厚之至也！</p>
<p>乐天知名，故不忧。</p>
<p>君子知微知彰，知柔知刚，万夫之望。</p>
<p>虎视眈眈，其欲逐逐。</p>
<p>尺蠖之屈，以求信也。龙蛇之蛰，以存身也。</p>
<p>本乎天者亲上，本乎地者亲下。</p>
<p>二人同心，其利断金。同心之言，其臭如兰。</p>
<p>谦谦君子，卑以自牧也。</p>
<p>蒙以正养，圣功也。</p>
<p>书不尽言，言不尽意。</p>
<p>尺蠖之屈，以求信也；龙蛇之蛰，以存身也。</p>
<p>神而明之，存乎其人；默而成之，不言而信，存乎德行。</p>
<p>括囊无咎无誉，盖言慎也。</p>
<p>庸言之信，庸行之谨，闲邪存其诚，善世而不伐，德博而化。</p>
<p>汤武革命，顺乎天而应乎人。</p>
<p>乐天知命，故不忧。</p>
<p>日中则昃，月盈则食。天地盈虚，与时消息。而况于人乎？况于鬼神乎？</p>
<p>时止则止，时行则行，动静不失其时，其道光明。</p>
<p>困而不失其所亨，其唯君子乎！</p>
<p>备物致用，立成器以为天下利，莫大乎圣人。</p>
<p>物不可穷也，故受之以未济。</p>
<p>谦也者，致恭以存其位者也。</p>
<p>同声相应，同气相求。</p>
<p>慢藏诲盗，冶容诲淫。</p>
<p>刚健笃实辉光，日新其德。</p>
]]></content>
      <categories>
        <category>东方哲学</category>
      </categories>
  </entry>
  <entry>
    <title>DevOps</title>
    <url>/2020/05/DevOps/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul>
<li><p>软件开发的生命周期</p>
<ul>
<li>规划和需求分析</li>
<li>需求定义</li>
<li>产品架构设计</li>
<li>产品开发与构建</li>
<li>产品测试</li>
<li>生产部署和维护</li>
</ul>
</li>
<li><p>软件构建生命周期</p>
<ul>
<li>构建环境初始化</li>
<li>代码预处理</li>
<li>代码编译</li>
<li>测试代码预编译</li>
<li>测试代码编译</li>
<li>单元测试</li>
<li>打包</li>
<li>继承测试环境准备</li>
<li>集成测试</li>
<li>撤销集成测试环境</li>
<li>安装</li>
<li>发布</li>
</ul>
</li>
<li>事件驱动<ul>
<li>问题左移,尽量把问题留在dev阶段</li>
</ul>
</li>
<li>测试驱动开发流程</li>
</ul>
<h2 id="常规-DEVOPS-流程"><a href="#常规-DEVOPS-流程" class="headerlink" title="常规 DEVOPS 流程"></a>常规 DEVOPS 流程</h2><p>源代码托管 gitlab<br>CI持续集成工具 jenkins<br>自动发布工具 ansible</p>
<h2 id="容器化-DEVOPS-流程"><a href="#容器化-DEVOPS-流程" class="headerlink" title="容器化 DEVOPS 流程"></a>容器化 DEVOPS 流程</h2><p>源代码托管 gitlab<br>CI持续集成工具jenkins<br>镜像仓库 harbor<br>自动发布工具 docker-composer | Kubernetes Deployment</p>
<h2 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h2><ul>
<li>微服务 ks-apiserver ks-apigateway<ul>
<li>服务治理</li>
<li>灰度发布</li>
<li>熔断 Istio</li>
<li>限流</li>
<li>智能路由 Ingress</li>
</ul>
</li>
</ul>
<p>CI 持续集成（Continuous Integration）<br>CD 持续部署（Continuous Delivery）<br>CD 持续部署（Continuous Deployment）</p>
<ul>
<li>CI/CD Jenkins<ul>
<li>代码仓库<ul>
<li>git</li>
<li>SVN</li>
<li>BitBucket</li>
</ul>
</li>
<li>镜像仓库管理<ul>
<li>Harbor</li>
</ul>
</li>
<li>镜像迁移</li>
<li>源码到镜像 Source-to-Image</li>
<li>安全扫描</li>
<li>流水线 Pipeline<ul>
<li>checkout</li>
<li>UT test SonarQube</li>
<li>Publish</li>
</ul>
</li>
<li>部署<ul>
<li>蓝绿部署（将两个版本同时在线）</li>
<li>金丝雀发布（将一部分真实流量引入一个新版本进行测试）</li>
<li>流量镜像（将生产流量镜像拷贝到测试集群或者新的版本中）</li>
</ul>
</li>
</ul>
</li>
<li>应用管理 OpenPitrix<ul>
<li>应用发布</li>
<li>应用部署</li>
<li>版本控制</li>
<li>应用仓库管理<ul>
<li>OpenPitrix</li>
</ul>
</li>
</ul>
</li>
<li>监控&amp;日志&amp;告警 Prometheus<ul>
<li>系统及服务监控 Metrics-server</li>
<li>系统及服务日志 Elasticsearch Fluent Bit</li>
<li>告警管理 Alert Notification</li>
</ul>
</li>
<li>安全<ul>
<li>用户管理 ks-account</li>
<li>角色管理</li>
<li>第三方登录认证</li>
<li>密钥管理</li>
</ul>
</li>
</ul>
<h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><ul>
<li><a href="/2020/05/gitlab%E5%AE%89%E8%A3%85/" title="gitlab docker安装">gitlab docker安装</a></li>
<li><a href="/2020/05/gitlab%E8%BF%81%E7%A7%BB/" title="gitlab迁移">gitlab迁移</a></li>
<li><a href="/2020/06/git%E4%BD%BF%E7%94%A8/" title="git使用">git使用</a></li>
<li><a href="/2020/05/Jenkins/" title="Jenkins安装配置">Jenkins安装配置</a></li>
<li><a href="/2020/05/Ansible%E4%BD%BF%E7%94%A8/" title="Ansible使用">Ansible使用</a></li>
<li><a href="/2020/05/Docker/" title="Docker">Docker</a></li>
<li><a href="/2020/05/kubernetes%E5%AE%89%E8%A3%85/" title="kubernetes安装">kubernetes安装</a></li>
<li><a href="/2020/06/%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85DevOps%E7%8E%AF%E5%A2%83/" title="安装配置DevOps环境">安装配置DevOps环境</a></li>
<li><a href="/2020/05/Harbor%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/" title="Harbor安装配">Harbor安装配</a></li>
</ul>
]]></content>
      <categories>
        <category>devops</category>
      </categories>
  </entry>
  <entry>
    <title>仿hexo的golang实现</title>
    <url>/2020/05/%E4%BB%BFhexo%E7%9A%84golang%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>^^最近想写一下博客。顺便把自己的文档给整理一下。<br>gitee pages 提供静态页的空间。把这个过程也纪录一下。<br>选择 gitee 主要原因是国内访问比较快。<br>githup pages 需要的话导出一份放上去就可以很方便。</p>
<p>实现功能</p>
<pre><code>1、通过模板生成静态页
2、定义网站结构，一次性生成
3、把 markdown文件保存到 md 目录，用来生成文章
4、定义文章结构，把文章生成后加到list页面里。
</code></pre><p>实现完之后三步搞定</p>
<pre><code>1、执行命令生成网站
2、对 md 目录下的文章自动生成
3、发布到 gitee
</code></pre><p>最后写个 deply.sh 一键发布</p>
<h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><h4 id="发布的目录结构"><a href="#发布的目录结构" class="headerlink" title="发布的目录结构"></a>发布的目录结构</h4><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">blog #类似hexo public</span><br><span class="line">	|-&gt; artcles </span><br><span class="line">		|-&gt; modules #把文章分类</span><br><span class="line">			|-&gt; artcle</span><br><span class="line">	|-&gt; static # 静态文件</span><br><span class="line">		|-&gt; css</span><br><span class="line">		|-&gt; js</span><br><span class="line">		|-&gt; images</span><br></pre></td></tr></table></figure>
<h4 id="待发布的目录结构"><a href="#待发布的目录结构" class="headerlink" title="待发布的目录结构"></a>待发布的目录结构</h4><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">blog</span><br><span class="line">	|-&gt; templates</span><br><span class="line">		|-&gt; static       	<span class="comment">#存放静态文件</span></span><br><span class="line">            |-&gt; css</span><br><span class="line">            |-&gt; js</span><br><span class="line">            |-&gt; images</span><br><span class="line">		|-&gt; nav.tpl 		<span class="comment">#导航条</span></span><br><span class="line">		|-&gt; index.tpl 		<span class="comment">#首页</span></span><br><span class="line">		|-&gt; header.tpl 		<span class="comment">#page 头部</span></span><br><span class="line">		|-&gt; content.tpl 	<span class="comment">#page 内容部分</span></span><br><span class="line">		|-&gt; footer.tpl		<span class="comment">#page 尾部</span></span><br><span class="line">		|-&gt; md 				<span class="comment">#用来存放文章</span></span><br><span class="line">            |-&gt;cloud        <span class="comment">#支持文章分类，文章太多后容易查找</span></span><br><span class="line">		|-&gt; <span class="keyword">list</span>.tpl		<span class="comment">#列表页</span></span><br><span class="line">		|-&gt; listcontent.tpl <span class="comment">#列表内容部分 </span></span><br><span class="line">	|-&gt; main.go</span><br><span class="line">	|-&gt; go.mod</span><br></pre></td></tr></table></figure>
<h3 id="主程序-main-go"><a href="#主程序-main-go" class="headerlink" title="主程序 main.go"></a>主程序 main.go</h3><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	<span class="string">"github.com/PuerkitoBio/goquery"</span> <span class="comment">//用来处理dom</span></span><br><span class="line">	<span class="string">"os/exec"</span></span><br><span class="line">	<span class="string">"strconv"</span></span><br><span class="line"></span><br><span class="line">	<span class="string">"path/filepath"</span></span><br><span class="line">	<span class="string">"regexp"</span> <span class="comment">//正则主要是匹配 tab</span></span><br><span class="line">	<span class="string">"strings"</span></span><br><span class="line"></span><br><span class="line">	<span class="string">"html/template"</span> <span class="comment">// html 模板</span></span><br><span class="line">	<span class="string">"io/ioutil"</span> <span class="comment">// 文件操作</span></span><br><span class="line">	<span class="string">"log"</span></span><br><span class="line">	<span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义网站结构</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">	ROOT          = <span class="string">"blog"</span></span><br><span class="line">	TEMP          = <span class="string">"templates"</span></span><br><span class="line">	ARTCLEDIR     = ROOT + <span class="string">"/artcle"</span></span><br><span class="line">	STATICDIR     = ROOT + <span class="string">"/static"</span></span><br><span class="line">	TEMPMD        = TEMP + <span class="string">"/md"</span></span><br><span class="line">	TEMPSTATICDIR = TEMP + <span class="string">"/static"</span></span><br><span class="line">	INDEX         = ROOT + <span class="string">"/index.html"</span></span><br><span class="line">	LIST          = <span class="string">"/list.html"</span></span><br><span class="line">	TEMPLATES     = <span class="string">"templates"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 页面名称</span></span><br><span class="line"><span class="keyword">type</span> Page <span class="keyword">struct</span> &#123;</span><br><span class="line">	title <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 标签颜色 color</span></span><br><span class="line"><span class="keyword">type</span> tagColor <span class="keyword">struct</span> &#123;</span><br><span class="line">	colorn <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文章的属性</span></span><br><span class="line"><span class="keyword">type</span> Artcle <span class="keyword">struct</span> &#123;</span><br><span class="line">	name     <span class="keyword">string</span></span><br><span class="line">	date     <span class="keyword">string</span></span><br><span class="line">	catagory <span class="keyword">string</span></span><br><span class="line">	tag      <span class="keyword">string</span></span><br><span class="line">	tagColor</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文件列表--感觉这点golang不如python好操作</span></span><br><span class="line"><span class="keyword">var</span> fileList []<span class="keyword">string</span></span><br><span class="line"><span class="keyword">var</span> staticfileList []<span class="keyword">string</span></span><br><span class="line"><span class="keyword">var</span> mdfileList []<span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 程序入口</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// 生成blog</span></span><br><span class="line">	TpltoBlog()</span><br><span class="line">	<span class="comment">// 把 static 拷贝到blog</span></span><br><span class="line">	staticToBlog()</span><br><span class="line">	<span class="comment">// 把文章发表出去，对md进行处理</span></span><br><span class="line">	mdHandler2()</span><br><span class="line">	<span class="comment">//遍历 artcle 目录，把生成 html 文章 加到list.html中</span></span><br><span class="line">	htmlToList()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把html 加入list.html中</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">htmlToList</span><span class="params">()</span></span> &#123;</span><br><span class="line">	GetAllFile(ARTCLEDIR)</span><br><span class="line">	<span class="keyword">for</span> _, f := <span class="keyword">range</span> fileList &#123;</span><br><span class="line">		fmt.Println(f)</span><br><span class="line">		addList(f)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理 md 底下的文件（废弃）</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mdHandler</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// 遍历一下目录</span></span><br><span class="line">	files, _ := ioutil.ReadDir(TEMPMD)</span><br><span class="line">	<span class="keyword">for</span> _, file := <span class="keyword">range</span> files &#123;</span><br><span class="line">		filename := file.Name()</span><br><span class="line">		<span class="keyword">if</span> file.IsDir() &#123;</span><br><span class="line">			<span class="keyword">continue</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="comment">// 处理 md to html</span></span><br><span class="line">			<span class="keyword">if</span> strings.Contains(filename, <span class="string">".md"</span>) &#123;</span><br><span class="line">				<span class="comment">//fmt.Println(filename)</span></span><br><span class="line">				htmlfilename := strings.Replace(filename, <span class="string">".md"</span>, <span class="string">".html"</span>, <span class="number">-1</span>)</span><br><span class="line">				fmt.Println(TEMPMD+<span class="string">"/"</span>+filename, TEMPMD+<span class="string">"/"</span>+htmlfilename)</span><br><span class="line">                <span class="comment">// 通过外部命令实现</span></span><br><span class="line">				cmd := exec.Command(<span class="string">"./mdtohtml"</span>, <span class="string">"-css"</span>, <span class="string">"blog/static/css/base.css"</span>, TEMPMD+<span class="string">"/"</span>+filename, TEMPMD+<span class="string">"/"</span>+htmlfilename)</span><br><span class="line">				cmd.Run()</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理 md 底下的文件</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mdHandler2</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// 生成 md 文件列表</span></span><br><span class="line">	getMD(<span class="string">"templates/md"</span>)</span><br><span class="line">	<span class="keyword">for</span> _, file := <span class="keyword">range</span> mdfileList &#123;</span><br><span class="line">		<span class="keyword">if</span> strings.Contains(file, <span class="string">".md"</span>) &#123;</span><br><span class="line">			htmlfilename := strings.Replace(file, <span class="string">".md"</span>, <span class="string">".html"</span>, <span class="number">-1</span>)</span><br><span class="line">			fmt.Println(file, htmlfilename)</span><br><span class="line">			cmd := exec.Command(<span class="string">"./mdtohtml"</span>, <span class="string">"-css"</span>, <span class="string">"blog/static/css/base.css"</span>, file, htmlfilename)</span><br><span class="line">			cmd.Run()</span><br><span class="line">			_, err := os.Stat(htmlfilename)</span><br><span class="line">			<span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">				<span class="keyword">if</span> strings.Contains(htmlfilename, <span class="string">".html"</span>) &#123;</span><br><span class="line">					fmt.Println(htmlfilename)</span><br><span class="line">					HtmltoBlog(htmlfilename) <span class="comment">// 对 html 的进行处理</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历 md</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getMD</span><span class="params">(filename <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">	files, _ := ioutil.ReadDir(filename)</span><br><span class="line">	<span class="keyword">for</span> _, file := <span class="keyword">range</span> files &#123;</span><br><span class="line">		f := file.Name()</span><br><span class="line">		<span class="keyword">if</span> file.IsDir() &#123;</span><br><span class="line">			<span class="comment">//fmt.Println(filename + "/" + f)</span></span><br><span class="line">			getMD(filename + <span class="string">"/"</span> + f)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//fmt.Println(f)</span></span><br><span class="line">		mdfileList = <span class="built_in">append</span>(mdfileList, filename+<span class="string">"/"</span>+f)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理md底下html文件</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">htmlHandler</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// 遍历一下目录</span></span><br><span class="line">	files, _ := ioutil.ReadDir(TEMPMD)</span><br><span class="line">	<span class="keyword">for</span> _, file := <span class="keyword">range</span> files &#123;</span><br><span class="line">		filename := file.Name()</span><br><span class="line">		<span class="keyword">if</span> file.IsDir() &#123;</span><br><span class="line">			<span class="keyword">continue</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="comment">// html to modules(/blog/artcle/*)</span></span><br><span class="line">			<span class="keyword">if</span> strings.Contains(filename, <span class="string">".html"</span>) &#123;</span><br><span class="line">				fmt.Println(filename)</span><br><span class="line">				HtmltoBlog(filename) <span class="comment">// 对 html 的进行处理</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把 static 拷贝到blog</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">staticToBlog</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> tempfile <span class="keyword">string</span></span><br><span class="line">	staticToList(TEMPSTATICDIR)</span><br><span class="line">	<span class="keyword">for</span> _, f := <span class="keyword">range</span> staticfileList &#123;</span><br><span class="line">		tempfile = strings.Replace(f, <span class="string">"templates/"</span>, <span class="string">"blog/"</span>, <span class="number">-1</span>)</span><br><span class="line">		fmt.Println(f, tempfile)</span><br><span class="line">		t, _ := ioutil.ReadFile(f)</span><br><span class="line">		ioutil.WriteFile(tempfile, t, os.ModePerm)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 寻找静态文件</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">staticToList</span><span class="params">(pathname <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">	files, _ := ioutil.ReadDir(pathname)</span><br><span class="line">	<span class="keyword">for</span> _, file := <span class="keyword">range</span> files &#123;</span><br><span class="line">		filename := file.Name()</span><br><span class="line">		<span class="comment">//fmt.Println(filename)</span></span><br><span class="line">		<span class="keyword">if</span> file.IsDir() &#123;</span><br><span class="line">			staticToList(pathname + <span class="string">"/"</span> + filename)</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			staticfileList = <span class="built_in">append</span>(staticfileList, pathname+<span class="string">"/"</span>+filename)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归目录</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetAllFile</span><span class="params">(pathname <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	rd, err := ioutil.ReadDir(pathname)</span><br><span class="line">	<span class="keyword">for</span> _, fi := <span class="keyword">range</span> rd &#123;</span><br><span class="line">		<span class="keyword">if</span> fi.IsDir() &#123;</span><br><span class="line">			<span class="comment">//fmt.Printf("[%s]\n", pathname+"/"+fi.Name())</span></span><br><span class="line">			GetAllFile(pathname + <span class="string">"/"</span> + fi.Name())</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> fi.Name() != <span class="string">"list.html"</span> &#123;</span><br><span class="line">				<span class="comment">//fmt.Println(pathname + "/" + fi.Name())</span></span><br><span class="line">				fileList = <span class="built_in">append</span>(fileList, pathname+<span class="string">"/"</span>+fi.Name())</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据模板生成html</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TpltoBlog</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 创建目录和文件</span></span><br><span class="line">	os.MkdirAll(ARTCLEDIR+<span class="string">"/bigdata"</span>, os.ModePerm)</span><br><span class="line">	os.MkdirAll(ARTCLEDIR+<span class="string">"/cloud"</span>, os.ModePerm)</span><br><span class="line">	os.MkdirAll(STATICDIR+<span class="string">"/css"</span>, os.ModePerm)</span><br><span class="line">	os.Mkdir(STATICDIR+<span class="string">"/images"</span>, os.ModePerm)</span><br><span class="line">	os.Mkdir(STATICDIR+<span class="string">"/scripts"</span>, os.ModePerm)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 生成模块</span></span><br><span class="line">	ArtcleDir := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;</span><br><span class="line">		<span class="string">"bigdata"</span>: <span class="string">"大数据"</span>,</span><br><span class="line">		<span class="string">"cloud"</span>:   <span class="string">"云计算"</span>,</span><br><span class="line">		<span class="string">"devops"</span>:  <span class="string">"DevOps"</span>,</span><br><span class="line">		<span class="string">"develop"</span>: <span class="string">"开发技术"</span>,</span><br><span class="line">		<span class="string">"pmp"</span>:     <span class="string">"PMP"</span>,</span><br><span class="line">		<span class="string">"system"</span>:  <span class="string">"系统管理"</span>,</span><br><span class="line">		<span class="string">"lookfor"</span>: <span class="string">"速查表"</span>,</span><br><span class="line">	&#125;</span><br><span class="line">	ArtcleMap := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> dir, name := <span class="keyword">range</span> ArtcleDir &#123;</span><br><span class="line">		os.MkdirAll(ARTCLEDIR+<span class="string">"/"</span>+dir, os.ModePerm)</span><br><span class="line">		ArtcleMap[ARTCLEDIR+<span class="string">"/"</span>+dir+LIST] = name</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 生成主页</span></span><br><span class="line">	t1, _ := template.ParseFiles(<span class="string">"templates/index.tpl"</span>, <span class="string">"templates/header.tpl"</span>, <span class="string">"templates/nav.tpl"</span>, <span class="string">"templates/content.tpl"</span>, <span class="string">"templates/footer.tpl"</span>)</span><br><span class="line">	<span class="comment">// p := Page&#123;"主页"&#125;</span></span><br><span class="line">	indexFile1, _ := os.Create(INDEX)</span><br><span class="line">	t1.Execute(indexFile1, ArtcleMap)</span><br><span class="line">	indexFile1.Close()</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 生成列表页</span></span><br><span class="line">	t2, _ := template.ParseFiles(<span class="string">"templates/list.tpl"</span>, <span class="string">"templates/header.tpl"</span>, <span class="string">"templates/nav.tpl"</span>, <span class="string">"templates/listcontent.tpl"</span>, <span class="string">"templates/footer.tpl"</span>)</span><br><span class="line">	<span class="comment">// p1 := Page&#123;"列表"&#125;</span></span><br><span class="line">	<span class="keyword">for</span> dir, _ := <span class="keyword">range</span> ArtcleDir &#123;</span><br><span class="line">		fmt.Println(ARTCLEDIR + <span class="string">"/"</span> + dir + LIST)</span><br><span class="line">		listFile, err := os.Create(ARTCLEDIR + <span class="string">"/"</span> + dir + LIST)</span><br><span class="line">		<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">			fmt.Println(err)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 把对列表页进行html渲染</span></span><br><span class="line">		t2.Execute(listFile, ArtcleMap)</span><br><span class="line">		listFile.Close()</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 生成 404 页面</span></span><br><span class="line">	t404, _ := template.ParseFiles(<span class="string">"templates/404.tpl"</span>)</span><br><span class="line">	p := Page&#123;<span class="string">"404"</span>&#125;</span><br><span class="line">	indexFile404, _ := os.Create(ROOT + <span class="string">"/404.html"</span>)</span><br><span class="line">	t404.Execute(indexFile404, p)</span><br><span class="line">	indexFile404.Close()</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> k, v := <span class="keyword">range</span> ArtcleMap &#123;</span><br><span class="line">		fmt.Println(k, v)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把文章添加到列表</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addList</span><span class="params">(filename <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">	<span class="comment">// 获取目录</span></span><br><span class="line">	listDir := filepath.Dir(filename)</span><br><span class="line">	listFile := listDir + <span class="string">"/list.html"</span></span><br><span class="line">	fmt.Println(listDir, listFile, filename)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 判断有没有 list.html</span></span><br><span class="line">	_, err := os.Stat(listFile)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 获取文件</span></span><br><span class="line">	text, _ := ioutil.ReadFile(filename)</span><br><span class="line">	r := regexp.MustCompile(<span class="string">`&lt;!--(.*)--&gt;`</span>)</span><br><span class="line">	b := r.FindAllStringSubmatch(<span class="keyword">string</span>(text), <span class="number">-1</span>)</span><br><span class="line">	atl := Artcle&#123;&#125;</span><br><span class="line">    <span class="comment">// 定义文章分类的颜色</span></span><br><span class="line">	Color := <span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span>&#123;</span><br><span class="line">		<span class="number">1</span>: <span class="string">"rgba(0,0,255,0.8)"</span>,</span><br><span class="line">		<span class="number">2</span>: <span class="string">"rgba(255,0,0,0.8)"</span>,</span><br><span class="line">		<span class="number">3</span>: <span class="string">"rgba(0,255,0,0.8)"</span>,</span><br><span class="line">		<span class="number">4</span>: <span class="string">"rgba(100,100,100,0.8)"</span>,</span><br><span class="line">		<span class="number">5</span>: <span class="string">"rgba(125,200,120,0.8)"</span>,</span><br><span class="line">	&#125;</span><br><span class="line">	atl.colorn = <span class="number">5</span></span><br><span class="line">	atl.tag = <span class="string">"其他"</span></span><br><span class="line">	atl.date = <span class="string">"2010-02-08"</span></span><br><span class="line">	<span class="comment">// 查找 html 标签信息</span></span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> b &#123;</span><br><span class="line">		<span class="comment">//fmt.Println(v)</span></span><br><span class="line">		tmp := v[<span class="number">1</span>]</span><br><span class="line">		<span class="keyword">if</span> strings.Contains(tmp, <span class="string">"title:"</span>) &#123;</span><br><span class="line">			atl.name = purhcontent(<span class="string">"title:"</span>, tmp)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"tag:"</span>) &#123;</span><br><span class="line">			atl.tag = purhcontent(<span class="string">"tag:"</span>, tmp)</span><br><span class="line">			<span class="keyword">if</span> <span class="built_in">len</span>(atl.tag) &lt; <span class="number">1</span> &#123;</span><br><span class="line">				atl.tag = <span class="string">"其他"</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"date:"</span>) &#123;</span><br><span class="line">			atl.date = purhcontent(<span class="string">"date:"</span>, tmp)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"catagory:"</span>) &#123;</span><br><span class="line">			atl.catagory = purhcontent(<span class="string">"catagory:"</span>, tmp)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"color:"</span>) &#123;</span><br><span class="line">			atl.colorn, err = strconv.Atoi(purhcontent(<span class="string">"color:"</span>, tmp))</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 对列表页进行生成</span></span><br><span class="line">	domname := <span class="string">".list dl"</span></span><br><span class="line">	htmltag := <span class="string">`&lt;dd&gt;&lt;a href="`</span> + atl.name + <span class="string">`.html"&gt;`</span> + atl.name +</span><br><span class="line">		<span class="string">`&lt;/a&gt;&lt;span class="tag"&gt;&lt;span style="background-color: `</span> +</span><br><span class="line">		Color[atl.colorn] + <span class="string">` !important;"&gt;`</span> + atl.tag + <span class="string">`&lt;/span&gt;&lt;span&gt;`</span> +</span><br><span class="line">		atl.date + <span class="string">`&lt;/span&gt;&lt;/span&gt;&lt;/dd&gt;`</span></span><br><span class="line">	fmt.Println(domname, htmltag)</span><br><span class="line">	artcleTolist(listFile, domname, htmltag)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对md 标签进行操作</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HtmltoBlog</span><span class="params">(filename <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">	newDir := ARTCLEDIR + <span class="string">"/"</span></span><br><span class="line">	<span class="comment">// md 下的 html 进行处理，并分类保存到 blog 下</span></span><br><span class="line">	text, _ := ioutil.ReadFile(filename)</span><br><span class="line">	r := regexp.MustCompile(<span class="string">`&lt;!--(.*)--&gt;`</span>)</span><br><span class="line">	b := r.FindAllStringSubmatch(<span class="keyword">string</span>(text), <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">	atl := Artcle&#123;&#125;</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> b &#123;</span><br><span class="line">		<span class="comment">//fmt.Println(v)</span></span><br><span class="line">		tmp := v[<span class="number">1</span>]</span><br><span class="line">		<span class="keyword">if</span> strings.Contains(tmp, <span class="string">"title:"</span>) &#123;</span><br><span class="line">			atl.name = purhcontent(<span class="string">"title:"</span>, tmp)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"tag:"</span>) &#123;</span><br><span class="line">			atl.tag = purhcontent(<span class="string">"tag:"</span>, tmp)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"date:"</span>) &#123;</span><br><span class="line">			atl.date = purhcontent(<span class="string">"date:"</span>, tmp)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"catagory:"</span>) &#123;</span><br><span class="line">			atl.catagory = purhcontent(<span class="string">"catagory:"</span>, tmp)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	oldFile := filename</span><br><span class="line">	newFile := newDir + atl.catagory + <span class="string">"/"</span> + atl.name + <span class="string">".html"</span></span><br><span class="line">	fmt.Println(oldFile)</span><br><span class="line">	fmt.Println(newFile)</span><br><span class="line">	os.Rename(oldFile, newFile)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入key提取value</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">purhcontent</span><span class="params">(k <span class="keyword">string</span>, v <span class="keyword">string</span>)</span> <span class="params">(value <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">	tmp := v</span><br><span class="line">	<span class="keyword">if</span> strings.Contains(tmp, k) &#123;</span><br><span class="line">		v1 := strings.Split(tmp, <span class="string">":"</span>)</span><br><span class="line">		value = strings.TrimSpace(v1[<span class="number">1</span>])</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在 list.html 插入文章节点</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">artcleTolist</span><span class="params">(filename, domname, htmltag <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">	f, err := os.OpenFile(filename, os.O_RDONLY, os.ModePerm)</span><br><span class="line">	<span class="keyword">defer</span> f.Close()</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatal(err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 从文件中转doc</span></span><br><span class="line">	doc, err := goquery.NewDocumentFromReader(f)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatal(err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 查找 dom 节点</span></span><br><span class="line">	s := doc.Find(domname)</span><br><span class="line">	<span class="comment">// 文章已经存在就不添加</span></span><br><span class="line">	tmps, _ := s.Html()</span><br><span class="line">	<span class="keyword">if</span> strings.Contains(tmps, htmltag) &#123;</span><br><span class="line">		<span class="comment">//fmt.Println("匹配到了")</span></span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	s = s.AppendHtml(htmltag)</span><br><span class="line">	<span class="comment">// 将doc 转 html</span></span><br><span class="line">	html, _ := doc.Html()</span><br><span class="line">	f1, _ := os.OpenFile(filename, os.O_WRONLY, os.ModePerm)</span><br><span class="line">	<span class="keyword">defer</span> f1.Close()</span><br><span class="line">	f1.WriteString(html)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="需要使用-markdown-to-html-的模块"><a href="#需要使用-markdown-to-html-的模块" class="headerlink" title="需要使用 markdown to html 的模块"></a>需要使用 markdown to html 的模块</h3><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Blackfriday Markdown Processor</span></span><br><span class="line"><span class="comment">// Available at http://github.com/russross/blackfriday</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Copyright © 2011 Russ Ross &lt;russ@russross.com&gt;.</span></span><br><span class="line"><span class="comment">// Distributed under the Simplified BSD License.</span></span><br><span class="line"><span class="comment">// See README.md for details.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Example front-end for command-line use</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"flag"</span></span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	<span class="string">"github.com/russross/blackfriday"</span></span><br><span class="line">	<span class="string">"io/ioutil"</span></span><br><span class="line">	<span class="string">"os"</span></span><br><span class="line">	<span class="string">"runtime/pprof"</span></span><br><span class="line">	<span class="string">"strings"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> DEFAULT_TITLE = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// parse command-line options</span></span><br><span class="line">	<span class="keyword">var</span> page, toc, toconly, xhtml, latex, smartypants, latexdashes, fractions <span class="keyword">bool</span></span><br><span class="line">	<span class="keyword">var</span> css, cpuprofile <span class="keyword">string</span></span><br><span class="line">	<span class="keyword">var</span> repeat <span class="keyword">int</span></span><br><span class="line">	flag.BoolVar(&amp;page, <span class="string">"page"</span>, <span class="literal">false</span>,</span><br><span class="line">		<span class="string">"Generate a standalone HTML page (implies -latex=false)"</span>)</span><br><span class="line">	flag.BoolVar(&amp;toc, <span class="string">"toc"</span>, <span class="literal">false</span>,</span><br><span class="line">		<span class="string">"Generate a table of contents (implies -latex=false)"</span>)</span><br><span class="line">	flag.BoolVar(&amp;toconly, <span class="string">"toconly"</span>, <span class="literal">false</span>,</span><br><span class="line">		<span class="string">"Generate a table of contents only (implies -toc)"</span>)</span><br><span class="line">	flag.BoolVar(&amp;xhtml, <span class="string">"xhtml"</span>, <span class="literal">true</span>,</span><br><span class="line">		<span class="string">"Use XHTML-style tags in HTML output"</span>)</span><br><span class="line">	flag.BoolVar(&amp;latex, <span class="string">"latex"</span>, <span class="literal">false</span>,</span><br><span class="line">		<span class="string">"Generate LaTeX output instead of HTML"</span>)</span><br><span class="line">	flag.BoolVar(&amp;smartypants, <span class="string">"smartypants"</span>, <span class="literal">true</span>,</span><br><span class="line">		<span class="string">"Apply smartypants-style substitutions"</span>)</span><br><span class="line">	flag.BoolVar(&amp;latexdashes, <span class="string">"latexdashes"</span>, <span class="literal">true</span>,</span><br><span class="line">		<span class="string">"Use LaTeX-style dash rules for smartypants"</span>)</span><br><span class="line">	flag.BoolVar(&amp;fractions, <span class="string">"fractions"</span>, <span class="literal">true</span>,</span><br><span class="line">		<span class="string">"Use improved fraction rules for smartypants"</span>)</span><br><span class="line">	flag.StringVar(&amp;css, <span class="string">"css"</span>, <span class="string">""</span>,</span><br><span class="line">		<span class="string">"Link to a CSS stylesheet (implies -page)"</span>)</span><br><span class="line">	flag.StringVar(&amp;cpuprofile, <span class="string">"cpuprofile"</span>, <span class="string">""</span>,</span><br><span class="line">		<span class="string">"Write cpu profile to a file"</span>)</span><br><span class="line">	flag.IntVar(&amp;repeat, <span class="string">"repeat"</span>, <span class="number">1</span>,</span><br><span class="line">		<span class="string">"Process the input multiple times (for benchmarking)"</span>)</span><br><span class="line">	flag.Usage = <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">		fmt.Fprintf(os.Stderr, <span class="string">"Blackfriday Markdown Processor v"</span>+blackfriday.VERSION+</span><br><span class="line">			<span class="string">"\nAvailable at http://github.com/russross/blackfriday\n\n"</span>+</span><br><span class="line">			<span class="string">"Copyright © 2011 Russ Ross &lt;russ@russross.com&gt;\n"</span>+</span><br><span class="line">			<span class="string">"Distributed under the Simplified BSD License\n"</span>+</span><br><span class="line">			<span class="string">"See website for details\n\n"</span>+</span><br><span class="line">			<span class="string">"Usage:\n"</span>+</span><br><span class="line">			<span class="string">"  %s [options] [inputfile [outputfile]]\n\n"</span>+</span><br><span class="line">			<span class="string">"Options:\n"</span>,</span><br><span class="line">			os.Args[<span class="number">0</span>])</span><br><span class="line">		flag.PrintDefaults()</span><br><span class="line">	&#125;</span><br><span class="line">	flag.Parse()</span><br><span class="line"></span><br><span class="line">	<span class="comment">// enforce implied options</span></span><br><span class="line">	<span class="keyword">if</span> css != <span class="string">""</span> &#123;</span><br><span class="line">		css = <span class="string">"/"</span> + css</span><br><span class="line">		page = <span class="literal">true</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> page &#123;</span><br><span class="line">		latex = <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> toconly &#123;</span><br><span class="line">		toc = <span class="literal">true</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> toc &#123;</span><br><span class="line">		latex = <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// turn on profiling?</span></span><br><span class="line">	<span class="keyword">if</span> cpuprofile != <span class="string">""</span> &#123;</span><br><span class="line">		f, err := os.Create(cpuprofile)</span><br><span class="line">		<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">			fmt.Fprintln(os.Stderr, err)</span><br><span class="line">		&#125;</span><br><span class="line">		pprof.StartCPUProfile(f)</span><br><span class="line">		<span class="keyword">defer</span> pprof.StopCPUProfile()</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// read the input</span></span><br><span class="line">	<span class="keyword">var</span> input []<span class="keyword">byte</span></span><br><span class="line">	<span class="keyword">var</span> err error</span><br><span class="line">	args := flag.Args()</span><br><span class="line">	<span class="keyword">switch</span> <span class="built_in">len</span>(args) &#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">		<span class="comment">//if input, err = ioutil.ReadAll(os.Stdin); err != nil &#123;</span></span><br><span class="line">		<span class="comment">//	fmt.Fprintln(os.Stderr, "Error reading from Stdin:", err)</span></span><br><span class="line">		<span class="comment">//	os.Exit(-1)</span></span><br><span class="line">		<span class="comment">//&#125;</span></span><br><span class="line">		flag.Usage()</span><br><span class="line">	<span class="keyword">case</span> <span class="number">1</span>, <span class="number">2</span>:</span><br><span class="line">		<span class="keyword">if</span> input, err = ioutil.ReadFile(args[<span class="number">0</span>]); err != <span class="literal">nil</span> &#123;</span><br><span class="line">			fmt.Fprintln(os.Stderr, <span class="string">"Error reading from"</span>, args[<span class="number">0</span>], <span class="string">":"</span>, err)</span><br><span class="line">			os.Exit(<span class="number">-1</span>)</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">default</span>:</span><br><span class="line">		flag.Usage()</span><br><span class="line">		os.Exit(<span class="number">-1</span>)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// set up options</span></span><br><span class="line">	extensions := <span class="number">0</span></span><br><span class="line">	extensions |= blackfriday.EXTENSION_NO_INTRA_EMPHASIS</span><br><span class="line">	extensions |= blackfriday.EXTENSION_TABLES</span><br><span class="line">	extensions |= blackfriday.EXTENSION_FENCED_CODE</span><br><span class="line">	extensions |= blackfriday.EXTENSION_AUTOLINK</span><br><span class="line">	extensions |= blackfriday.EXTENSION_STRIKETHROUGH</span><br><span class="line">	extensions |= blackfriday.EXTENSION_SPACE_HEADERS</span><br><span class="line"></span><br><span class="line">	<span class="keyword">var</span> renderer blackfriday.Renderer</span><br><span class="line">	<span class="keyword">if</span> latex &#123;</span><br><span class="line">		<span class="comment">// render the data into LaTeX</span></span><br><span class="line">		renderer = blackfriday.LatexRenderer(<span class="number">0</span>)</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="comment">// render the data into HTML</span></span><br><span class="line">		htmlFlags := <span class="number">0</span></span><br><span class="line">		<span class="keyword">if</span> xhtml &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_USE_XHTML</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> smartypants &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_USE_SMARTYPANTS</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> fractions &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_SMARTYPANTS_FRACTIONS</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> latexdashes &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_SMARTYPANTS_LATEX_DASHES</span><br><span class="line">		&#125;</span><br><span class="line">		title := <span class="string">""</span></span><br><span class="line">		<span class="keyword">if</span> page &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_COMPLETE_PAGE</span><br><span class="line">			title = getTitle(input)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> toconly &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_OMIT_CONTENTS</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> toc &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_TOC</span><br><span class="line">		&#125;</span><br><span class="line">		renderer = blackfriday.HtmlRenderer(htmlFlags, title, css)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// parse and render</span></span><br><span class="line">	<span class="keyword">var</span> output []<span class="keyword">byte</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; repeat; i++ &#123;</span><br><span class="line">		output = blackfriday.Markdown(input, renderer, extensions)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// output the result</span></span><br><span class="line">	<span class="keyword">var</span> out *os.File</span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">len</span>(args) == <span class="number">2</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> out, err = os.Create(args[<span class="number">1</span>]); err != <span class="literal">nil</span> &#123;</span><br><span class="line">			fmt.Fprintf(os.Stderr, <span class="string">"Error creating %s: %v"</span>, args[<span class="number">1</span>], err)</span><br><span class="line">			os.Exit(<span class="number">-1</span>)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">defer</span> out.Close()</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		out = os.Stdout</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> _, err = out.Write(output); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Fprintln(os.Stderr, <span class="string">"Error writing output:"</span>, err)</span><br><span class="line">		os.Exit(<span class="number">-1</span>)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// try to guess the title from the input buffer</span></span><br><span class="line"><span class="comment">// just check if it starts with an &lt;h1&gt; element and use that</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getTitle</span><span class="params">(input []<span class="keyword">byte</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">	i := <span class="number">0</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// skip blank lines</span></span><br><span class="line">	<span class="keyword">for</span> i &lt; <span class="built_in">len</span>(input) &amp;&amp; (input[i] == <span class="string">'\n'</span> || input[i] == <span class="string">'\r'</span>) &#123;</span><br><span class="line">		i++</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> i &gt;= <span class="built_in">len</span>(input) &#123;</span><br><span class="line">		<span class="keyword">return</span> DEFAULT_TITLE</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> input[i] == <span class="string">'\r'</span> &amp;&amp; i+<span class="number">1</span> &lt; <span class="built_in">len</span>(input) &amp;&amp; input[i+<span class="number">1</span>] == <span class="string">'\n'</span> &#123;</span><br><span class="line">		i++</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// find the first line</span></span><br><span class="line">	start := i</span><br><span class="line">	<span class="keyword">for</span> i &lt; <span class="built_in">len</span>(input) &amp;&amp; input[i] != <span class="string">'\n'</span> &amp;&amp; input[i] != <span class="string">'\r'</span> &#123;</span><br><span class="line">		i++</span><br><span class="line">	&#125;</span><br><span class="line">	line1 := input[start:i]</span><br><span class="line">	<span class="keyword">if</span> input[i] == <span class="string">'\r'</span> &amp;&amp; i+<span class="number">1</span> &lt; <span class="built_in">len</span>(input) &amp;&amp; input[i+<span class="number">1</span>] == <span class="string">'\n'</span> &#123;</span><br><span class="line">		i++</span><br><span class="line">	&#125;</span><br><span class="line">	i++</span><br><span class="line"></span><br><span class="line">	<span class="comment">// check for a prefix header</span></span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">len</span>(line1) &gt;= <span class="number">3</span> &amp;&amp; line1[<span class="number">0</span>] == <span class="string">'#'</span> &amp;&amp; (line1[<span class="number">1</span>] == <span class="string">' '</span> || line1[<span class="number">1</span>] == <span class="string">'\t'</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> strings.TrimSpace(<span class="keyword">string</span>(line1[<span class="number">2</span>:]))</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// check for an underlined header</span></span><br><span class="line">	<span class="keyword">if</span> i &gt;= <span class="built_in">len</span>(input) || input[i] != <span class="string">'='</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> DEFAULT_TITLE</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i &lt; <span class="built_in">len</span>(input) &amp;&amp; input[i] == <span class="string">'='</span> &#123;</span><br><span class="line">		i++</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i &lt; <span class="built_in">len</span>(input) &amp;&amp; (input[i] == <span class="string">' '</span> || input[i] == <span class="string">'\t'</span>) &#123;</span><br><span class="line">		i++</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> i &gt;= <span class="built_in">len</span>(input) || (input[i] != <span class="string">'\n'</span> &amp;&amp; input[i] != <span class="string">'\r'</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> DEFAULT_TITLE</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> strings.TrimSpace(<span class="keyword">string</span>(line1))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="部署脚本-deploy-sh"><a href="#部署脚本-deploy-sh" class="headerlink" title="部署脚本 deploy.sh"></a>部署脚本 deploy.sh</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go run main.go</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">git add ./*</span><br><span class="line">git commit -m <span class="string">"file update"</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>develop</category>
      </categories>
      <tags>
        <tag>goquery</tag>
        <tag>markdown转html</tag>
      </tags>
  </entry>
  <entry>
    <title>chrome-headless</title>
    <url>/2020/05/chrome-headless/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="MAC-系统中"><a href="#MAC-系统中" class="headerlink" title="MAC 系统中"></a>MAC 系统中</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/Applications/Google</span>\ Chrome.app/Contents/MacOS</span><br><span class="line">ln -s <span class="string">./Google</span>\ Chrome <span class="string">./chrome</span></span><br><span class="line"><span class="string">./chrome</span> <span class="params">--headless</span> <span class="params">--disable-gpu</span> <span class="params">--dump-dom</span> http:<span class="string">//www.baidu.com</span></span><br><span class="line"><span class="params">--headless</span> 不显示窗体</span><br><span class="line"><span class="params">--disable-gpu</span> 关闭GPU</span><br><span class="line"><span class="params">--dump-dom</span> 把 dom 元素输出来</span><br></pre></td></tr></table></figure>
<h3 id="chrome-相关"><a href="#chrome-相关" class="headerlink" title="chrome 相关"></a>chrome 相关</h3><ul>
<li><a href="https://www.chromium.org/" target="_blank" rel="noopener">Chromium</a><ul>
<li>Chromium是由Google主导开发的网页浏览器。</li>
</ul>
</li>
<li>CDB<ul>
<li>chrome debug protocol，简称cdp。一个让devtools和浏览器内核交换数据的通道</li>
</ul>
</li>
<li><a href="https://chromedevtools.github.io/devtools-protocol/" target="_blank" rel="noopener">devtools</a><ul>
<li>对chrome 进行调试的工具。</li>
</ul>
</li>
<li><a href="https://github.com/chromedp" target="_blank" rel="noopener">chromedb</a><ul>
<li>golang语言中利用CDB驱动浏览器包。</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>develop</category>
      </categories>
      <tags>
        <tag>chrome</tag>
        <tag>cdp</tag>
      </tags>
  </entry>
  <entry>
    <title>万台服务器运维</title>
    <url>/2020/05/%E4%B8%87%E5%8F%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="Hey, password is required here." /><label>Hey, password is required here.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="53b93a5461fd2ea1b43efdf526441b75790512ac623db953b9b5f7aebce75bf2"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>计算量</tag>
        <tag>成本核算</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis使用</title>
    <url>/2020/05/Redis%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://redis.io/documentation" target="_blank" rel="noopener"> Redis docs </a></li>
<li><a href="http://www.redis.cn/" target="_blank" rel="noopener"> redis cn </a></li>
</ul>
<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul>
<li>key</li>
<li><p>value</p>
</li>
<li><p>type</p>
<ul>
<li>String</li>
<li>Hash</li>
<li>List</li>
<li>Set</li>
<li>Sorted Set</li>
<li>bitmaps</li>
<li>hyperloglogs</li>
<li>geospatial</li>
</ul>
</li>
<li><p>复制</p>
</li>
<li>LUA</li>
<li>LRU</li>
<li>事务</li>
<li>持久化</li>
<li>哨兵</li>
<li>自动分区</li>
<li>高可用</li>
</ul>
]]></content>
      <categories>
        <category>Service</category>
      </categories>
  </entry>
  <entry>
    <title>NFS安装配置</title>
    <url>/2020/05/NFS%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">配置文件 <span class="regexp">/etc/</span>exports</span><br><span class="line">NFS 进程</span><br><span class="line">rpc.portmap <span class="comment"># portmap进程的主要功能是把RPC程序号转化为Internet的端口号。</span></span><br><span class="line"></span><br><span class="line">rpc.mountd</span><br><span class="line">rpc.nfsd</span><br><span class="line">rpc.statd</span><br><span class="line">rpc.lockd</span><br><span class="line">rpc.rquotad</span><br></pre></td></tr></table></figure>
<h2 id="安装-NFS-server"><a href="#安装-NFS-server" class="headerlink" title="安装 NFS server"></a>安装 NFS server</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">yum</span> <span class="string">-y install nfs-utils</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">restart nfs</span></span><br><span class="line"><span class="comment"># 重新载入配置</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">reload nfs</span></span><br></pre></td></tr></table></figure>
<h2 id="配置-NFS-server"><a href="#配置-NFS-server" class="headerlink" title="配置 NFS server"></a>配置 NFS server</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">1. </span><br><span class="line">mkdir /data</span><br><span class="line"><span class="comment"># 默认登录进来使用 nfsnobody 用户</span></span><br><span class="line">chmod 777 /data/nfs</span><br><span class="line"></span><br><span class="line">2. <span class="builtin-name">set</span><span class="built_in"> config </span></span><br><span class="line"><span class="comment"># directory machine1(option11,option12)</span></span><br><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;/etc/exports</span><br><span class="line">/data/nfs 192.168.0.0/255.255.255.0(rw,sync)</span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># optinos</span></span><br><span class="line">ro : read only</span><br><span class="line">rw : read <span class="keyword">and</span> write</span><br><span class="line">no_root_squash : 使用 nobody 作为客户端用户</span><br><span class="line">no_subtree_check : </span><br><span class="line">sync : write is complete</span><br></pre></td></tr></table></figure>
<h2 id="通过-host-deny-限制访问"><a href="#通过-host-deny-限制访问" class="headerlink" title="通过 host deny 限制访问"></a>通过 host deny 限制访问</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">/etc/hosts.deny</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># service: host [or network/netmask] , host [or network/netmask]</span></span><br><span class="line"><span class="string">/etc/hosts.allow</span></span><br><span class="line"><span class="attr">portmap:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.1</span> <span class="string">,</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.2</span></span><br></pre></td></tr></table></figure>
<h2 id="检查-nfs-是否启动"><a href="#检查-nfs-是否启动" class="headerlink" title="检查 nfs 是否启动"></a>检查 nfs 是否启动</h2><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>exportfs -v</span><br><span class="line"><span class="variable">$ </span>rpcinfo -p</span><br></pre></td></tr></table></figure>
<h2 id="client-配置"><a href="#client-配置" class="headerlink" title="client 配置"></a>client 配置</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 nfs client</span></span><br><span class="line"><span class="string">yum</span> <span class="string">-y</span> <span class="string">install</span> <span class="string">nfs-utils</span></span><br><span class="line"><span class="comment"># 查看可以挂载的目录</span></span><br><span class="line"><span class="string">showmount</span> <span class="string">-e</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.105</span></span><br><span class="line"><span class="comment"># 挂载</span></span><br><span class="line"><span class="comment"># 只读挂载</span></span><br><span class="line"><span class="string">mount</span> <span class="string">-r</span> <span class="string">-t</span> <span class="string">nfs</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.105</span><span class="string">:/data/nfs</span> <span class="string">/mnt</span> </span><br><span class="line"><span class="comment"># 可写挂载</span></span><br><span class="line"><span class="string">mount</span> <span class="string">-w</span> <span class="string">-t</span> <span class="string">nfs</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.105</span><span class="string">:/data/nfs</span> <span class="string">/mnt</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入 /etc/fstab（指定端口）</span></span><br><span class="line"><span class="string">localhost:/home</span>  <span class="string">/mnt/home</span>  <span class="string">nfs</span>  <span class="string">rw,hard,intr,port=250,mountport=251</span>  <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="string">cat</span> <span class="string">&lt;&lt;'EOF'</span> <span class="string">&gt;&gt;/etc/fstab</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.0</span><span class="number">.105</span><span class="string">:/data/nfs</span>  <span class="string">/mnt</span>    <span class="string">nfs</span>          <span class="string">rw</span>            <span class="number">0</span>    <span class="number">0</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>
<h2 id="NFS-优化"><a href="#NFS-优化" class="headerlink" title="NFS 优化"></a>NFS 优化</h2><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置块大小提供传输速度</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 网络数据包大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 输入队列大小</span></span><br><span class="line">echo <span class="number">262144</span> &gt; <span class="regexp">/proc/sys</span><span class="regexp">/net/core</span><span class="regexp">/rmem_default</span></span><br><span class="line"><span class="regexp">echo 262144 &gt; /proc</span><span class="regexp">/sys/net</span><span class="regexp">/core/rmem</span>_max</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Storages</category>
      </categories>
  </entry>
  <entry>
    <title>mac命令行操作</title>
    <url>/2020/05/mac%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://support.apple.com/zh-cn/guide/terminal/trmlshtcts/mac" target="_blank" rel="noopener">命令行快捷键</a><br><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">新建窗口（new）:<span class="keyword">Command</span>-N</span><br><span class="line">使用相同命令新建窗口:Control-<span class="keyword">Command</span>-N</span><br><span class="line">新建标签页（tab）：<span class="keyword">Command</span>-T</span><br><span class="line">使用相同命令新建标签页（tab）：Control-<span class="keyword">Command</span>-T</span><br><span class="line">显示或隐藏标签页栏：Shift-<span class="keyword">Command</span>-T</span><br><span class="line">显示所有标签页或退出标签页概览：Shift-<span class="keyword">Command</span>-反斜杠 (\)</span><br><span class="line">新建命令：Shift-<span class="keyword">Command</span>-N</span><br><span class="line">新建远程连接：Shift-<span class="keyword">Command</span>-K</span><br><span class="line">显示或隐藏检查器(inspect)：<span class="keyword">Command</span>-I</span><br><span class="line"></span><br><span class="line">编辑标题：Shift-<span class="keyword">Command</span>-I</span><br><span class="line">编辑背景颜色：<span class="keyword">Option</span>-<span class="keyword">Command</span>-I</span><br><span class="line">放大字体：<span class="keyword">Command</span>-加号键 (+)</span><br><span class="line">缩小字体：<span class="keyword">Command</span>-减号键 (–)</span><br><span class="line">下一个窗口：<span class="keyword">Command</span>-重音符键 (`)</span><br><span class="line">上一个窗口：<span class="keyword">Command</span>-Shift-波浪符号 (~)</span><br><span class="line">下一个标签页：Control-Tab</span><br><span class="line">上一个标签页：Control-Shift-Tab</span><br><span class="line"></span><br><span class="line">将窗口拆分为两个面板：<span class="keyword">Command</span>-D</span><br><span class="line">关闭拆分面板：Shift-<span class="keyword">Command</span>-D</span><br><span class="line"></span><br><span class="line">关闭标签页：<span class="keyword">Command</span>-W</span><br><span class="line">关闭窗口：Shift-<span class="keyword">Command</span>-W</span><br><span class="line"></span><br><span class="line">关闭其他标签页：<span class="keyword">Option</span>-<span class="keyword">Command</span>-W</span><br><span class="line">全部关闭：<span class="keyword">Option</span>-Shift-<span class="keyword">Command</span>-W</span><br><span class="line"></span><br><span class="line">滚动到顶部：<span class="keyword">Command</span>-Home</span><br><span class="line">滚动到底部：<span class="keyword">Command</span>-End</span><br><span class="line"></span><br><span class="line">上一页：<span class="keyword">Command</span>-Page Up</span><br><span class="line">下一页：<span class="keyword">Command</span>-Page Down</span><br><span class="line">上一行：<span class="keyword">Option</span>-<span class="keyword">Command</span>-Page Up</span><br><span class="line">下一行：<span class="keyword">Option</span>-<span class="keyword">Command</span>-Page Down</span><br></pre></td></tr></table></figure></p>
<h3 id="MAC-命令行翻墙"><a href="#MAC-命令行翻墙" class="headerlink" title="MAC 命令行翻墙"></a>MAC 命令行翻墙</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">lsof -i :1086</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt;~/.bash_profile</span><br><span class="line">alias <span class="attribute">proxy</span>=<span class="string">'export all_proxy=socks5://127.0.0.1:1086'</span></span><br><span class="line">alias <span class="attribute">unproxy</span>=<span class="string">'unset all_proxy'</span></span><br><span class="line">EOF</span><br><span class="line">source ~/.bash_profile</span><br><span class="line"></span><br><span class="line">proxy</span><br><span class="line">curl ip.sb</span><br><span class="line"></span><br><span class="line">unproxy</span><br></pre></td></tr></table></figure>
<h3 id="MAC-alfred"><a href="#MAC-alfred" class="headerlink" title="MAC alfred"></a>MAC alfred</h3><p>sudo mdutil -a -i on 打开索引试试<br>spotlight 把无关的内容关掉</p>
<ul>
<li><a href="https://www.iterm2.com/downloads.html" target="_blank" rel="noopener">iterm2</a></li>
</ul>
<h3 id="MAC-iterm2"><a href="#MAC-iterm2" class="headerlink" title="MAC iterm2"></a>MAC iterm2</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 调出 alfred alt+ space</span></span><br><span class="line">iterm2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 全屏 command + enter</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 远程连接 command + O</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建窗口 command + N</span></span><br><span class="line"><span class="comment"># 新建Tab command + T</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭窗口|Tab command + W</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭所有窗口 alt + command + W</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送消息到所有 窗口 alt + command + I 重复取消</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 水平分割 command + D</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 垂直分割 shift + command + D</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换窗口 alt + command + up|down</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加文件目录颜色显示</span></span><br><span class="line">cat &lt;&lt;EOF &gt;&gt;<span class="variable">$HOME</span>/.bash_profile</span><br><span class="line"><span class="built_in">alias</span> ll=<span class="string">"ls -l -G"</span></span><br><span class="line"><span class="built_in">alias</span> ls=<span class="string">"ls -G"</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件上传下载</span></span><br><span class="line"><span class="comment"># 本地 brew install lrzsz</span></span><br><span class="line"><span class="comment"># iTerm2 的设置界面 Perference-&gt; Profiles -&gt; Default -&gt; Advanced -&gt; Triggers </span></span><br><span class="line">Regular expression: /*/*B0100</span><br><span class="line">Action: Run Silent Coprocess</span><br><span class="line">Parameters: /usr/<span class="built_in">local</span>/bin/iterm2-send-zmodem.sh</span><br><span class="line"></span><br><span class="line">Regular expression: /*/*B00000000000000</span><br><span class="line">Action: Run Silent Coprocess</span><br><span class="line">Parameters: /usr/<span class="built_in">local</span>/bin/iterm2-recv-zmodem.sh</span><br><span class="line"><span class="comment"># 远程 yum -y install lrzsz</span></span><br><span class="line"><span class="comment"># 登录到远程机器</span></span><br><span class="line">sz file <span class="comment"># 下载文件</span></span><br></pre></td></tr></table></figure>
<h3 id="iterm2-lrzsz"><a href="#iterm2-lrzsz" class="headerlink" title="iterm2 lrzsz"></a>iterm2 lrzsz</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">1.安装支持rz和sz命令的lrzsz：brew <span class="keyword">install</span> lrzsz</span><br><span class="line"></span><br><span class="line">等了挺长时间的。</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>在本地/usr/<span class="keyword">local</span>/<span class="keyword">bin</span>/目录下保存iterm2-send-zmodem.sh 和iterm2-recv-zmodem.sh两个脚本</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>设置一下两个脚本的权限，一般 chmod <span class="number">777</span> 就行了</span><br><span class="line"></span><br><span class="line">chmod <span class="number">777</span> /usr/<span class="keyword">local</span>/<span class="keyword">bin</span>/iterm2-*</span><br><span class="line"><span class="number">4.</span>设置Iterm2的Tirgger特性，<span class="keyword">profiles</span>-&gt;<span class="keyword">default</span>-&gt;editProfiles-&gt;<span class="keyword">Advanced</span>中的Tirgger</span><br><span class="line"></span><br><span class="line">添加两条<span class="keyword">trigger</span>，分别设置 Regular expression，<span class="keyword">Action</span>，<span class="keyword">Parameters</span>，Instant如下：</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>第一条</span><br><span class="line">        Regular expression: rz waiting <span class="keyword">to</span> receive.\*\*B0100</span><br><span class="line">        <span class="keyword">Action</span>: Run Silent Coprocess</span><br><span class="line">        <span class="keyword">Parameters</span>: /usr/<span class="keyword">local</span>/<span class="keyword">bin</span>/iterm2-send-zmodem.sh</span><br><span class="line">        Instant: checked</span><br><span class="line"><span class="number">2.</span>第二条</span><br><span class="line">        Regular expression: \*\*B00000000000000</span><br><span class="line">        <span class="keyword">Action</span>: Run Silent Coprocess</span><br><span class="line">        <span class="keyword">Parameters</span>: /usr/<span class="keyword">local</span>/<span class="keyword">bin</span>/iterm2-recv-zmodem.sh</span><br><span class="line">        Instant: checked</span><br></pre></td></tr></table></figure>
<h4 id="iterm2-recv-zmodem-sh"><a href="#iterm2-recv-zmodem-sh" class="headerlink" title="iterm2-recv-zmodem.sh"></a>iterm2-recv-zmodem.sh</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">osascript -e <span class="string">'tell application "iTerm2" to version'</span> &gt; /dev/null 2&gt;&amp;1 &amp;&amp; NAME=iTerm2 || NAME=iTerm</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$NAME</span> = <span class="string">"iTerm"</span> ]]; <span class="keyword">then</span></span><br><span class="line">	FILE=$(osascript -e <span class="string">'tell application "iTerm" to activate'</span> -e <span class="string">'tell application "iTerm" to set thefile to choose folder with prompt "Choose a folder to place received files in"'</span> -e <span class="string">"do shell script (\"echo \"&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\"\")"</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	FILE=$(osascript -e <span class="string">'tell application "iTerm2" to activate'</span> -e <span class="string">'tell application "iTerm2" to set thefile to choose folder with prompt "Choose a folder to place received files in"'</span> -e <span class="string">"do shell script (\"echo \"&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\"\")"</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$FILE</span> = <span class="string">""</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">echo</span> Cancelled.</span><br><span class="line">	<span class="comment"># Send ZModem cancel</span></span><br><span class="line">	<span class="built_in">echo</span> -e \\x18\\x18\\x18\\x18\\x18</span><br><span class="line">	sleep 1</span><br><span class="line">	<span class="built_in">echo</span></span><br><span class="line">	<span class="built_in">echo</span> \<span class="comment"># Cancelled transfer</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	<span class="built_in">cd</span> <span class="string">"<span class="variable">$FILE</span>"</span></span><br><span class="line">	/usr/<span class="built_in">local</span>/bin/rz -E -e -b --bufsize 4096</span><br><span class="line">	sleep 1</span><br><span class="line">	<span class="built_in">echo</span></span><br><span class="line">	<span class="built_in">echo</span></span><br><span class="line">	<span class="built_in">echo</span> \<span class="comment"># Sent \-\&gt; $FILE</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<h4 id="iterm2-send-zmodem-sh"><a href="#iterm2-send-zmodem-sh" class="headerlink" title="iterm2-send-zmodem.sh"></a>iterm2-send-zmodem.sh</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">osascript -e <span class="string">'tell application "iTerm2" to version'</span> &gt; /dev/null 2&gt;&amp;1 &amp;&amp; NAME=iTerm2 || NAME=iTerm</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$NAME</span> = <span class="string">"iTerm"</span> ]]; <span class="keyword">then</span></span><br><span class="line">	FILE=`osascript -e <span class="string">'tell application "iTerm" to activate'</span> -e <span class="string">'tell application "iTerm" to set thefile to choose file with prompt "Choose a file to send"'</span> -e <span class="string">"do shell script (\"echo \"&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\"\")"</span>`</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	FILE=`osascript -e <span class="string">'tell application "iTerm2" to activate'</span> -e <span class="string">'tell application "iTerm2" to set thefile to choose file with prompt "Choose a file to send"'</span> -e <span class="string">"do shell script (\"echo \"&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\"\")"</span>`</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$FILE</span> = <span class="string">""</span> ]]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">echo</span> Cancelled.</span><br><span class="line">	<span class="comment"># Send ZModem cancel</span></span><br><span class="line">	<span class="built_in">echo</span> -e \\x18\\x18\\x18\\x18\\x18</span><br><span class="line">	sleep 1</span><br><span class="line">	<span class="built_in">echo</span></span><br><span class="line">	<span class="built_in">echo</span> \<span class="comment"># Cancelled transfer</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	/usr/<span class="built_in">local</span>/bin/sz <span class="string">"<span class="variable">$FILE</span>"</span> -e -b</span><br><span class="line">	sleep 1</span><br><span class="line">	<span class="built_in">echo</span></span><br><span class="line">	<span class="built_in">echo</span> \<span class="comment"># Received $FILE</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<h3 id="mac-中删除-git认证"><a href="#mac-中删除-git认证" class="headerlink" title="mac 中删除 git认证"></a>mac 中删除 git认证</h3><blockquote>
<p>应用程序 -&gt; 实用工具 -&gt; 双击钥匙串 -&gt; 右上角搜索 xxxx<br>-&gt; 右击删除</p>
</blockquote>
<h3 id="google-hosts"><a href="#google-hosts" class="headerlink" title="google hosts"></a>google hosts</h3><p><a href="https://github.com/googlehosts/hosts/blob/master/hosts-files/hosts" target="_blank" rel="noopener">https://github.com/googlehosts/hosts/blob/master/hosts-files/hosts</a></p>
]]></content>
      <categories>
        <category>mactools</category>
      </categories>
  </entry>
  <entry>
    <title>Homebrew使用</title>
    <url>/2020/05/Homebrew%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener">Homebrew</a></p>
<h3 id="Install-Homebrew"><a href="#Install-Homebrew" class="headerlink" title="Install Homebrew"></a>Install Homebrew</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ruby 写的管理包管理工具</span></span><br><span class="line">/bin/bash -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)</span>"</span></span><br></pre></td></tr></table></figure>
<h3 id="using"><a href="#using" class="headerlink" title="using"></a>using</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install wget</span><br><span class="line">把软件包安装到 /usr/<span class="built_in">local</span>/Cellar</span><br><span class="line">将可执行文件链接到 /usr/<span class="built_in">local</span>/bin/ 下</span><br><span class="line"></span><br><span class="line">brew edit wget</span><br><span class="line"></span><br><span class="line">brew cask create foo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 包管理</span></span><br><span class="line">brew install node</span><br><span class="line">brew uninstall &lt;packageName&gt;</span><br><span class="line">brew search &lt;packageName&gt;</span><br><span class="line">brew list</span><br><span class="line">brew info &lt;packageName&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line">xcode-select --install</span><br><span class="line">brew upgrade</span><br></pre></td></tr></table></figure>
<h3 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mac使用brew update无反应,更新慢解决办法</span><br><span class="line"></span><br><span class="line">使用中科大的镜像</span><br><span class="line">替换默认源</span><br><span class="line">第一步，替换brew.git</span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>"</span> || <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/Homebrew</span><br><span class="line">git remote <span class="built_in">set</span>-url origin https://mirrors.ustc.edu.cn/brew.git</span><br><span class="line"></span><br><span class="line">第二步：替换homebrew-core.git</span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>/Library/Taps/homebrew/homebrew-core"</span></span><br><span class="line">git remote <span class="built_in">set</span>-url origin https://mirrors.ustc.edu.cn/homebrew-core.git</span><br><span class="line"></span><br><span class="line">最后使用</span><br><span class="line">brew update</span><br></pre></td></tr></table></figure>
<h3 id="阿里云源"><a href="#阿里云源" class="headerlink" title="阿里云源"></a>阿里云源</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 替换brew.git:</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>"</span></span><br><span class="line">git remote <span class="built_in">set</span>-url origin https://mirrors.aliyun.com/homebrew/brew.git</span><br><span class="line"><span class="comment"># 替换homebrew-core.git:</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>/Library/Taps/homebrew/homebrew-core"</span></span><br><span class="line">git remote <span class="built_in">set</span>-url origin https://mirrors.aliyun.com/homebrew/homebrew-core.git</span><br><span class="line"><span class="comment"># 应用生效</span></span><br><span class="line">brew update</span><br><span class="line"><span class="comment"># 替换homebrew-bottles:</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles'</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>mactools</category>
      </categories>
  </entry>
  <entry>
    <title>Django框架使用</title>
    <url>/2020/05/Django%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h2><ul>
<li><a href="https://docs.djangoproject.com/zh-hans/3.0/" target="_blank" rel="noopener"> Django </a></li>
</ul>
<h2 id="概念-Concepts"><a href="#概念-Concepts" class="headerlink" title="概念 Concepts"></a>概念 Concepts</h2><ul>
<li>项目 project</li>
<li>模板 template</li>
<li>模型 modules</li>
<li>表单 form</li>
<li>视图 view</li>
<li>管理工具<ul>
<li>django-admin</li>
</ul>
</li>
</ul>
<p>brower -&gt; view -&gt; controller -&gt; models</p>
<h3 id="python3-install"><a href="#python3-install" class="headerlink" title="python3 install"></a>python3 install</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.8.2/Python-3.8.2.tgz</span><br><span class="line">tar -zxf Python-3.8.2.tgz </span><br><span class="line">cd Python-3.8.2</span><br><span class="line">./configure  <span class="comment">--prefix /usr/local/python</span></span><br><span class="line">make -j $(/proc/cpuinfo |grep cores|wc -l)</span><br><span class="line">make <span class="keyword">install</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置国内镜像源</span></span><br><span class="line">mkdir ~/.pip</span><br><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;~/.pip/pip.conf </span><br><span class="line">[<span class="keyword">global</span>]</span><br><span class="line"><span class="keyword">index</span>-<span class="keyword">url</span> = <span class="keyword">http</span>://pypi.douban.com/simple</span><br><span class="line">extra-<span class="keyword">index</span>-<span class="keyword">url</span>=https://mirrors.aliyun.com/pypi/simple</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置虚拟环境</span></span><br><span class="line">/usr/<span class="keyword">local</span>/python/<span class="keyword">bin</span>/pip3 <span class="keyword">install</span> <span class="comment">--upgrade pip</span></span><br><span class="line">/usr/<span class="keyword">local</span>/python/<span class="keyword">bin</span>/pip3 <span class="keyword">install</span> virtualenv</span><br><span class="line">/usr/<span class="keyword">local</span>/python/<span class="keyword">bin</span>/virtualenv djangodemo</span><br><span class="line"></span><br><span class="line">echo <span class="string">". djangodemo/bin/activate"</span> &gt;&gt;~/.bash_profile</span><br><span class="line">. djangodemo/<span class="keyword">bin</span>/<span class="keyword">activate</span></span><br><span class="line">pip <span class="keyword">install</span> django</span><br><span class="line">django-<span class="keyword">admin</span> <span class="comment">--version</span></span><br></pre></td></tr></table></figure>
<h3 id="创建了一个项目"><a href="#创建了一个项目" class="headerlink" title="创建了一个项目"></a>创建了一个项目</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">django-admin startproject -h</span><br><span class="line">django-admin startproject web1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置数据库</span></span><br><span class="line">yum -y install mariadb mariadb-devel</span><br><span class="line">systemctl start mariadb</span><br><span class="line">pip install mysqlclient</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据库</span></span><br><span class="line">mysql -uroot -p <span class="string">"create database web1"</span></span><br><span class="line">CREATE DATABASE `web1`<span class="built_in"> DEFAULT </span>CHARACTER <span class="builtin-name">SET</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment"># vim web1/setting.py</span></span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">"HOST"</span>: <span class="string">'localhost'</span>,</span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'web1'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'PORT'</span>: 3306,</span><br><span class="line">    <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">        <span class="string">'init_command'</span>: <span class="string">'SET default_storage_engine=INNODB'</span>,</span><br><span class="line">        <span class="string">'autocommit'</span>: <span class="literal">True</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许所有主机访问，默认为空，返回 400</span></span><br><span class="line">ALLOWED_HOSTS=[<span class="string">"*"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 同步数据库</span></span><br><span class="line">python manage.py migrate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建管理员账号</span></span><br><span class="line">python manage.py createsuperuser</span><br><span class="line"></span><br><span class="line"><span class="comment"># admin 模块位置</span></span><br><span class="line">lib/python3.8/site-packages/django/contrib/admin/</span><br><span class="line"><span class="attribute">DEBUG</span>=<span class="literal">True</span></span><br><span class="line">导致 admin 模块的静态文件加载不到</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">python manage.py runserver 0:8000</span><br></pre></td></tr></table></figure>
<h3 id="Django-目录结构"><a href="#Django-目录结构" class="headerlink" title="Django 目录结构"></a>Django 目录结构</h3><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">web1  <span class="meta"># 项目目录</span></span><br><span class="line">web1/manage.py <span class="meta"># 项目管理工具</span></span><br><span class="line">web1/web1  <span class="meta"># </span></span><br><span class="line">web1<span class="meta-keyword">/web1/</span>__init__.py <span class="meta"># 告诉 Python 这个目录应该被认为是一个 Python 包。</span></span><br><span class="line">web1<span class="meta-keyword">/web1/</span>asgi.py     <span class="meta"># ASGI 兼容的Web服务器上的入口</span></span><br><span class="line">web1<span class="meta-keyword">/web1/</span>settings.py <span class="meta"># Django 项目的配置文件</span></span><br><span class="line">web1<span class="meta-keyword">/web1/</span>urls.py     <span class="meta"># Django 项目的 URL 声明 ，路由</span></span><br><span class="line">web1<span class="meta-keyword">/web1/</span>wsgi.py     <span class="meta"># WSGI 兼容的Web服务器上的入口</span></span><br></pre></td></tr></table></figure>
<h3 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h3><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> web1</span><br><span class="line"><span class="keyword">python</span> manage.<span class="keyword">py</span> startapp polls</span><br><span class="line"></span><br><span class="line">polls/</span><br><span class="line">├── admin.<span class="keyword">py</span></span><br><span class="line">├── apps.<span class="keyword">py</span></span><br><span class="line">├── __init__.<span class="keyword">py</span></span><br><span class="line">├── migrations</span><br><span class="line">│   └── __init__.<span class="keyword">py</span></span><br><span class="line">├── models.<span class="keyword">py</span></span><br><span class="line">├── tests.<span class="keyword">py</span> </span><br><span class="line">├── urls.<span class="keyword">py</span>  # 路由</span><br><span class="line">└── views.<span class="keyword">py</span> # 视图</span><br></pre></td></tr></table></figure>
<ul>
<li><p>创建项目</p>
<ul>
<li>创建应用<ul>
<li>编写视图</li>
<li>配置路由</li>
<li>配置模型</li>
<li>生成迁移文件<ul>
<li>查看迁移文件</li>
</ul>
</li>
<li>执行迁移</li>
<li>通过 shell 调试</li>
</ul>
</li>
</ul>
</li>
<li><p>后台创建</p>
<ul>
<li>创建后台用户</li>
<li>通过 admin 文件向后台注册表</li>
</ul>
</li>
<li><p>编写多视图</p>
</li>
<li>使用模板来渲染视图</li>
<li>404 页面处理</li>
<li>为 url 添加命名空间</li>
</ul>
]]></content>
      <categories>
        <category>python开发</category>
      </categories>
  </entry>
  <entry>
    <title>Kubernetes</title>
    <url>/2020/05/Kubernetes/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://kubernetes.io/zh/docs/home/" target="_blank" rel="noopener"> Kubernetes 官网 </a></li>
<li><a href="/2020/05/kubernetes%E5%AE%89%E8%A3%85/" title="kubernetes安装">kubernetes安装</a></li>
<li><a href="/2020/05/kubernetes%E4%BD%BF%E7%94%A8/" title="Kubernetes管理">Kubernetes管理</a>
</li>
</ul>
<h2 id="Kubernetes-概念"><a href="#Kubernetes-概念" class="headerlink" title="Kubernetes 概念"></a>Kubernetes 概念</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 集群结构</span></span><br><span class="line">    主机 Node</span><br><span class="line">        Master node</span><br><span class="line">        Work node</span><br><span class="line">    Network</span><br><span class="line">    Storage</span><br><span class="line">    ETCD</span><br><span class="line"></span><br><span class="line"><span class="comment"># 集群组件</span></span><br><span class="line">controller manager</span><br><span class="line">scheduler</span><br><span class="line">etcd</span><br><span class="line">kubelet</span><br><span class="line"></span><br><span class="line"><span class="comment"># 集群网络插件</span></span><br><span class="line">Istio</span><br><span class="line">Calico</span><br><span class="line">Flannel</span><br><span class="line"></span><br><span class="line"><span class="comment"># 概念</span></span><br><span class="line">Namespace 项目</span><br><span class="line">pod 容器组 （可以包含多个容器）</span><br><span class="line">deployments (用来部署 pod，指定 pod 策略等)</span><br><span class="line">service 服务（提供 pod 间网络）</span><br><span class="line">Ingress nginx（对 pod 提供应用路由 如:http://pod.com/<span class="built_in">test</span>/）</span><br><span class="line">Image Registries 镜像仓库</span><br><span class="line">PersistentVolume PV 存储卷</span><br><span class="line">PersistentVolumeClaim（PVC)</span><br><span class="line">StorageClass 存储类型</span><br><span class="line"></span><br><span class="line"><span class="comment"># 集群管理</span></span><br><span class="line"><span class="comment"># master节点</span></span><br><span class="line">升级(不能降级)</span><br><span class="line">备份/恢复</span><br><span class="line">证书管理</span><br><span class="line">Etcd管理</span><br><span class="line"><span class="comment"># 集群资源限制</span></span><br><span class="line">    不可用节点数限制</span><br><span class="line">    集群API地址授权</span><br><span class="line">    项目资源配额</span><br><span class="line"></span><br><span class="line"><span class="comment"># work节点</span></span><br><span class="line">升级</span><br><span class="line">暂停</span><br><span class="line">驱散</span><br><span class="line"></span><br><span class="line"><span class="comment"># pod 类型</span></span><br><span class="line">Deployment: 部署无状态应用 </span><br><span class="line">DaemonSet: 每台主机部署 1 个Pod</span><br><span class="line">StatefulSet: 部署有状态应用 1 个Pod</span><br><span class="line">CronJob: 定时运行Pod</span><br><span class="line">Job: 一次性运行Pod</span><br><span class="line"></span><br><span class="line"><span class="comment"># pod 卷</span></span><br><span class="line">本地卷</span><br><span class="line">存储卷-&gt;存储类 PVC</span><br><span class="line"></span><br><span class="line"><span class="comment"># 升级策略</span></span><br><span class="line">滚动</span><br><span class="line">    先启动新Pod，再停止旧Pod。</span><br><span class="line">    先停止旧Pod，再启动新Pod。</span><br><span class="line">直接升级：删除所有Pod，然后重新开始。</span><br><span class="line">自定义</span><br><span class="line">    最大 pod 数量</span><br><span class="line">    可用 pod 数量</span><br><span class="line">pod 准备时间</span><br><span class="line"></span><br><span class="line"><span class="comment"># pod 网络模式</span></span><br><span class="line">NodePort(所有主机端口均可访问)</span><br><span class="line">HostPort(pod所在主机端口能访问)</span><br><span class="line">集群IP(与pod端口相同，集群内能访问)</span><br><span class="line">L4负载均衡(对接公有云负载均衡)</span><br><span class="line"></span><br><span class="line"><span class="comment"># PV 插件</span></span><br><span class="line">公有云 PV 插件</span><br><span class="line"><span class="built_in">local</span></span><br><span class="line">hostpath</span><br><span class="line">NFS</span><br><span class="line"></span><br><span class="line"><span class="comment"># PV 访问模式</span></span><br><span class="line">单机读写</span><br><span class="line">多机读写</span><br><span class="line">多机只读</span><br><span class="line"></span><br><span class="line"><span class="comment"># 存储类</span></span><br><span class="line">回收策略</span><br><span class="line">    随工作负载删除</span><br><span class="line">    保留</span><br><span class="line">卷绑定模式</span><br><span class="line">    创建PersistentVolumeClaim后，绑定并提供一个持久卷</span><br><span class="line">    使用PersistentVolumeClaim创建一个Pod后，绑定并提供一个持久卷</span><br><span class="line"></span><br><span class="line">首先创建 Storage Classes -&gt; 创建PersistentVolume -&gt; Add Volume Claim</span><br><span class="line">在 pod 中使用 PersistentVolumeClaim</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>OpenStack安装</title>
    <url>/2020/05/OpenStack%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="Hey, password is required here." /><label>Hey, password is required here.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="c3f7c65a7f2a8cb56c68f0024e64dec1b09c0cb390e9025999b173f01312fbf6">4dc7a94a957e0b6d366c4c57187f63c514b1838b6a28f070585cad84b1e80383823afa5695960eaf613334f5875bdfb08adf1b54968bae6f75323815871b97903d058ec2fb386405a9e110ec1beeb740f6856f37547d36edc7f37ad366d7409f1e297077bc40f01b219ff8cb5c589c06e7432033e859424280a9c215351504277ea5b72d0a3c88b439afcfcfdc4e7aebded72679b1186438d29cb186b1eb3d2a604610de7591ead960e6ac6a0fdc70500fc87c1b15937338ff1777d9773da13d098d106a1e281ff4a9d817cc7b7645b0dcc138b018be8899548e961378f2f4b8e5ae481bac7eea338ecc18bb2438abd78a70c1bcdbc4980b6e3c11c2f34afd2eefdc7d56c3e401a253396c3392e832ea5f09b1580732390f619a15d93c94a723cf6c72a07fcc86d40a489ee07e76dc38f4f5f93fe65c98d055dd83d0e2ccaae32ba8054dd8e6f9ce7f8d2a5f292b3f744d5008ca651ba0cc79e1bc149a31113245c9fe328913fb52ce5aad7fb9fbbca524c4fba1d7140f605736c0cf81948dc7b9fb2e005598537b219c64dc31a0d93fbe46b6605950cc0d5ca7e1467cdc4af0aa58d1db7820ef303d35b2716b7e0702c30ac9c55ab37828646ad536f3dedab250fc34f9afaea073ecd42d76c0f7a538bcff91df70fee83aa81d777df1bece584d0495478ef11ce4e0f6f55175d0f626dc67a29c39a6a5018abec04b641f68a8d34ab9cadcf62adc9093d27ff9189455b89237d7cfc430891d13db9c9c7d95a69cc465921da5d761ddc666f8b07440ad83b6d12cd5918a06f19742688d249a44e6ef26894c52c69b5ee270b149f58015e20171b542c7abef2e1ef721579bf6197d3958ae977d64d4018b8b4a00285410b796cca56f90294cb9b17e83a62c5dddfd4e3c74aaaad0b1bf577dfef7d332895bddd9001a4801cff283fe9ec85be86cb378dcccccc8f4387f291b8ea1a0d90ade17f09a336958fc005ccd1cdf34e6756380dcd2fcc96c26035921a5f6654fc3f45013af05019c2d3da2f9d2a8c2e73c15dd016991e9068fc4c76fb56732958b0036f24cb94ec0fd0065ceaa2a8bdec6ea1cbd485db62f5beb7ed617417628bae3596e40d18f76d08f6679f8c98f189026d05017c0909c6a3454e9a220fa4b8323732923c959af2f4b92b3f1f25e007c5b3a73a39937cc5f8a900ba6b94c1d71351974d22260d7d2b38fc0ab411f1bce4ced47fc00848118be1c820181a6a659547e5b99169212aeb28d4d4e456c3fcb0e3cf42dd174dab180bb0ac34b4ab8176de555065e5eb405592722c752fdd32ed1894e4f7b68f9b0ef8cf5fefeeb0c2fa410e7cb44d975a5e1d10c4c52b285db50413aca689483c3e26532ce5a23700c92e9250b67bd6c0a27edc7b3edac7c11ef95a5f0509fbb44e0859d507ea79327c8a81cb0de28b6c15a051a210b523cee0eb265a2c2dc7e7a17c81ac08ef9449d5698fcd0f42c52ce833b4ba66f37ba72b6604b345d3be769b7669000ef2c311829225abcc285029b20cbe7396d39c646996dad3dfc805acb1fca5031f44536403aa5e84a3539ade638200d56b5de78ee432f5331b33a5a6423362d28118f9db1bb689681c73ad0397c56e3b380994c84d0c475a158465bd2f0be262a26693d0f004ff796e693fd4f8dce734927009da9c31487423047252cee36b2c9e81b62b5cdc3080fcf0da7f492d9da7a593abbb89a5cb760bd31896d30afe39e3b7aaed63ec5e16e8a76c4483e67c596577a6abdb3fc65c221e9321e74dd3c409ae9f4ef14d368687d70db0fa7d187c256626fbed8819be6bd6eff2ad45e0a0bb59c16cd38064074b39d6e11253de73afc90887240f2395bcd366d2cb9c7f13d1e5ee4e707b62c5c74227df42f8cc2e7caf9cb4fb91a9bd4734ee2d27d97839bcc89c779650f106e83438b7b21be63015646b0f4e3392d713276a76774efbf380d77c809254fabc1f969a6df2fa51129fdd5b9b4b699b62cacf7d8720f7120d1e5d8d9f157411553dc01f12513342255af4128eba62a235efb228eec296eb27b50f2552555c63e05a2cb5781e177631f8d0d563930ca3edaf46b9ab7af83cfe3df7d0aa44a641539319a318de4084f79b5cefe4495c178e6e5d55755c5e933463b01761c33a4d7e501fc881f4ec2fd6cd22f29f176d642608be718a65881a8e6099fbdf381f60833546e8165299fc633225fa005605adb26cbff274e9749ab3854a476fe88f0209649efdf7e396f6a7aa87389e7c2abc41d843d4664340cc654ed1576458cd33cd1fa203fe1272d2691325aee2c2bc15d138c50f42e4e4302515ed5b2ae5ef78c0bcbe00393641a6f7ed9e52cfda6fa551d7455e55be08cfd857beab86481d7b2c60c8bc2a6cad60ebd9448082aed824704c248966002991c12f65be7e0834acf196c0318852a8462f33df7d9b62ddfb8b67ed1cb37c6d686ebaaf46c0d7d033d9c943042b32e31836081bfce62a2517a11a9047ce34ab123ae8948d01193e02777c66a06fd20b8fb4fc888a486683e11e76fb3eafc70138578d87d66db609c3092cfaef1e3be0e86137ecf72355e2952c06465d8ffb1b14da824738e63c64a42749caeeb4249c0ce276210c3fa380bee5664f209baed44bb8d900970f3e1c4caaf141992f606ab86dfc3be7f7d91516d9b87ab1170effc1c582b17b3394c9b82dafe3dad42c187386bed1d08e584855df738461e3c555713e092dfd3cceb5fbd48cb4bd110aaffb93b23c200a056e202e4ba493d486ccf4cd2210d5c59496097d90bca099021fc3e218ace72cc5bdc269efdbaa16a0a6399c5f2af0d6e82aba0a07f36c15f55c6e3ab1d0475d72f728884704b1cf5740905070e23ca775b34332ecbb4f1124126ba2a3c79d8bd57dc424bc1847a5ccbb65942023af189bb39db83dfd698d48aab68f268f2f696c977eb5b1ca962be82a9595d787d9ea39beb7d9e05051e4059c87c10929902424800c59e4ed01f370d145fe935547226dd32347a754c0a04e8499b66b42e4ef61e411edb8d6b8955d7d19f78ca961c231c9190ab5bce84fc552e968e7589b1f2b3340694296cb582ac0f432f90650b453dbbba56a62531ca475ce2f55ac97dde80189eb8318a1dc9930355c3a8e613d49f8eee08857ddb885a50d2a2a46afee598d6528cf6f00d4f4c1e1fc050affca870b25d5a5c2b10212b79b88bde64c5130a7f0c241bbada64af95e948007d096751afb20498ebf2bf3a8bc03ea3865f390c2f308005e2ade7a65d302d68bb63d1f0a015b05a75bc188c3077e098141134e6daff6d5dc9685ca7f2bd8717b0d1bb15090d5eed21c4ae6f84a1a6fb72fa49082ee6e1f0ea660b9680d2d4b47af7eaf736eb0f29b0d20c69058d0affcd264e390c4729abfb632d9284df0118aebfdd1c1950f39027153e8844ab5ffa1dfc58082d9b0f8f2d33b3711f584c19c1ccce81e5ae860a6c2ca852a735f0bbe21802cc17fa26be4c86c1eeb8ce48a98f4f052d2f1d15176c8e03a33c71fb83fb40eec2c33620f485a8cb3f02cd1673e4dd5bff4502f9a804e080bb345e1ac693cd2241c4e0d705a24c7c317fdcb93928815c7b41b798406e2a9c6b93d739c77df15ef9438bd855b60a924f21e573a90e3625c63ced0cbc77fd22022014c4097e40c2a37fde1db9a78ce7298d09eaa969cbabb351577daca107f1e826bc8370824a55de108aaaa5e8e9c333650d42f0989ec2117530ccaf9b92e8d291e1d6246870c83e69d6dc7f0f41ffb0666b524e319cd686a08e5ff0b18f2f7dbc4ceeedf4dff96244787926c3fffd180bd2000298a4a3d67c74e35d8a1588d09da5e1fe93d572e0726da70a388e73f12b4091556163ae4821406b3c47ca835ddc21025a5951bf19e41bff4d818349cc3e619eadbf222e9b0b448fe88b4b363023f2e5c1c61801f6e891e4154ccdbb472de4227b980a1560c1dcbaba70b99c8fdeb9731ef2c48c12c5f745847944f34272dcb7d75232e47d9b3e8c49047692ff564129553ce09c25c0218fff594df3beaa66630586a6ebe753cb4f080afc86cb0c9973c153483747b6d7ad86f8c19725080616f8b76062121fb76cff20418315d8179002e5c5a4c0b30cd43b71ea20367a2de8ffaf4d4bdbbfcae5f732eec726ab66e6f5b72687cdc79353932a5bf8eeef83a8eff45894a936aaf92f5832fe0ee13151d9f74c1051d93e1f6324599494363f33e2bf2df8fae51f3f373dd96737d18888e9d7c9e4855485ae25025d284be31602a6e133a623a9102f027a127e110675921b20695d4b91d263af2645ee6231974e512c2a87368d8e85568bbd882f16b000e11b876472fe40e7982ae69c708e3361d2ad7e36311ab726212f6b35df4e8333b119ab711b2df145bbf1f93b73f6c8ccca2ab6d8b3b86a9043fd86f7bec2acc257c3eb663828d5c6830e73fb27da633a4a2ba1590560f09120790a5f3b3443e90392531afc78cc953a80f335665d0efcb66d96afc9ff2c6ff15b113005c2d220b357813404d5a2cd558f422f32ad313ecadb8a05bc4f436b5afb4c395eb1af1a71f9d110dd8c825f1b66ac37e93d7a625b71f3ecc7fac94a553d9b84ef57fecc853979b83f3f3f57c0bfb884805bf790fcf7225a3c4470b6248d22766888e3423d7042041191fbf5c1ff31347cf89edbed3ce0019a28ca2d94d5438a3e02baf9694ba57e8087f8ea5d53c4be98d0bff71df5e3f2d24495f1bc136f310f1d858be51da1d4b222edf9bbf06d302504b1749e44159bdd0ed92f126d3595461b561b1465310f2dec3b3983321f4070009c27dc1592a5dd2ab4cda464002f560968eab481eb0dfa4d0b0397e75ca7e5a5e1ac06db88c2f11e52abccb93b893504c02c78e29c5e1e3b0a271c9fef810bbdb1366d9746ca435b4121e6a4ea65af615cee3fdd98836840b4b81634f570735f230a480c81ca314d6bbb2fa58a6070cd9f6a66489f869d6c02acdef830ca57fdd90c0b223f9922b67d5a9a3546c5598eea3a874d2305bc71872433fd3da6d18cd7dc1f154eaddce55af656fcd3808f0f08895cabe8c66234f834378aa2680d1a31a787e11d3c49931c751b27bff5424ce7937eef515fd2e836c436eb88d39452629c97f527040a72cab09d857d206d5e9477737cd34e83d0a8a86a6721f933de415ae2c29feb8597060c6c53e65afba75f9a08734d57c8c070b4efeb0641a5eb8b06e7865fc17c80ec7a9e4b7bd3b0a042adf0aad9028ee790da05ae06556b074044b1cc1251d20d4c6797886e8f6f580a60bd73274d33ca042edddfdd8ee6cb7c537a20319a060badc41a79eeda0b0e0d5eddcda62aa799be9a5d415153c4e6e126fe0cb4053420bce62a22727bb31a52f46a2b23966c5f8dfd97706c0d02d711589595f36cd8e39549d6648e4bb0600863c45fa8758e8f693a0a4a5eadfd2bad7af03dda4787e0e736510fb2919615b54b5fc42e8a5a9d80fcc2e159f081f69828eea3a2575264e06e874689a7515dd9c80770c3bc10adc4e43cdd60cced220e7a1272b3f5e419e14519c1c9237e517bdf28eedca19a11de0bc6979c3a4ba5686998e2e2e0474348afd400f64f2887b4d8f9a01e5d28633d25d4b4191d2d816dadadd2a419d3172e5059b8d5cb76e5306b08d46e61266423c59edde532f5ec398d3e19144f2cf2d6c70bc376f33e5a122900afe13e0b6df47c1a0bf8f746894ab6d4c15811ee8ce6a32c9329afc12188fbeadd86d6e15838a2662d2e24f6fcca8196fe003cf2be674af3d85db4048f5ae060e79ec3ae74053ae8f6b96d1fd23b0080eef5049ee6567598e40b6bb0200a64ddf61104c7db52f45bd35036649cd5ab5b6809988e523a6f05c9dcb497b1f9be3259b85b03b54394aba6ce52479cd9963f3bacf215706e30c33935e07489937081009ff9f6d03c77356eeff00f420c508bbdf0089d1764a2cbb6f90efbebe73b1bb56837d9c48fa151da17994740a07ff5e8807db3c737d9eb32deed1afd50f012db8d240cc1725cefb4a2c165d3a097e952baff7155490a3c01f6fefdb09231ca2e14db700e05a64cb50f6774cc629c348110139f9cb705ae82918a581a2b861b51f10500a1922093ac5f8766b77d7e683e2bec90e3388ba0d7e18ee2eaf43775e2494803f2f7792406f67c0fd0dc94779af94c3d318fdbb9a7d364eeefcad87f85703d06cfc5ec6da8caa0446b6ac7963a8b15a35598f53dd6eed9332549800890c9743ee2041b2ddd4983ecd3ee7ce05f6e0db3bc5398c805e2b042a51c616ba15ed4c04c3ed6ebf6c33bf6945ea8982e448aadf427d443d8d72d2c372198fab12d80959b1f0a52377fe72468cc3c5592e1bda7385c364aa7edc58c61f1b8f89a252a3a9670aaffecfc28efa94c5abcf764e66117c546e0fff1b611ac66640fb23669142b4d653ffc7aa47053a01a8f04dcf108155b68d7826d4ce930a0f5e9b9a582a150a31ebe4e155d00e99583cc05dd5903f5c043529bf9e831018ae4301d8e18abfb0ba24bc2a83a32f90fe26c3a4815bd1005af36a79bdf4e68f422a171cf45382c700606ee324720b3fe172039bdf5aff8e846e8e58596052826fe5da79170d3021ed4abb68f6ca1bda8e5e49dcb91a898420bec54bfc13cc1340ee1cdb6fbedd64cc0708651ae21e9d177bec480e0791c84f32cc34666a9dd8ef4369b01c02643e15a061f5cead72ad9addb5f5ff536d058acd9f6a5fac2347383d2216e6878c8a7fbf6d8c31f15a12e433ff547915af6de387906d8dcb6d3cfd60939cdced7bac7d8251a79d217e8895b33db2991f84c7b521e56243576a24a328883547dc5ca41b5b49c73fd66a478ba4f311af4f4ee034b83b82295696c7ffd98f63e73eb064e85f574a45815af030b49bb449b3cf31256765bc4c2899464a203f2417e7e7be00c523b24f12164aff98606fcec9d86f652d3e532774d60c94634c17c24400d4a4a5b0fb28ad22aba3588c2d2ec72701f7a3a074e3a0bb8c30ee83503a1ff76ad952c776fbba4b89e84508ae19d5e3dee20dde3f447875ae44f6b22a96b63c14843b96c1a5463962943fb9f6d245131b3148bdbbffb667926435e412813226ae413852b56158fb2823761717c121cfb05756c9b0c42a70b299069e2d3c628a9aceacf4860cb3dd6d98057b160460522956904ec701507655e753f50cad23a23970deeaca58ed21d9de7dca12a90231ac4a26d44df679a6ac307af032f5e8b78ede65df1595f2b2d68927f6da0f50c6e5e82b59cc3aa2fa37df56dc0940f756374e6207f3093bce5e2f0e5576efd8c17c9dead82df061625b2b0fd05e88f6572d56db02e563175df786c909452e7f79071f6d0d9727a34f860d43317fbd541b9e6760a2ec87aedc8a40ca5363a7f3a637eafaec253c625ac7e4b041203ecec20558bff2f4d5904bfca007b1c5ff8a404a2d912aefc1273143bbe3614c67b5b759ec07b4e0305aa36cdc6d92985759cbe71c9704a3844c8bf78ae2a6a685800566200c64b95ae1f3e6c8a966a8aa27a265bb5e7b9d84258366b63b0ec731dc2d4696c4ef35ef094fb56452f63079c0e1f0715d8304390fc16b18e60993dc0accb34e1b2ec72f006c04e54071aeb84512c3ab58c4416ce1bda503e992907e0871be814675df331988b7a1e2bb55c339e45c4f5145d550bba81168eaadc142c749ccb42780f6e0b68a32a74466ca86081bf91ddbc4f4bcca5fdb639182e85714b2af5d9e0366cdc5c0de031c13880fb8592e5337e2823eecd863ba70134ba7e354bf7efe4bde170b6f1d4d8dabb74168c9c42dd6cca2fb3fc22150a413ce54e9fc788bb3292d0e4faf2e2daeea0a1e9d13bd2dcf43c1209756ba731e0f91ae54f29211f03362dc47ab65b53621f2d511e847edc53dec5c8feae0b685b686da2326b9daa8c7cc2fde184e8ba85dfbd790932a5337c56186d2dce7434d4fe2d6ddaf942312b86432ba5a0449b3ead6e4d43ac60948a23cae09ea57fb84cc066fdc72b04638503ca53cc042dedd8b97dc8152d612294186fcdbf1c7969322cab0f8f232452d2a57c9d3b6eb2a8449000ece177d93561440f65e0e251cd61fcc7dcbe7288f8a75c1fca86582cd09fafc4631b7afb31105acd9a3aa077660aad27f16767ef29f84fc45449aa259441b60df6ea587ede5d6bd6444f6cf9721e50cd0104c5dae8a36e0abc0a5a556230bbe8b9a2469e5d127bb8d4718333172d0d48abf4757955e027346f1c436907a5b7825fbdca2040fd20f6c4b4ceead5fcd213a0aebed7679a91a84472b7db5c9e90bc80de51f6663c1512899fdf72b9111c46a4091cc2bf6a4f37e0d1b31f9ef77647e4494bb37d6c8440dcf8a7790ac5a7656a829e9c10ca0b7ccac1843fb039230f770ddf54f70e354bc37f2f4bfa4dc0fb84b4536c5377f1592e345a33f0af97041802adb2fe8c77f548247b29f86e4fd5a19cd4ee096020840ef4f43d34652674a912e058b4cd724af646ec9383714446f2960b70139aaab48e8d25b79c7e38cfaded811da164ef63d89c8b4aa88d79752c93dc3aa7cc2a56d3cace40244b9d502444e3c3e4e37c8cb08d44703cac8c038015636690e282d3be8c5312bccc24f35870323b650e3a37c23ca5840937144871ad55e08e7aea469807ca4c7c7386e9c5270e7805823de97102554d0f4d2b648f01e562f9753b109aec90fa41236c2d76a39a5a41b898493dc541ef41e512664da6d34c36b501fb5fbc8bb1ebcaaef74cfc0f1b14c47d5a90fa5e18370ad97db68ac172899b521a05c0c3b271f1d110bcd04709f884a8d395eb4ff3524f9b8669f54b30d76944280fe924736ccdb50eb6bf1fa176cb5b6ed9b65221317d7bfa028b9083f2d057558d3992c33eb75ecd6fc9db0b6f3001cf9d62cebe69f4ab959f19e7d08b9628ef026188dd34c7f1098f815a98c173143b03d37de4bc36cae5691da080ee281409215358088c93c6a0c8037b95fa4d5dc22d36f9497a071a94382eb6cbb7f866f3ab9bf5664d497c210120a7522681682924d2cfbe9e783cb1a9896812d72c05d93cd1fe20fb4115ba4af22c2f181986d7d5eca2aa111696c7790f6280517d3bdc1c7e81d75659cc4ebdcf3e5f5f0a3752c6a49bde08a2b566ae4a5ed234dc14350d48c7a08e31496142d14d1d6bf4709a7a2c202942d439a80080f87217134a123376beb8034a2ff0876a7b6239677774f2241825d02b8793653ea1da1b131b91adace79b2141f2d9b5ddcfeeda37486db9e20ab74f259885a61031b372ca5c25dc1e442a99103373c76bbd7572f4aec10519e7ccb1a38e1f44bbcbbfd98d1e769331b3804e3581ef69d978b11f221d9915738b53f9c6dd2cb24b0d1e3729e06f74eddc47285e546e1aefefdfe3dde32c1e06d2b4d1a3f388bb4581b3eb31ef08f19225fe86810c81ba776e55ed535f90c5c02d84cc9b4182285ba6918c9fb48da8db1fa1794e9209b315275f90ca42f2d86f30f02c177c6f6b444403b5c614f50898fc9270ba0434f93f5d6cd8dfe1f6a46fd2d01f1816bc1b126def0ea77038d3f55f36917abb36971c8dfb59a462e94209a17a393da76bfbde480834d26bbcf3df59af67da0b30e44030c6f0f7b43487b60b8b7a58569377037fe6370b10fe24cfc64ebeeb8c35b40842c9c782836fa7e75a575472d7957f8d16d660c9806a0ba528f7391efc5739e39fa2ef48676a79e1504b7fffa7498c3d333c4becede4fcb51e575bd002a4415965516ce58bf8e110495ad95a99cc5d254bbefa74277611dcba4e47b3e9c4412d5604e9fac924cb65b3fdda3d987f74248fd7ba2df243670a9766bb50017c38b9728d452065983b79e270a39811641faa26c7cd4186e40d5f11223f1a70b1684819d9e8a5be92f3e5f927c82a9dadb4ae8a56cecae01b66d886e1d397de633e8f132d978dbf5b5adb22612b261bbf7c26df24c5601f3d7bb7d79f475653e7c8616ebfe46c9062e7cae76ca85a34030f79edc15612ae576e6503ea9e1e367de54a2fd324cc2382a70a9561b24f1e0409f585d33314dfdde500c3ba63041a34c2152657ae09d4c59333b54f3d0b4c4b7de4282b78a9e70caf52c865a2866cef6b0259fb5c65285207fc5ac2a1a12c1fcc832612bbbb4fb331b090a09db63052603df29323717cd19f19e2409c578e26939a31631a8d93f2a7fd3be1bacb0215629e5b1a496e1641505eb4fd1b216fd0a1b74bcb258492d2997c9c115f84780765f0498a9b823e8fc8028514af75a5eabec02094ffb7035e6b5d5aeb6f0037223a94ec25df273f541b969261d03fd3e9ccbe5123cf3b0eda5e57fbc9ae4105e8447b0365a0fd09b972e268fae92d93e3f4ebd3a9186229d36fc996d70bbf4ceefc67c33e83fd1fadb15678e8acf35484015fd3834d0cf049ae8cb99bfdf2da16e1e1da964fb5893b7c030d6cd55c4c6581c4ab0c8667787fa37add2b3f877620c1b2c1e956264a567412d7a7351f50e4fde63c683b116281b490137b3c89d1b23d20018ba8f153d67c35d7a429bf89277f3717d46137700f18f1e2c63b93a3d9819af3753ba6ab5af793743d4d47de3443a9fc51ffd8d5e1ffb4abfb43565cca95ea089db9ee15b24fbe7250c7190be52d27053216b1bf4527f2c206154819c670893e084e70ec60821159268d9a1110a50e062f876048a7ba3188f9a17f6a7886d359f9edd4c793ce32f56ce2ff6db14b0f7969cfbed0de61551089d7cfe3d2c3b90a09d5cdfb0c73a54f18820b7a0c8dbae17218dd54a1c0918490e6fd8fed5e3f3eb6ccf229dfc2868f196775b872e228dc5edb662d1627014ab01749c6dc9b8ecf2616a0961e46a2ba654a4b08d10d9f215fd9fe38aae3a35d700d121c571585b8a88066bcf7373251d71dd47c0e4866e84b4aec9a96330757e0ed9691728c741a0536b1fea09d3164e043996c664efd4d63eaf89a4a9ca52e85bde7915ce38322661fbfcea688703caddf265739d31603767daf0add6f8c181ec2564bf6a766ed634fa74270c966727a2d4c03ac6948e29ccd993c44d04dd2ef2e0211997f43bba019451b8a6ae049966e8fb76c624e5006340eb7676a763faa996af8cb8fb752739d2086b3988479c878aafefb4e415203611c624a5f0bf224d1f08166642ba00029ed2fa8b7acc4cec818580cedc89b0cf9a4aae6c98d9246ae58f067801240fa61437cb26495bb258e2463771684885ca3f84bfd2fba759f2ed29c065f7d229afc7a8d6cb8148f42d4f4693d0e4db23b8502dea8a96ad81f9580382080381b1490cee54c426bfe7161356cf839bfc9c8649dbbb972225692686cb2ab29777ddf893d3e2f31634cb95c37cfcb841a21af66f0a148e83c89f1003978535e49b158cc3e163aab32387314188dc24aaa746ff16ca8c64286cbfd4369f0b9e02ed47223bf4812db56fdce821eb4be6c1292086ba0169fa1be66d6704ed42a1989ea708cba0b9e8410222d07f5b28c57a246bb766d24849f530f7c1954e2e57cba3a85f3615808df3370f0b40f9dfb638a556a36bb6778fb7d01210f02b842a38d8576db7e72f7d968abc4bb49584587b88243ef3775fb7b3db64196617558761b9ca42487fd5d397aca3ddaf5e455313b7eebd0ad8ce03bb3dd2e3c43beadb60a0407fa4f6d976e18b0eb9138cfd50658d0b7e7e7beeb31a28b7a6b41983385cf777d4681c2f5ed8f6a048b31fd5045531fc72681ea49f910263e0065f1046777037b17a38e5008bc5157296399a1ef38b4638f1a6dc43865adb55237f0e6fcd5eb20b40ae578a2bfc7fb07d1e6834b403904726ce2cc997261d0fa7840c3ce251bd479b5a5a6250b2440cc66e088c6240c7aab820cce431551898e4343617b333c952263c0721351f2b02c1c6be0a5598164a2b47b24dc7396aa5fa87057c23336cc34a79cdac14e4a8cd5068f990f77a184a15a2d5856cc49fc0de2d8304cdfc4a15c27ef80fc7f690fd2b585ef8b8d322bfb5ec8b6afc54d8e419da6c3f57a6de24711fc57db47c59821efed500467875ba11ba62816caa423b2e3f0c905e1e1f63ead3ddddd9beb0162411a1c78c291f254b40bb075f1a02f12f6434b2720963ba3c775856be7fb37a4f4acd64a1564342670f26a4d53133e63ee68949986a421d90c0825e841db764953a559d6da68ccd565f637e12d380dca0f3b5552ef5ee7ee01729374065c8683ed75386bffc6173bd3710548d66c17c1174688aa0ba2d92c5cf9756a3bc8f2bd1ff6f5c187474a558aa8bc8f83ea4c37c5cd91842cc4f5cfa237e2ee420b25a96f1ea2ec2bcae53e9108007e35e07272952fcb664a61ad2e0788e37661a15eec091cfa2dbf9a13e4f8235fab1bebcfe0445225dc5d73389938b0834c22bda45cd46c73430890a2a8a94a74759671e0542295ae81ac36052d7dc2b585bd56151fb0453206889a78d865b847030f053eee3da39c9ac3f62c352065f6865191861a85e8000d613a403aa6e77ecf82869921a4a11e5c09a70e0d4cfac9383de094d3b2861e4ec10db2a14bf4f585ca8194bbca1f9aeee2e0c7d7ef7515c8a5cf188bb7da5865ece1deeb6f9d98797a4ee28551a72f3d37356e2aa6c9d11a9f909a2ac116bb2a8e69cf27ba34d152364eb72750fc2689771e0d8fdf5ba52025c46da52c2c27221e635546a0ce828c33d860d2b03212ab516717ebef9ee4a47df8956721f58fe537963fd9967dc7f8389f35d8c3b482cec4eb4d06d04f5958988be9c721d0405105dc65b078279ac82ee3e40640cc42960036751e376d47e7a20ac27d0e6b2489decac076281a91a687c85a05f796fabe6b6133336e573161a98576c8dfd67be94c66f775bd32e9f1d3ecc22bf5bbb255d8533d904817f08127bb4010db4e5bdadfd159b2296c1fe5139e4aaa348502730afb3cd116744782bc5a64acb6233eefb50a217cb190c18f866aaa3f203de83f8422aafef134a394a522684a04cd8bdcae73f382c089dd991e880169baa9f3352d60d09156cfd92ead0b9d7898109c37825b700f6521c31148aa942a045a2af0c8cad1bc5f74ebad60170d6c2054ddcfd2de8e9eb63994f20fbea7bd3c2016501047817071063459f262707016ac03d3f31bb6c1a65a947f7d027ca28532d0f1faa1e67cbcabe7ff4b409e638045dd07eb4362a1ae1eaaebddd69675fce75eca7028d495f623a16fc38ae1603c988ac44aa24f5968407b5e93df4f0d60ffaa349beac51a03a897a4cd3060271449f671c2ca247c86595d9ce0153766bf81ab2b7155f82acbd9ca65839dde3a8a1e8b3665a55e67f6b6e2807bcdf33669a7ba49876c3825981d853d2aa8a558ddb9b28cfd842a53146a29050b26b25249d960f044ae805b4fa3c415801e792bb0d7ac5699499f561377542a498a863679ea624e28ef457a4556074cf7da66cb2b4e27c27df3b4c3a9b19a1669584421120a0b310f83c0ae7618ac15f2d1f788c70947223e74115795586391d0be392bde55611523d5b7802116253a992c5013956851cf071a194f9fc041d64c3ec0956d6056b9bfc7314e1a1b6be0c7d28edf72e4d7a7eb26438c9ea3eb7e373194b3b61cc3ffd7079e58d65f65237ac4918999501fff1992c028433586d42381327c3aaa97fdc604eae68f1de8346e76f37da9fcc84597439d6df1f29d2e08286f621edb08a41653aed6427d3cc0986fc3a5f447a8ddf7b3ee11f4bba639ba70484641dc8d038d441c2433567070ec8841b4990395eb86bd866d3d86d11d2d70b02ccf69a630210b2b636ff60264b6b6f3ba200cbcfa403d8f68a606c5a77c7e0debba6eb4e6246746f170db98fd17f3500566436f4324f0c051c2081bbfa9dcc1e4178db38448cc2813462e18e0fd6ef1da3ee79f3c1380ef56bcea1510fc536f63e9ce9d0a0a8474c16e81e1b451dd73fbce7114e4a4b8a79f0d9a1970e61a4d9c64fe48ed12a4b67da714d172ba5f30761abab07f6b1e45d0918ac9924f42979d4772aa4cc0eba38f4827b5a3cfd5e4d8b15323a573fd54adb986a666e35b57c235418774edcf12001b33c0d7e19a057e252cf2d0afea02bc7b6a9a058853220d01c614c7777ebe3851e8021acbebdc081f58ecd153871b651678732ddff76d035831785329329bdf4d71ba3d11faeb8fdfce8ea667e8e8c30de7f81520f4d9c216492c4d99346b23861826f8486cc1f676583efd3ee278faf482d0691076693a30ff8d95ef59af57424e09c83d2c7f76321212cd8abef312d4b3bab26cff7db2c84b3f5add100760c8ab57460b2823fa0ab3b35c0b103a9981b85825144823a71818038f51ff2c2fb2b5726477952eb06b6fc5abf4109cc7dafc868c39145c1acf2e80b2673af554a8890e434a9261a71f5943a75d10ec34b14c305eae94dae3851175b6430d0736723639e431adfb97e589a75654d939329677052a1d576ec35923476ca49609c97cccf9e1ff58c222a5c1397a92d43c4209171b1e6cec96ec9d1ab2fa113e72bfe99892b864a6dcb11b5dba100efcc592c51a9c7475b3c3cccebb90a51f448838f093228225cadf7a6153629bb0b13931b475f1af472f638bfd2f959f7d85a5ac7be409098e6925b32e8e92e479d97cdea0cd3e46b183dda197498a8ec5732114dd2b6c161485716077444303159d23c61c4065c097c2c287a1704c4dcd761765b95a2d58af0d3962e466853d1809b2528283307a7fd7f942672172f2443fb15e2b2ed4a376a3b914674e47b3a66ee8de9e63ed70f2d4a58b87c1f87a5437a0e74803fc9f84504e5ba14b8ca05a2ec29c434ef866f9350d94db075985620713e1a7091c09a4e63fad7887e8815da832fb3660222620f51ac79012114671479ef7b7876ac732585ae89661f0044ff2552f781c098ac9dcc35765b143b369a9c4986189c401ae95092852a05738657482edc3ff1c6a6b981fb39637a999ad24044bee892e053791a32d63db2654289768e2e2dfee056d5f2e87bb889d3a55392a4523b653cc2af77f97206939fc27f43b27aa7e2a930e8f90e3c2af3116005b103902ead16bf29fcc8ec4c810d1a69e3bd429fa2f1b343f7a7f8127a22ccfe551a70cf1d525a337438a17db9ee80e5308c032477473bf646743a068f7c2573a9d80514a8cfd785c53188c348da94db740155a722e90cc9d8361e4e671c21c6a9c51105029aa2d88fd63343ea0626f4083e115c735a849a7955f8a9209de750c4e7f373d1fac1c8b9e737ca3fd376869801bfb8199c3afa597804a1f37c1a73c3694c216d817b89ee2cd01adda3b38801272d71799abdbd53cc94aa43438b5f0536e7ecb3ae1ff51f88f69e6ecfbfca6de7926e56e19990bd450b799ef8d12fd57c09d2813b3d43ffeb85e6a29fad17fc281fc67523afdfc0ce90ca9d27042791593f98136bd26887cebfbb62739c277107f27ad0281425c9219433a011881f021e94c1f1254e1caf98cbe47dcb371539f4370806ac0432f4df776961240ac697778fc5ecad647afb80e4785ecb9d0534a17ebbe441f9f95b6fbba8b3eceb77a719061b95348211bfb57257c16f235ffdd711173a6944aa37974b8634e4f17086e30310a6ec5b682a3d007343e8cd5ea63111b65818eeca41bb5709ce4dfa9bf99c5595a9b052692ee3473edb1e69de93e61a7d6b4295783b5bc12ca166a1ae880d8d71e3a01b8f17453bbd478b26a3e9ac7301aeae723026bc2cd4757ad3d9b2fd4e82cd35e99e845ee2e3487b846ade2ce0e49220af749a0036f0b625927fffc76091ccbf9e6b97975567895114718094e112ad1a528bf0ef224397253d33140aa8110f770270476675c375415b55ea34a0ac9982df960a3833214c898c8c544e0b74f59e92cfd4be0412ac720e10b66cb729908e1d9ad9f60ea8f04e8d9650098643872b66d87b260e5fca0c421caa92a21b993f94524d66a83d52d5e875ee1964bae628cf4f70a0171eac6cb1844e7f28c23b583f5b7ef14949962c40cb15fa5f3eb6227245c6b9c45a649cb5cf82b8527e3b4d5fe483a9a6ef7b5f747658ee57e5fbc53b4fd49d4fd1ff7ff1a016635ba1bc944c796eb869f04813e571cf3a86cded87c203776c60d5823efc5a62c9d3d0b323a4d5dbab236dfe162a27aa5c176ca78c47a1d2f251ce5e50e3542c4860c935cfe2ccd14aeeecfa5887ea9628f93f486e9ea7f2bea82efad2c88112d40d94c13f840bbb485c61bf30835b65043745afa9152c33941afeada9ccaff5989a18a48d55ea8e5a609689dc5b4bf0bbb003a5fee4aa47623010cc9d8dfac3dc2515ff2ce2d7d8a4e000801f64e70738e77fb2b1894c5924eba4a6c8af43d887db7698734787ff78cff2d9d8a3b0fd105968b727f8ff73127685b223a4cd1c1928d05db7c326c05f3c163b2f933e20c54d71f731a0bad5a34b016cdd8b461f0e1bf6113f3068e8815ddd39333660fa65e731c964d480d4e818efef64d00a192c3ffd44def309318ae4bdb5609e517776959cdcaacc481f7bc66b4738188e8450cb4be96e3229b0234bd7bd45d0849364b8b9730d9a76da3ebae9b762d4dfd205aacd41cb8ba29933a8fb958fe2293ea01dfd4fc0abf1b87e8b93aed39b6feb7df8fdeef09306697719c9399574f9b1a34d20874ed74defc49bc3fc252bd6b1a132090b25dbf3fa1978c20cdb6a01212f74f847ece1d21b322d29d940bbb9e24dca39b9c8ecbb9158818cc2b2096a48533432efcde68c0fb00459ec5e4b386953891cb5ab65d4d12ef69b00de2d770d4d3864916e7fb38b31b87c4cced8cd46aa8cc77cd8ad848f9f2adeda0a47578e40355599dae513f273f1337cd98c7d34dfb99651bc5853fae86d3a6dd42b6019a575986cdd95f189851b06b33a3e1f494f6f8830342f72c6f6145242fddc62f558e3e863cae2040d07653d26ce71b7c6ef25012cb156678b75f371f4e64e61a7449f895ba865c80885bff7919b9293d78d9123ee695df103457c1530953dc4902a69c8712eb362c09cb0c0d294a04228ea807d931bf146f3fb28871415d36aaeacab614e1eda0af242c7493351bd27d8035e46f9222bd835af798b31d8363947924b88093b7b3f358fac3189871349267beb9e5eca703bdc074dd67cf25b78202eb19dfa3acfbd0d2aa07d778d0d7ef6768a07779e9dcc4fc10c903492a29597c6ca376a7906340b1fb3323c9bdac559cddeebeb69da59f547c9b4ca2f5086dde929e8bcccf0a9ae311072c3c98d42717d596d92779a75bf0602cdbbc713ff3ae31ea56bace5fd09b942c24a38cec46e1efbf62f09d604afc53084b200649b77fa6dcc10180e4053c9123ab99c8ccc97aa2d4a20c1a7165c9d856e41f8a5d45c647a4a80301ec1f2a93701bf9df457f5fa38c40316fd2cab6b860db36ee7002348360a6805ea28b08ac5807095b7ff4fc7e10d5145d56a7973b118e80fea1eba197da7380fcd445a5b87e8d95384c00e17a77a1a9ed954e75e980301e00621623ef68af4293298684b16d115032bf60133d40d6e1f95d3c82c652cd062e231c8ab3569e4286f6d2cad14456bc734c80d81cbc8eb433651af285cd3ae6725d21e03828cea7833d56c01726564543679468eefad0cbb0d0988442c569c255dc6138198497a7dd6ec9089db8b7252ae5ef4d213a2edcbb3a06a11ad60e05efc3cda15efd0acbabe36c07a1de0bec0e857f3c0400afc84cdf4fb3eb17d17a5a66b0f99be8a85d8902a6d869121c864d90c594a66df9f8a5e3d3f4e21eec92f90ed071ec14b5d7699e672fea5f8feb5d01faec2616102d2fc6dddcb803bfc9b6eb9b6cdf34bae356083eeb6b8b9424888a0fbf7c48a71c820f635cf20f352ce1d5ecef13f8589c588f2a8ad110f39c217fbbb8e72a24f0e657bfa258f3042219ff2dc4d4a9478e16328815ea8ad0938976792c0895d71beb17ec9eaf479904304657b0e1a4182b6db66bbe5ec39cbf47aefdac810f47d97a8aa20c0e13a3fc5dd6b14d05475d6e9f2f63a200c306f61097ff672b26be799178e41839b0a4645ece5af32ee9f3f72f61378daf4158f83b128064bb3af8ba4537ee2320c8bcf371cfd51c35f3e998b42a336659ac8c33d66fe17b33697571305816a81fcec4335b8d01c8ff9a8128e821532647084e769ec06980470bcdf674e6d129b045e7841c2d581c4a07cd0362f9f30bc07e967ff1920e1608371a1a99790c883b832f5e8be536e0191589ec3b7d3eab6a12d92faad36ec5f9d08ac517205f228c0ccdc421cb33a18e0033751eb7fb0d988706fadbd9160c695af838f94b6db1aa41798f8afa79cfb747a4fe4e52baaf926cd967622adae288c050f5565dd46ca8de6b7d2e72e1847f71b39f86d889d89468237a55dcba8a7c116fb17a6faa25b368bcf5b09b726ddbe8e1b3a62b54465cc94d25249c3f6244d62be92f75609281bcdb364babfec032ed145a92633eb4584618f1c59add45c6ba69a5eed3c692b282da2a94e02a69136cb6694bdc2f679174c6987427d63178adf92edea2c0661ff453f9e57bd969179d6b5ff51adcd453dfd4e6e1a6725f1e4c7a23daaa3ce3ca0ecce6866af56cf6d67cffe4b726d814476b6c222a1d75777822f4d80bffe61fcb93c421b206f0870ebf000fac3d068441a141c6335bb5174a51bb96815c8c3291e987d03d660a8c183f81081067d37de811c4aafacf65af61108428f0301920cccaa0911e1822651ea8fb111bc6b58ee41056d7f1471dd6d94abda18b7b866397ae0aca768915ad2ebcd050ec028cef9c9cbcfb9d88d334529ac951583408e72aaafc6e181153ac1001b25dabd09c4fa28384dd2d456c0a6ac96bb130f472b3f62be05151cef8e359f89c2ab6ddd4a1b8085f08875f85df02b722cbbcb897292202e0cbc00f90314deec199bde89f6d60cc4cc34a3e2d0a0946a9c5efb87368d94ffe6a62dd09ccd884c600948226ef1cf9c540dd99f59f76638169eb2dd449a6a1bd7e0b598c3b8fe2960cc1d0b11c306a0f5c63b4a8b99d9356356e5294cb89507c91c1d83e49fc39340ef45ebec2e4d6af75297eb144987cd7fc10d6eb9d13642536295213868b3267333ae90981c329a4373cd207013f3b80e170f48d631e4bb90b105777a345b939747385d876955281e1e8c671d914bced24666008eaa26122b3324d4c771456ebe1890dba5d7eadc34d4c0b5881126981e7a038732eba459271d43a561fb7b7d1606d7c40de23f0ee1435a6af29d749c4a3eb46c461e564145734c8b2d43d175a9e70f1b8b48126bba0a6288b897613fdb94be29e98cf4486cb9489140d64de24c73324379b175d2ba028a2da13139a72c7504aeb0c5d77847982fafcd901bea1f88ff663944421379ca700a57232ac3190273aad4c952744e8beabb7fdaf12dafcd0ee67f2aea0a8e3d827e6cdd5a93b5be3c72cc85c415723b97bf7ddabae36e14908cc0a9d1ddb8a0e47c16ade9a1954a0059849f6a76ecb698809b1f8e4c6ef715acbb51a8330766ab4e0335d91361ec56805b2d3cc3290febfbc5fe273533fa7c8a934aff4fe90b6f4e58e2c1f887d7687a07093574e7b02730fb14bad3099c2f899afca272f96c7ab1a0260f660f8b30e02a68f2e48d02127e3ee05ef3195b64f251a08d693f5c09912c150d29ffe4156a73c6094e950d097e180b0e3c07774a2315b0d1f7dc86a0cccb7d96b9dba5726ae2063c7a2a330bc7a2ce07a7355c2daaf5a0ca98a0eb990916f12f56c7f53cdbf2e839d8de4f70c2f3b203b5ae2acf33d6f1933db6eed277d03aa3663d8e3f75d93fbc2cc5ce3dd35396ced2832b54cec9130ec0b60a235cfc0bd9a7f53fc8847d4e292cfcbc5a1679876d439fa49b83b54dc1e03285ec0d84cef7cbc34d614700cbd1dd96480f729c69a47bac93b18e5deaedc333d744f6fb34112c7e7b93d918b10359ad47aa607b8fed2f657fff8288bf12ea6f57bbcc6cb25b04ecba3048b246a1f05bc563b5a5ad151560bedfe2ae8f17043e09bbda829776ec8424635d4bdbc618730b3f913d096aed2c3415b00ee92760ecd1bfd0df887d0c09dd650ad953f0de2ad259805b05425a2842022741e5c828758cfa450ebf272744c6a832b2e53264ef0f9d624e6a7b1336832127e84c6ed4155d44b9ea682ec5a22c80a6d4effc5f2ad27fe47843a8ff992fd11ccfeff8740b122c6816edb39687f526f9a845e2b0f20000adb0b4d1d678fd7b97544703479cd949782ff4aba1062f5903a24f330e5e12265fdc912876f9d50b83f4fb6ed371f69a14737b3575db1ea6aa53abd9e6253e0d5fe015d23c219b62bbd76b72693a082e82e03bd0f03f571fb3590da92e616c2add5c6cd5bce9d1a0d6e975f8fe180c8393fa7d71f538b709e3574cf88dadf0bb21b1f449f0386013dd6f403ecd8148876cd0e9b1238b91f778de8cfdf5e6e2d3dbe7bc45fc7719ce9d6b952d5efd102b548d9693fe0623b8719c19bc818e46875cd9fb9ee474bd8e9cbcd10266abbfb932f7e3789683647d7ad71d137870f8246efc689024162f2eb02fb416073e8b690ed25e1a1664239b670582e0df6e44ec387ebf0deec395e548fdd7b7ab0dbc86d10988ebea65e040d3317035c5c517e72a80abc6acb1c272b8bee047066a07b3f6fe7e112ec593520279923503a32b28b4daf542f3a41dcaf7f829ba858c4b7007ba6d81ca47e14b6989947b1b8f465a01f5f67a5e62ed14d3ec58845399eb0975afabbb9bbd110e80cce19f7451ac6fe73552afc7c3bb76c3705208e842afb1d2059aca1476aaea8ce7ba8e18311ffbedc02d3a4a2ea2cd8b83ae757c44145438996969d034a55c192c3987eac61d50762537c15e35c6e7e91e65671742218e3ecde6dd8fc51a2f785a1f84178c7355540176f30781a5a352b79d7643afbd02f8e5f9d7ff066871ff8d191f0d696c61f15c989d0c75eff95791cf772f10f63dcd32f3ddfc71bd9398ea91014d5c3ff8493987989c8d8f6543118ba0bccf5976ee6176bf55abae393d62e1d5151dfaed25ddcab20ad875ab5b6da42a5fd65b3c6bd79e8d316ce38a751cacf63e0b35153c2a02c8e564404eb12b64675bb2308a1205a4cf302ce085478f494ddc707d7b7d5a180a64f3370a435f3a02d344ea8e39010698d058dea1b36daf5194de86685531f8aba4d23c9e87c66a2f50cc36e4b45290a6319d4239b180101435b299958189c293c9834c788cd9f4d202065bfed576258a4d3b909affb5292ec0e98f93ceb4f06503683a2bed17987eb092d6d8afbdd375daf85931348e2bc9adb9599ec29b4dd64105aa2c3ca4a97a1ba4027baedb6c76f502fa27bec7c4866bc361d162bc67e120ef494b35339005f4b9f01aee058b48da5a214af8f3339f539e1cdb3038bc1e5507cd83f57d2baa19eb34ead93a6021d6b41d6fe7ec6ed88c13289fcf490449b2540adc944e6fc702fba7ab7a9d42b23da4403421a5c2c8d3aa084a5dcd121e03781be029f455e00647a77233ee1d32e0439a820b6296b5831ffb619fdabdd00a450776a8ec34a08b2c7a8e4a78835ebe79994c5b7f35264527395390e9512abd34090610f3f11985532f3e2e89fd102163cdf4ea9537862c01cff0c08849deb649e2696a77d74a59f253a048b3fd2e3187a05296f60dab61e386aeed7c512fab2e9719fa088517dbe38e3c09bd0e88be808dfa12f240c90ed2ba65dd7b202f621c737b74f701f6990beba9c56f0601b50e3052f26ab65dedf3892ac161148d85255e4dae6102660307f7a268e84aaf34bab0786f4cb9c0c84c10732b7c380c8eb004fc502ee41a5b00f139c399558120cf76dbb5f4940554012e0120a2530b9884efc3139d8587cba4709de04ee43784f392162c0fc48426bac73ff2d194a63bf0a8bc54cba7d232e3b7a99268bc82792bd780cd8d7fc23cd0a223627adabd34bf4eef0ef5f494d7bcad0470e598ca77210d04a76905c6149264e1b69822a5e6ffe6d1e06593ee0eb2b77372ec76822d2798ad27076036acad1ed644d7c8087320db8ddd8275754247b2d4da58189347c8c3087205c6728ce71d40fe63d24c158c6f774d8efe30fbc36120386a082b5ab9ff09ff54ae2429f63721c78b9a4beb782ce43670260668c530ae0b0070927f3c44a3a89259f43d445f1a9c19021678a9095880f3d05ccdaf8cae604bf73bb39fb842a99c8fad5c1d04dca2e83fe525c1c14c2f7ce75915cbe9da6efc1aa56818f45d6d26ce6e2e7fc632a24460cdb5c831fda65e2ccd07a62118ff1cd3d40b99ffea1e700115ed0d5484b1bd01d3ceffb962517fac6bfcabc61985462fb3d1223b47383a25bde230203bf4230e4b48a63b40870362560cc3ebe8af7126e547b478015d8881e32efd0e53d93218a1561a712fcf5f19bb0ede29048a36e7c030ec562045d459b84cf0d1493a86a2197837830ffee979e2b95e9a9eb020b5d04c629948619b577fab28fe0112db3b4c817324e11c85f290e42b7d168cb523c8a90883b53b2efe91ebaf9c0468d63529ca395755fa5698cccd83da477a156171314a41b12e6349869b321549a72feed2a8c103bb2ab19b3167136e59148304edf00045e845d0f5052a1f6e06815b531ed661e21fdd1ffbfc0fdb28a446fe835c2ace81058b57b9dadded8c7e23de9652fda2610d99ff6d94879a408385d9c8b31e12e46128df054c0e0a8369455e9ad76cedfb9f91dfe357bfe12e669a9a2e1474c62aa1acd1a2c922f457380db21a097032ecdf54e4e215409b9e8ec0168c3321202ea485353326cd9f577aa04b60cf40b8715f36f74b0e2692757c2ebfbcb6aa54c5f07511a83e1cac0594f31a77e957df442a2c412ddcbfeb7c5abc15e0cf9f11ced645a5a30b176c1db60e5e9b0ad31a3cc02bf69251ece312e0d0389eda0fef3bd907b2e2f6332acabd93a127fe25ebe55c08974405890bb1439189fe254ab216c91a396b00fa5fe216eddc0a5ef7c15919067da0683614a47acaa69cab93e824da76393503bf53ea08e99836dfa39072eebfceed2011ef11c5a51d8edec4879c2e58f12202e96cf59117087e6fd1f72d3489992fb9e46b34f87c13f7ae00835f5b63779dfbcea741e425b1f4f0a088003daf9ccf086364325e8c2216aefff52d294026b42c35ee2f273e9fc41e78399775660d25d71dd43c884594f70171837d518f683d1bbb8baab7749463bba3988cbb6889e7030b413dd99ee6093455d4109d70c0223e2bda709d898672ea4387f0c4bf5de6e70ffa704368f518866a0ef6a3a86c0f02b58c731443dbce2b83f0729135902b4560fa8171d12411f0eb2d37d92be3287046212052356b208f31b9b61430f6bff1afb7feadd34c478f3d8938442a87b305f0eba780424e1709e5bd262f6bb5fffe35759ac385117cf72436ed75c884818fec25ee2a81c3822e6eb2c27674935fbd10b31d2a4b010e6a795e1c2572118f1398a6a4a04b11f187cc14b7e34d80d70f05b14a100094fd63ee2522de731c3a81a89dcc7d29c7ec3ef086a7f1bbb7d3a3317b4be0ff57dc6df290c4b13dd0de759856a66adf26cb3a0e97ac43bc1b0b2ac7389b511b00794bc6ceaccb32a4b67cda3badec79622de884f98b3073235f1e18f1589acb5b47a445e9ab8afc5f84cb8700bf981465c69e16f7e0cd127c0a4912f450c8d3a11a50f04d4e103128a128561f83caa0a07db41e8b86cb0fcfd41a42bfd656c240d0fc1ce254a7962c1e5b6f8afb43b24551a936ef0c0a98fbd08d88a948b08bd1552d6684ba66dfd65cc3b812a582676c53abf19bfedd3e1d76fc89948e924524e6d5b33d1806b829ee7355c5c13010f1f3dddb0457fc4d00e22e2fcb8fa5085aaab0ab1ed81a933a18af0f244d00d3e3814708d3f2ecc407da738be6198f71754b00d293433a88bade47d1a4a6fb362eb5736a68806fca92515da8d8d1cd4a650226ca567ab3a998bc2e03c56e8bc87f3dda18147078eae9d4234634c1f387081a149d23236d131b162d50baddad529725aa578d79042157c61165697feef25dbbc208bc7c67c8e22ada4f188871a2649fcc3ec10dcb2664e14c27664867a53bb51d36284f5734641c4d3bd5232e7155d90d51fd94adb63447f9dd83a094d0d24fc99b8c7ef75033ebb4ca0703c502c1f9fccc8252e9fd7d75b198743e1db65ce9e6f1416069412fdb1d91e52096ffc74b922849421104c8f1ebd448877a7a6f531ccd0e1329a8685de13733787c310be4401486de59e9d9357d4b92427179030131c6924a533db59242d330bc941b4b9fc96c431f3e15f874ba88a165458f3141d3c3181d153afdf4e0e0725dedcba537fc2dd009e077fc83a72f48145e9c9adb91e3117aacc9b92a68591ea430451a826c858fabe6c5acb87d7e3b844116d2bd797269df447bdf0936b8bf0370cafb65ee3c56d6c987f5cf30350fb43700a3529cad383937908e7410894ce1e27846ecafaa599f1bdaf84089031fd014814d45d4a768f352fdab07b7b65f43c95110dddd2588d6dc60923028e53f5474b2a5854448d5c75469b535f8e4b62f7da6a13927b20e13389c418ecf082a7d47c18ce2f04e0bf7ce4d07f847e21f01c3124113a3f36e01803be42417a699c1149eadb9f6870be0e8ab509a29a7ceddf7ed38deb56fe006891342cf4c59806915de8e3a62eec501481cf52db296e1c77a6a731bd4958c7f9070689a6ab5235fe2f0f87f8435c9b9239469963fcd843722b8dfb6229dae3059dba9ced7f8f58fa182609cdde6703a19a88024e196d2195bab4caa9058352e56ee8ff0d8903ab2e1b4a8c885b4d2adf2f3118423165536d5f135017fb34c51a09f33cf6d2fa3476b3c9e41c8cd0abcba4a76e6d7514123422a3c2ffd7bf09864934c3d9cbd5c8f0618777cac16f625a76472848b14eedf3b53b0cb5bdbbcc99ae0e4c959b63b7bcfdbd2ea414335222ea4a4db7aa4ff15eed75b093c85581b357300c89ab938c9ed45030187cb7f588162b292caf460e90907bd1cc1255bc707d19779177fd37131ae10e64d1b9e039516ec89be4c474219a40c180986402d0159718dc7e3159b705e87c40e7b48ab318fe4fbd0ad32372ce98b98feee9a408af28f3d88eb28f831761e284ceeaa895c7af46ecdb164d71061c6d97e16bc2134073c656df77d38e96d8b8c5852055ccd93480910af84f584bf63e8b1907321a596ff0e1a172190e625bf59a0ea10dfcfc26aaa3965eb0a906e3fa6c2d4066e61509300d56f1526ec804b23a9e95d634823fe6ab0906956c8ec0895a83c45f007397f5c35682c482e5e5725909e278937fbb897c1ed474fcb586c504ccf08f7f7ec8e618581e5d9fc13b5cf6636b0c1f85f5709008c8228527ee4ae0d6a5bb95d2b89d44154ed0bcdd6a1386120b844ef1db265f73edc5b596f8db1d2d9848d0d87891f4e3fc4b1b165f30c1bf9234702b8117dfbcccea53d574dbf75d88110633205e914941c6d36e3707f35eb4e5e33f3ac44b8b9cbc857c7014d185ff1c0fd1d8de9d68906b42be1f5ee537844a7e128cc1c6175cfe6a648e80f13fa90007d4696d7695fcf7f63c18658fcdb6b13b5d23363da2270515528dd3ecc7bfc672822e4bab05d810e8b1116b465b46f9d9892581c4b06b1a3dd6a26c1822b7228cdc543288ca16e2460512caf9ff24007313888275b6cff195f0fdd98b4e111c4d4c7a2595ce104543a8f88b803059c5e478c02298d2ca43070fab7419e2d13467373bd1374ea70bd82923c658d4bf4d7e3ffcec423e2840bca3823feaf0134413a495b42bf44bc00c99c7760a1f0e6f9bcfd67558edd3dd2c76fcd50c9a497eaaef13e93121913d4b68a20fe28bdfc9c0e1da239928d18bd7297d4ee0c53d648a2552a7ab32fa2ee128696f1015f76eff42b640b9ce8977d9ff00549d2f05d4700a3a005f7585e03c7246e969b5e1cf502816864bedb50a1a229d15f09a639211d332998b63cd3b648d1f8fae4ea0421d2606c4269c1cac36264549b63818c1cabc4969904992e657ba05880685d03002ad84ab12b385087fa376d77fedcf6ee1979829f0bf4a997b97688f07ca1992f633797243726ef5b4ae9f6987bb2e0f3a678f862253d55f62bb60da1da052ec1cc61205c3f8b584bc84fc769d8a3ee9a4676f6fa714529f55aacd755395d285f30172f1cdc0d8a10e401fb09ae033da0da284f5177b28fa6302027c483b93e3f0af411504960d26d1ef48e813771b814273167ae1ed0493a28a18d013f74f9c8ad185699bdfd1395c3f9379611701ed886b239a5efe291eaed745370163922f761fb6151848906641e8d7ae7eb9a23e68cace7e7da49fed9f2acc83ac531f6f1e7a3b4a76e0061a29dcd84ba3db65302a175afb4cd62601f6d27b7f82768d848bee2a11059a5d0e7d7336e5c861506a0528ff43df804f139eb9d14f9487d8123c47f8c2564126c58f45db4dcdc0ec2637dd7704c4176cc6b28c1b1618abe2651c643f7af75dec1d7171b06288a27a17ee2896cbf932aef3b2faa91bce4e4c73da82938a9eca708a0304e4a05a2afb4a974aaade85f2e39478277642d9d9e3705817defd9256d0e0ffe97f1c08857be435302d43c71b934488891e038cc63940d58e649229935cca5f1462a86d0c2e19ad5edc76fbc162c7e991952dbb903741f748b2cf842d26338f53b6f8834df3e57aadca7f71f1d704535d95ec95ca2b5d3f30f52920f34a65e3d36382af36b751f3d51c10ad273d14c3f8b4f431555eb05d1deff6f35e8dac84bd0e9cbf159382bd24ce5c4c3d9d1de41e7c4841e455e8674a0316c480cc46a7d6d1c9b716956361895b8b23800dc269614669990a8eee24c9a69758c83fa4a3658b4cbb592666ff3c1e73f684affbbc59bce65d8565a01857b8854d011e1238fa229ecb6ba2796bee301a85bb9960e497ef797bba32eb39e7d701bcd281f19d8cd3c4b4f82e1a363036573cade9623767b1571e1138c2e4958880c18b4eaf9d96db4610a606eb71cbbc0c26270bb005679b5da1405ae3679bdc2388072f45c40a169a2d0d33e294ce50805a378e64db5b6f054cf102ab0159effab9bbb6533784b0d8a08c168e5b7c6448c2310c1202ec8eed287b59ddfa1818ec3618294d1feaa5710d4b9eec4179d91087d83d7cf9278782153fbfb96d5a480f09c9f364ace1247b0848e592953096903736897a9c8f20b4e6553a62c552f046eac355b3928e7ce19b5c094c363f6ed1e0ad47f08a9a8df46efaf87ba6cd46d17e847394287ee7dd9e5a153bae7a47c0bc6152f095bd804d75dac6ab9cbcad9ab9bc9f222e18cde1a204469403b6d0d796d78dcd960051dc1102d1e3c68bebff28d2327f01536e5f07a448de978b531e32ac06593f31f1fe4b440225b6da91b12c933756bfe98f5af2cb61938f1d69b75139c69fc434341d87df8fcea6d31ebbf74e0b1e49ac51c3faeefae2547fed47b09aac926b75073b3c1b276708bc139fcde3ff37e8957d4869a1ef6085dfbaf90c83f58ff170b8966d6ef0cb28dc86eb1ead273624046fcc88c950a24af50c875bfaef53d90f4ce96b1fc9a164c9e9eefd54e45e6eca119dbbda0cbfc18e869d69e1683f0b38d986019e2772e7616c1734cfc44d268ff7e40156643b48685eaac98de26ff64db0d3dff6e3bb631a061bdfb9ce77bf24a93d44b1f9f1d7d8c2eac691c3f164109aff79c1cae1607ade0ce94993aff8d06883d57817f44b30bae2a713f852b2e462953395337791e9cb3b26de7446c2ce688c89b4ce06b7f0213a5d195eba0716907917322a61f0b2b577d4bb05ca80dc7d414c264c225f3ee0a20de895d959efd76040e4b99e159b2c24acc3668288da1b2207aa05c77b914810d22e76a8defb3fd87e13c7ea2fca29f94e97501003b6c21d0508487002c705b80a2062074d7dfa82a997f5e4f33a52ee9a09c3bfc6dae4cfa24c389c23a581270f8b0f7dc90be86050e5eccae37ef880d0b10afb73897232acc828ea97b107cb760da2be75f6a484e7ea6423533ad56959d91ada9be4a96a094b977f66b170757c8096d0f52802d47e003223b98619f9afa17052919067a04524eddef14461fe7f16cd9b68f17b330d865b7dcc2e439c82e52e0f509dc70b71494d44e5704325037c357637c69689bc78a785f65d47ac73d80600ce9ae340bfbd039635ef484f403e800642b9c95c2b56bc9b7f73253b58d82661d309dd67f3a9c4908d2327b1111c1126f363d04d0f7773ed92b3d56cdb1ba7b9619f1865d12785a6ead884079a4be875d3e7d1ca042c42e79bf76f65c609b632f6a1b2dcf1ce5e988201fd68629ddec4a59a11fa575e6a451b1ef7a98e95906c75a1c8d153c022ed211a09eddd5285e2999a3c7552f322e589962e07a2178e54513ab8d90f3bceb743e5386504ae41cca4b65482947c89001118af7bdcc56c16714b20eb0307b06dc55b23a4a0fb6f9ae6a3cfc769d2157894cb1c449da09f4c0081ad6cac005814c0de870da347e3bee47e1f221d415dd0d6c06a7408b46371113557fb21ab4801a2395889b64794345f51fdf504c6439163872980edfe091b8a38f2523305e0f542553251e1d71c53ff310e27c25e043e47d13accc224491ce577615732cc01d101dd499371a48695d842e10c83037d89cb1c611c0a36b7b936a46431693b4699f930a9b43c0f7f7553c5b584b9a6d3ae3b0648c2e1f7928119141ffe4b53ee2cc0d04c0eaeb382ab8ac70511c45d2692c64dcfbc020d361f87f0634dd194e922099017674c7c7322cbbfcd9282aea3e5d12df314d1adcc43fc33a9f689cb16adc2c037025a4409ca08d314c172bbb0a7b44d634522621dc9e9fdc56a43f553fd6c552e58d3ed7530a831f1d6c08e52898cda779abcbcb6079295f650c3bb89d29d2ddbc3de54e75bd74cfc0207f1e137afe4c91c263ef49d137de4d00e913c3225ce26db9098b2fff440b9337ffa99ee80e6d071274f8bab0932475f82462e37a7c04cb8a16920a1927b8fd9488a41df1742a36e9d54699e63dfda94a318992dbb1e21356862ac8ada60d99803fac43b99fec4c512a75631a3944440f63f550678a5190e64081ea9b28b2f35827e210889a77e8846e8de5926af27e8301a958daffa9939094e76608f3720f1d4271c1d7eebedc759d8c149f5a03925710db9cc57fa591453af89deef9f6bdd8bb33a889e636e52a799b79c5a53cdf803e88dda1f6aa77cffbdcdbc5891982a84f2a43cc94edb83cee99e0ab0451fe1b7c8efaf93a52d0d2636339b28dcf22c5eaa32ea4fc2fb08aeae398a16db55e980d5b258b926f77712ece36724674dc3b863f7887f31bb46901266dcc0fec68a5d45500fad59db30c2dae77f6a260d3f09083da68bc8801e4e100c24c7c9b4b98ceae0fc924d2358f7ae227e22752e4cb50659b21dce5e50c1b02578ec3930c7d503310aa8b8b073949e8dd6f4b8689e35269e5034b73f09eb41ef3c4970bdedc56e36ac3cdb82e474456f058501b05846bc1ae7b663dde423eee2561866db4fb5c2d6dd856bff89781dec0d54ad937fa44c611bee5bec5e42faf50bfa4717104a59da150b034dea9a0a3193692a20263aa897e031bfba1072101113ce037acc7b5644cdf53f17bccf6d9245955e7be6e1539fc8b38b4ae3f436d3931883f8596d84c63a2ee8958ce528f60511ada0ce2d813ad0263198ab277c80bb2dc7a2f498429c44f1cb49002447c8e632fde37498f3d96ec0e1c06038a8b9447f828fa570d673a5c3ab8c67fb63b334dee997ebf1c825a05198338bfecfefd5358cb5567fa1b4a7a6b3153dbf1eb28a65ad988e3aa6c9df8d6e86c9351c6858890a93d8cba29a95947be99eb417b45bb5295d6f1935db6c2c4f579b27b243de4e246111375c16d2372511c5a48cdce50855fc8c20ad48cea6e394f94af1b435b3bdb838cde0c46e4441ca70fbd32785be23ea54c3985e980d3eb48cd45fa843f596b6ac0f1b7f3b4749f5e6a6c1309c3c36ac0e20fe9c0b4ea83424bdba15e8226974ae3407fd8d731b9b7148dbc0d1df8374b76642771f254e666a2ba1cd4bfcdf14e052ce9c37b01bb6510cfc5d4acf318360b3c53c77e9464e9e5d67e15c62d9fcc23fa09100aa73ff6b992d5309792e6ed4696e8e4a4358557cfc730d968c5f3decb6710f00ef12d7f7c4c41189ab00ab168fa98574f42bd0aa927b7fd70160fb1d1dfe65e72afd7806f17d5b8a1a34fedec41d684b72c41f700c34a80aa6bbb4e8405cd7f51cfb6d01b9c23a6c9be2dcb02e06ace32d1026b438afb82ac59098c96ab6a2bd541187cf7c9a42bf75fb57d4c8bab3cd5515b568ab0f1f84c66d453c281ede184da81509cbffec15f30ad9d2b3f6944d2d00d4f17866b34dbeee2ea88254045b2868b6543ec417d2f68d8a30ea347123ba7083fe7f4d38fc81fc4fcb5d913e1d5e6b5e698b129f44d5b1f5a0b2db9660b7626013fbd0da6eb74569ccc0180bf0b356d325f655cc6b858a4827d9444be67620809c576b8959aa094f1fce5a1d0a471c0c8e1a06f6074a3a202b6955d78ff81bb4fd70cefca66a13ae929b4f9a158345bc7b92274a94da145fa7ff065e564d637751105014a7487e7f5882d9e92e21420473a9605f0498bc84a8d11c76489e2df7f2786b8ecb36a4a7125178a27d94b13692a3babcd786c97ca91e66bf39ce57ef4a782be5c05204252f68ca42f7c57a48f6fcee824eba08f4669def0051661c66a08db2ce33f44ead0b5e532fad443a03f29dc96a98aefa496c4e65fe7f093d6ccb0c531998eac8f06acae0d2107e8a60ba3f37980b3883bd9a0a1f09a76faf8439b1183a4a495db6ce84ab1ffa5cd6cfbf1c0cfcbab0ef974d7f816e775ddd24a82281b73a56faf6e694207c914df421bd9bed27b1d1c96a068d0a192011dd066100cdc9a711b0e3b9d283d85fc4ba0b4c7aae492f23832a029a893b42b0a4defa8233ed6bc7125b68d4fcf1330d32c65b63358a4ced85937ade2fb17bd71c122820a4d1adb2925336d4f4c033e263dbfa7fb6bf613bf6baf8e671f83022eeb5a5ae8b621910865b959f12c940c92a3619d79adcff521964c634632388bbd942094645a4fb5f2294a8d0f1d9b8a303d7cb5dbd5c6826da067aeff2d8a26acac741aee64be78e07bd605113d61d32bf2d3d20b8c852589863380d6075dbcb8ee3d13fcf87d5f8932183547c089ba360fd987750cc6dd150fb6a1bd5472a34fdb9029f12b54c24e8c2e64b300011fcfd9d57018a3321fa74ed1c84f7713d7b4123f394a079998ebd7679b14c8b8f9e8892a8f9b2fd8e1ddabb24ce77ba4b9fbcc130ff2354f07f4396ad262f8b024f49df3b9fe663dec0e7c398fa1a79d8694a84b1bf4748cbfab8bb1fbb31801c99e3f67afbb8f8dde6a482e757ca965606cdec8b9793813eb25564e3aa465d5e18864145cd7d5635f0a833e22a462f7ae81b33715fbe49eae8943c35ed49f48ac6ffd9dca3496a4c4c8a443eee2c5c81ae47b9520d398097379a6429465f6024b07f66f94952fcb4bf2f11e56f48b970130bea38e918a2e355bf8373473d8f396786f22188b5f5a592eb952c406cad9689a27edfe57464d84bf24a7666946e0ab031e317df0f1f3d46cd78c988eaed552ea9043d951d7e0f3d55ddc4bbffc999396a1bb83f6701ad8eabb2c519d311a09a8e4102f0809a3bc38d55157a9a8aa7ebe63af213433b3f4c0e167114c28e8814f9319f355e4fbdf7a59a6035a5b665956c63a904a372da654802c82d9cc788325980f71fc91f16759f7b68633700e8846ad022fffaf9eadd00f3c017b40003fe331e5836b3ab64a94da75c6204f96552c9b1e223fda7f7fa9d108d67a9c55a8c91480bda01a0d39f1cb34b068bf55d56bc39709fa42c4c808d30c635db00de23fc9d86520e22ea2789a9e222b4320307bc05a0f2252b65d7ec727c78eab480a71bdf2ba784d6f977dfaf882b0e92285a93facf4a43ff0221b297c258d01690825485ded0659da41b0ff8c7a2d88023144b58c3c6e65dd909851b2313f6d35d676d506ef13e2ac24dcb75170172066c358c1e711aa7996927c502c207e693d9fe8ea305a52059a2026266cf1576c8e4e96f400884b967f273b51ae847c892d156bfb6126b6308b930bf18a47c5a0f8fc516cc2f837cc35f3c473aea42a725ce43ab771ee3e83ea2b618802b42c3a2f20a041e40bdcc4336840dbefadf00ead0b2a99369f2c077f3fa43f771ce4239661dfb81b2301a9c0c146d2d7d87751e83810fb4766410b5ea33dc57a08118b0e1d1b1fffbd4f58c561b92d39268baa9b1cf7e20e501ab242b7cfe49cd6b946fc0f500936628453c6b43d33b0fc18ea4b18875411d32ca87d7ea875f1dd9bec1cc2be05ae567d6c2cb270f16c0cf1e4f611c72fa3cde6cb76d73307edd7afbe5f6d8c4a3e0cbffd175b743592818aa7491370153aad927c082eaea8830ad9ca77a87df447df736404a47503e0ba032b0c181a194b3e5c1b5314067d7c10f70690ae9dd4797b099c69aacf51af0fa1be71f929bc557fd7ef4f06b855262966e8602407ac9a95d56ebd48ac66ec61468e2836392c66b90bd98916938da04dab0d29396ae4eedc9efe51314cf77035b485370d4de52c978d289005ad13053eeed5d3bd5f614e27f803df9591291dea0a28a051238b9f473adf1b99703eabf0ecb3c27e5002a8edf97f2d81941924cdb6a7683e869db9c0691c396f57b25f2f5f33bcc940a2bf6aed0797a69c982c869bbe9bcceb69f6e14d84b457bb307d71ff92b53612e5362bf321c39c9de121000f7c15337b67ade3b6a2ddb4b05b2c22278005939e37dc11ecb2abfad856bcc922d273fc835803d5308421bfcebfe94902c633bbb5f0425de1c62b09590c046fc4127b287be59ac9e8559e074de8032e4e215ec191fe24b6d6ba452fcb426d3d3a4b0621d3cfd863b855c619ce04fe62bb41db2145b9301801f43883a3072b47603148c692b4ad53875b9dfc0c295a10ce58f0782925a0c5a60e516e42a6e701851dc533b235a0266edea2f5b18d6ec5de5f7151f4bd62d1740bc26afec4d84aee29122ee61875034a209ed3209d5156b3cc8390f8c4492dc946cded293e89f853a2bd31273c172c08caed694d72fdba5febd0f9aa889785167a41e46c27bdb78afaf09786fd72be143bce6ae787311f90d3083982911970e8cf5d6b690d413206956faf1eb3f5097b046217abf14569f42af5a6ed0666bba8a80336c8b07c195bf543e389d4198045f2850c9c02e7173a99e22f6daff3166cf5915d5a6b1261a0028db47fa9ada3abadd24594ad7a7aac800ef557393c8e8fe703be31da741b0da71e826306507b38d7d49306e29aa470569a65da92085ab82774e1d1db8ab5f6bf4301cf35f2146023c97417d3ab7d3f7965597d94016a6dde0da0dd784013ff9d283a11464dce09edafefb32b30b06e9934b587b717d0d74ab04b8229c795205767d31fdd3af946f70396cc85d1366b463bec8a9f3db991f40797334873fce51878070da4dca122f4a6e4828d52f8e362c92d5dde76055b40edba19916ff910ed2af3926468a615165406c7abf93c212ad8ca5f599ca7af02e2e1a036733b6dcada1b1da92a0e17d17fb991ecb877d04c2f98f2ca28ce6478756a94df4e2d8f2f411210211df42ff998d5eae74c512f1f9a1f8e9d10258e71399524d3b14fd1b97ac3212563016e1fa601d21fb67297ed3222895636e5c1cf050f9b82462fcd0ea45ec39ddae51e09af0263e8f0bfaa90cf47695e7a477d565fa2d45c5a12c8bdc9e1914887b042e9094c397706e313bc5602e180db69685cb82137bab5260ed1f9678794d1f4ec995e04696a5d887c662ae87ad2b2d2efa77bc4d81db63303d4c81698808a5339980faec610e161d50be6dfb9ef5f85e7d5341b20217203373763a9e19e9b255baca9ead3580171b35bfec5cba10a676da7f86554347a7dd556c40b2d4bb67220ff96af9e91162218ab9cc9d3db482d42f61d3ccd212bc14ac17ffa97e4eda361950287d888e3f2412a9fdd376a5ef94ebb69becddd9fa865769a25e6896c6d509e7c1c6830c908c62404b9528703f02011c7ac8328b53ce5b94d23d615c7df5dba91be153db9e27d0b8bd598bd12ab0516ccad1265715ea4367d48d1f6d9fd287f5135d4490d8ab0314067ee05ae5ccc8ec11496f7519e0557aa0e7380020372a831ebfb1784f717c683e1345518465e865d1580aa79ff1fe3ce08512de841c9187898c0c686e50af2a4152143f141c4112bbf1b5976f3309be27c008eb3f8ca408de825576d186e1bb21590ea6534529d6e6e5239b2ead01c041cbc5387292778302914ce8271f11902bdd3cc418b9c0144b4b05f9418c9cd193053420e372bfe6c8d5d9d10623cecf63a9deb3abbe97231887c2ef5dda542a55d580f2c525cfefc51389963aad06a5d55709779e8a111dc22d11ba1d176e50ad91796072569f2b74ddcc21fdffb4ba00deee1172d81feb26f499db74da0ab6ba4f1a2cd3d32014f633193b82a96d3d70cd32cf62fa6c9780e1eb483ffa960de3d473930ccd36129d8a11b9e613974f24df451da0a4eb594835476fe1a3747c0cbe55d7abf0349dbdb4d425b49733e07f3b4c86c63410a81d5255c117968067b79292e76779684b2f0b43bcc7f78c671a139d5de7a65b8dca4fc049fe28f533871a93a61c2e23894069abacbfe58b102e72c05abb5102f30896771e3942294897aaa96029aee6e5a40d72d32862e2b795d5c176dcd63c053dc8647e0921a4350a987d75611f4708ec942508a7f877d7727b1e171dd88355db78c93f5bf8722ec996d6f55214b8d648a2733495f07e0edf7f8fe380d525e5a622ab589ca396c131330fe86e99d4dc5cf9b5935e1e4b6c59eb8b7889eb7b1202b4ff367f265a19c5b9ac4492408fc80f7f1ee86ac3af54100fedbfff50dc41f23d9c85759c961a244dc1c73d27c25bd3fea066099e34d61427da36b1eaba601c730564c70abbb4b5cf9e502843c8521ba77fad590dab381bad491f6fe6242320805085adca14740f2c31bdc7082f42e6295279f3a4859c56ada3a85ab1029f9b312ca0074f131d6e7f29593bfe3fc7ba25d1fbfdb64cdb7c7ed2562a3071ce34785fc434ea522b3edec12fe5fe339d942291b5efd481c82136b43ce2c3f3b34dd19d24aacf3e78aab42d3c1484d19f3b6c4594fbebc3fc37eaddc2cd4b6ed4a0209e03d38b2dfe45922f4a026b9dc348a0d1397d61f288bb2308ef14e37ac356d023c8da34d4476d26ddc104eb96c51aec5d91025a20cab5420186ac73aaa3dbe392c516f514e19c5cc08647f0513b2ad2a4a6ea96950546465599173c7e1c67372236086404bc690dcfeb04a2f1380d3d0458f43f8ea77149ab3a83ee488919247ad78456e10b5f42d86ed048b2a4e96b319ce3ef77af574062e9f860f6098e00c534447b9f7aba293c78784512da25dd49626a9d54480b6547205f1643e759f9bfab5ffe7902f2d71d9cfab1b1f9b5ec1c712bcc5571a9338e0e70ee9516c314a7248e1f3ed9193280b2fd531739e2397255e30639cf3d37ec8d5f587f16b090d05198e5bf8261fcbf740e9fa310dd7f0c9c513f14f2af9971faa705ef69d11c9b332978417c742e4e6b8718388b7d00179ce2331decc28df90bce49e8813fd75a1f66a791b040fd3e14bb5aad320ed1aad5f16e8d347ee133a491a5b5d3f3d058da967efab69123ddea3397f09070ec17a1c9629266a8729524abb7c952ae26c12aba68b36bfe2369baadb4868bbc573862649b2634a2f14452bd4dd158e7ffe672448af6d61a2a88e321750d9cd5b99a3e752a5d7f58587abfa119281e59f63173cc85186543ead0dc795e0068cab03980cef283b25da490c2cf92c48f88680055f039a1b65262c661b694f4ee2bb64c84f152e8bf513b8e41aa05664e360f750bd2f869e8835eab2c923b7a1b7fa36b46cc5bd0a6a490ec8d0e3bf2b17c4e8183d73ab5e266a2bd922ef8668d156ecaa41391d87b60ad3b6fdf5d59462e273db549c5a28b881419532d16779600a7a81ab33fecc9b0b7f79ffb73ec2ec6e115ae26d3165328469322460cfce83de5b846937a8d16e7e8502304362cd93f69ef7ead56b30098a3a886123db7468a3058b568803e8a1a1f72676183317db4750a8a70e3d5a97050295205a8dcedeacc3b6b79cc11f745a6f059ad060623bb5e321092167e9358b3828a74c93e4811727f0e409f382a5b4bdd547661092badb6d58318ca699daff12ec6136494d89c81dac75b9f91032a1663530d07e8f4ef8448ef315503da869f0f989b92b95b6b05f9e246e27ce81b0e8af8a0f3d97ff938899b8fa2766b3732825dd8deef2a2dd485f561a28f9f8f0a2858d063b1014b14bf92d3a9cab067fed7e955b9484baafc7739d93911a9d2931064ed5f9b66fb1b07775ee6f215c625da8d2273437424c6e324dd64f93c4643c7176d22602e56277434eb8acdddfb9ac67d20c19e1cf4a99d6d1cd72387a3d9fb8f269b70b2609e73dbb7e793d3c574ee25ea57c14a6c15173aca276c034a1e05c73e1f10da7889014cb2ab178514c1bd4dc810dd738a18b1f9702d61884eb030f860d8c806f58f0c8b9a2182dd8682717d69041f1a92d311defa7fc47b1d2e240e6adec8149d61059cd7fea193371c38e3f72a162a459ef0cb97e1965d5f2c2c0eaf3ccdd00605d7731c5b5680deb2fbfc09ef2a3edb81b4e463720bcb694ad2551f7bffe8e6968d81f24ca6bb4fa1b9f4a6503a46ab860b65290710cb78cbb2a20f6fbd79aa249d1aceaeec83c2e7f3600da57bb20a029a6607c538166718d2c523f61b78aec740473d064238354e0989a69db6e81f9dc7eca6237dce6f7c1b5ce6522a050afe629a7ac619bd59e9373731cc065cf0af1d268885324c3ba6be4e34f670956033cc53bfb612a67474f53bb8dad8e0655b1938d78ca7a7497f3eaac68bc561fea80c3748c85a291a679dda607c2fca2be96e7762b63b01a21eacadd88169856541cec4e27a2790de1879b80228e22b8935760072ddac52ebc7d2a468410e18cf06b630926047d7193644d171193653b571e8e6214216540fe736d01a3d53120b25ed2917ad7c2b741b6364f19aa8b2514e52c60400068154979da88a0441aac8d8491ff64169fe0eab387a212a6192359fe03619fa6a87905ab695b2f942a33e7ab6679673a2fad79ebca65c9d07ff35182543f0dd6d659e8ae6f661e5ee7dc80cfaae4afc3e949971bd4a7a2148a2e03a215dcff42a2323dd3a8d8b39024913447ef02f572f0ff8d72cf89a97e9dacaa4ddd3e2a786180b977026866d362215b7560c5ac75a83efbbed1bf658432a7a9fb0c760855f38d97952916f1b107b3315af37b8410f3866a15276b59dc3412bf21ce070ce85e0e63474e174ac35240892228d8a5941b687052a9bf13089077c22d545ff0399c69666506d212d478ae35d40f1878c7d0f5e0ce8dd7912edf4e78ee8115c36e695ea816f20cc1bba6e189c5cd320b56fbb27c0641651e093e1b46427b4601b3b151a797181f0529315788c283b0b39baaa093f24a3968534691aa599cc2d971aa043543665de7d34c5f97c0e84e7297166b28f8212c01fa2dd98290709658089af241df1a0768416e0aeaa86fa1d221c12cba332918ba0839fe374294fa3bc573dfa5dbb799435c587201fa745f5ba5035fa3de43aa9e55078a2d2ac5af444067202a2a9389b65450cb5c17a212f1c9fa4a14c18807f351a22912a0c985607a7646dd452cbd87320c20b4ed5f695521a3be471238bbb797955fc7fd2d8e722899d7247e94552c0b2d8a7f2b2b92d7b06d2f2e195b9f05a4a29929cafee3d2b4f09162aa68fbdb9a8a6c63f3ece20d47ec925c70a3bbcabb411f35ff0f8e69bfdead74031f9c8733a0e884c4bcf95a74ddc85b467e2423710a10013f546ed0a44113c924b47b34d4b9de167e4377cd4ca17615e260e5c73d462b65cd377b000b59930eb320f0c332b145ec804a44b50420235485d482848cd15def2023d03a40ac258f3a793139e13eeec6fedd7ef4a9ae2299384f975d801055b41b5cd12c4584cfcc95d6131f1198030f817dc17906193664d134f6dac1afc2df510bf972e0d974ad01df3dfc1d1003be9b1af0bee476dcf8f7610bfcdc2374db5103951f58e245859b63482d753d2816e95b1233ac92f3ab8a2481ececa1b4c9aeb61bbc6eb97a8934cad8f9fb2a2f33d8f8ab9896d959ec6d028c3c82766b1b3dc4c17b7c0d763d45abbf7313978b98811278acab9aa2d073a91d0a0a5cd9363ed6273d0cbf7015b84c19114fbb23e2c995e67379d32e408cfd45ea5d175c1d8c10a3d095a10f739eb6257180f8e8a51bf67318bb6bc824b82d731967b18a74cd97f38c27576a48d348aafa36e06fb93272db56b0fa71be3f5f195feabc469fc887bc2f62ae27c2625e905d541ef178cb92c4f701a2ffeb829660a756f3e0ac4d7eba1d6b3a386580917beed6918cf2ad2f905ef4f5d02521f78a1f18902f8c5b283a65293b21e9dd123b1ca6018dcb9c3e1e26ed5ea947c66a1c6285b64b755ea078a5ea14bdd784fa342bcd022e4dec3cf5824deb7f10af89393050b9fa439df7eac05ce067d7eefeaf61f634ef0c16a3a989ce5c6718593a3db029efa46e34f4765943486c9328bb810e659f9e6463931697327c4f38517116842f63702a6184fa964ffc5f014bf66e35be29502d91fb2be33fffbbf6b9ba95d9f13947d9e602209666e5606290d1407009721613140949889705138de2a6c6716dfa3ca622a623583569c18de25a3ae2fbe2ad864a83b37c1f8ba7131b379c6e352b792cad25fc6154c4a4e99508e69e1cb98cba9d42d146ff4924f063923b5a1e216b826dad30653fa7ecd16d68fce4361553ff63d0648dff5576c86887d16be3a516e1a9ac690750c8deba0769cc30d95e899b39a19b3b59826f6f09bc504034384f5a9b1cc05fa51cd109ff949eb0cbf57bf37109d9e8e14a3a04c4f906f64b9fd1c71d50eb46ab3fd1d4a6d8f4d380059e81af36b6f3ce8b246013748b36ccc90fa61113591e201ff753f9e5bd4c0d0d4a2ac6b1f204f72ee0cc358307fa40c359651f6b5a9fd9fc55a62464559380c2bdac74ff45dae8c22c1957e0246d68136633f415489f7c3856b5cb2f0521d42c3ac898102dbadf05c462f6e422f2a7048da94701847089122e717145017c10509197ebfbd6a6341ee2dc9ff651b149a008a4842f80f541eeea9fbca6d8aa317cee32671d7a379b8bae54e04be14c29b93b92c29c01fedf68b1b8584caf6ae46e7802b0ffcf626b3a66d4c360013022d7648d3e6b033ce8930cf23ec5c8218057bea0d163b9115034d2688655d09434cc07d10dfb9090343ae299a41ed9dccb5f01a2a868ecff81c95e5a2c166b43ba3d7d51babaecac4d4cbf87794b46903cb807d2f36bd31ca64b8effc7e736390d5e193490c848502ca471dc8db8c9bdcd9eb8284ff4d5c808d0bec256766254feaaf59fe9d13ce79baead92cbf638b476c9adacc20a562531e2fde6503c8dfac488cdb9ed0101516082b95128aaaf858f8fe03e797d2d26218c39de663f9e702016432f45f4dff0594a9f036b198cdbc70bb2cd5cbae4d54827af70a013a6b47d96fa165ddd80e6f7599dd9b46e8fc1187e0443a6bcb3aa01b03b70465e8cfba33cb42ed9cd5113375876581bcae27adee7909292947c24e1623a7814eb890f229b387b8a95fd65f020624e6b9d336f15b0944edacdfdd85221689f0ed9bb3d34671744fac0761a738a4c2ee2ec0526af41220941f4cedba4bebc9c0356053a298b7e8e1e66eef4e66d3b0637435175402c015c7a92b58aca5a8082b4ed5e5a2479cf7bbd6f7b0fcb8b7aa072bb2c44b33722a34632e73c43f07dd9034ba8746b8efbc63f0cbd82715fc7eb5b24d5b1b072b8290f7cc62ba67a5300f7a3723171e53db9a2814a1c564fa06094e1c340c221be0a9cfd46ba5aa4dd6622f47daa41fcd0be229778fca13b5dd05f1c706d20c3c1114d816e2262fe1f6498e785701f2332500b7c75917d8de7fd61e0bdd6d42a7d358484ba3db841309467c11b7fa63fa2c62cb1e432d913ba32362ef4eb249cf8d686158ed90202ac99a924e9ac4fecb0478f4ac245f0093c781aa2ee571b96991eee36365cefd6246079eb1d71f614dc87d68623316b7600f7aa632ccdda41d1cbb9315e281a7bcf4255cd0ac40e00b1fcc21b992e0fa1ded03fa93a9729d0081ac613792fd9f6882aaf23ca32fe35dba6146a7f5fae85d6b37bbef2aba4e1e4adf1a57ae2df6cbd23ec3ce1db6206029d399f8845394897c0b2c196ad9b12e6d8fe5328d654b88dc7d79da3267341ba58fe0de747f1aaccfd7c7aeeac918ced040048a584276cc8c59287a25f54c19020be032b78507d59d7b28cb6ef7edafc81968248b945a1935c62e0d66db073d562bc4ead268c801e6faac042a68ca0addf3fd5dd68f24de101dd188bfda1a1c981b2c9a2334eac949272eec6b63273b1ab9a7ee9d78e7f8880a4836ab3a0db11014fb53e35d05b8a95c7d3cbe5e7bf887691de103c2fad3c4859c37b1b89c9d7d6342acd34ca006c1b6adbe46855bac67479f41a3011ace94404860dd71bb877e077d81ca9ae49e6ce1faebe36b11c851443bc5112e651c284f6f555cf54c269107b9363ebba789d28862261c8971c6cca6460c9e8aa9035eac280cbe755d2c099cedf83d4fd68e5e5ce6372a9d69eee22d7fd0b516f36231146ac08b947692827b8003752774a84bd6765f00855ae78e0871a1fac25608e72b40e0ed04a031be2918acf2800e4c88fd13c8bdd5e0cc9cb9535a4c8580b7c7e2628f9833ae84d4268f8ce8031d200832bf2a8878c563c22eb4e1b1a9c0b625e01aef3d94e1dc152bbd82e8b53256890d1d5ae0caf9f6f319f343b8c77adf52f2bc0521c80b5e31bf138bd96f38de1845c71f29db393bd11beef22d1de08d857f366200a024b92297116403aaa01a6f89eb8f17b620dadb51bd9d3b122b490a1d63eabe32f7e6858744ee028688578a43bee318fda7d67da96463e059e8ea684666875ab2b019ac55445bd1fec169085036087c1f581f70fb6fe156671c98188d9f50981668a9c0e842974e1f97e044ee16acc56e1f926371e9e54a9b2342e78e77838bf2218946e1fa0775d48ea8f8af991c422af11b31de11e00148cf9b165de8405c318d7da01d2c4cfa04408ca898ead0ea1497ec1de881a4b6a7c92f475940a70102d2cf3d7e69abd9afeaa0c3556a1831d6293b206971c65e9864ce0dab030d8ee61c5739005da0a5fb6f7973d34a9eef8a036cb99119952008b5ff41926f38f2a29b7ea20885125d4f452032fe73ee81cd328fe49fa737cf4721f0eba554498c824f65ad413d09c6da951018989bee53a81b30324e309ef765a214be7cf50df6dd360ffd118352aacff9dd0ff43dc99ea903814588d3d801b28b4dd2c427d89cf9c4ea66cf01e8d13a8f56dab4889baebe371fc96b330c75174fa649013066e693e729086bec35671c54cbd3bb8b41269f3966c5917c7538503da1dc48674d3b343d91f7baaa8a4a4c0d4864bbdd8b1f2cfbacf8954773d71993efe4a3ec7831314b4f6461d446924373f2ce0ddacdef5044e89d516632508bd74cf781f4ba28a224d4058ccec2b4f08bd72b6953aae25458b0dde97e5ef16533d988b9b6536876925baf906646f6b2bd02e33c5ac0780fa1e4fbe2bdf315290be470861bc6563a61fa98fc0e80e4b1f0ce8fe374f7e673a311d70f5bdedb866e8927a0bd55699b97608c5b7134b34aa4c9644f2810874c15dfdad28b437f8cdfa137eff102c8015e86cc8edc76a8f4aa80e660522c01ab204be3666d63bae664a9fe5e050b4c26d6e1d670d6cf62f7c9956beabbcc8d94122c4bc01073a7de588c601231a2ecb764980c82a0a221145f244c0fbbaf41141ef929cc6307c4a8e6f8be76eb41b9e6f1952d8e1aa3c4fed68956fa0f8556b7fdbad8146ad5008bf5b4b944f3db1ce3aa7f7db1b0895274280ed05aa8c6d674383127f49f312107639a9d9ca7b62f44e4f93991a83b9d56c2595bcea455d20b29d7ecefedb946c0b692f191b7eeaa42ad511ed769c919cc98b3cfd73d8badea14e567ed6223220763c9f3c8b27e71f6649dadc88b91979d72be0de0dceab4e3820e8f3a6f5babf304987ed726862055ce0f0949be52bdbf00879b110283514ed02493ac51a913410c205fcc011516fcf162879b44efa3f3a90696c7f3b190cb5399069b76380fead5d52fe035b1eebc7004c7f0ed1a8f5ed998c7ba6b4223cd0048d285eb8cb4dd1732c575493b28dc6848d1582fa1351f531ac0369b4150889ee1caa2c1fd857807a6922c407e8f0c9b40b3438a1e2cffc288ea3756178206eb7cb5758017861645ed81b0cc1959affbe3b37816014bb3bcbb0e6ef47b18a5dc1ec657fb58ba7273022a79447ed0a3b546048baaa3545e9f37070556cb6f58c91284dc3c22aed677e93b70449027f463b3c03009b6f5ad8fe7b3c97078ac390403e59cec6fd9457f5d4d1672c403d365634a65cf1666f09db9b332a42944c52c62cf4959627b2f52edf0f6f8e97ac9d958263fea5bcc9220e317ea6d22d3995a7b7c76f989147bf2bb5ca6c12fab91d392cb1b882f221b52857b2d72d8a842e7edbc9eab7a0d9b97e299bb0d98210883876c860f2b6a5bc1d3c5955cda0a0a0dae0db553b034759b3537441111da19770bc1dd0dd65e0362e68d4d6ec3c66e3a8e8f9ed46022e11371dc9a66acbe53053854cd6f0467fa71dc9c717595c44fef18fc06efbc1a68747d63b26a662f1ec0eb2f9bd8caaa470ab0f594905971b401ecb1aceab3569bb513e3bca6183159e1b239ff53291abfb3926215f89cdf57e162bf13f2d2e3913b02f0056175d775f0b7e66a2a180006db11304430895c7224fd0c84a0ce58ed34b94f47e952dba3af4cda27f6bea9048c82b1b29384f75ca4d0a8794b4c79d5f45cbe574e2343fe74cde30b5b4dd87174a547d2582f30eeb2f978f7d8870e3feebfd34cc075448aa815dd249a650ecf1d0b0578a0518253e4a46e165a42d758676eb70089acc57b53fb87146c4b0dc1c21d46ec4c52012f37423cdc808e7808db1ed409723604ea1db7c1682a5d421606cca9ff37faed51207e5774ab238491b006e9c426e104864d46cd3b2395156f7e8f0a8c83ee68658e462e39dabaed94b8384cf1c22a52543a0cd66269071a3bb55a20999da0851451d196b4cbad290a4b7f853c2d80ec896008f91711c81a2622bf7c7b75d56e096629e2c977e7ded77c7f0a1eb05568491021060c39dd1c172b6295d99ac8a6b6e7d4fae8fb211961f5f29319e3dada9972a6d21ae07b3c555b5769b8d830ebd62ab22fff1e222ad692b069fc701fc23aa260f9b08be38aeca4644290ef2e10fd26c643c80f2a432e4930c8ab891dcd2450f722fbd05233b1fb52a9ea7f8f0bbb1ab51bcc6e51d06a83020e8ef20248bc4460e6bbd4f28911bf010fc4a3e91075b114db9d9656cc84e4eb2a16f5ea57c26a5888368bf4c47067c17c5c028c23aa1ff573cb8b42509608ecc02ecf819abf16c3e41b2432132ded66a99e7df245f1ea6bd989f088f9bdbcb612f00f6631e11db91d1e4399f211c3e78d260b81d8333b77971cceea72b4ee03d8e982b62f802d376c9591ab1d50ff69cdef2f0b76c69fedd2e12c269f77293d326f0069e0caae0fdd3626eb2ede418b7d5e1204c61f7acc5aafd52feb87cd7905c23aeb880b8c72148846a6b09a1b6c68ef520f23ab232beb7f0b37b1320529bc8ad15a37b58b527ad06814ef87ea1faaec9f9186c2171428bd8cb28483626cc35e69e24b99ed9404f8370f6dc5ee21082709c4767600d5539dea9da4d7a87ce918aa11157b2b2c56d55f3c6e33ec6ba6931dfd58a766a25fcbe358bdce17ea5738987264ac02867e61314250a0a2a3f1d29ddc98950d6c318ae78d97de303bb22ae670ac1d59253bb30e568afadc7a1391632054d7fe02ea66317a07b22b871971c4b0ef5355889a76cc8babab715549f7219fc42406f3ce6c3770477e01c82b182571b7803f4d3c31eacebe5fcab1d3ac9f48be24995c0fbd2d26445829ed6712107ea1a0dcd21915f3319458bc09cef48ae31b131f4efdf8872bd784c9db9b3856f37f39a90e9a8fa586aa888ddc1ce2232dfcee873a3ab9aa2edb96000c9f1fb0978791c80ce36b31cc2f7ec3aab0695f0389b993c5b1c649186e58f14a20b087c39c462b144fb470847091b244d7d937365f4bacdeb6bdefdd57a8ff0cc7b51e7208c4e8a1696a0433876ba4ef2a3f70594b1fe5fba05c5e2ec72be1635b2d242606a846409cf5902a11bc2951b466dfc56c6cf981ee8947ba11e12307936fde0c88cfdd4c371fb03c50b0b10df29544540dbc63664a8c4e229f48ac5b554ebae9690b51708d827c5f6687a06ec6bdc65bfc7382cc1153282e36ed3721179f177dcaa677bd4e0904d4a8d705d18d691ca5ddf9891b31217638e63a4cf30d4c3ca4957a103f8e504ff415c2c4f87406fb7ca230bb5c46eff6a8f3411b9dfcb6353f594b8f0ed62acacb23eb446c42286b882f63a9a0ca8c0c28cabb888fabf89a04b0d57278ef2ab1d5545d8c9d2b6765609a98dbde2058b5ab10f9f3c61d1e3f8fe027b15c87b3128151ae60c8fa7d49b36c223c2565016153b1dc4668d3ce5596839ee2dfa551e8a62259d1a9d600f64f1537e290a210019b4ccf8608fad833a714717370fd24b0ff26b4b615312af2846c1b875b9c52189db964fe7f517fdb9af2b23046534fac37d91cd94e882e98048dd5c75c32d75c8f8df26611c4f4287eb8e70913cdac50396a69ee05307aecc6a5694b5a0ba9fdb25b786e5156e0b9eadb7c5d67325af59b9e12a51d7bd9d19301a459112d3d814810b409a48535b519f9ca0a4c6ccdce915eacec471293c7dddba6b9b6b630b3edb82b5ed0b9c02117c91186e6621e4a4ac012156c45fdd7f8e906327d6694951763660b68ee7a046f600bb14c27a708e69d3ea5698fb097d593f55a4c4d4f12c5f09e981d120706d76b631baa2433cd7a3f6102f3bf419a6fd28a88fde55324a0db6dc0349276df6fd40183aec4c85ff64bbf1b943967d9f95264cde87ff6c888b3f7277cc6efa3c5d634ae2dca4e3d5d613083a9c75918e0aa11bd24ca46f50ce4ebe1ba8f494f572213f3c66ba2a71269f5bddbb15d1289d6e2461571afac36237aa6d4d5073cfce6dd238005dc2a440fb2050e5d64e473a471266926aa8f9e644d579e3e3e492acf680fb79fcdb81408b195311e30e839a53c598f7ba3397a8c23d3a5e2e622f427a598b824f09df34eebc18975f9da32b60c62cb47c5b82bc45555e130520a99915ba84f80f0ed6173aad36dbf7cc8158b5d8478b05bbc95d51a844dc23305a970b904761293261d9509bd31aeae0826f59983db7c9341e10b597865727193a286024e0b6ea788132f99db5a23ee4bf455cd9467db849f23d6f57ae28d36e3c5a8e70bbf944c6a8c580a0cc94b1caacad2e1764bf0943567193670425359489ccb513b8826ee7cb97c0f38ed75a88dde15ea44a11386d30ac37938e6d17051adffba5aa1bcc6b0d7b81904ccf923f9674fe58cfdf50aaca8c46d8149f239b0ce7550402fe5adc2837b51029be31cf303d9954163df25bcf8e47ef4ddea055609ab3da1c23b01972736679540633ff020d9eb875dddec1b98cf19e849b8a54bae876aaab7f2049c865ddbf07057beeba602d046db8743b07b987767aa7bb8b546fbfc9b4b8d8590aa959eaef27abfb3169b72e93fb484bdd6c5af8520fb1910bb924555bb068dc1bbfa64adb95c763ba7a21b4eae142d62544f19363cda7f2bc3e84a000240e7f0d371e4c3c1e39c2a81844350d9f245ebc8fa37823d481f1c00f9bd9099c1ab669390251c8d18d4a73172f73e96bf8e913836a731625e8838d2d498b4dc234fd23ca2bd32119f86580607350e3c6465b3fbdad64e90b5198f097625594d2ec12c28e671f7f5fed97c7d5d82b0cb38c40e7dfa786408dcebfd8d1991ea21f910159516b1eefe96c2eabdded7c1742f3bf70417c21db75117b846c4d3b50bb9714dc52234c270cbf044370b42b0425113ab0ed5ff9fd9567bcf4ee739ef1a05fc0a61757f87d8f31ef249cfa6b44beab59f200e8e40512e5645263bc7bd0a7e54ed2d027d0aeb65de0695d2135457904be6d04dda31419ea2e78dc1cab28a1c335ad2edb7d6a8953702cc11d8f282678a86958ac131c9358433ce573401a4c490ef0b0ef7070491b43591e73555bdb94e9626379acf0a115d37926d978cfe835c702788794ebbdb95c00e257b0b80db9fdd0e439e93642dcacb900e32b73efabae1a44b66969d45adbfb07e9acc5f2e785b005abc7f120a2bcffa017e58cf16f2edeb061235345d022a078c36551428859ef3c624a01fcba14f8d13f1780a0ebc670a102de2ec98b72237ee47d20423131ec988ec8eea5749b562f2a5cd154c526e47e5a468cfef69d4567d52aa4c9cd5d48f91e32c2156042e3ccdb4045fd7f4877f69eb87da4cb01bfd6ff06f7e09416972ce7a55958325d17691d5cdb5419375efa9b51fede4f4a9caeeb0600dfd10f91415e1ea5b67a9b8f71130081acb14caeb5fe87ce7d8cf443c303dd4d6d8b8bd60daea18060f0dc546722629e1eec7fff973b7cf7049bcd1bf785384b9f9f9b968e6b14e747006b15e029146b7b1cfbd68bdffc9c2a751b8df213267ff696c35b7c9ac90905a590dbceb505f5b079e792b28db7beac6edfca4560c763ddb55fb78924b3057f1054594d1befa666f7a7f80df642608f3c3dc0a2f7f628339304c6b478e420f3e8a21a9eb096affa07c3f8b0b82c5d55763ff3ee835cde390454bde27c7fb62a5ebac97108a80e972b8e3bc549828de022dd9af6795c4041b25c6c45b88f0cdf34d78d6e1a6c5630b5dd9cdabbf8fde268067e29a4e6060376b30613398dcf60c49ba2c9e7587a22f4a7f866b23f38c882edf01c961e8df9c4aad2ddad7846411bfaad71ca10ea133e43b998de136c8a1a4d11e75669a321469b94b376bf582586d5ff61a1b481fa841d200b6be8ca32c82ad29ac810342794993dcc618f162d45c71ff00c8f0d875f0e94fb21400eaf608c8a6f9a74a5e61ce0a031780555d74baab1eaf848df8007db5cd916fe32a3e2b13fd997624dc297b142df88867b8ad69d573e40e5ad4bd753d7c4dad8edcd58aff918772c5562561b5b7b7376ec8c2f82d7d4a0eb31e343d5be9ed7fe8cc0bac91e5ebbeb58926fd20f98e4a37a285744dc6d7f26d1d1c36491255ae873229b3b5de85ef99c9b4ccb99095974187fcfaf647f3362dab6041dfbc7bbc37aef92ac6769df36a5788a30c86e4cc2320c657904bd68b47a95a0866022c35ee8d83531f67fd152a7d40eb655f3101ca4861217a8c70c3880188882b06bb4a1449f0604019debcf94af9e45d57e518dc04867337bdd369affc11ca748885deafe888f684df63a4957b76a7c81534a54b64f21fb8229724a4a9514333211069997c68eb65b4f8b209be1141a2d61892d134b339d6bed68b045ec4f09cb8a23abec96c6f95723a8be663ce1af58a754fd0c81e9e7e4368299c93429f9f1137e38b82e6379e5e9bb8a835368a420bf9098b3fbb81505972bdfeb2fd509664148efdea70dd111691bdaaf1876603999a08ef193be9488a2e083e11c1003ed9025e3c4665f70665d35faf4353e32a5bb4489eae1e619566bf1b45d98104ccdacdc7fd53f0513a0f367f95e5cc4c2d8963a9a32472e0333f69c8f8773a8c52b3727112acb93ef34a96fd9ef4d0551af6868e23e51fb99bb99de1f0980807610e90f597dc9b7052d470fdd51795d114efa071437299db00b2ca1d4ea5447e5b9bde2206f58adfbe756ff26d5548efaa4c1845366f897f341a7596e4523264994bd049377f643eb6fc6d5e9034ee06dac675114fe3723aa025fb4d79861da5b7ec969b9fa1c198d09e3d1a569dc0b4df3716dfced577c0a814bb108bbac7af621df0915dc1b80ca258e5b42deb02ed480d475c41956d5941e560be9fe82b2aabe3a71f6ef342047d1f31a4c394fc41899591201616d982385f2a2f67f09f8ffdcf16dc53ef008096f90f9a33fede3df531074b3a4c60be7ab143bbff45c1a2c3d4747888f06823927c4a8e585088685287beeb1ef79ac81227e678d7f0abfad95cfbb6c25c445b4ac93c0540e38d2bc9e9e270442d05712bc3f56390e2b51281cc55b3c5fb9b73f08254ae739ab4e81ff029b3c1044ee08147cced1a99d70711b1d191d09e91420a7e533de5455a8b208b51f537605c8ca682c3eb67fcbf8b66e5590d98c4b241ac05c9a1b7d6188d9ac78f8c16ff93f326257a707f57202ba62d50b09fbeb25ba78d925c2d4c21b4103d0cf4c197ee33aba6df3fd1f4e65e9519c2839bf290737eeee288304e72ba2b62c9274250c61630dc2e0d97c4e3b3489df5d7694f313418c85c2b1adb4dbcb85e64be83fd1b6c43ec4dbe63dfb1210dc8cc195c3a1120ccfc1bd645dbfe728ac7e8b975d8daabb144e086d564d804ecdc63abd3086c95e456e180c8893c0111ffe5dd1911cdb46ad2f51be17e23db10ff5d73884d72bf96adb918d0ffd8e966dcc59495b999bb7aad56625ce5d9b4efc43d52d4e503d4c05fe3d0d619bceea73ef1f43059000ae7a6d7390c1d425d3287c882bc6cfdab020299873bc1264c8f2398b92513664a17ed13828ec9edfb55c9b853bb900f89ba943d22ed8663c04b0bdfe86c4672ae53bde801728d6b442d775d701a5cc4cb7b200dc98652e69b7ae52b86f8bef09a88526ca2c8d511acae7d155242c39619761d9cfc78284aafe1ea1d1fc98321d8ea3283972239edc2505d1c1359774c5f09753ae510bcc795a05ef5221b8bbb517a8f72cb832b4137ffe0de25f79e70abc098e6de25bed166ddf8422e6fe98cc669887dd521401b91737d1f3b71ca817cfb3935f1a0bf48670f09e11241692cc6764f92a66432585c38d8ab92a3546ff38a0a210225cd74302449129c7b5d6c47915318c1de54f5ce00812b70a2a30692097ff0300e3d31d88a7c0c6757cea5b8c49a87ead26b1c18bb4e86b187ed7c726659a374dc7342ee81b66a9e15dae2cf0e9854043ac64eaca2253ca1d2282fbdcd8d3c78a427462e20d56a92e18975e3a27f126f41e75d4c1cfce633b882cb241a0ffe3415d50698ad2e9c69b9a458b03bd3e0ecd58c35894d0e230e8c2cf485481e7f5931fae5952c7d3ba482e856463e27e3c15df705524f9cf9f571d2c31f75bd290ac46a99d13b940f34551a00d10bb4826eda820b49bf30879cbe29bd243812267904865187967b0eaaf4561167b981fd4c4e60809e0917fbeb189c7a81bd8fe044585a19489fe9e97ebb9ed9ce4953100a8a4986514d67f17c50206be329622fd4cda4a519c25706c552efb778df0cc7a5a39b1ecefae0020828b43e77b49f6b155107a17f158994bac3b1f3aad07273d69bd161f8aa963bf47e723542c282c953c97c5f0f381f49677d8a95d42e36093c1f8fb27d0ee18b5aff52f8e44dbadfee0ffc4ba3da9e8518f562fcb4d177a2b89ea76113a1b7b0f158b7dec4f920a34f5a96920966c3ff2b81a78e74d961d4cea4ca4354f0490b4c3c7b420dfdcdc257cfa7ab62d6824e351124a6431d519fed82d73b8a80336163944ea3d51bbb56dabf2d3551b7087ca2ba6e51adefb32152b2a8f04e49784df8f3ea0920a95a54227848adaa48cc91e93d7e67a62aa1260f29871c12cfaaed65942e84894cecd1340f6b5b6a13ca07d5cc685240ca95b7fed378920cb8e2ac33d98b1ba880fb5d62b2c4e1315b1c9c59087df3d7179e76687c96e8e54fbe2fa0c119c6ba5d1c1bfa8beb56ba1244ff5c00df35718d1eecf5a6c85a63a4cf5e06e75ed19fb423ea727567c7005ff57a8fe16d50abb722719519945f582340d25e5b3fd596280480d6ec4d26bd4eb43f27bf95a738dabadb1d71b1af73cb8b321af49024e27ca6edd7d4765af0c0d26b7fd24d6aa27ee109f13aad7ea3baf07124bd7c800f8923317c9d1cc4dbdcb3ed76721b9cc97986cd562da85c1534b936d389d266b9f406bb3c6daa2f56b0541ebe67a1050b5392231420c5e802156de3f86243b8ddd1372892c39767f50bcb55358089e1cf5ffbbd412966d452b6ddb2c2ae2db7deb11e4a5a70f7adc9bc4b11b2043b386548defc14940a44482a8f98c0ed3083fc22f3aecf047fc289551a5d33f2cda6037f4a977410ab2bb225447bda19cd0c862d17e7c9a97beced52e10795ff159233c44f3644e81538bcf19faa4adf1f7f18ae457c48ae0944ed69683a96581003f3472d95e6d2cbbec27157ff7c6334fd1278369499077ec4219a6922e14873d4601eae2562792d4439b4c55940059ef848335ddf7aadfe7888a965c0d22a225a0fbfd6195012e4473af285d55284926cefe1299797d7bc720bd48085a59fbdae36c8af2e76ae4377f595a1d6e7b9436c98a08c4ef73bc3de4f11416c56d3a4711ab2beefacf9977e5fdb094c411af19da521acf0b4dc6336d92b9d90aaa032c4ebbaaa752557b5483ad07ac92484fe496f23af1e5972cb3e12bf604823af5aa52aa2f2ba923a952288d9f8d05f82293c6be78c9d64a3d5f8ef4f27bc0128f7cf430609ff9b22aae292f0bdb9838b6b98058d0f6f0d378d4d1d13a152ebada96861569b6d5a3775762b5fc79d485833c4abe0d7b52701912857df5188df6f8c73bd6f5a48669e5745b2f5710bcf1048caaa8b9186f3ff61ab31677ba91b190a574244a06fb945590097d797728393a10eef51694c41deb0b29822c93cec0d5512f617692118454f1a7d0a3c1396d0e3bd1af31c07a8cecb44879d2d8f8053b2c59642332926ebaf9e7d65bdbd09e8dc91eff9c30e157e0fb9d21e66877304bf0e3d6906cd3280342f12615ad2112081312d75894927b7e957fb8d78107ba0a439c0d69a9863ca3168064785102f93b0f4e7c51e80a4852ab84ab2f4d99aa8937765214ed2b5132656a84129949d836af6a9e9eb5bc5ef6fe78fc2002a0dbd4201aaa7bf57afd8a017e47c3211d93534dfd5358506d773b675c5d5ea997450bc86b3e62ed82cf494cb9a51bd7bd9e6ff7e5909f5ef230486f173d549f39d6d26d624984b2e2471d83884f91bdc65148a70ea27399811a9cbbfa8b8847e9ebbe447eb79afdc9bb721a582d5e7db29d45f46358d528574028b31c55b381bd0e2557c0edc1cb9a9090b72686f3eff636028b1fedbc96e3a58fb3349972566af548d1952b5eb01bbfd6f94529c93ea6af8283707bd41fef0c930b97adf9fe0fdeb0eba6911d9dc24566d96e2b5fcfef46eb6e005b38733492820fdb27462cf87cea8457a5286054bde212164dc93a57fdcd5922c2f8bd53f83a0ae3412d80d75c57d54cbffbd903f2ff9aa8c783ac33b4c985fd4539e8d93d8189bee3062b9f9735a1b011e12d946906041d587f8a407a9632d0a265f118dea16ba0f232c50fb552e33a9f705b4af4ce72c8fa27939f4febd3371f2a135088e8db4633d44437b2e79ab3b26808e6ed8d260a874aff377317f9056c55726fc8800aa54bba6fb9a27f0b512be0793707ef794725c6d6bd1375feb202abc5074dadff2544521051cd26209794db7ea44ae075c722ca044fb9f0db8409b2d5a464bb5df0e74a395801ce9025e43badbac63167056fa1784b9173e92c1bb124513d81c72213ddf9cb58947ef002162c76a756aa5813134b86f76bd319539c5852b29266218744e643323c6255ba030c3c57fcd4bd68ef8cf24675e6d98bb09850c225639c2e573350bc6b781beb2f3ebb5a0d6b93531fae671d27ef668ba99904e95dcbe0d0ad5d79b73f6d5dfe389f37494a3e8573eac6ae5a0cdd2465513448fa59a053016347c9a25923f84b4b604254d6644ed7ca82ca722c3bca1849817e565535a84dbdbb7aa3b252d7ee7a121dccd3722a90d64f5746f11f17e8effb3a908347788660c15850bdc000890d28cd2862906982279d4b7bd35e9723c55c8da9f8459014758a190b787e3493e03734054f6784f44afa5fd436c75ad9f69a052d6a559f0b4b5646960110d81646e6276ba0922f70c7dcd39772f9509b534320402f938daf814ab35398626dc027b0ab5138137fd5c2f0d9cb0e23c7bb98ad1ae6c1fd220a19264b1dd96ce2df27aab6fd75d388518051bb1bf2a12014a8661fea4d449232dd92af55e785a729e25a8e7376fbdcca369c8f0dcd892c30dd524f280b02d67b22b8e9a1406255d1b9c5e609ffaedab2965196fd90150765abbfcaecd064bd22737a022fd3c4a324bad0cfb1ee4b2abdaed01df538f98a66cb1092a7749c8b10d86a0ebdd79ab0611a2d7569cea1cf9df7aadee478798480a032ed0fd0895a4e81c8b9f3a879e4fa4099797c280c9186c9fb8fd278f489e05d53682086abeaadd02ab826d1c020b613842032a6e395c86e9dd8a7272a56a12b544b2561e5bbe3df91a2a3a606d6814a4cd7badea0d3da94e8afb0d74dfabd586cf2c0fb57785bc4d5d3d7c499f4158c907b58575091bb67da913a33a80a1c5d4a2b9a911ca42e33d751b694b5164e2f2d8abe08e2843fc44063db5a6786a18ba95e8db109df1dc9c9431e8e103e45c4cc4450a5f853656ad8b28c89b4a6c318c0c90fadc3ac6a64a2b9f7934a6ec5d8b86916c4f0774305e4d1333fcc17d3d35d7d0822da4ee1189d0026312faf5ff7e246eaf538b7572b9d3e6c730c4c5bc647b01feee66bc59c026bdb7ce7b56648890c1cf78684877d76fbdb0d49245997e7fb11700135290fd9e87fbe0d47dbf7d0e00060f359565200ec71643d6b344d5afc1e9c811605425d63606229f647688f55aa4f0613a1c72712d77c019d77fd020fb453b5c3a9e57f1985e4507f18fb4c290f443fa9d79e4cd0c7069cb5fe413e8b58bf9e935165b09faa4bf1ac28923f742c524fc7f72a1d777a0d5a40555b5e9a10086d1388fa07069d72652588299367b17c1c2fef21cd70b48aeeed992126b5f929d9bcd62d49d031c10ed12368c0ec98d01793f7541b90ab3312051c73cff33855e15fbce0167a0d084a35312a44c1a05a606f55ac0d4efcd0e783203f72a10b497688afed9c5125a9579a09996a3def54ea2ae224d77c1d524cfdc7a7139db9edd231dd8fd3a341068dbbcd247c0d7a44ff6724fec7340682b1ddd48d4d152699536b839debe5795970fbc8696f59b47ae091284e189108f4f0c6b690a0a154ff36b1a1016c933b1d7e1784f92f5c120cbdecba94902e4e3a6b441d0adc477d30cb61da3f5fa80a9d3f1e6d7c157da95826faee735220bd10bca65f14aaa269d1bcd3648f0e8b83befe8f66bf4e4940d25b868769184951484a593e1ddbfcb9532763c458b296232f97b530cf84ed0ed8e01e6700bc6ff357b5c3cc193fc510c2c712044793ea53108c3ad90e558259ec75175b0630ee9a7e508ca4c3dbeb11baaacdbb7a69161ee229b8859ace3768f8198eff262f874854cecc8ec5646d5bf16746ed0002b57af9cec8af039205c400344ba56f531b78f244af43ab1af4f528b0fb9766ae441406ec8ad49265277a1786475cc4a75f6c00b515ccfd6276d4e69340c38c6f07117e6264b3633c17242096d91ff6ca427fe854fa8f2e52b88e3ed0250faed57dd67c89c49630edbe44e37ae27e109aa3a5c985fc9149786f38a28379d4758685643b7734f8fe0c29b604024ac39d868bf16dd9398fce69d4b6400e1b3e0db93097e9b70b342c05e1852c33e5273bf4b75156848d4a8d3bfba63cca23d04ef23bd3049472fed1a14038b91635d286da63d08778332ec7f9bfb9c6b74cc32bfff57b964ecc51e2b70b38188b8030496288b022eab96ae276bcd93bb319630dc695edf4e753dcfd351aca172724aafd4295f286b5c4ea7a716b0c619e0ecfc8837e2c7fd4fd05258678fdd0942e6d34c1ffeb5d1329c8fcf7347e10e3f15d9ffbd3c727c3ee291e984007f5eb7154bcafd472b01d7efb0503a8b3b08f014990471272b425d43b00fee6f87c1944d9924e6235257853b31be97fc2459871ae9db94c02d067e107b13b698cd732b1d58a82846b6721d1e71ce550964a1a2a0c1d9bbda958e8ec83d84fda9cbf1c2cbbfa5f1ee143566b7a08d1a9888c8050deeb4a796e53539af9f80008f4951c615cd30e33d0d027ac5d686321e6612329d798d2ec8bdd525b98c0b5f2639d9c946d960cc0503affd79bbddc9b341d4051b98df4ec6a8c8cedb70ab3d2e6dcf601f6bd4d16067e09ba22fbed0fbe44b2d4a6fc597524f126f1d26938c624bf1595df70f3782e4fb753690b33e96a8af220128233a0de2b078aa26c13a1ee6fba12a177f3ada0e5a4a4436fa28508fe3aa5d06b1f1038892529128f12a5cfd75ca09f9733864bf497d51a521f3599a37b778dad8934b425a7c8661aef974c5b7c2ef6304bb871f5ea93caa9442e9e18b93000d0f775f840f8bc774bda0f2135da13ed816794567892e1131c783a16204f9ad69989ba40797864359ac856bc215340e13c0c0eb1effcefbfd8b7a20d80ea281bd126b88e189417309225bacd8f2a38bf6ee7016b21bd0819f86ae20a308317ec6791a9d79993d0fd925c4630555a64070aa3f9ef34f9e9d07479c4da82a3b6189d3d9937cabf5a4eceb3dd8c39cd1bd74fa7f57685507eb0bb136c1ee158cdfb6688d5c60f9679c66e7d45a809765b4228f7d1b3a886f3c21f26268c200ef02f240cc18f63d667505dce44c94bdb46e15f3441ddd22b0a76f655dec395ddec9e58ba4126209f99b573460a725d3c378a20e16407a7379f0b4e885d08670cfcfb41bb335d97707c40786c569cf5d4f71bc40e60737dba4034a16513b9615cc0e135ffbec68c17d8499e51e8f3681504b8d0023e3125ebc7f23c23097d47b68fa337a9ed09d8402c369c07e9579752b9aa20361e3c9902c5a73a290c352746b9eec2fd91429acdcc669b49bfe7e6c863c46f0f7d1d246001ad14c4d7fc8fcee484a1459552cc6d7d16e0c9d9df543d08e1fb255ca9b1aea72f52e7d481eb41b439ba5fc59d5a05f06998b48f21f2f4febf29a2ab68c92383c6fe7a4a2550ff8e77220bf36eeee6314a63d7f51d01b3ee139e932f7b12e7b223e83166908d239a827432d397fc40eb9beca3302161c738aa53bc5477886da02f94efd9c45a7e245987f5c596308c1b3aa8a6d15a9be53b1312e7c785ec168b1261f5ab84fdf1bb4ee9f0a376598380c03569153a73348b040fe3306afc8bb2692be42612b7be36f3db47a43259b5778a2f058386973987c4ac6a271df6e164c1080765925890e5f5ee4375ea9524d6a046017a56b0939dee44cbded7e4e7e33af5ea2ddfc473fae3292433d0f8de71b6d542bdbfd8498ccbb5df815ed84962efe61e0ba94d62fd65e6c3e61d13ea16a473828c691359893a416f7daac741aabd5dd1c75ae55a1604970b0ad78064df006e607b2d022cdaeddd434e373941ea0e0674a7d78798f2539b8e87dbe0e0439d4dfb98ac75e3e1c387b54ef91987347e0f632b34006739a37e0ff0018cecf35d332731ce6035925ccd124df3e0b95e2106a1569132d993f7015e99aafe0ab606a126bc13667e35f7680b5053cfd319c5d3689051df249d83abec21f5dae8e79083c5cc981db772eff1384bbdd4d8a0988a51c75d3f2f9a9cf6c3ea880154abe3c7eceafca53ba466307ea0d687dc33c13f961e75ede90c8ce9989dd2cb674b01b08ebad5400e233dc4cb5424035f5d8037f0559046aa3ae4d9694c804b43f55845924e8247528841fc332390e59f0620548e51d513d9ee98e7c4864c1c0b6f2c9af17bfbf3072bc1b917659f5e9e040df2896a12d9e7de1a31561e4808c40d458247e46d56ab374bdcfe201a6010d8b726c9678a6c5bf4c1f7f933fda23c5bc778f9af2a8b93964895e53b58c8c47d2194006f726d684bb2c318aa5bf31796bfb9edf99e4ce5bb0eaa3d9b642a650be63adbd3cfe3da88ce22ee665e07003cc8da243fbb1879ddaaa08790f5b321516717190e85314ac77f1b5b918016545a2f4bfc7b92c966168264fc8525f18d98a513b9726e0b376da39ef90c6d1ee79d531b1210c631246a266db10a290310f7d997bae47d0d7bf93bf464fcadc1af14512aab890cf9157aa486ba2824cd0a70f1dc8b3035b75fa503ce2aedc943da4d4b600f7bf0e7706c1dbac791d48547a89ef71849c94982dd3c608cb87fff734bd977c228425d16073b5a57ee0fd0fba5d09c363f94b3cb41437f1c36616a02c5469170f65d0c1eec67ecde226c8883ea62f01bcb94c67d5c4ebca0cfe657252ed9e90b111bb3adb867d764ddb4625e38796676050b8d896e1004d99091acc126c2ff7880091e1105731d224ca6d9f7d045ac349cd20b8d0e27c72389b7542e5e48d3c03edca30ac1f6ca39dba3d22a3a3e0493ad497596cf0043cb9fa8cedfdfc929355f83ffd8b33561f41de3277b6d405dc297f01578dc9b155366d75516dc0ed80a3645c2ef89f786f5bf9c6045653afd0b2378ef2e74e481114b96f2a04e9863382cb5068a5e66fb53902c07839342710430d4b0c9acc112878acfbd186d8581f4d21e262fc76c79b6a07c72767b71e3df8b6001855bc2239c2acdcac0e969d8a2b65a17a3ff8ad9ef5c221684b5d632180c630a8aa8edb4d774a443251a7015e520cc39ac972dcff9d42831e64d9f0fe2c7a991a8de9ddd877c103193568307ce520f773dc6d7841cf151d5dfef4f0e8db65fa56baa7b33a753cf671ba0482b0941bf727df854aef3511ff68ec5ccf411b52db32f3d1eb39a1094d0e5ec7f9e8c03ba7c526a0bd8abf260e0f0b8d48e224d7e963035eca704d2bd1f6e00d4b116dae0d7cdf87c4514c628d560517c6dcd09d830509332bfcd06c962334d237ffed3e188217d42966681d3926f1f2de9820400121235996717671d0df38ed822e3db2592d58b7850317c816f299f79a33099c62ee7a7506b71610620d5963f24ec46c5982135bba9038c58190162e93edca9ebf8432ab876cfcb605165dd786e4062616e2d513d3828ae7d9b977921beea0c274e52ba04e520bd96f803a857e1994f88a6deed88218664065953249436fcaef05ba11a65f4e3ea254a82abf9c321714bbf371ddf84092385e93a15f1d59150332d8bd72765b7b52d51b1ae76c3da06f492bf14f8cc8af49ad975e2d0e3edf762553725215a76545020ac4522da3a66a3b43d18589472756e89965d68650ac637adc9e089105ef55eb68acd0244df485aa40183ae5a5741ba384df5ca9f53269dae597af893702ebdb314a05b6e14f5d6e46ea76c96c59e7e0e9dbcac255a6dbbcdb038d2bb2ecfd267370e479232819b37d8f0521829a5561f128204f95554c307cffc4dc153f7864b02f9fd36fe6bb93227f5a4a902550fc129dc91cfbf830089e9911ee03279d28d87cd550ac6f002c53916c20bedc8a0373d500f7c88b8acf121a751eb28d82efc9bd68228861bf0c92f747d551f5881290831814a4fbaa8e756080cc580ab6dfc56c2767bc72236251e1446cb8dafe318ffd226334e4186b8dcbf13e449109c4594b6f9e3f5da5169b96f3fae256464165305e63f28496fb40d5433659283baa12c262b8df4f950487e9e330498fd6d07ec8e8ffa33460cae6e11ed3375f4ca4b8ac9dfc4a797aca66de00ca2f33d384c0793e047f1c98c722ab135529b22965b04560639dd0da8ecd59c76168e64a8643e3553cef62c9c125fb1d56303f8f3a17448a9ada21834e641ce921293f72cf761d45c5131aac103931d4c248b912d2bffd4b5567e3d9c5a7bbcf0cf50eccf871499694d48bfae5bffe94f97c5f86033f89ea05a1c430993164db69cfa6469b426b890838d59c847759cdebad176ac01d81b63b1232f624ccfad71d5ec0a111a05f907cc1721f3586a0a067b0d090a01ee3a71cafb450135c9a2b83953a8dff518b0b0e78a7b8ddfafad0878c01948eb311769a33c202889b7e1ddc423f86ef102d0f50d3d349e2bb187050372f5fbebe2b028627072ff34b8b149dc71c465981e5617a28e284460ffb8aa9ab761663dc41440d12abbd657b431df809ca3d6a6e320254ef8840142fb88d43210113b6da24b955e1ef58f2edbc906914330a555ac7e5ea2eecf33f23206b2f2f603334821c8ff37878d51c0d5600ecc437357c3582e09a7b0e91f4fb71d6f9f1b4912a19d7da67f0b420d9eac057967fba5f25bf19bb35ca804be70b3ee315b07d29707e364688b9145d6316ab57c7d4de03efdb4bc29ca1ff8c069ffe0ccaee745dafe4cc98e857e8e8eb50d6e0e4957950ba06df46e88c4155e03713d102f54619c1d917f4114d6f40995f4527b5fa6c2ef9416b0b711b61ad7398d930fde9f865e1277fa3e97079d36e930ff07482f61f68e3a4339c660b42965123bcc789e751d0f983549c79d9fa324db7ef5b93420555ce3e368e4a27ef96c5433ae53e15a17d1d64fa097d914064ddc9b6a303d50614561014a3102083ecf5dfbd0dc6225361eed6e465640b90df5f20abc090cfbcfc75f7e06fbf0408533d2701f58f2b1c6c4e751b7580de592ef63066e156795145519e9cc9adaff68c8f346365a7279429335d9cc9fe8a6c2c64068a9c7769e22240d6cd224a7f5bdd36e960cbbae41754e962b1a82d9d88b9d9819b80fc5fd44f9141065dfc241b1b023bb4fb9a84e0b868457cb1fa6782fe3593275c4a5aac6ad59be1ccce8c2a6afebb894aa56a7a2145560931ca1d40475c2130a252095eca20a972e4b556622af69faa8a592313f5213c2f549b422a0ba305f5790f7b962508c8ad40d2ba87d8fd685b4d804bf9bd9a028a069bcb3baf34b4c0bd9156b8f4a4ef09b01c402fd6f263c97f794077f4c364a36ba829bc654b9b8e694e91b7c7a198cd5e2c4964ceef71ade3dd08989dbfa82afc920601b68c165bbf7f5d891b602292d45f217bf1f807dc8c74691f840d031a89e81840c2386698c9cac71a2c24ce6208527c7074b9ed6567b476048afe27af0510c9e28574bdd6c73f6d14e0112cc001a28c5c9d3b9435d712b8a0bd5c05ecef0ff593dda9f65b88426b7fc33cc1125f1a7f4253fa4153d559b230234344b7202cf837fcc972da42bc6dbed51ce4e478149ff460e2075341f13f07d7a7960b2e556ade118d06260863a9fcac209433d5714d18430da6e8a3e05f5cda6591be8cfd24a4c47384ade0ade626cf732e312cdb4c98444c557ff203531d9109230b8563eb375074bb817c31a1d10e3b5150310d2ab86e180ef33dcb27c541787a0c134f11fac3d93266d82210f60b5d2176bb360f97230c1128a02ecfc1acf74864242aa6710fab42d68eae0c0227892c174ac6022159e582642f703a47e07d2c7d5d7a7d55fbce1076d9a46ca6f328eb551e5e043a6b36818c75d43f4c92c7d84f998147f4427e2162498d9b89e436113cc54e199db56b7d1db6470b8a4144ead069a1ae42d7723335162e27581283deaf4e4ead2d9b241d8799029eeb9a6f1c79da0b22f39dfbdbb0d98f46dabd39a009a642691e9fd20af9e4e1fab4ebf5c1aed4aa182d7d1e8fda3b43fe2ebe4b6e58fa37cd5c287c0fd22cd7b4de2dd5245cd4e5490033fb792dd281f23643f2e1539260a7a5818d8a4c01229c919f386b506aadce893c5b8646962b04945adb3592c8107324c045e99e20811ad103eea21b3293291501e37b09d367c4e125615da36fd6d208ec70b071f1a3d1afe332ec4c04257a39db4eb1c449513545406dff0a775b4290b71c57f57f548a583d68e650f45722947f760f9acf4bbbd37b38a13c72cefb3c2151a91074b43b29f929ec3f4ef8411dd574714ed11fc15b51b287df1f0fc074b0e9f834d4614313f7e73fb6c22adffce89d2e966b0d497f047db55ebfa236645451c0dae58e8dabf442de7f80d4ac97ca77e84ac73d9081cef74d69b150dd7f125fb63c33dea3bf063a9df32535c07ad8501825cf6b8d37dba1bd3b68dd858720a4914d52a512b716016e6a19ce81a98386d0f56252c12a1b796782b8350558c6e399ca1db778b75579577665259d6bdf0019f9d102fd58ed84497765b9b43dfd2bff56c2352f439c78213faa3c081fc5e1f985b5941ae4cc1fb83eb47ff5c7e689b67cfe63cfb088e98489ab7f5024250e8c2aa9be2ccd0beac2d8b64564258cde27600240241bac50acd80d2a9eb80a88459623beef4ba6fc3df19d479efdaf71fda63d7d393f9e0b280f7cb9e50e0a269e6a11d7f69f0211e1e1d261956f4111d8391e648b470e1d9815085c017eea300bf11843fa934eca29572be72c0bf661eddaf5365fefb3ff5aa7c34505be369d1cad4e4e6f4eaadb3391d887149a02ad73afff73908ba20a31178b27d22ece8a9df66a9f863ce1d230e48af884a8a8d8fa03805ad65077ae1e195a46840053eba9f0cabdb65e9da9b648fa665d8d4a2af2ad76cb59878fff198427ddfd036c8ff1de846208fa2fccb2e21336f633065b79239d88d5d446d03dba89b760eee79dd490d1ebe8d8d22046a647ce6fbbc418c2a21abd531f5b5cda02b639959dd40e6943f577cf0748b9f6200335f08c7cd362139913dc154e30c34fa3837b0691265cdbfce303df3aae1fab8efedc9cc587636c522018a7c98a95a39f4c0b283dc19845c400e04c00499fbadcfe63271126d31ddf62f6854e505ba23a1689a2613baaa5e1936819f8f7ccf071acd5c01173c9ca0bf0ca49f3269b3882381b9db0a800400d4ce78096235bec178b3257bb47adb0c90abb086b33c00e0df5ca4bc031d1b3a8598abbac9eb2754fe9d447b4ddb8f33dfaeb03fcce6366cb2275c84edee061b56f93356eaad9e9d514e18543ecb850bc543de467c53cb87fa4d78f57da739dcf78b3be8e40828825c88c28e37e2ab2c8687c7afb38681ed8b76c47313391d3ac2ffc8c8a0251ce1574099e206fbd63081adec17cc3d98305e98442d6039cbcd875426320446e1cd59052542b1a684664f8131f20d6d2fc894633a520b66eb764182dcf2cea0d0ce908b578decdebf555dccbcb69e8474ec0255583219a1ac8dbbe85a62e7abd43ef3951588d330421325931c485bbe6fd8d6f4234c667b115cc870b77ee779d43051d913fbb924ef3e5383878f3006468cca16fe7d0eb792a1bd481b9b83880f2d2bd466d3b9706a35443f5f71c3dbfc88a5f9e43bb73f872ad9a130c6c05422663207d116d75b9bd5c71a899b8fa879586f164a19114e31a97bb9bfc22a2675f8f7620a87a7bbce6b15d61da6e4327b61685ed26bee8662212b2249de66538981039fabafa94677c00a6d0eb50717fdea605820cc7d2c6975008df462277120d0795f27ebe1ca58f69fc00e7fe5fd37c7a521f2cc6ebb42bd744e19e44cc0e49011e8c635eb19e0b886d39264b5b1729ecb40ab164d67f1f2cf33770c3b9acdf72e4c9f57235af1ed22b57e4d0d157c08d2794ab42c540fef912c5034acd4dba8695ef2194d766bfe9b1e495a2f57f802429af82da562b77d2ad286e22c80e43a1d79009339d96a7c567584f0ace431d38cde3f8f4ca02285b7ec540b6c222313466306204c734a51ce896831020b55f0930033d1077681843962f74e791cc4c4a8b1d105ac571f2cd1248deb348d42f2bd5c8499a6abf96bfceb0416c20acccb4729ec28d18d19d1525f52ce9968f218f46e9e6e6863484de47b2b999d66b00f9d7ab6dead75955d401182881319511d56061101a893dde926023a8f98052fffa968b14f78a66eddee81a5041571c102058d44e0f168c1d04ac71b0f35618bf3218a6f64edf8e281e2b8aa466b85166c4d810a282a08848bf74f5028eb0039b3e491c653b290bd6a38841586a97a5c05d2f98fc836912b39a247b2d709bfa41a4fd450c06d91ca020194f0ca72c8f73f8e4f2ce4a46e416c7d63b70dd09a5149262450669be712ef8b8dfb6c54059e9bbcb2d1b0420a712d58eb0f2cd98c01205f305e065647460fdcf97c4afe328d6a4abe350d4732c4ef25a1d5399fe48ab0031bd61e3c7137cd83f41d4e7b3b8fce174f39b63bfbc0df032f71810c3d34c12dfbfafe3be8add47d83b5f5c2bd58ad16bc7cc3b6c02d7359661cd77baa5f94abc2b2ee4e6f91037387c8e6a0a357dfdc0cb50beeb2bcf66417e9d70e3bf9ab199380279e4ae6be86462ab69e5dc5b2603437ada97f3864576bae4107bc122fa728737658a45dc1300bef211846daabbbdb31166e0fd4d5c7d2dd948294224e3f3a120408c9fc0d9f0290a3222bdd032a7815520b495053c380aa915991844a2c5653290e26a2bf364d37d2be2d16de36c53dd47cf544b283716ecd0a49a3358e9942e1dff3c509705dcfb04f7d25481249cc98ec57b70a8897afdf99677e820ce96c38831359f28dcccc79367cf4b36c1848953a000412d978bc8f394c5e00487d5dd7bedf103decee039db2cf2be4201b1c96cbd9e4d47fc4c88463f70beb1036e0fbeb4c4097e36ee341fbb1ddb26d3ceb61f3078d735fe4afa0292f76d1fa4076129ac494cd82ca4aa750f40960b55b6dee304496c04a2f0b019e689ece22a155d1297273ee495bbb29926f00da4730e30bf0bcb66326c58cdc72b4fb1b6bb47718c2362bb059a0e4c4d9636e3dd12f1dfd4e1958b7d688d8726aa3098e6a9081384ef4500b38034b05570d85b1cfcb44d58dd69c349d6f2b42bf7c60f8d6ffe2f66a99ff9e088b441d7595e7d4e34bf5be9f6ef70fd0293fcebe3c5c8741a998c363421ff9734f76b7e37118e88e433f8f8fb6484e0371dc086621288d4a6888cc005c671e10fbdda58395f5d3e6c5e110f6d9f07b4b1be26124bbce10e508a1507d0c69695c455dfd25ad074b8da51718ee79955ef867df79d51516983598218df9d19a555b302be8fd3856456fd2cacaff4aa7e180e2667304357b28d85fdd06cae29f395feab465df93791981bc13fbb224b495eb506b44259feb9a5603b9a53910a562821b86b0f1408c0f767b90ecd2d2f9d1abad9769e88519651d6e13f7b74c30522faff8f93b264d83068c635c8a4e9937f8a001d63b0943565ddddb0aeea425d7618d9d9008ce7a0a81b446a893ef5f9a9a29442f37c4c16bcea1ed9d1801deb8a17f3b38967d8f1b202a09092186e3a493790bfc28699f61b36f73b731c027ced512ef14ea2e4be7ace0c3e520bcbcdb1e448dce723b37dc82be2ec0fabf1242a878dbb55f816043845814bc7c84b9967fbc9261278358f99062fb3416cad008bced543385242141569722c71589d08547ff622fcc909049a6d040ef7dd47598a51ac2588e09e542d9c1b35153be5f34c23733337a3718f0e212db242205e404113964bda4edc1990df46967573adf5579f4bf04d91cce25bfea56f0eed6964ee734705cd8398c7b2f480e925188cc15f24dec27886feee8a74ff4cc6600cbe5e968ebabbae05f62d8db2a932399b6ad50434380a5ae417198cb3d9aa0ab7fd7c3e50aadf2e43c47fd12f16bdaea07024aeeada0115ea6ba23b2c00fde56ddb4a10a6661e96ab81ac22fd805147d49ae049d3bbb57dbf3b51521109062a6c7b5d608a5e4fd0e9ca70d4fb0e423dc0e31c1d5bcd546bd45feb26f6875b85d9c6015e1c8f18946d44adce0f250fc38405e33e828c00d1f3d24f6662cd4296027ae9c125ff3c46e31b611d4ffb7112f1d256f0fb825731feab1158a4388199c2d58d8611f6806d4a9265a7a1a086e8c8506db2fb169dcd298a967992dbc57e8831233f07329b618cdaabeef24de9b2cca97fe4ff717ac87f5532cbd30781a4b5a8397a33460875d5918e5e7d50b62b5b7f324d9e3e271eb75aaa131b6a153b0c23fbc40c58525c1a5c8f0b8aa327f71acad6466681bdaf28a84a09cda990ccd215e8be42cad4c8367e7b0866d5ddffe22b33a422a38b2b80f41e2f82fe6c977b178a83259f64d2d99aa3188982b25a96eed362501dbd38c37dbc1ca070c39a36336d0ee8d4fd901f121865de092a308cb09f3a1858a2d3f17f30c37779a8e0ba0109d8d0878ea3b7274dd7a47c0bd969f5f2c1d337337ba92348c2e9c78e25acc044ab5f20ecf40a22ab11c8e75f7cd6d003af1637f35ad4a19656eda326025b5711eb704c016236a49d9e2262617fb73d5f4132fc3451934bd07f90dd22eaad002028c9a7898e5013df259c671da9d7be2a9a3db4aa8261ac2c5bcf93829fd5a725b9b12dc031c71101428b196529a25f94bb2ca1a2a99c12bd0fda670bd44c28c8bba25bc6eb4ac75c1f9a0d98ef4bac83d951435b1089f838774c06afc869f19f0e17a27a471524dde46a0bcc39f698afc8467bcaa71fefafa818cf0a4570be73be5a925bd2d02a58f6668f5237deaa05f7984def4d662d020064f17e13bbb54e52772c9286f4f98299af8b85957293317b70be54592c97e77cb6265caa5737921b496f7bc8b1f560af6f9d52bb1bb7e8a405ee79711f8d7f2f5db2446562a8b143ea450f683d11bf334532f7fb9f8b43ed14225fa0a6a881200a5e14d9f9a305cde4753ebb37021a068dfbe35d551355b3250018011adc2e3fa72f35c68cde0c40ce15eb4c0aa30a529f0ab3171ed910e9edf7436677aeb71148a7b23ca113f4165488d3c2b9c9886371cda3b81f33169436c888670907f20d0b45e08826b4849abc00bca9cffacd51311efe03e378db01fc026798140e5ab76c8f62b06fd345340a2f98a74ab6e6bb689a1068fa1af163d1404155e365c8c51f72a48169fca94c08db71de0d3a904ed28be0f133ffc8adecd6192cf7adbb4341e35370fbdb4581a2f7139a026737fef038690b5d11b9bfcd5610664fad310bd0d8566da7c8ef9b29d1c2dbd8caf7fdd1a093c3c0e52d913c59893c8627bd50a29fca9f4f0fdc97b5c0a77ab3d5c845d32326b33ed23cb4f5807cd2ac809431ecdf56a438b4702cbd9b7e0e8c4d924b975a3940aa30ede3bcac8cdd5d727726181885d5fccd6f93bc479de0d44942138e1ec96232f1806c9d15480e9352211fcfdbf8d7a6bcb8348c237073887e88bf2ed3aea69e0a5a7692c0d4a19ed223549feddf4f3eaa4bcb52f08d9d9c25c4c93be924da6551649daf5dc61ac1875e462cc16c058f7030867fbbfb41da71276538b7565cc547a674672d6e9540896630a6026bef1c62618315dfe0d0c3f334778f205c574572ac7e94efae1e21778a4adeb9d8c18cd51eea305b5285641c4b09b8c5ebc8757605be2355d1357ea71c94690635ae2019c0904768a96673109ba2af17d2a9e90306b5f170c8e13c33b78b07e4a1e5a05a0d59510ee21e80baee66145c3652e2c2f93ba8c23da6be0f766222967333d6359c001e4bcb3aa97989c575650bb3be062f1b19007b858b9e0a5ff79cb13919fbec25f342f41bb38c642a160b8e805c073e3dfbe3d1ad68220c1012e0bdf95e09d6bbc723385a7a34a5e6ab534e0b919db6d73515cc8f6729760529152adeb0cecbd7a6ae9eb7e77f22fd349237e8a15c7c5c557848e3048e8b7cce3a1bf1cef4f76b77e055676309d297ed8342d6c3fff7877769e108e45a58aaa2f94a7ab1be545c34f1ce547672244e737c30aea4b4853788d9abbe50713403f49133e4986cd5fb19c167d25300254299114e819ac6bbcf098071d22bbea0d7cefb6ae91b7cd1b7bb20262ecadaa1a3075931b6df2955b8e5e6c5abc986ac3729cb7718ffd441539709fa980220cb9732482cc36a46706a9d22928de355e5ab07779356380968798a3184c9e74c85814352795df74b295562721263e1d4595b9864eb1360ba90b92b162d38d7891a4af92a09e15c4afb71512aafd1be1b3b50b6dd68a9e0c00387c8723a500ce96a4646bfbc874d0f55a33acfde9ec09fc4ce6e02d514e05cc186fefa64122f289ce43a4f576d97209815c45d50ccdf45cfaf018d59cb513c8acf52de51ecf3b37f6a90a74bbe9c85983c06db966c7c309f454542792fbc05627f90903d6e05298ad8667d95ce782eb9471659b45790fb906ce1f4c879b73c4f479eb62d11b7a655329cd3e479a0d3454289a9db7cb974afdcb693e6cdb1a352fcbe3be3b35a11a89911a37e752fd47bae00329464dcf9a80969712439e99fdc988585cfbbae62d680f331f3a67ceeb1fa241451652ea657ac3f76c05d4c8cff6b0da4147592132edcb5aa56cbb8378e8d58b3c8596175e96ae52b16c531bceb9144ffcf3c728a6e88be850d6c0a163bbc689b2c1b218dc081f974214056ff152a9a8ea73bd35585cbb9354b34d2d6bbe9b7c6f2fb959f6b12be0c2a6184af1fecf3d66d32e70a6cc6bdbf5527e6ee967766e38f76761835fa03b39bc5b3663bcc5fd2722d130c3ae09b00e20a74f55d576af0403e0d8f796f4638c2f99431b709a8138ac46c03cfba5877318336b856726d06413da9894139718a789514c087a87519f78a48afac9b98868c2a8ecf33082d073674f1bb760789ad2eea19b3b0357b1b84d8ce0fb2e6b7c11b5c08d8b2597ff6f05b436499d6e288985d389c13fcd06f16aac96e459d60490a746ca215f4894a1e6466fabdcaec66fce5ae5e0bfa5c8f829fd2e88d68cfef6d2254ba3649103a8c8ce3368cc474acac35c8051ff619dc2be47b66c2a4c59b67df0caff9f51132429041a17ef4374c073bcf06efb3a124d4e9b35039244875c77c605b041ad68ad055f73d2b8407f86728ed9dd24224f11de041270a8f795f4246151ffdafe38ac265e89ffb8b484d366e6bfdaafe16e7984502b5f4892018c635167800b0f762dd6d94cf95beca63f278a5fedf6a22c37b645c5a441ab5f7fe5c3c0d49c4fcf980a95472c33d4d6b52c255ca468cc4a5a1af8c10f0aa81fac517f17a64b19cfe92f07a39f67047ff92a668984331802734f58003f52d1b6abe09de4134728fd6a94f66fad10b7b1c056b8cbb334620644614afa3bcf0cda035d55ba03fc417f46889a727861208e167d7faa3106da4c58a132814051ec19ca0c365bd2ff7273df5bf28cc6ee78a481cd8e384eb7a3f6d4dc90d4573139a2a49ebe5f6d22bf8a0e789fa8b9f1e27ddbe4b1f935b0b9ffd7646569745fefbe8f3efaf4bbe88ace9cbffb0c9b1f454561cadd6aaba924bbd304d51dbf88779d5879167e04359c0cef77e17784f1b6be8f3172aee51a4d3443b34a07881fdb92cb1e45230fa70507962fa2a445fe2df5ae1f0f44faad79b7a811e047491cd4782f97b37a81cb30f9f20dd1ea3588d94a668de1ae148e9bdad4e29981eba307bcb75127e1bd8c804143d941981f0e50e4ecdc8660678e22f6fa2d59c003f5e02f707e0a721fcffc2ce5c9ae9958248520aa737651a137c4dd31f5e930a7f60268790793ecb6176fb43dd6e750172e1bd9d319220624055e9de076171bd28f2ae63351889fb129b616799b9e22c0b3020a46ca1b527473462e659175da14d6fd14d7ab840fcf4460e1a8e7d946e70dd75d16088e3e5fb3754e41b651fc07cca5bc6424cbdea1c78de0955295d8714e67d61adf58f7f8a86b13c712c9e3e3932aa6963ca0667f90495443d3557a8e0d2ac7893bdb3e72797cd9a880619363af7d6a2510f083c912c8abad282c7e735f7a233c02fe1a41bb29d2cc63afef9302dee29d2634fc1b1d684606933e41306c4bcbcf1bf7d3008b7f78ab2398fa2c2d7acc6b18ab255e3e8b72cdb8aa6db8a31836de0f19410e151020cd4ff49101424fb3956cbe4ed53f88a692fc40f1fd66e9b6e45298edffb8099afe60bc278d28cff963b2527d998b999cc252a0e774b85db620482d16b4b8430aa6cabeeab8909c72b1f05e00572d943a2b08982e0e2f2c902c3652c5c974c9499fc11240d462d0f0d0067721cb7539b9bc864788cd48422d8fd202d30e4bd83390dec35b0a4d745311b93a6ce32205208a286d8e23c67acd28f93c8cd3f851717b2593025e4d5ae323424a9e7c376cf139c80bf463ab68c74bb1505c54dcc72f483f7480c14af22f12f354c8c070282a50ea8dc1841c70e9432a7162bc106678cac91ef4f119945a7841009780a1d39e546587b8d3f235b00b16542034e528bd3d81aa0db204f52086185f3f302b409c2b01f2d5329aacfcfa9cc6db4b2716a258f3b172c2622e0dec1368e252c963fc5656a3256f799e86484825dd6c36babe11e7c16984111a6e5fba4b9c7e48c720223400eeef4929d471a255865d61fc2b59ce4efc1de0961bb5bd176c9ba37d3ac378bac361b341ed3cc66539b37181bf1d60fa3719fd85d468f2e7d910379f0d8ac720982a4f412f2ea495f407105620e254e0d581b9a2db1fb409f2303b0d77fefcd5dd9af5739acd070696b1c77ede488f04c88b4e5c4b83e13b55130be8b36fc806cc73058d1142660c763af8329664ae2b7504931f5bb2e4ee3fa33f9a0ebedfd60deb5ed7f235c02b1dab14c8756ee5855c16a254f26eb261bbc6ac9fcfb19cf619d976f4913ba3da1f4b0ac90ff029e244b4a382d53e53fab64ff2762a1cd4904bd300c30ed7823cbde8642725433ba8d80017159d1482a7ad92374a631ec19773d81c4dd71d85fbb2e91b558a8551876b03eddd5ffdd29e8e7962b5d60628e8b3ccb953bfe86ab58ff61798b5c5752e2b6b4dfba9735d258764c30b9996a207b4b76da8c939cbbb4332c7d085be337c89dcddfc0c06406b2367f6d349353a05eec50f2d3784c8eff2642e5a18979f355153fc559bd8d1ef746bf43c40c877472778a3384825f414e151b86efac710c8316381a93d1db2f9003f09b3033d2f7b4c3c45a8bfd33359282a66feba22e181a7bc449357fb9063522a32344df91aed6e958b7efdd774f8683b815c67712ddd4aa56f15a0808e66ed40db7328440e2340dbb40c385ad4d80b8366868159896f236f9fee5ad0e6996b36ca1a409123d86a9adc712eed651816402bd60f526305bb4be378b2494db1d8cf07301922377b06f18b83bac005ff9172b6e304df4734ffd93fa18bd53bca3af0884d1a06b1565fbf672d94d1fdd40c4b9f234722109ce2ef0b2549dc70a5f9898878340f60f8de17c886fb68103eaff267b2fba857952d552f1d65f4b977d683962dfa74849045cf6f28d7608c5c298f5a3c82b8fd0d38c8b92e9fcb86816a36e6a74808cf5a6641d230825f5710b1981054da96d0772f1e94e3f17e6e5fcb0e63c62ca07ee76ac1859636e7066c7b718ac6dd6676cd5d86aa6fbc5706bab881af62bfba99a00951ba5a827fdf36554a3f89d262cebeb39f0e4d085c069258ee1c9a193e03e7c15794260aa5089b07ab48d780ce2b6f91e2e92c78ce82a407a9a2269c0244d42e4e34b3b62af829e7f0e7df3381854b975c958f77456ca85a0200b877cba40eb44c985e16fd4bf3f6238a6319f08a38c3c7e534ed3d45887f06e61bb10195f5ec7b11d9fc48e2e5932b2f69ab9662d8f8317884ca77d5d1cf4a5fc39f8c4e3f53c3c0a82fde71c0f18b4db23ae3cb47ac943a5c0783a553bd11f9c790ea10011c451c50e585bc455f3cf9e060f0fb48b31837040b581d3ab3ba3a3a17a7c32e1d74fc45bead6540bd0ae50bd199fdf09fa9fad83a310b1a74033992b3eff8c3ab00f05ffea1a38f702a292d857749e0f8f746b83fe7a7e970eadb8ce7820c798bbb6bce384d62f89a68e33d356b82e06c13912d7eaeb01c2b53658901464ec3de92a148fa84be1ea4d5a3b7654c57faaac967d915e3273e68692892e34d5f23d18405eb6026e21314bbd7aa09b34c0e3bca8920bfa5040cf605c3c8b64219aa0092ae728f19f7f7ae6194170e27d05e6481a2c193d3ca8d34bf3e30e3c2a67b98bf4aa1c6ab7669c205923989dbecd5519d062e505bcb9543a2e5530b53e711b2a62810090ff2cfd137c7aa3bbc8d25bfb3eca7ffb6535deac04a8e77fe8c85114d5cdd4428ea977785424b78fa4ab0c95f2c23318237b5ff27b13386eb286771848d9b0a564c3da60c11a7eca25bd2a3418345bd76dfb9b921e1746733158a95162cd1114a1fcef7c01c2b834595f22d544ca413d74ae7de0abda7aa548ee0ab27f2ffdafa736da228a2995010a82d7467e9c2a88c81caeea4ce126ffa8939a914f7f72e3086c8f0d152f23153d8a3743c5a534d7909b5193fab2403f286c8e3c2114646d32e1921fa60d22b7460bfa9bdddd08e6cb49cbe0f16d881eceb182a861aa703fa7a1701cff93a6c0596658cc1c26070e9e4ac581e7397e21b850540019c286fa774f532cd995e444e7637a7705327e828b9435e8cd85bbf1cf00bf4f1319489d6a166fa11e313fae46c4d4cfcd22790486b5ab1b3672f4a20e71576f2c437f34935d0be105af18296459f1a34bec4ff87fd979a12efef745a5234da24e54215a9fbc04542a741bb5375cb37448863b48974bf0d0383dc4c18d746da38f7815e961dccd296aeb83642e5db6a7a683c5163116fc0c80e5e21384a8aacac5566df1848f30e84b289ccbc5de62f7b72bdfa6c043fd05f08c5eefa868c0936ac8bf69b6987f8360c45cecc4a8555a9147e27915b0aedfe784ec991c48bf8f472cca36bfd710e4b332d25134b26acdefba5835a51c2f672242708462bb499b52a89f3a6c860e762107d5cb786a909f0b32f3d2a7fc602c48614a09364e7d8004ec63ab80b70cecfea7360fff229e211f3b908cbe04ae9cfc34a156d3341fec3ef8625fd360f23cccccfc2e53ecb4c82b763d35ab943330f8802185dd67289d6f2c5b6cebff93bb4faac830e32f17b2df6d8db458ba3fa3e477db9823082a7d0a53a562fff88bc55b2c2128f1d12531cf9500a67018fe5db356c5e5775a5285e82b95d78d5d977d43f65b5ab3f56887ffb340afe5398628c3491e2006af2936b93d14a10cb5ebbab983c4f1b5f6ed4451f2f9a2e6ebe9eb9ac4e6294b6ee1990ec72d4d454d8492a58717ba2a2248bc564f829c74fd2795be5e73c98f0b79c3649be6156ec7d60410a3ca8d8af21df691bd74c862c20995ea41062eab6be396488a8320611506d406e57689f1f2da1f96ca4279fa2e9001ad6eb530e43f29b17a9ccfa5023e4e586a053c1e51e3778d2a8e088d6444588ae488863c5c49cb2a295a252cf4e5e75b920c3ef65adcf624ac340ed4e207437bdf99d39cffda5eafc038fbe6caad4c275aba021a1e37f881c4c2fbee223a80b92582f9d9e6f730173e4eef4c364cc13bed7dcd18509457f83807233bc12f603c7f6f525a418423332dda1226fe853a30cb452104caba14089591ebf825e57763b9a69f4f4751b1d327431a7bc6087bc6463ce52f28e23417f298357fa0617ae8d31a8198c2675c9b1521ca719ebd5edd1ba26a344cfbf20f96de88056166b3d3183cb39fc29a69351bf653a11e467cf82ab35323ee46c2cccfa6b6613b0506909a447bc0ce2903fcedc84006d3765977a0797fe5b8e988c3c01b3b15faf34ab5bbb4091f3937330811541ff8bde1f41c01ac4d541ca110b408a0a2165b0c2affa2cae273ec974656eaf00801637b870b6cde2d47b455ae6144ad206b75640b15f5b6160af9685058ed975def4628b1f91f06843aaaaa1c9d7c17dd41f6688afa79f4e93d8f639fd00cd0d39930a5ad7099c964e03d052af905f2a7154df660863351e728528db712f1e54ea78da5992002456d17a3a170d8eb666d64f08b8fff5546df78e5bc90adf4a0214a4db4b110e9bf762225d38803ffbfad72a2a2b81be2d44eeb8559d014c6ef641e27cdec96412ae9925cfdd20b3d475c8a8bce60bd56ec7eb7892ff7e34dea5610623ab61649b6256508a0d959a39d7d07f15e433ece1facdefc79aef8645b8f250cbad2d20c218522ace2d78290c091b2df893f7f5c75b7d68d4dbfce344d1d307cb3e98f0b9bdd890176237374ed8ea9618a5ff4bbda9d8f7a3d03c3a362ae8f01ef3530b6d0323ae7957dbfe8d9b135e9b228ba0e5b8ab297f9ebf98b0abdd7b494c3aa7c04d1b2560a814b8796448420fa7412fe97ce31a76783647e4268442530f231949d35274f9d4571499789a4ed23d846a2a5176a9c35f1537fbdc24bb803c051ad9fa4bdc75beec27364e2ecd52281d75218fce7c231f808700d356ccdccd8c9157057f9320bb214c4c2ced58b8ad682afabff3386e0bc81d2448fd240639d369fe0c3d093a23bf341a7a0fa4a3a51978fd7d8d85d5fd60ad9cf6ce19444be6276da4d6fb17733dbebb1c8fb6d69fb82db91e66050ede6de669085dab0c9073496b2e57847d00b2cf21be133fa45e4f156af96952d79d2c14b0121698f388a897be32a0ece27ea51c413d602f1c6f685b7f8d24335afb8ac9d766cd907823b5f2f7dc312978e269a9f33d1b7c9448057122bb05838fb6723729b32b0c4503815bc187a86b92e8f2ce0264f4a573a9da0d4c79d872633ac0a893742c819224fc652ed6ef44a12aa078c99af57f62d61cce267758e1c983acca597dde4bb7f7f3c6c7fe4cbde24714b69dbf4e376fc0801c267ea94477b95f0cdb2d298e9caeb55203ed87fa8aaab9e723782185661894bb73569c1bebffbab6c1ee8f2cf9b2dc3a88a987e0c537d12169c68fe1389ab212cd360a5693bf2ba672e281ace4c9cc32170e5c9adb7f5f93eacf13f1d9d25beb4fe582eff020bc789fc7e36efede85f908f273b79e3ffe0baee04293a2c40c09b47aa751f39c69f33f31efcc1c4138c3e0b727d269931b3e9da8552a2e99948abc161f15390ec07e04d40b4d6cd37d45db8f14f96d4ee61fb006455664a773b30317d81d21884ce2b6a9fdbd765902e8067bc12b0161fd60a04046bd25463dff065dd9eff9af146c6c4a2ce451bf374930c02238ed1abdf3671704a75f83c114e0c1ef1050b7a90a36b0252ccee65c2021d0fee9584dc130bb18cc147c513b212da9723a520e8a0f73f224118a48992f863c9124c8e23720ceadf2119f4b8f2678b6b8e5b78ea726b27f31bd91bf00d000364251036a5a62e57f17a0e0871ac9de522b60ad2c3a469b5b27df7a1dda1dd29c7de0df60fc7f5c3e3cfd485871d8a19c950008e59e731e28aa73cf4012e14c11b59632225e6d5c7a0de0439374550a83b6ac64ed817c5e70d958e2b175f252548421d2e16ea6e189a5b5caad84cd8045a6dd842dc8ba6e102eb8e4446f2e3d083c6e1e759c621612f5498cf069c4b8eb2d5b246182680931daad0dc332058b820c44b20cc058740fa93d4e4ce5b7dfe74334b3a532cf3e99f0984e702b3d2fd7bcddd52c458e2d3ef0cac7594d110f9b1cae74339738de552a761c4965dc9fb9b58fbb938313b87b703e105cf8a7701abde5610ae74bf73af08bdf7e3f7f89847a01ced9ae7fd2fb5cad74be832354b9fb07b6587a4cb2319936ad29fb0f894d013f17eba3a023798aa02f8b714aee627684730baa52a02c338fb122711a43b09f68a1960d27f800a5857b76c617e91cf85dedb667828a94987dbc0490966a3999a80da959b38a9aa0b26c9e02d3260a2b88098032bc3b979a82cdb2d805e731f725e19359236f38545ac77a1810046a604be9a96d3cb636812e28645df853a2a980cba5f9fecf5c9d86795152268f523a82833b3ae58e5c44be8e529b4e185f22fe6c8f0c9061244d41f5f3fc16ea8079912ef5aca477d9fd968351a9c956ebc4c6102f53408460e5a31b66d2404aac70ae63abbc1322f5cdc48c46a0cdfa8dcb35be2f6ac456706c731ae5e0de987db83401db7c28dcdc0be91b4569efec1d1eb5bd55adb156be4a6c8f707999ed7832215bcca7010371bb56756491dcc97c4edcfcbe88cd526e9acc40be488b257fa19904fea793d3cc88192957962b3c309a04a318354f841a756227bce5eee9c2e4f0f80601b7e500c1a82b4223e07fb12a2ee7770e5183456fbe93aebf3a241f47ae9b70865d4dae4b5e7768b886176ff9a5a8dcf54840489a9d60f66060c5f5db9850d1e06a764e92ae3940b65d9d127832851104cef98272a0fabb9466718339248b9da9e52b7255de1abb89e88bf38c4394ce55de38a30fb81684e7c739acff7a1dd42fea22c90801112ab10e24b2cce4154422050a3ff23abae2622db68ed214a4b631b4cd7497f1d908db314c8c27df23ac8a70b893bd3e07d9a0225fac9b1079235fe3c5c02fdb6f1db70d4aadba60884b4e61bb5610dc7f74621fc8491985675da6e0943579073b5934568f624da0822032ef823553e812181501ee8408a664678a334892605df617cc441204a6440626c2d5ec02d197533301aabc60488b72acf203142742d2102a610cfdc980aa3fac24b3fb1b2414ef3cc0f194d8cc620d8186f3ef90ac6b4ce6c5e2e1abfaee7e4c712d3a20f093b50476468dd828edd16bbc2516e0790040f4df86a6a179cc20e42f2f908e0305ad85551ba8200d6af64e80f7262de42d8f62b6b515f569a7040010c34fb0f4cddb2d5f4d6ef7d98d913719c3543d829658040513fc626c739ebafd0bdf757081e22389c23c405c2711629c68b660481474999ae4c3b81fe0c95730ae83fcd91607bc620739d3a9d8c83e534337416b1ce1883eacc390351ab35e2e075246d4cbd76259decb3180af02295b89aac2bdb2571b0a0601ceb7595160642300d8824b4f18853e8c6eca2868b345dc04b14dcb0baf52da4f5f055badf3bbb597fe5df1b4b0e8b0b6a0f2e19c714845331171c1e763ae1e6cc90d6cb3708e37894ceae6da2c77a7e5d96fb235d105a4d4cba8ef6a49260164f3dad43e75458227680fae4048f4bcc6cacd94eae3c587ae521129be933cb647ee03b18dcc91d523d05b061b4e8320cf6db7c8ff9e3b31dabd6ab6629513a2447382bc14f318aa31cd5c68ed16de8be9adc0a6c9c185c64e33a56c29b5f376936c435ab9f86ea3dbd58918a595f424c17c02a666639b44ad949d9bf30b49372c949ae65e22a02985672b4631b441e4a6b3904d049b2b33361f00d55d449439778fdb532061858d3c98caf5391cf4d1a2c05ac1bfc01eef06a2e8376cd73fe2a1c0a253c42ada03f248044499e3817e8adc374a390390400d4c7b56b7af3b96765aee3a5e671812d16b5c60ea1641c99986d3727f703eae303e5f535ba08b85b64da1badcd66246f70d58acee4d9a2c17183b59dd6a478ba9a4a60ac8d3c4f97611af394d72255933ba00c951dd1a3f7e0d14c93fb5fe123db2b24342f6b4ab0896221ba41dc3955bf4083bf459f9629509fe520e5a884be47bc3950a39ffda0d4284527b795dc96690eea855a61632206d1312960e52742a6a03d4f5f5ed50e5dc5987113897eae7cfdc65d0a92d4603fbe6dd1662ea5cb7d8f5f93ba822dc074e2ad7513bd5f1af37a0303dca60bbc0a52514c54a50b110271ae604b5c9623846dc6d0f9ff6fda53ee6e36b48f033de3f4b6297fad38aaaea2b8e9e02a7dfdef54773989935d47ea4d44bd29a064f0deb8adcaf6019101bf0ee72e9d60b511667f0bb10d549fdf12a54f7aa0303d3f7b6aa3cf4eb07a32cc47ae1d41ba5e6210a7f0762604e373eed5777a5fd14d5031b09d5d2056e3566b13e01ebf4a97f82099e5a3441e24f32ebfc4ce60417aca52f343362f2cead6aa872dfff745ee4832974d537214606129e2b3cb48117f2d878b3c13da8c7b7e3ffc08a48c6b80ac6952146ef607ad242f76bd020fd92bfde97c6b34de27015ed4c6515929cdcb1c8c76bd36d16bdfe713b4bdabcbcad6d26a32e094a5507b34780642da2de12a2a3dc3c4058046116bf6a1ba719f1addbed91b94a367ea247d37016b6c06aea5020e339fd13df13ce66b65d179b027b560d55144bab441ac55750dcfca95aed4e747edf84a6c9b174036afd54d9325cca44c605fb8e6bce1d7c624099b2700db48300bafdf70331fb0ab9ec1e278680f3ef3f70a403adab6e1699a53225b4a686637d13481f735110223d9333975cd25ae2f82adc687c0d1d3221a068f024124dfd27989c0b9de7e96c01de2d33c2b42d40297a6635c55e05bf06dd6eb09def9bb76f8f63457797194c411755e031876f8152eb4b375b167b18cfe0b8e39353a630e95c5031318be0d2f6eb74ea666618a2059019d3233ca318a3e996c58990642b21a05b9d420f56eddef048eb26e94a9ec025ff31dd9352e6401a905fc7914f23cfd4b39ad6b2c399bd5c93913ddd3fb1e5c5a532be725dc467a7ae1e5c008ed85ff26e619d315e344a2a9b1be44f527d5e8ab1ec275503ba0a7f425664392616a1bf42969366822352121bcca1c615b1171e429293d91e1baaca317955f588cd7ea71ee1abb157dfe39c949c5b0eb1b880c22651d15996ad52fe71c5438ae2876941730a55770a569321eaf72282cee77d363d2f481ac9d3b1e169280ee554629e69ae57dde1ff7f9c863c037a72565c840547b6ca4333862769bb11f3a444718c8dafb62f601c723952dbf5d39c182eb24341c5513cf41945c05a0e570dc2accb10b725cae811a902d1408c50bdd749dae0898b3aec26b0ed237e75d9b393ae4244c9b7896bc1ab77374a94e2ffe937b8a69ab3edd10f2e5b5668e2774b9c861f51af4e7e99b28193eb540c23e7a592607f96dcbdb080cb45793914ff6a78e2957c6d3e7d0dfc10419948da93a9114a01e4eff367428745c9f9443c61b994086c00b02f742be47f9d23762e6510b1fa9d07a0ed08f392c66dfa4211074681d413fda948118f33db4b63d615606e09d1ec126311969548eff37db9cb9afa0c2e326f0cbbf2bff9433d61cd51d41adac10573f5cfba457161dc8b98b600d76f54a9a5af5159ab8fea78b903eef03bf8d728113ccd8e66c9b3ec6a324553a0440bc17a07a5fc2ae49b958012e214a0f0167cebd77f9f5c7c03c505a20e25c6361a067442175e97d80dc8d35543160a45c3505894b8205ce45f1315217d3447dbbab6e2a2f8372d5d2526c102d02079c05f1a99b5e39daf14a64ec55e0eec635bec9c1f292992f4124691d271d146f32bfd7dccecb6e346969eb551911f7429125c4e7120817c03cdc1fea0160ac7326859688659abbf030b0bb5d7da7f7e60dbdaebc0d8469211d48f8deabb10ae590484fb68e895a2ce5bb0b829f5c363d3e81f2a307ee92481633a909c7d925608bb84fb1fc6d3ee185403f819e9a6096b417d9569e818d96f86ef952c08960da1fc536a5fa0ea7f5ccbc01f62e2f6f043d2fc77ea1c1f6a2e048eb5720a80a2168346719167008716f2e131e6475444a6f466f058db12e11f5e740b86af5b905f3cf44ee5d3b0708a140dca22f5f80910dad34facba409f22d20127007a7fbb58b1ac2c12569a3360b9eb4f671992788fae1ba2eae530f3ff06671de3f18ea49c3407cf09f9c668df535ad508b0051af76079701071090f969e08bb0fb3a8992883af342843777062efa26dcd437bf13cbd5aef026a8bdfd6cf14919f4b2185c5379fd494e18d92c33408a465308750587c0e4e4e497cfb6660c5878eca3acc7e4a5533215ca0e94044a54488dcce1b4c502bf491a633e6f8c4548b70d95f4dd32d83e9ae75fda46202a51b24cec031fb979a3fdb6ebe51bfed8db8eeb5c10bab63ba720ad406f14e97a8f486cb5bc17c1348d0942e7bbc2489abd37e8072eb3847873b860e60fbea3051dec6e8692fab89be256a99dd2242f05b00a8e04bd8d42939974955f677e264f8cb647257c1298db044baf9d36e8bb206c48dd4bf2da3344d944208361e994f4b4ff75e507ee35cd1df5c90509f6f8bc1dd86052577974d44cc0a26bff7cb2dfa133672f2b8edeaaca5ac7a802ef5e621b5d7d43d732ce57b04e634e49a7cb384c0865b562e877cea8cf64bccc2ba4a19790deb30595bd896a69481c26fad9f5a2e1c397f6f209f6614b6b2ff3f5082ea8c0f735795643297663de292abf54fd0a56636a854ea195a231a7ebb23955ce3bcbd132580e1cffd5b44fdb47e2c170da173c18a22fec315db9de9ca274c5d213edd236f9abda9b9929ab7160127ca83251d6bdb22b74a5a1f1eb3f1b3679e6fbde51ea41ae1499cdabc3b0f791315b2aa109465ae529c9a2205027316dd4baea744738b78ceef49d4f0a9891394e33061a92da92a699fc46a9655109ecebb38831d60086d03b0f3a8491badb73e818d95158d13b523b30ec927e52dfd60bbc8b448cc07da591e3815c757a1326f0fc229d3eea324e1d21fa12c2fa24b1973c6f1ab5dee31902195ded84c72d42708074946e5e5f2dca07f4078a444d25e7ffaed936bafc5f98542b3fdc6ababecc992516562cbab28578eaf8eaa29d91c79d38a602eb9ef41622e5af40a1d5d297cde68b00cf0da096ad12b24dce5e92bfa39b95947225a625c1eb78a5cd4f1817873eef65c220764a7b5c13fe40edc9512454aa4af89432ad50b614bba00ef7f91eef8d3beab6b15f1a88bcc9b643ab0b4a9006fca4bbc5154e7d352bbcc8cd7eb08134a83f7228abd6769b18b1cbac49b9835d40c5255a2f1a97ab8ea02b3d4146d4a9abb3e722fa7633a94846f08fd00382b79be91f3df0c70a309fdac4d3753eabfd9fa9000bd4bed85a00b0d8aeaa503ebc64185b816d3256a1eb3afd26b1bf51efe8e25997f2d3b8abb8f9f51d8432fb725e6f6f399ed3b02ce95b745e9c69093540746876249b41b2c1d5d08a16832700b7cc4f92c1ffabb1c97e6d5dea8813741c05163f3c4d975f659141433a8452bfc6aa27ff3ea0b87f7548ee99f3dce599a554f061ddb700363dd018638b74c90a3d420853b4981bea364bb6c03e28b61b3f17ddf7e66afe1ecade182307f7457afc18fca66a430b71519b467db96ba7255f8922cc0ac076410ede8ab9271f79660975b2700bb08efd5fc87f39b7ab2db2c1a64fac8675c0fc535825cbb0ff69151082d3960e35d26b08725effb8891f5858c8b7c9f86164a49db0cd25059a444dc9eab67d04853a11ab7605b3c248a4ad684c93aaa6531bb6268ea623d00f92e19daf49c1008ca1746dbad1d8fd6d112f924566f5ff4121575f78c16f4d44bfe95e1c32cebae42d1c2c912da9278be2faa4b8c1207d911b57d7870df4a640fa9c53c078e1073567b948729165aba5a9f87261d83eb1a9e890489f557e49c3f8b05d07d4a5e282419e9407321a0e8962dfd1265ab9a6653ba5e5a2eca312727552a38df8836ccc83ea34a637af32c9e70348184c9edad447c050cdc816ae9029c4bd4b127e91530147ea423ebdd1bdd0caded98844b02d9149a5d6dc776f6228e2a8c63014f6a746449c438439dde14cacd90a39ae2385a11de04fe1fb8af5e726ffd597917b961c4efe0e0bfbed3603876cad439fdb08e95659ef0a0635a8354d2ba1526a3fdc4e3a33ca7fdb0259908c49be4f1165c3ad49fc8d08fe07c1630f72be020978d5dcc8fcf9d0ca8d89ae4da7d60e443c1b071162616b9e9c87a446d4785e4c4cb9c21b34c7131277aa3a33a5d2afcc95707b999e543fa617b701d1e571098276c1d84825ce554632c37db52a8103b8e2072952689c0c20761b31aab12e9cae9a51e984d234a3a947c8fd9c3804fb13ab0c3fc46952fa796dc64e24e25817666c9b24cb3ed276d16fcddb0d177fd5a37edd62d06a7a857a6b384c110b27dd45c457fd909a78de90a7212255403d60a8e274eeda376121eca81cc0d0ad140a4c8c9f4134cb9764c125750b0703f4a77d76f38bee289ce8d55e289cceafa410bdc012fe2ce5e97f68afce872e99ffe1d24a51067c6737dee36c3aee45dc42eb18cac46ed070ae3f2c3cbddb93ba34ca1abc08fa4731f4e6ad01abdbcb6a1512b3ed82734036cb3c8dda81fb016fcc69cf7a3341dba04289fd7d67bac4b5a5d5da637044bc249fa1da20e517da50b248eb423a747c01e371db48983e043008e49824bda8585c9da5366a54d2a36dc928f04f01473a4ffe016c3ef1cd88021c021eb0a58aa587f7a6c0c63a1ccfad9a8c0a51f7f41306f59caf8df32d377acef71f2b17e55c652abbb4fc360172874b34cace732337128ac17345514acc72868de0e76cd1ad17f3a1f4f4f7696a7cda9eca66e9b119d6c8acd031ae4f6a069488d35139e9ebccb6af3b8c0712a20c0b15b4cfb726eb3c604094af1a2e312d935413d42d4e81023f0759bfd81e11e01e1985c0eb409837ce832d6fb6f09e5637c1a5a8d40530744d177511f8a5c54572646a3a7543294d59fd9276f7925b56b1737d52c0ede99dd32940ace8bd25dc14b2fde72544240f1d9677b421cb02afbd5b6d6e4948eda5cbef71d5ff836157485279fddaa0fc11230ec22c134c849e29c160bde8e8eec3ac34bcf1292851680275d8ee8902858a60d0963c2979ae04f5260b0290b64161e6a509ad54c9fc372dc68303fa9418a00c476c7e62aa5402a3e5670c917821515a49d137c0c17acb04f53b3fd381784fff47920a0f7ec7ce5fc998e85fe3a819536acbf26f0a490a1423c9ca5594a7b77bf7aa4c28cc6c7f330a9ff011937982e738d7fa2f6cb4f0af6a0b87f8d3d83bce40bb5e1848de205fe8948d45f478958fa5d998ce58d9236be8c67175ecf5d8c2af809354be080525a3fbb3d7fcb9f7f5a0bfa1c4c42e210be866f7db7b52ffe75d9cb7b2ce396e722c05dc8647e95ca6e15d4a89ff59c76f050eda112eed5bd20ad5f4ba97f63787c9f33f6e851f359dc3722ed2017cef373b4e6899823d6fdc48fd08c68019a74ac72da69fbc3190b4a76c16bad14ebee800c2d6ea61c1438b2f9fb37448d85dc0c20c464b5a81af11646c90199d3411b6282298ecf531600a4759e4c785f15a24732e4d91831014f7cbc10fe639b3e3559ab487b31349caa49b4b32df68c1299b5501ff5af292da5e2065d445e4e1a50c22a20e4fba1fba203e2f7955adeb1dc9eab9aab2e584d9f4fa8bb6f8987266d54338dbd50f903b67217dc9d4a4abd2036fca6f48076ac1afdd93577a8a897b027955f0e407c2b99931159296c67950eed2598799e384b1ac88a3e12b0209ef2479994e86488b9566b7dc5419accf63e33059eee6b001cff935c218f94683c6c3cb6c78c0aaf12c3e7efd9167b48c09ac6db397a527ba5333e23a44307277a02662c3af6128cc61d8765ce05ab9f66e6aeed91c02917f43d19c9d6f73cd9d34f6a167a384bc9a27be4843846da9a919dfd9301ed38e27435c96dba545a211096c00f4497581ecfa03d02dc5b3b78087c54973ca8b4c1d58e8c12c41f5af93698beccbdb41fb065b9f9b7dae91e6142f865e8ace25ad33b0a06e954a070decbaf58f3e77b2dedc42032b33c352f0d22166f45b9164ec10d5b6cfbfa9e33aabf404c34ceaa787fbbce4053f4ff8491bb53ce7efe2c7e99f38d20c7338c88c6382625603aaa368dce54bb1715195cdee9532a04cf54539ead80c5cf6c53fe19382f2434c5ff9459a196c96bc8fabe0e2df637b303f8cf6f19fed849cd4ef065991162adc3a9621fd5667c7d3f39f75080eb3a2bb26237d412ac487970190f287e07fd051990797755995da2386c8d2778cea70f38bc0771090ccc86bf343f238e9e8c9cc64503a89164553ebdf132920259aa0546f6afe7a5b09bb901162996129a8bd3245486f66605fb81b0c5e18850d25f2f9cef09e60e099913cc607cc5eb972a027a11d95c4272c134d1901095d1bf5cf996fd18ba25efa81b4c28acbe0691bdb747ece1c0f7470d1623267490531fef611125b0156285292c45b5a715aa64b0b4d3097c3cda2827b675a786aab6484fb7218bdcc12533d3568228b4cde685ad152054e1db21a1e922ae505213354eaa041741804ffdd8af45e6892b6f8761db808f7e9678b1062b5cbb5245b95c44aa8330dce4f95f2dc691c48b42f96d01ca19dc233ad5df17fffcb712f59feaf7bb7f61cb6ccffca2fa29e08e8d521b9e43c63cdc4f9aa07d2e15ea5e7887460e905670df1fd4eadf9aa7838c8b718ccbbe1f296462a1285bf7a2f42fa2256c76b2472b07a66b74db8077efc3caa3756b15625304d1f3d7a997e06ccf9ea8cf4efba8b8fed261f348be8d3f319fb5cb7d246f6424c79e646fb605f9bb5fb255aa413e1ad32e133210f2f3dca1d3e0ad2da65e096f1ba6fee75a9e1eaa07481d8ac5d729cadb44b801c9700f98335902045cb7137ac9884044166c9a0bbd2b5f5691c14a84bc1d85b6f9c4e3af01c608cc61d5238f18d4a7f696b90889c93c1fb6d3dd79926798575905389129c803e826c1afc0e2cd0d8ccc286417333ae00304943da15c16193127384ea987b0bd50d90ee9e5bcb07ca84edad43b0dda00b73759cdfd26bacb5a5663abe8babafe1d8d2a2e270824b6a643279913f05dbd8f9b223f00436004c375e85abdcf4d85bcba847f5fbcb57b996f91d6561ddeb705d7791045eaf7af1b27e28dd76f3dc1154eb097789e11c0122e8e4a6f6e7e99bd3304b492a24361664dcf1e607d3c329602f74352c6957f0e0b851605806d3142b39bc0417d38f88657100183416bb7d883dcf0657f22019f851e798656658a92d38533a055c5571c97191347be82f55847b5a6acf6512247120afd443a89a7f4b6d83e5beade2630cfe18184fceb5d3ef62c6153e39c32d264f367b2f14908ca113b57935b081ccbba5ca91fd33fb47285a9c909a698935519b162399909bdb2d1a0c2e08f1ac419bb8abad891c38fedc18552485a563995ecc3e2357c638fb568376a2627ee2fb477e93251cb65dd9b57d7be8691b4fbcaee921ad11323f055d734b55768218e2bcd244431faf747fe4013bff26da0780613313ee537e2d641dcaaf019cce980a98da9713fa2d4a2d11a2cea5cd202792234aff641b51752618e6865775825f715771016384a6f0091a4eae58fdc1955fc7241cc9f6a12a6fede42e27e466c663a53b60bca9aaf7bac724fd42426c51973b270cb2f1962e9d8bbef909c25a473942871e534d329c3f7e8ff75dbb4bc0fb164604bd36cb0de28399813ad189e0e5674723da5ca494cea9d60814349b1e3abd8bcf2f432360a44be208f78da6dd3218fe9c137965285f3d76e90da4e8e50839565f126d3dcc3cacc128dc18cf9124e9e0551b6c2adf82f6415f4974558582ddca1f25ef90ee4751e6ae27e41185aceb03f203f74a7d4e78d90fabbbeb3d4f917c9d8b7a1ac8189e1e3ffc83ab9ecdaa1201eae9596670d674958122548111be17a3784dfdd81389077b4561f4a43d0dca1e048ffcc3639c4c14a181c6a07ae095e787f923560e6e89d12bad1220a90a7111eaca4dbd771975cc68bfcf9128e7dfae0fafa0b9e536ef9a8f0a909ea8d27d45a90016ba6e88899fad0af7657155aaa14cc1fb3d42ec1a221c04c47f8a0db227037ad0aa5e062184535acaae17c5838eb4fc0d429aa43f75f289ca3e7244e986737a7a159f53d147ef081839d56a03e7c2d10d1d995f766e08b2046fea3f477dbe047255e326d13b1582cf2afaeeaa485553e1696832259fd5fb45c8227a9bab0495e7b8acc78ebe0a38d164b3dabee2226fce2cf88c23070699c13378fc42a921fe182258f5ba8a80d6dfb9291a5d53ea716aa728d016164335034ca0139bf8990d9e6eb14dd58d815bdb5d9691488b91200ad5574e0882d67e41f5332b55a931bb10cd1333b004e18d1ccc9a8666663d0309104da54edb9d123e46b83b5da8ef1e0cdfea34c66a2900456b32e6b16f57cb3c787822b1ade64fa761c306437592d5e40c70205e6e8b9a93ac7058ac065cd682744e78bb4faa2f5a0b963903d98015364be6589091a671019a02431b55e2bf670953efcca1092fab8ffbeb1c143eea09fe1f73b8dda5d424e8d3022f914ed783baf42f848e6f84be0ae1c8e7e86d836815a4710f507c3ae74a165709eb7a9433c008a3a7bc96c2d3ed850d6b07cb1a89f4c1a1cfc7e5d87220ce51763739ddc8aec1f887c264b90b9afb0736c3cd2499abac915f0da0f15a163a15dc9a69ea312aa2fbc687d070cda8fb0175962c429df65b8db32186b33639d96d6b1245a33f7602446371cb433f006e78562705f0427372b1678bc80b08a7c309c3e1925c20e46b04811c3ee21acfb47dbfc91da6371645a85d7e359ff362d08ed608985ef71c404c42051c73a8e769282f662b9148d799c6f844949a8411d895e1f2c0b6eeedb53bd8ec2d6da48bbbe2642358dfce1363b994a6fb905324257a6c6ef7169b6e1192b6eb0eb1e510363ed39b777b4ef019e93a2eb26bde8770e62ba2e73a4d429ce75dcf394f812cd5025eadc873c4518f8433e4bf38000d6f9eb42689c4a86829865a0ae3401fd0b9146dd2eb4a10979ee5ef6a191148e58f798c9530d9a165d6a0f39a47e7e0317c4fdf5710212a98e02696523f34952709a0e8b82fad2bd47814c1b1d5a74ccaa35b2061259a88f054251ab85579970fc00d4477b872b091a9ef4aca7c9d2540c6901cd3ec7761c551d98a66191746e6d45e6e627ee0a101eb9e91ae19c12febea8795e69d103fadf7da0e92ddf648192c13ea86b77b0a6f6f54063d7bd20f7e257dff30bd09a0fe163cca81d64c1b2193f619daae464ad998b77251acf3129ee61c61800d280ee8dbb06375663f3b3061158a71e99cc99da2df298a394f7277b9c30569916cec8b837978085c38c17c7901fafd3fecd0c70722d72a9973de6f028fb849d1ad8eb9a415b021f817fa55dca7bf28e0243e43dd02d7022206fdd8b237b8497ce9f345b9368209fc7327ae5404bf44c14a3396b796ad8d260e950c3d635079af2e15b6725c11b952430809200f86b0b94d6c22d3c858790fc2d24621be79578b518568c5ad5a4f86aca7d190cd7ed3e105ac08fc944220312cb23f31639460593a6adfc513fa5e859de9f76c3db936f7f4cb3ad6f1b843eda126e8c7c6daeb3ecd2302f07a05f348fbb014d74d53afccb9ccd2c183240f809ce3aeab3e8ee7f4a6d2d33717cc03a1177578fdbed1885eed85a337704c1863cc5fed2e67a9fc9fafa0a60a87280afe215d836f8e442b4edb9484f780267256eba46b3269d13db99b08097d8baab1f12e948d35e7e2a5b0df0d9744213c1a26287c76ef45cb88b07dff9e88551b0293dc1326af548fc197f87c4ca003f781bfed07db7a06020a2a6f76111f8e975c362171a304283eace9e0cd89758d9c8b633672cfdd2f5c0a3d661918c2440ce301d22599c8525b73945e369d64e83e95811bbfd4f2ca28386c739baf3efa4809799306118fa18aaf6fa753492d24d87dc13a96895ae4966efb48075427d9babdd5a4450ba07d84bcfaf4046cdbb89e27ccd9e667bbff45b651e29104ee3a1a362c72fa56b88acc2032dc4a4cee1bb790dced0eedb659c181cc608a16ab6ec2a9fd94aa203d95b09db57bf3e74f6bda24ef1842bf25d2d540e12108c6a59a43ddb949b72e00ebcdf2a5ae11797fdf5ec7bbaf25e81be5f2b4eca34824b69ba879aef123a053e0d03573ea1caa4b2e497a2a041fb8b14d2ecffcb3c9e4b76b5e811052397da139deb8d5f81d6084aef1dabd61dd4c1473aa602577a77130e4960b5217db07933ef0d6432f2430fc26749fdddac336773280f4a541b281db65eb0957bd26c4e6f34dd1f1b83de4dbf4cd83aa54c4b4bbf3653ca8db7c1b3d364e41022b83731d2a973d7b051809cddd90a25645a8ddd56f8aa836c12ebc67ba181073ed5945acac201f7d03e18a83ca5c5a5f838a0a36ea5178a05c7461e567f453da361c094a1bbaa6aa12caee1c85def8793ebdbe138b590b7c61ad9dadfc019710bcaf2f751d711a773741e5d2d8d04af3950b13988516688b24db22704193159bd32b19fb49e5bacb76250081ac269f4397dd21f3e25d4edf586bcd7a18990f70b55a28cfae7a149ef558821ce58085702500fc4dfa01f8ed9eaba4587b053860a6f23020d7144e20ad55555e4fd4e309b596e8c599e2e13bd857f477d55c6b64961b2c300bff88336679e4196468e851262ea0380f84c969ad248187cb2efaf0ed2f3a699fd3c9055501a15895f9256a704afa884d1a4e6c600af397db84c013657627103540bd467446cede50965d3932057e933d97bbd4efeb0e880d3503a4e472f48275a32ea9df51aed4d7d04ef93ac792e8b3b06f54b2301d947510ca452c50fa03cdea11ce5abc5b3f63106f2bc683f645731cede3c0db2630bd7fbcc8088c522c3c5cbe17b41a7b60fe02b0d291fb478ec498c2d859996530d99a354840585271f89d3980327f733a3b5365b536dd7a0284fd6b05b89cf8925872fdc392066e1c5e8ede44a05620999c5cc3b53dbdfd3ad214c45cd330594ce2f27bad9658dba7b8b885bcec165b97429e1855e29fa6d60d2d81cdc26dec35c6c0fc58c94be34e89ef33a5394a0451a8ad900ead7d8af0c14bb2ca47c4ec0b84e5b3a02a669cf363798c52f0f1ea632403b2734844465de1339005cad5ee2e2242168069183790d5b261ab22683bf8995833638e8fa355095f97330beb5696aeda6d87817f65b6b60dd2d51653917bcf0c84d7157a9de83d5b2c3e979ad41009f8dc992618ee42ac763057f3f32a6e8372a5e70eacf2a9644055d5e808b6abdf6518d5ab0bf48b8daa8ddd38cbcd86d358d6b5766622ac17911ff4911acc8769177e5accdbdbd119cdcaf2197a1b7fd649c595b82744efa8422d9e39452ca70e371979891000b13b9cf7e1e9ca16d10477741c463f70f37da06b14375d0252b910e9ddde1c9cafd6ff5a89da349413c6c878f6e20153670d2182b3b0196915d1c7b98065ed8a3742f437d11b390dfbd95da3a12c2b2e628c3f768d239ffbec7c4664e7ca2d0cf6a0c2178ae7591506d4953528b234e8f9a06ca4a499486c033b6fa409fa896b8d22aacf7918d56682112d3f6256f6027fa4ff9c195880b0f4d4bc40ced97733b418b00a0c5076b3caefcb5925e5c8da89eb3559f50d4ba49b5012bd713c801f6a27346dee8754fe9a23a0c75174560e1bf7b1e2ecdfb045e1be7ae16b2927d9a8f7f6ab354fe6754c14c2035975d91c83df810510d68888c51d04ac399e64ac9ce4da3d0d10c8e8a1047055f989480d2783c2be7931198bee5e800e6f93fd5a433f31ae3a9043a0f9eeb8f8ef2b5dfb555193385b1b81c2032a9ff19eb055ceaf53b38433f94ffa1020bb00f3a74aba52faaab1c79fa4adb65e3ff80740452ec3c930b1274aa335b405ab39952f129fe55ace4bd1b4b6fea5d8223fa433c6f6007d678e6260381e1cb5caf8f0934ba164b52d08d2931f053f4ea3239ff00e7e47ebcceb5d53a4fe1b7ba77f6df4ed56911574c25d47bd023b0e41e6cbef77642851ac8fdd2dad98dac341b0dec568e9f2f135ba6aa5d7294951c8e768229ac732970a97eb792598136889511575a73405da559bdd84ac96da54de365a492a85d0baefd6894193d744e3918f3db9ab4e088d7932c07b2fc72addc6a3914f0ef8e7a50bbe0dfb0a2b6c2df70bcd9636981ed8fd13facae1957fbf53242b73f97c1c7bce136d95587fb5d86101177582605306068f8b6722e757963608c01a2d5e4788811ba07e921acb596a3d19b2cb61af7a8ae169deb071456748a1f081b826925b75941f88ec9980d364054f54065ad86a2d3d702d5c32b283aca13f17a613e6b16dce4ff00e340eb43474aee4cfe260eee0d52191aedfc70c6539e63c5ba6d4a7d37185e0cbeb9c1160e9199b2733e082a4f30cf07cde3fad46a98cd8fb213a35d2d9e91f1ba3539cf2491c48b94f93ab3eb6eae544f54b52573f3614142153036617c25511782a7b7f2bc9027f906775a7a9c00a2c84be260f2fd9fd04813e399903a0efe15ef0d93745fe53d17dbbdc9f0d17595076c932f6bed1098a71363f1005e7e3c92e7bbe7d3bd518a873d9f85e179fd131b8f7981f4e6feacc1cb657c17a13eb50dde6abd796a31c37092e66e29f8f1e5d40376845779b4e3cec62a125ff969cbd97929ae12b4c94756fc367c20c66fbc79dc768039e6b0a56746899880a2abb5a5f62de45a0eb60b9e9aa4335f28fa1c6777bbfad4e2c0ab0350b46ae6d84ab4df7a63bf3173c0ebc7a0968c51876cac414e85a3a92af22a51b930759898e97e9fd9f6c20021a72aafa9e16bbe3b5a91c84ea769da97edeafa4a1e6b29d0e171c46443a3000a514171e0eddd167218715ea58f7f5c8ca18ceaaee6f6bb5b9680680c2e84cde7b8982c16901106cf7495e96ba16c2ddf6c6f46a18d2637ce0a905e16bae83dbd75d94881afb77b3b648e87f7b11a4687b34a47dd3e55919767e32070e1bae9597ebaa9acd47964f43ea2901392cb175c150a6d3b16fd4d2b63dec290afaf5ce7685d4b22e9e5e94f576530a6be015424f5f9d847824163052a863563272549dc193027cb8edd2e84376bc8111c212df43c36dd564c8d490502fe52b5a566e2adfc21d3e83f8c93e04451d7f4d9d9b32721e1ec5a7444afea4d79d39c3e7761342df14ac5729c3337e19afc63f765c61e87d3efe954aed65b40a0d368d2ee5637ded1188e65a266f761fe4c6ed70c4377d516c9fc6a90ae44100c534b8770eac8cb42a209b03e51231eb8520373890b7f18c25b6f30336fa189c98dcf5ac616e8d86ce5fb274fe819b376bc80882038046c63c46e006c6504e56cb3c9dc7da2161b5f217aa46c73070708a1b1109847a005286f34027e256393257d929719e145bf667bc705b78de1b662fd269b338ccffa1b3848309bc7f4541c2127e5d2f0738ce1eb7f2be9289033f72f1b4ba92a41b5c70d22b42795c53fbcf2c717ed0a9c2aa45bf99dcee5a7f88c9d7ea8a131832d050a8522d23f5103f61396380dbf584c0b38ace0325a25de500f8bdb520f68c35c737b32147d0311191f65f1b01bc7e61ae5b68e27ec66c894e1d388ed67ac8819285d0e3ff1cb14703635c12645bd47c710862f0a0fb69e5dccf408fe659682c62c298c4884c34f96e8222c93b15f0c0584417005901a4ff47d57ff9eeca86094d007c9b1d8109ab4d6172581286f0ca0304dedca9025f8ead07c897efe1d03f5d5008899db17296404d34eb42af2944b3230229b9d35c419b53067a905f46c3f80d7f2b8750a0b58081f2aaa32c24ef343228d32c76b79149683fa599892adbbcb987858a9cb67d228f12f706907ffcad1b2305b66163408b2ec4046c52f7dd78903c3924abdfdf4230da07cbd3e9e250c8e02d7cc1be9aef67b3d89326d711b2847d68cf64ccbfc0b4106d5424c2d80c4cfc2e613984e892b18537b4987285fd3c675f3f028c915126c48e9964591a52ba90ad63e1162f9ce81514c8669b86900d6c520838eab3eaa1ea62d625a65babd1db2456f5150ee347ca79b82d31ff82d877f86234932cae9bee9a44f9829f3f232488cb9c261e78cd94f5a4e05fbe13b97407cef762a2b9618af582c16a6795499c0edfeeff41844ca67dcdeaf3ebc4bb1cb2050a0f59d335a842b5f0f2c6c2fc4cc111696238792f1e9e4299b9097082ef8827ad37323f803caa8db1115a87134b2f14c67748757936904c3c7b8df0e75b1270af3006e111a0d93fbbf63a439a642dd3fc70ffe0d0fe1bba0f8971f2c245afef8f39f2e09911f800c9bec53e69a08f0ca7d4f572e15930cae68e980a377401a8cb93e52fcd12b7f070f0736e53d56ed72e56f070c89615dfafd9f94d42a87041ea8f13d0a093ce9d80058630a824d0027118268d369bc338225e0c6be8b03693dc67e745d56a6197be63381c5c9dfb7bebce11f8aec11d8b2757043121fb4d74d7e80316bc7eb69bf82fc8fee48c23de2da8c6dff6025bb85680c8f4de90d0674320257fe29ea0cee9b40edb75f8b6e9ba0add2a8c0cb8f91f2398aa3d58734fad9f689e2db7b5e7b90059163ac63ca4003f4b5144fc5e62f051263c3c4c6a10df8771df66def71cee8d61b9407223d0500363e06e71d045b401d16ec0b657124de0f935ec0ab129f9c03cb3e8b18c5cc461f8ea2ce97bfbfbb766130ef0c3434e4379f1d4e3bfa4c94dc8dafce4801a66fc754fb7de40ae396dae11e12ce71ddc46961ab4d3315f741e48c7b7026257a7ff2aed95d8abd1f6a13c94fc685f8d4738de140b42c76258c3c519f265bf7476212069d4ee804283c379bd7d19b678b8a530b0cafd30e672c3708450961fce39c5dbfefc65364d53af332cc4e8c6f42b9a2c15894bcb6e3ebea1ccda6c694fefc92020c676069c0282438725efe059bc1a5cf9431cd8178852113a2b02dff00d1a1236fa8d8d32de09ffda51e74ce79c83b05d9f5dc386a7e4717a32ea9431becbfa456de45efbecbf4e04e1b8f632c4d543baf6bca73efd8f8d3fe5af7720ada9e018bbc9d261bc658c74646188e93457dc36cc91bbedadd3626e6039ba08d9a67d1d04bd161c9dd20e2d24f625c520dfc8f8cf0d2856e0054bf65783f88ffb4f13fb0bf6988a944d66f1de2aecd3f4ef475d2e632c9c794c5bca0875f4569e295965ef8f2825d27d7049f5065a593d30009f9f46142472dbc722460536a83ee34459e20c9244fea70c4da7ffcadf0aa438b60fd13ca973231fffd557e9efcc8559c6cd7f4ca7c75bf8cac9bd60ab2f618e3e397f753d4bd6d881d6c9b485809bc012271bc28ae405a0e5f0b1abbee221ab2fcdbdec988f482504ab53231f2326efd5f06b15807937a8699eb1f849a5107b56aa9b913dd94b0109e3428bc0fb381b5cd875ba92affd5bce78cf501f6128d546fea293887766cf5fe801671da50174fb42668cc82251932dd58ae07001fd8b0ef6629648e9d5af31ad1842224041da12cc2331a91cfbeeba5daee371fbdc8db2fa0891dc1c901071f5ff71291bfc32c5abcd895e6a292c1d0e30603af1fcbed5a86918e005c57c80f136ae21c99c509faa91e07863fb824466218b5b93823a96510e3f5d35ac28f36f6372d3fdf302193a80d371ed574833481fff8f89437946b93c116ad7dcf0505316033a3bdf66946db9fd90e8fa4a36ffa1d4fdc5633d1e5a27d17ef2ea214e5b5f24a0bb714d5dedff0593abb468acca94d33acd67fcbf06c2a1aa32fe69e66bebce3458a4523488f3d5efb81f1f615158f23272d3f78005994c2d4419ac03ed9125266d175ae320a2d92bd2888f5c3ad4901d45b1d39489e7ed62a2c76a820831e346e4ff230eda947c4a41b6df321cd8cd9768a8e43418a206c76cdfb9196b57319bedcf1eea9c909196e3dbf431b59bd0d7d3c1ed3e61e817298a2bb8dc08ddb89a2c9c19007eb3597d4b374ac0c355e13e033a6b21aa8cc098374c525f05d3433831d7f668b0c6d3d639e1cfe10deaa6af7033c254a46f451977aa83473712839d309c77e1f4123a03f93a4a8317e243e17622682f7ba297a8e74dbc5fec66ff553d6d9c2345f00b1bbf185e9e13491917da8de5e146e437b9a987e0d05d7170976dcce69fa7521ee7b975f450d637e454ad2250ea103869db741fa508d0477b7ff70bb2762e6c43cef197ddccc08621b43ceab11e2327fc24832df733d5b757d575063359dbcbd5164608f8332f2548299107c3326e281c51612ba13b7cd8b6fbaa7893418dce7187db0dcaf57b316a0df06662cf91ec2a4b8f72e0b7e03afcb4e64ceb7befb68fa80cec8243d9e4166931785ea7e0cba7efccdd3a7f13b102ce95dea63132d3787192bdb65b0194c30273e635783bd87ab544dc439ac04e3f941dbe6815861ec383c5d5be26ce72c7f5e5564096e775591cc61e7c696cee8e4fce77e7cc6c52ba5c4dedccfdcf90fca73f616a54874685e34183867019d8243972eaa611b434672ae77afad1a6ff6772605724f0d4b4cfc337eaf22635dd78a6acd9e70a28b20cc4c4866fdbf82670b865217a979329169df1145bedad8cd1a170674c095f91a2dec725b4c46cb6432746faac20cc59ab39a8ec133637810571e1245f24cdec5dad7ef07d06b0fe629dd4bf3fff0d693394739351db9adbf7d5a5690d837e2a2353814b3bf5fa1c31d23a5f736113a4dad80defb0df9ef08c322953e6f23f88ee9a53becc8d449f39d71e25bb2a3b321dd919351ec5e50e476f5e8f677135c50236c581d016121bc960fc8a9134226f24137aa1a829a157cfa48238104df50cb7ca9e22ab504959f0c9b7d9a3075d06a1b4433d38ebe00f6ec0946f089f54286022af25c1922b1511644bc74a9462c84595228a50671cc8bee31c42c5be4ab7ee6c6e537489a671bf025f5b5f145af899648219ab8bbf86f1537cfb0e9f8be0187bc6facc232e21a5f021084b5dbe19be50ddf88f15d3c52ebb3c88275ad94ae983fb34c0de07b8a81382ab611c9a226318dfdd2704b1159c005241e076b64e721e66711d9c194e8a712285db8e99c64e8091dd95a0ee664e4fcf9ba0e16ec1661cfd87f6cf2bd0ab8f9fd5a7f22ac62c050fd6d70e6bc0098477bb04603653543668105634d78d712bdb3d201e352644ff1343de701f66ca6be35c9859c6c75e0b7a008e53dd7403f9ef0898ec8069386728bf644adddd409a36df6dd4b9ea4b834fa700d59045407f5ff962c53a4c06d51e84becaa914ca57c6caa5c650094d932d3b5835631c0327146a230853301988dd233a95d18f11a13f2638a4a600684a925b7c8aa090429a4fb30f3e0b0209508154344ef3180a5cc9cc3b00c3305689e5eb2449a15176f77d184fa4f49fa702035a459399620ede4b9f8828c3d54e68ad5c8a5f7e76011c6ebe73cfcfaa856089ec47f501ca3e688e98ab892ef3e7597e0997f6cffa1e69ac6bef54e5b79acedeef241791b7d581f148424fcb231de0ca8ff6af5a72340cd0ce1edf10bbd398ca336c62403cb3405fb10b175a915611f6afa5cbce34c959846ae271d34ae132ff55689fb39cd002a732165aba3d2381048a726c0b8d6a9c16a004d3253ee10fbdbbbd6260585fbc65952e8453b76f275cfcf6b028315a9497b691fc7fd216ee7323c08e68630433456504895fe5dbb97511ad14ba4e4ccf5640794bb356206c61cc6961a1a4da0132e11b92d0e2d92cd184bd4f506a6d3fafef4493a121ad5900f0be59f9c5d748001994efb16679e06a92972ff1639d8400fa19a160aad33cc17bae48e3b00fea43b8e2e585441469e28d55632e000dd190056518059c4c4d71585e61c030df3aea75d301c037ae8504628fd798b1cd5ac181caa3ed3e81947abfc017f4c611164ec4d1aea43e9fc1dca3cd2b4df01ae9097a7005404ebf5398768394900613cdf540ae02e3e7df7e1d88ba0527b7acd62e6fe5715d55c48f0f35e88e33dff35451b32815148b1a88bc7bd11cffad36228b2712f32316475e69b51eeface0f3cd080aebde5fbe8c65f578a8ec44732a34ac6fb16c3db4af247316197e0769a8c71b3827999a6401f9ba43a13b8efb5c7b65b531a4cbaa555b35fe8a140ca182256d10e4a054ab4a3dbbea4ad8cd940072052c7471775d91e8038eb9c74b198baa74c456609e9ab6cc0bb079d3692b68941eb9b4eb604fad6fc74d1b894b423e9c98018eb57b968f6dd81a748134554da113198fed61761ff8f927ad06fea9d9d13c21be6a50911c7c61e0755f2b36591630e6c85551a70afd06e33cab572b4a39423cec97401b6a9096e6b9cec0d14b99f8c8f90c7caaaaf885fad2dca2790456507206ffa575ef56bfb9a8a3d7295e22d950fd9aa815947d305f51fd73dcc438c296756ad41e6ce4ccf771d258afe8a0140391358398090741e53c95689da435e171e05f4e94564f9361b1bdff365adcb2499e941e7da9de0bcc4238eaef9cb8981e76a3ec35b2d52444ab989a8d09f37587b26c1051ff4483888adcca528972990e10fa11fa26bf8881377bbe1fd004d80f3ec10d995b66c4066cefbe9f76eb4e63e6d61434121839ce789d4665d7220d3a07f2d848a357fe195f6d63516901e80093268de7cf69a07139a5811ee4f513f9f3cbfab3dceac996c629c3c54941bb8f74881b6cb03b85204063e7e3b9befffefa349737522efa3aacd52b2519bdcf823f425b11e54d5608fbedddc0f17df018634f3a5f35e291f3b1beb83587696282fccda70c34c9dbfdc02f1ff35f5a73b4e3fc191b061b45f02e26b8af37d141b533f86096b2e6e31817306353a6259747b1f34c6307ada1fbba3fcfaef046b3013d17eec3ca42865bb23288920abd42d4a021507591db96c75335b708a48418ad7137ac5720dbead422a9108b405775fe62e2270d0e13b4eb2a6318aa3c2961d63849ff4d41d20046c4b336f60e32236139fc02743e1fe088503f49bc71545ecd3305edf2941ca82687b75096c2dc62bd37f4902fe9b35cf7a7565b3c628298dd67cd46edfcee0b9813e7c0a9f858c45a6ae9fd537138c515b1c1de4fa22724f98933f6caedf60702c16a7e1f7a89b18853697ec31d2010ec7af02166e4ff4576686a02625f25f8cbc789e13d7987e2422c38f3154c4c29de40a7cdb07718d403664d0dc7e8f89be1a41660d80e0a7c959f249be49c34f3c7fe72e62fc2dc1651d3e3cd9f406b081c77ccfdc2bbe8d863e72c80fc8fb5b414f2ca60ad6ed6b148770b790c02bfe91f9d01be2721869a1b170932accba64315039ad08135f28758522fdd85ad8d9d99f6fed6ba982ed5c7c667b85b77f19bf776d4e6c1d1637f1072d136d75b5c96326365c487f237c4ce5fb87c4f6c15b0f28c918565caeb3f247f60ebb0647b392189132823938717c3fc89e6e2e84b5c9f52765fcc45712da7562ec5749b3e4b0691f01e4db81347c93a8e4648d73333dc85696fc013c25fb4427e4c2c8c49aaa0528354c8b4b7e59c49e10d7ab9cb832ebee7098e1a5cea7e5482e8fe37e455bbf3b0d237d7a97c3d27cba621fc8e12b21762ee6571a1d69096d07f29f39a3039ffa6a52f98614b75ed4a03d2c21c0ea2d5cb46e0b632a8fe57ce2a1c9ae5ca653369cbe929267c8f9a7d80fbe1e5bf971893149eeaf4ed943c6591602ee45e430629f030af6e528503d7fcf44714b59cf5ede70fe2835afde11fa89b615a565a8e882254b2c4e3175770c5fdd548493500ac9ce8d1f2164fda7cf2194f31d0fc293f6fa1a4cec83ed0972a5ecca4b89fa340a1a6f22020cd7124cc8c20d9da38b75811666bfd00091569d4806f1cf199d8e5be815d735a7406bba4bb789484788cd5c26cb3e79db192407f58ec5bbf2ecea174cdea394dd92acc6ba0f9a65048532da0b1653dd87cd9f61ea7d04e41710f979afbb168b30ccbcde35661b74ca92543ebdab8b6c839a54287b47e2fa9f14c5d191fda3295b4400446fe07ea3fbdad3e50fc349645b9b5f274161f9d4bd8151cfdc8333c8c398930a9c4936f2501a48477a9c4740f5c7d967d950cba597122aef66a8536912373a014712ae60a3242264f1304f4a737626e5fcf50347ed7195069ce79edd6d33005144c7b171a0a7e3a5874b4938e5ebe638a69c63802a529dd7ac79116979ee0b5c6b97e533266a9a4e9dc070fd88ad923d5441eb344d6d3994c13d1b4caafc010b56b6760135bbf0f89c5e30360a4b0adcb5c0ed7d753ba09569fff56ffaef6a663c663324bdc318301fdb74a2f90acf597fde77a4af204d704b1045e9c9ceb22e15ca0fb75f13b3413020a73e45967778accfe65f6c5d668e867da03f2affc156793f92c224ed5f1e74169947cb85e7d8c0dc8b9fd6f90c2e05811efa95562d62184fa613376ac5b55ea018a199968c76f4bccf8daa142724f001304939c3e5a40d8252452fda135e12c9f0521fa61be6349085091f79398acc3ee4f342a5d749e089aa538e41f6a77bd35d1a712cc08d85344e010e0435629bf4adbc8434e7b649ad097ce8ad791278c16d0382dd110854000ae6425bae02732d70d17b01d2b1a3b18cf86f5766eb1876f81e25c79bb400c75ffe298ed1b5b614957a10997419ed40717ba9824126b36b117dd4994db7c392026efc9b544502afd10ff53eb04e157b9943b60d6ab8eb2c4df0b60b591b915e05e23151ef812fd2219c884d134be19d84b0204df11ac25f28056bd1fa8615147268dd92eb4f095a891667e8df733324f410e1849b24cc695dfa59e44bede3ee906cfc31b6ba463273bb257d5bc22df4bb1312de736593dcb7e0954cfa584c5017bffe624a483a86bddb72d522d0b1da844031b6be501c4357dcdecee2efb6acf086b455bebd60ceb063c3cb15dbdd3213797f0db22b512cf8832924c96c573a2334c05de861caedb2e88821f8e068643be0b72ecfac5930f79e8d97a1e9073f0fbe24d01c37ffe6bf2f65e66251a5ee9422257e556c6001be4042669c3ab8fc6a82eae77e6763c27012ab46d75815ef73ba353e1c2a39c3a1d376d002ff130383dd4614fbaba4f722f65cc6cf839972a01b03467d7e038ccd347912d316c731f5ed60c204d598299dae21f9fdaebcdcc6d55292c3876443b3c24d27e81177bdfaeec32e935b1208c206dc889b651f7d72ebef1bf9f66e1a3dbcc95e88a1b926c35cbefaf9af9e6fe4cfcca90dd78821c59df56bcb36c95ab4238bc8e5ded3bd49558439d06c653c652ae04981998cae98192174f6effce7c6246d0c27eebd45ce0d7e03e8ccd9b7cf812d8e786ff3514f8addb97e420ebd6126fb3e08fe1e11bd56244fd5eb06ee88bc1323d3999fbc27cbb18abd38ed5f7c11b70af7452f7a1614ee98aac71cf1c2bc569d11b9b0a21e2f4f9e30f24fc939ef64f54866a2b81463c231102e15aa95ea8bda1af0d888188dcc2f8caae2b05289d4ac7d1723a7b687b52b261046d599dc360e92da8a49898b553f4acfc2793cf40827e503a57280d90dc365f52969ed209da415a1ff7535c8a7369c0367d0178f365526b1c6edd5a40fd32fd7dbf7d3fce4ff4b19d9c7a71f2a8d212451f1135b2d24a8b14950abea752ff7b8f441bd03c1fd217d400f3c9244f01fafa0a173187d222c1aa579ee82778e2036fe21bf8e424ab150cda72e92b59b1fe0aef7ea4979946b1340f0cf9f36310fc0f9ccc42556281e9d1205e5e156401b4d97f3d4e1d0adf1fbe9f6746dbedb022e9fb40f3e32a8162621c849416a7560afb52dea2d793a61ec49fa6f90a370c1804bf2227fc2199557e5b2cce8091afb53495a194682903c1a9e17230a20070152ae4e48522e2093284b2e98ebcb8a9e4a4a1714babcaa3d84bdb181e447fa4da728c4a9fee6ff872fec5517954283febfabe538d76d7a306fcaef27435fbe3c5cf99a719dfc4dff2cb7347e2454e229a78de23dcdfc2790b9dbe0d82721b362eef428999a37ad0d44830098f95e2d7b4e18f16a1427dddab67f98ca4e7c2f84ea1c573b8179fc36d6a126574586f1721635321bf404a5f9c76c553a1652be00cff5ac5d8c4739f25b4f9656bdad45b922cdda6cd2ec279e94aa98007319eea568a2ce3845e39c31481c438182848e83a6ccd35de79043c9a278e9d4850f6f718824791ac982a8cb161f76161d75b7af2f67d7772f80191b2f31ced4f7d0e56dd7ce979c94ab9467f50d6e4b1f44d03e3f5bd59c1a9b35e62fb2a4674393c1dc6c2069f1ec2e587016285396376e55239495fddfde9187cc0dc060a941f5bf8ceb3eb442d727a70811fcabea96ef09165feb5982fcce4d1fa2bc88a1eec2a9ca5c77952dac78c910d4ae54cfcc0297ee645c7cfaad3de7244eb93284587366f4d41e3ea87de5056b155fe9115628e9571d4b0e9aa4e6a5a74bb5e2cd6a5c0694bba77d5e231863d14417fb0d3223ba511a6a9be6d7bc7fbe8f2a30e382625ee8b6e7f11ddeb27628179396ed127fbe1bc3f945660b80504d31552371e1192c7bea5f5a7ee1150c58ec704f9114c6cd0836da9449e372a20270e84f5fa25acb442508e1bc1b2f12c4a00ef7083d8ace26f55e8a6a53125d7f39def978e3456c009843bd42830fa61f220940d7155ff6531f34b85e7d08bd0e61168a70b07afcf3cde523514dc4a0a2cf4c0d6029409375f5be2d03df2bc0dd47084d017d04281eeb69b238063523d4494df2024f0256bda95693090342734933f78545e9b278a2bc2a9863d60d19c70303b22a1321b7bf288f6b5fc2cf677c895092bbc4fedced52b9ba640bc6e092285b57970c2f8d0922a5818e43fc0d325a21eb38ddad87d463f20f17dcb7b5c5a2667355feb7235731e191685da44746de4f028747fb22045fd221ca2efd90ab92d1e39549c2886d24624b84c516efaaa372e8fb9e6b45c71e88b6cf239e882bb4df6e6eb9ca8af228078512c8fbafe9ba9d9a85b9c82ef10d005448fe30505609f9f52c6233c1afde1f9e789b0901323b23eccdec9a7dae768967028aa4aa87ed0fb18adcbb8a770708ba036a123216fe9e1631bceb2c4e355a190e14c653de41a8b408c19a73831fd055ed0a0043d88b275253229ea7abbb42d44f73b2ce8876143b6d22c6ecf332069acaa9912ef502c6254125fc94d99c93e0205282daccec4803463df01eef36c3563b4bcebd4fd3c39463c992189032f9222244eecc4fe873077bde6034645d1935e9684dc42ac219bf619c0509a368a997517a2efbc4f260897f76dda78ae132f550e904a0477669bd361d7a435c7cf48bb0de1fc4057d83f5627f0355a0b29abd403b2fbd78f0d11db30701448c3b53596ecd61ae26b78112d82e075d0550b1582504529fcf8157c3d4ce59c83184f20325f5d85d2b52d412d3de063d9cf94d2814d85b194c171d912c8a18424b0c019658cc5542bac65746298af1fec5ff25d1ceb909ff12328c649576490b4c238c39a947ad09472997748769747157041928b20d36bb79a543b39d86d76c3b88acfb394650c7f37a3b6f3ef0dff416cd1196f2baad22938444896e994a3b804ebc84cbc1ab5540fe18c417b15db37cad67c3d5c9abef962469f3a6535108dfb780e6222d45bf4951eb3ce0a32c4b6fc5fdcedf894820e71cae2ece93e00d77d433db32931b31df4193cce4bbe3b0c37ef43a0a604d805001e5baf453201919a16100511d1410877b19f5b496bd96f34cad2d28ef7752874ef8ef49eba36b22bc72a2a6177a512cd5659076c5d5ce9b75945b7f476242d9b2b563ca02615d3aeda8aba0f64730a88d03f43ac4b234b39057e2dcbebe95e40fe1cf571f759b4d7c0a27c119caa2622698117abda9f8fb4624b17f8e22e1c591a87282e72bd9338b4ee0c850b3990f762081b0ccd888caef8bbf8a5e389b4372f66e0efe6110c5b7640c558dbb7638650b8289161c84ca5f29beec44083986a4e83472477f250d57599cd1bb06449b33c2dc4e838b151c849ac39741537a86051055d675bd46e661b8f0969dfe34eea998d843074ad57255362818ab999c83279726dd32c8287a4e3d2653474131dc273ddafef14a623aba190572bce5ec037e55ac93ac0e921b7a6b19eac460dbb2fa0da3bc63cb6af1a6e023e8b8182a9261d3fe412fc5e0a3619b250d26cd960dc6da0357cdcac55b98607c9a8d345b855760d9b418c6432ce798ee7b8aa7ede6d40867cfe9e1de7151f1d55483e6c705f1405d14221f238d87414de20d18dbce292cd88b92388e9b46684eed064276f9304566dea88a37c2b7807de76dd6210e1488fcec1ad9615367858029efbae33a61bcaad4f71cf0920731134ae1d93ea9d65546a71f99ee849af2515caa073070fbcec743fd46952894a79e2a25658741383f7e713e95cb6237a65aa5646c36ca817fadb0dcf67a2d90c0db1b36d4ef65ff8b8a3beca49f5cb02963ad9b2862b88d301f8ca0ad6feea1bb810514f118a0c0e2f5e53c6e10807c3456ed90f2ef7a057b60194da766afb95087314f1dccd0eb45ab6e06b4196d678d0485d1c72b17b66815acabef49f5f61db7162b024360e4bd9475a4436d1db10e6ec6092ca5ffbd6145b449e993310ae6445b9eccfb7fa028f39351dc78697c47b0083a8f9e8071f532d9c303e7a8f727922be089a0e81aac38891bb91d738d0ca2cfaf7e2f8c483cdaac360365c1398e1f5d12d38e11bd3879183aa4b1e7abc1a6db050533c760b46551d73476e0342a4523d0d36a9a6d7e3b334ea34c9674c89bc5723bbc85cecfad7cd8ceb506e6d27db61c9439d3897c60d1d0707adfe5fe98666eef4a50793a3712037c6a6ca6a2686d2f36bcb2d4b5acbf74d979974171afd5dffd1eba8192c992312b256f33c7106b78ef472e40c1ebb1c626136c01c90d6b8719fb6acd739d55461c5d026ce2b67e791986f717b6bf5358a63f8ddbe64533f1166ef185f98c7dea41be0892d690da579343e989a3f8cd91bc36d79eabfd8ca11010fdb1b0151f30d90dfb6b76d53eda09a720937db2daa88adf67c52c35fd46e8471de56a43cb50fe9dd57f71fe427ffef5b55bf8671eedeeeec8bab4076bf979e019c8ee37e2e9fd0ede8f52f589e9a7bdcf42d26d5897be63d8e2cfbebe07f536cd21c9fdf3fbf9073e4f8a79e6ac47af99b81e96703d0f934e3d3b129296c019bde73c140c83824967f3895be5e35a6698cefdef19dba87415872267aaf3a6424cc16c6267e0d8244752681daa329b3630316f050a2df10b920d52f8fb447ca77a0520bd18d0216c89fe07db207a91d9e986cfbb6339218ef3bc68103018be5023dfe6c4edf9d124a7805de52873159c2568f3ad8fc7986b782cb882d82a577a1009888d93c0f960461886221ace774ef834ccf46f95aa2e71b96e20739b4a1eaaf340b9bd16d01a1ddabec901bfa74356b03eb5fb7878330e4bc7f0d267f0ab1514c10cf9b48eb3f1d12aad62f1a2a92057066abcbe14d93547d4da1b289d5569ec39cd5b2b6c749dc44debaaac7ccdd1f8d04f19294d854b6bb2824a4982bd7b3b7d547b44619133750c4150d90ce53b538dbfae614f634145199f00de74733fcaf0248dc7b63747fbbfee8dd8286086c0f46ee2c8e4625b1028831e2c9b8acfbc279ea56f16d344ca7b36c3c2ca20e43c0ed24c1a1a3f6654bfbe47b244efe381a49126f23b7c0155361e2625227c2112d8aa1f36f9ce271f45882ddd1e15c59eb8d178e7a215107303434a1581e155ac2348fe1c541b6ea5a722e3050ee945e06152655755d3f9b0c5afc7ec102076a6415c4a6e28fb43170a576ad8482c23832fea0f55746ec89e319c88588e81e3c7bd30ebced4413c61c5e6d84b237cbd3dbc36cefbe655e7a90b778a993e663f0492a4c01cc504a5457c5cf4c485abf5100e7a660514ac03c1f973077262abd9cc647aa4bedabc6f67de3f94ec29dbf8b621230eb801cf2646c357b0943f35b17debccd98c760b53a64089d0b54d8afc051a0be3b585d7f95af6effe487d08d240cfd94be8ab43df081b8eb5f55e7e663cfc18e50e9f7f418e029c3e6d1a13a528651d3b920362df7596a5b25e7e805489afdc02cadf09126a8b2ab9617c1ae60c9db8b95df16aa14504ed8cd0f9e376c7ddfeab20ef49a7e4f7ac51b4e1b85c4332b36e776d3669b509f935a2b2fed8a36f518c026b7b7df3b9d5e26ce9725ebe6374d8cec2aa3db6d57287c78a5f11ab5e342db74988bc102021420f94e6303078fc4ed6c190497a0df1cddff2edc99bfda1af4031ce2e4c1ef16d1e91b60e26b3ed416ec48092799b98ba033e6ff13d2b307427516243d3fbae3f0b8908e362c62ae29a98ea8c517f8318509de1a2bff7c5a281ab922efd3661c42e9e549c9bfa280bff946c05bd5292a2df8dfe5032fdf81164a70f2d14448efc6b725727c7cb0cd1f4d72b2f96d6eec1353e5b0be894170f8044fa3251789b5315b16e860ceb8afeda3ccdbaa641017f1508015ef30f6518dc8a521732ac763476ae9ff4a21e467379afe6e32814a57d648ac4ca433c9dd096eb88b18d5d8044b2953566efa250b996f845848e224acd5761f11eb5bb80cdb41103280beb948dcb2f3dd99409228d3d526862e816bab61ae9635bf52b32440ae2186a0a7869aabe72f550f4efd884b931c8bb557e57c71822844b4bbb2b82868c4d94f3f8f26963e8016e71ae651e1168b0ee112d2eab126847c7c4d93fa94aa9f2fff3c3338c21c8fe9aa59ba3fc6aa4138288dcd38daf623a6bd7e2079f9b057359a3e544c356505828673df7faf2d04b98d5be6d5729a4ba3ed9adfb9bb2effbe2164698052f9382b6300435593c35a9db0f1c2254964d2ef5cfabd941cf63537fd0e92f74b17c90f34d46aed85b991ce60c45b926509eb4cffe33eb691d2d17a0dfdc024f0f018ca93abb87b91909336d71f06f69e6204992a4d50d3fbe6a88ca77bfdd3cc59f4d631d5e9dc8feb8e8145bef5a386981ac4b41163b25d62da49f00d09e5c565502a19b1f1c5e18b0e6c63a700519e840f5d93a46dd45c149962b23b4ea2c65b321d6df1009eccd51a4000f80f093d50124004985393cd0063a24f869df85111f6cd4886fcaf41416e058c593bd9ed465cc453ec291643984342c4c4906c0ffa5072774e64d9d60fa290eef3f4931c2e51ee40d6fde30f92ee3cb08e4d65c74317a76bf26930330d851b871cc27bfff2eec9979c0c77a34557b725f28fabd1d101d676a34c1e27d42f1b8814a7be5edb9b6fd3026f9f28d252d2e6fe43a3ebf6d143558f626bf71f8d21ceffca74407f9eaaacc602f9241aed6e7750ed047bddd1362a54b074f61760defab042c54777e14d5dd079619249e4c2770ba048da0f2068074e32d01cd0bd480625241c78ecc058bc44bb1bb08e3594ffda8a9905e76ac13df0a749192cedd2ddd4f017eeccd8e43330ae053e2e563965b93e2973b587aa892d686a114a5978ae21d607043919f76503ff2debe7fbc4aa56e9d8e3cfe1b9003a1ac402476bb9850bb113debf87e813d637e0d8f098bcd3bc880ffc44abc936fafcc51240d5407b44516c0f913d847980c72dbc6c6c2442c55b33d4b7d92140db67ac44b0c440465621a613b5b6915915c8604a536816b8c8caa9b2002313bcdfda11af7a52b32d82dbff87cd0b5bf1dec0ca119e83dc996cd19184980b818d5f6ec8bdd01c3eb38dfafa3d4c70d3cfa0d2a4746d06a1976e8aa824cedcc251e6d73913773f721686bd3eb0dc57707f9aae0dc6386b4a69f6e825d48ee12fb19a49ee6917f46f9c3409be94411bbd630595caa92ba3063ebf28ff9978e4f8e74544eb3d5c768ab3cb04d2b1769dfff9b42598fd12e4ae4eaac1fec133ba9190e79d893393418032999a6c51ad303a9b2d8d7a80c008e70690af1ba1761bedd1711ae6c56153ec06f1abb22a13f0c5b2801bcd12fadb072c3add2845a0d5170305ac40aff185c80987f80a7ca8cdceb362087da7fb1168a5607b9c648249f42f31cab07e99a8ef96b0d1a89a8266e4847dd3e57dadc8767d6ae1cdab8c9bc0b693bb11ced4278e21fb093014166a652299bd46bd729f3c49416c1286623bd17f9a3902b9aa711c9e2e9ebd869cd13cd43b0385b6cf9622653de07e0430793380708e8e02b1849a30af4e87c2f422ef6d2c26cfa490f765a416ff15534ab34f10b2e9fb5ab165748db87bcb91577d514624fb7fe66a7dff59051700b72590a224adf2e0998c761154def6f17c8e638b04ec182f7d9a1298768ffff43fe8ec272be5ced18b84815bdbb50c52963586d2d040434eab8d4b7d9775ab6a7263543cdab61e41376b961b273c43424e3daa46b194b353c4d0db722486b642b14f23ad45a8ef38d35837fc5e4886c5d44547894f14cda91ec337a1b4683a71991a22dca9ad5638fcc51704cf94535f6f790de9f326ada2a21b79c83b8a59f26e306d35c1a0b87695d5782720283a10120df2a0fafa225bcb51e3e50c20196e310a99e30ecd8a7639784b51bff89a67a177bb7353c00a7a9a0e264a62a72cb6ea39f50a82df14333d18dd5f204e231c5704980040e0df3d303255b5b3ff3a0a842758cec7ff5358871a0b02c49f5968d760ee63110ecd242e21cb51a67e0e251a8a56d391fd8653b7568840eec4f8c91fdc621e9cbcf6a8d41dd699f14f580c6f0db49c6502f1a5ce4f7c821790268e9372ea22468b5b5d5637acb11e928a3788284f9b43e2413b6d09508b445512f402f3732d9cc961c544c90e5b6466b6d9a0c5fb039368e88e167952f901ffae51d85e2e501a60045d0fffb2b94feddd43eacf9a0b0b48bdd3b3739b8261a1cba13bad3d3e07b35715539f655aa8e417ea6ee510f10618872524ea71261eb750ea750eaa3a264e83605f269550a7036c0ccba9a00c976567a5734093e7cfa42f617b200b1a2aab6fbe5ddd73d0bbe8a62e049f59e806c51aa60f57565043e1c1cb46bdd14ace31710bec41af989e6c9e7ada94c842621a87b34153c3a3ff98113c6b5f6f172edde2c2cfb565bd855d149c3874e4e0d9bf86d69e46b4ea4615813fe0b7f5dd574c0a3f130b0cd68c20f6b96e34271aec915637039212f60a12ac035091c1585b3a8c6489f2740ac1c561e5c43e31be7fb2cd23ad3248da2f2928bfafc81564372f598928353f81ca9dc6414a4bb91d9af88361d783163a9389911d1c6c03dfec188c1e1486131440fee45bb54de11c539cf9cfe8ff121a8f9ae63c1e016a860d2e6997b2e4e677471189d2dc7bd3266656d0aeafbd8e5ee4a10cb287c80e6fe55083c576995209f3db8056298c7160305a8811eafbfc5bef5041d3d670f92f7093b07886d093bedbf76d010d14c09a7f3cbbee9eba13c81a6690865b274835ebd4a9bdb66ae84a2fd6a3522bf2e20c60b7435b5b99f22bfa14a40e55b7fd4707de1bd201a41db778c169c6aefa70d2039c3bc3fa3ae90de0c58a4f7cbd14b0927c555aa8b677fb5043e5b7a71766fdd358a0c9e4cfec79be085272fb75a320e4c09613b7b345e8ab7a44523b3fe391d8dfb8bd5835cc06ff81eaf015f66c94b49d214106f2ed7365d27fdb381d1ed4ad2370defb69342e2a1b4ae8473bdaccd5d47637b8f0a9af06bca17f097ff157c8580584038c4b429d54e12b4b0878568085f4b14a29ae48dc9657f04154f6174e976122b94c04a0c5cba998f1be2b7462e2bd24d04fcc59a5aefe4bd7b9148e73da79a9e3a5276874f5b8bbac090129da5312df7d0c052c554df761dc14896719347ea7f6db52dc6d8bca8e27b87edf5938cd48e90d28220146a8245ff048886f0b5e2981099f868d1c7e53d57e8c027216ba148f76b177b2764e1e39db3ad2d7611b25112138d1247640f13ed11ff4fd2b45eb3ed86a44abfe584d8169b83845897a9f4071256d2494ace0d978ac5e6ee535185dd52c87a7915dd6d057328aaa1fbcb7490b255bbcf6708aa8045f494102a61a68332d2c7aa99a27673dbb8bc07368da7113ed5cd2e0a0eed6fe618daecf63d52dc91d610bbe5ff5014579bb007842ad9e00a7b3c085e046677c63eaa2368bb2c465dbbf6d31ca67a6d977287d08da43a04ace662eccc0ea82532cbd31f768a6f197ef57999e4b1093d9fc6661478813374bf07109de07702afecb360628c890ff7d3699a336a343ad85fd3b6cc824b8acf7377822e8363a3c05b17c4a7ed2f6bbc3669942de6bf871056c535d2c36399c0083ed91c77c94db98aae91c39377f2c00982087aae22bf0dfa81de904094e817113db82e5131eacb99bbd9f0bd77f07727affafe8e6bbf815bca223418bb5068acbf837f6036f4d02434a5080aca751d402926ae68e627b37ceed29434915f5ca8c2f83885a9ad4562f81d93f8db7880a70c9800adecd639bff39022c764e16657e9e1165133d45d691d96de19195ad75606b5518173ffc87bd55e6951d78a1d297a6a516eaf134976ad83ab9ca927b076ba6ea0439792ee157c7bc5b8c6b8acb91a73745ded0148c6bb4ca7cc5f8a033971e43a3f594ddb46c986ce7f28c27d44d23daff9f17b984c313b9ce9173998f30aa0e7052d7567115fd8e470997d89d276a8203cfec87bbdd96fb149a9a84d5a02f5bf2e966f7457c8c2ce2f9bcf8ac10ce8dda7d8aca66e6babe7d7c7835d3c0adc8891bbc31a0b4a4c9ec2cbc6cbed471a28a3cb67c5a5243f652958e583f7f7f206b8a7bcbf7a78d80fd9ff5d12d74ffa23c7021fb8fc9dcacc3a617faa6fabe6041a7622d60d6f4cdb54892404c464df2025ab573844c06dcfd39964505eb318031cdf34240ae5473a859ea05ad6a4278888c9cb795320cd37862dd88e56ac8adec92526289baec0a9a5f7cab7d499a96ca840f47afbff7e4dda4924598cad1afcb2e53b3667857e08639db346caa58f0bdd2429e53552b7aff78e51f1f719fd492e26d1db7261ac3b07c223ee2e580f56809b8d679708d66915c06e2aeb9f24ec3b68777446a4de8a27ad0065985d6e874ca1b789a398c230328324ebd4545a860600a1720b44dffefecbb2926cc78a8af9dfb5f5a4a76a09eafc32482dfff57a8474a5ead23f8e75aa62dfe90c3ae7085c350f7d192ad31d0be3a6b72a57e3e870120b3974a87702135229114d1d02c7a461d4c967e5bf418aa584fe905e84b6c6ef15c48e8230638b07168c3d55df424e62eab293f5c991c2e7ac2f367d5aab24cae2376e0b98d359e0871b4307085a4e7eaf2f2ce4929b3e19ab8320e03dd73f088e4578bce67ae5b8a051a09302700eb9fa8e5be2ce4c7e4e3ee8b2783dc6c839e74ae8ae2b12b54b5349a3733d5e33496f91008ba4ffa91b6f78872d6a0618a11cd86157bd13702e101b635ac9b64cfc2d0b2548d2b36413e140934d6b1641ff3ef729beadc3b3f50e3405c6a7f0277fdf292e48d9735a67969a319309bbdc25da4e1d2fe66a21d7ddd1ef864d917e4174fea1ede5735e7cc8e19cffdb48383deb523936f98f8f064154808de77d56033fdef126aa7ca36dafb9c3cb0c0c04e3ce31fd6446613b45a3ff6a61b686a3ed98673c9101e7ca6d78c30cf37fdb5cdda7947ed2f74af1f8aa81a156ec76ee399b14f6df8c221972bf6d9ea85ddb21c686429ef9fc1d505a6327b30f578036e0774e76ed2fa33b0143dbf9386feb89a8f0fe5360879538ad9f3550ebef28b09a0fbb33488e7c448e704576f6bcf500e2dd77107a43b752b103b1e8ceaf0ed932694c69d69a585f46a01aec3fc5c1023c5d6560655331c2b7220311a0493340013bf4cb0d2e7ca4009ae9b1166c65e102d2ec169cc84497a74b931a1841aaaa59481d0d53cb818d20c3e26d9979e4b00f195c8275bfb35bf8f70a77b443ce8e15586b55dbeadcc76075e07acd24ed241c3cc1ac9f77be5455731d376cb528c9cbd13ff8c9fb26fb6d7af7114e12e90837690677aa0af23a5b7436a425486817d22136e2cc660421fba7b26e98ffe0a56b6f52fd1cd627567e69e30f54b3e1b12ed5808987101bbea5a1a53879b0c5b8c91ad422fe81192b21572aba59a41c4266261b54022d079a211b4f556724c8efa3781f2b6cd4a919ee8c29ca39ea8904e8022fd37e12e6e29402ddf4fbc8520cfe26563fc0c207283bbbc32513367e88bfea443f747118dad82c4e2c5f26d685562a4565e95860ca0d078a9d75a53bd0d3ecf5db412f981bf82e14e3f2aefb022b5f51ce6a54c3e6f2b69d3e66d3581166b48edce2e4c1898691447a9d373144b704ea8d14be10823403386eeb5d744aa8a9c6850ff2f2fbbf9cbdd8f50dafd87dba2af3f84fadb2ed665e4f8957ea1f1bedd3f900e1dd6d77a2d174ed99be782201bc6c4a3d08a947df97c6475994b1d172fdbc1065c5913320df5f44958e3feaf48e0424cbde7a43543bcd9bc38724eeeea9b092753496404763c5ea8194d699f7c3e8cc48ab877f7b2cff67de37b87fb358d96e45b5b459a25cbca8a768f5d0c5fe35deb31b248cd05b6bc60271a2202077966488aee9dcd0b5234c9afdd7b7ccedd900f697ae19da1c76f421c0d680b2feaba23dc42f8da7be8e21ed4cdcd96d4d1ad0bfcfdc767ae93ed7cf9745ad63741a0dc78669d55cae4f129b7b0b55dec61bd4db655f5078108b0f2d5b1717e589a0b97572a042d57d3a71d523684ec397bfe75800326323b715588ab523cc9077c017fab7a3ca2b58ecd27b1d3779dcfe62d52d75b316fa192bb333f553e0907a3f5ec21b599fd6489af763aad18e069d7beaa9ee7eb07ed6b4367acc002f9110c945bd68048bf08d28461072f6da4b00400cfc72e9e8b099015fec9311d603bbe095c21e8d813d8b6e4293ff70ddd5cc40abed73e285b670c35292282ff0cb987b2cc150eb712da9cbae7fe8fe0b05e70a4c4e95ddf4aed568b66d9c2556aafbc059c10568892406ce538e645887eae0885e2d7a98c682e615f0fe895c8ecfc4f28eddd33e96483499472fb19bdcbcd1afe23fa5c4e955ea56ed7b226aad559e6e97f643d35f5765f45e09970ca29a8f63531921284de2a7c92598f6cceb3e961a9c2989f2f5c7430cd54cf7dd72d2d6d217678b5aee38ec47cd248fbefb025cdf24ff03bfcd79fe3b245408485073a022d97688464a55c868acfb2fda0a9ed6372b42a7007595e540dbc01339c550b2bc605103f4f4636b10d99206b4c09c48c7417e02a662baa7562e15f8fa57d97d4105e78a8fd585444e16dd5b59bf9b375685d31b0b59847bdf022883b838bd36871a104cc06cb5961c91a0a5a62013384ebd93b002420dc6dfd369523eb1ea3d9fe1cc7b1a3bd6da7ea9aa708fb2b96bcd6ca6ab50b92e304e8d188f2f9e8452a7459ca5b1d16363309e0d369b8a6c109c151f6500fef0e0dd90dd85d221e1c942c3710d59c41866be02e3b72dfdc132785154cad6def4020a23408c20e8ade4b0362c047d66199b9991b130430ee1d21856979e09863df5ea3a737d24b946fda1741e1688bb74c932aafd73fb67896c6e28f90f480ebd8f22248433cc76d7705a248fae9f81811b5ecd1f0913141a05446261ecb82b7e1401a801aa49e14869f5dda97280bed1ad5a9c98db9bc8d11195fdecbe163ec9dacc199333a1b3f7ef7b37a78bb2fc2c60c3e9cdc27a0b3df95e7af731b0c68469c24648c260878b7c6d2bfc16a906da5a7fea752171dea588206582ba406a61d1c594ecad069b4c33698b3b7fe38e474c9624f055cefe90b4523bdd3ea2d3516179510848cfdbf3d030794a4d3ffff58bd06151533c7c19a376d79754fb307a96dcb23a79ab96c6ecb673fa9e8a6f32e74c3d737e6613dfa238e166e41cf0d5e098e1412e5baa260f16827d1e7307dc0b37619ec7e3dfbbab1d8272c4277723a332e6894d465719d4ad5417aacb733bb7df0841c592b602bc238a30832da3e602559961ac3a01dc6dfc504156473f0c92dd8074ee3a961147060cc63e60ded46e9b923d8e3dca7bc97d0788dc5cbb3e011da49ff12f0a54224f98d6a79ef216c78746e2902ff4d8d9701ff531148c9f4cdb815863a67818f959049ebd40742ea0d854c3f5c2a8665d767d594490bf7075c5951afedc5d4a565cb47b25d9105ce689bd78e964b28c27d4c835070a0a31d4ec25e2a7d73a61347d595d9d605eb97f73a4ed1809c4a2ac2a6490e117bbaf956e4c2a74a0d8a003b52dd96519dbd257f72c50227ef0286a942b07ecde8fe7426d2a099d7de4f76c0d01b61a01ba07d9dd0ee5e0d893fc06b9052e1baab7f9b10cccdde0ef374c8d3654b5dc6de6488e07c68d662cd870eeba8c52e7f7e019b8514952dc037bf57f469f6c08a33081f98bf3fec0b73ac090688df93829d4d89d2ee06774fc732e32abe76df70ad2772a353153c1869b082a2f114b6e94c3d550c2d24466a315da064f7ae138d23f813fc20704f77d39cb720697bb3296d98fb50e3b68a32893305428eea3a0f2a071d541d885fb514badbbe6b99c669a95db5773d3ec2038fdc3640ef4aee1934d9ccc0588d0e813673989f120828b2c3c0b150c133f4947a0084b83f17faef1d6f2f87072636266ce8258a46b68a0a3b2cad3cd6e701cc5a86bb86c3e73e6777d5cf169411881eb9f95422e64fe154c4d4c69cdf1e9c9dc6ed8c23a23ab76d78fad2d293acb44d254c22508d7c0840a640189b2237ebe6d63d30ce273cc93caf8dd603b910677d573022b8e7af909c34c963c8a2482d84311c148f97cc5c193bbfe162a6e22067b27797aacf59acbc81ad46946d257af6e280869c5feffda2bfde01b9a559cb99023a769b3f3f60d3e69435ad35a221553b5b409083d62b913d79a00dc66e91f836267277068bd92ca5edfc5ef289ab5867c4382cdb0ac1909f17feb39943ff7174d8a82d105cae1489780f996ad3d65593ed293aa220f526cd1c8800405b09e5c4c0f18c02bdd95d143b39a6c4223a2bcd4b83a1c995af4e9fb02964e9726d2dced40f624df3d82c7bed91bc5b1d9f9e1e094c813fd0f5ee550d5fcb39fa64cfb7c6e0700f649f361e1ec9f90359138b305d892541ca08e411f67cf392864edccd71d5204f7cb5c34330be9a72ca768c5762442593d887a1d9954e0b793b4fec4b2db325bcaf6a363aedeeb52905bf3c83dff788808a23fe897dceaa40dfad1a9a29673eba0cda43c2377170a0578ca1bcd601130e56f7ab5545bb791b667009bbae04e6bdb6a1ac497d7b7d43819a7df9f621e51b577f3847193ea08b2e66c8e795beb0387c884b00591d6b1f48210d8d9022504d9069e4dd4758f44811318be1862d0a8b9957ba6bf00fc97716e3135c940d530541bce508543851fdbd01c810528739e95e7807f5e3560eea29eb14c5e60feedc2ea37c00b26c9898a4cbf56a036e9882f9e955de67b2299eed5ea1f1ee5718126d6df48e65694d23aedbcc5cc5dc86864533a68314953b8824e67efb4480b852ce7297db9c6a93e652ca30bb0456fb5255a199f74a92277e5ad4b4bcee59fa6d9788c1e6b1e2319e6ced3cf117833f293ab67065c1b32dad22fe9a2a626e1e4b823e264913ec548963f09c2b1dd92e62a1b6dd165802f886548c42521a8055c62bee35f8e97b33e4ace15a31ad4e32b82a8f6b9679db22dea8821ac4d3dd700ea611acabc2be57f205f3de3aaff501b480e1ffec63fc03fb71974290c6b84a7c80d71cbfdef6283025afa9c86e02a84bb5a22c47722e448b620dd17588bb9cf9f29e20bca0b0f7361e699defc71b48cf8bad94edc53dd15df98b805eb45101d2cb0323e4cabfe99f2ba1bcf109d72d04ba456181d735b61defaa75d1583cdff64faffe16c4193a4916456b5f86b39981f35f0c86bb7d6a7fcbdd8d7b004703a5e6b51911fae80921007056436b490b9db38c11db143ef5881164de8ee9664945c0586a21f675c7176a9ee9f2a1f991b42633af3a38b583e09a6a64585cea2f021703697275495676bc5e6e11fa7d36ecfe2957b15e0f5b5764aa8c552e529be3c1a20c9325d3303e35dedc61b417a40aea2188a5e164b949fbb946c3f717dafc9a36f08c815750ecbe185980c1d767f1ed3557edd18c93468c774a40a97ba4d93ad4d6e3e6377b4f4ae9b17a8f4413449a1e2db54db46d8f69cab80e429e984df206792cdb2f8baf5f6c8d158f22244598b22e50c46960883d7be6c82308e27184b211b7f0a49b7169a3f1f44c212540ab6eeb082d067bffba13001dfe832331362d2bc791010cfa03726de496cce281a6626973a63c220dacb0169cc97f0cbfbeb6a61f2f5db69785067d855420c8802247988ba88ba98869a357122b73525e3cb674ad0d765fe6eeed94982fc70d053cdd654c4c23a7981404bb5d14adb5f3cd85cb31ca1ad65aa211a33492dc16ab18211076c640ad393e4990ddf57ec6adf0df782fb3f14bd1e47f3ecfa9c6be8236bf47ba4e2171f865bd7d9b120eea6c1d23c178982bbb5770bbc7f28346f71238c62abaf0664bb8a98fa2ed3516e03b5af8e6469ab497f2f96f182defdf694db71956d5659cd0cb3084fe3e70ec4a57ad5a2972bd2e0d9a150fcfc4ce73abce2f89251745ee0ff553fb77a23ac8314708e84095f7d07adc85f138c32dd12a3661bcde9d1b14d22338f49d3b07c674f365af223340bede1a883d5dfbff0917b10b72a45a319cf357ebee2248504db953427ab95f7b5506c936dc1648f14f872efd5d913a19600060ed549103366a4e7f18b3e52599acf0b9f937059859ed00d762fee8220add0ffe91a2a5b25333b46fe67dc866e198ddf85b1928c50503963eb2c61e0d7869ca40f41c764bcf9f7cc1b82b51518e49d0ee524daf7bacef7156490f6e183f00d5597a0b4ed9b04d58f610b0ed863393029ede23783af8aead753c583607f21f797badebcfd99b87dff558a77f382597dbc4b28ad97c654bd0867386ca09b06ebbacba4339bce5f15f1fe352917e3395f9260c4809175723b358c06a5755584a20df49a2fa9aa85dcca3a251177aa541af38df097f68262adb74b7fd1f02f40b42fc5177dc3b80d806eb7162a7db817ee2a1ae3aa97fbbd62d2effc8eb220a3a05bbd407eb42aaefaf600911d1ef0ed7432b2fbd108b2ccaf842440ad381a855325cc53e7b7608cd8fce78fb15d8716f97089fee0a6cc6f96f9883c8abea1fbc37395d15ae989a7622025a3ba7d1d9a88c2485abe78fcdc1fa9dbc775b0849e6047ee5a711838c32c1f1b084364ca78acac6ae15853d3a6b58b592d592038d2a49402c13d4b7c5d7ad9d2051a71fa36bc4b46d480418de33d0c6f4d1656a359301e44dd63f6626bf3eef3b31d611f8fddcd508305309cf2fbf618a31a33a1b4e7b455482257f40e1ff71719f05f6624f369551a9a7a8d7ce7c40b6fa8bf77f00886862a6d5f270dc888d223bdf2d357c9a061022c3691f1266fa47467bd4fe49a71a307085211dfd566ba8fcad2b44dbaba5e1cb0c53460b7d8f14a9127d5a09e9319bb48b2a072f279a519ab0a3fc7aebc3484501192c0f64a2871e02b0fd30d240043f99bfef3c43ef495262f9665e5a54c593a1513f69dece70e556e2e66334a6a9275dca274af64402b1778903e9de1d2ffd8c0448c1b46efd6c3bf546ff2ccbb01f1347c7c7b3da6f622ea80c09c5fc5808116687d9b9ac4b0b3d8585f3e3c8d850971a82815f28dfe62ad312269ab9492495eb4ab4eca1c7aebdf144890dd279f78b37616e4cfe3aac646bf9d5523f2c74093e9867a3b463e2dc079a2ef9df2158bf01d0b23036fc7aefeaef54c1c791603088b6877696689d0a1e73b017f133f84009aeb43aadc8c325e575821ed99df274ce9396995f2cb599f3840ec1ef2bfa0711b0056018ae75ee22c0f7fe798d0955634c7a1f59104a20f5951aa88240af530a725bb1ed22923f1669d80c045bd112209a0aea2e6857ce56054b903ace72d0bce6e6140ab134ebbcd78ca41135907a913edcf9e116996ee0a32b7e4bb6864c5086abb1c46f7cf6021cb3d88b489dc86133124acf6e82c0d830bba851fc401b8b3b82435e5b79be81b318e03f5202332246e6ef4285175baaa692de1a2ecb593e086ad0eaa8efa06c3850e765eff36f09123e9ea86ff7f8870b8f02fb21403acd439b586101bc61c76f8853071d58b93c7bc631c51b4b219d823ab2dc07f3f56ec46f5496c034bdbfc514a4ceb7e54e9daffe84a7d93ddfd6156c63693ea277cfe567e3dc524863f2ba2b1eb5bd5556c468494addc0c1d8b142ed6c9d2a9f5b7a64a0a2a54ba1f79e1b501e2d227474bcfbb2f67d831e8b7a6d1660631fc3b954cda95e59837cc8cc405d1916645576c7a5e4cce4ffef7edc44e7260fa45c634144dc59115d6078e93247817b269c791d2804ce7314b15e6e95f636f0136b7284439082e63191ea4e92b32213e927151c22af2c0efc78c7b9a988bcdc0212ed37606a6b22ae5fe88cca2d1d89775d32bfc5e9c2fe0195278679e5f319801ebce1d0272a200b838f6a25e8517b555dd562a789a3a3d150bdb5475642061befaaaee141f07b86cfdb636071cc1746e3ef580555ed0a2a28106046ae16850481cb62c0e5f7875830e6ac633cc3154efd6b0d9b8e84c767ee3e709a05426dfef7c91c0116e6384cafd9dabd13cd9b635af36307af43fb82d0c1d78092dadfae9f744cb3312ab5e780b167fdd2cdc35e80659b630cee8cfad43095a386ae22023be52743377e01cb72742ad34bdd2638227a2d7a32cb8e6dedfc4a0d502b2686e1fa000a4d57b4637f0b87db09843c5427a43c5623da623667114ebcfacdd092ed148c143fa7cbdbac49a528241667a7ffb6f6308cca752d135169e14f5c3aae83ec1eace9ec09ed437c91ef49a3955895de265ad2dfb6c77f8ba0d1480c7e81369686bbac1be5b76251a66a7b35aed5827b9b49bea4f508ca22115f09e3a4145d9a83abdf6ad6f612a2693c8b982ccd2117d75794312b5d7cf304fec1b6939d3ad15557c821c45511d2e645e6da675ae8bc3b57960750059bf49ad46e1e521186a9c9734f4a3235a5d71b05862431e257e32eb53b61ee54712ae7e1777b138e235ece177664ccbb51b12b9b3b73af939e42995b62409b272b1743676a308bb112dc58799539fb83ab5c11af456d6e07cf6dc5e476d772b82cb5c09ecf3017cd3abcee8a4dca4873add3d012ea870c0a70113d7f71389f41c27a96ebde978992b0d50651196c94df1486a39d7216e80c42d0debe61fe3011bbec909439e0603bd93d83805a0175487dffb448af8a6605106ec10b731be7e5acd3190b44182ba73a5ee789d5c0b3db931a6d78d245462639cb295e1dd21b9cf97ce4bf6d6f48c9cd6829067543c75967f1fd9c7ce84841785716df48e3653093acce9abb42700f16d88a683410a180cc2d0a33d5e6f6784df0da6cf936fb2ab2cb85a97379c01e25c9629c1ba03f3eed2a07d9fad71b80952e9afa90ac6b8292ef83a835aaa83a88617ba0e82de5ea475018e967e8345ced3a3df68efb5a0f26baca7c212c0fcf79b6d8b7c373b2a02af7d577f823ec4907327b3ca3a3d228ff80c4775ee5a3c671c873c49143f998773f8a11ca05d9a5604697ce8fbec99237023d7379be1fe562f03bb0395359b7e6d0e66b0a2afa4c49e0cd37da31f91bbc1d179835ce502dc6b25a8f01d25ae14df6ae59872aef1daedec29f314864dbb9df14b770269840be4e960d1cfca23fdb59c983fb11e46a02015fec684127207a0e0d88afa188281e8523f66181ee4ce689808e77ab99f734bc3f16ebf5135a4608c3e29f9b50b7b68dfff80bd5967811e64fadf6d04ff37d8c722278f89f63768abd2266c1b43cf0d27a48d0db5833dd2743470c28e452da528d170cfdbd9f4e52a298f4a214101a87289864354df822336fdd28335e72e8a3e7804d38ddb71f52847eace9d36f44ce0a066cbb6d79f6f77c26fa8bb6467dab10409a5e023861d948c83586874372da9571ce957eff64dd9703d860d050d46a70c02a7587e3bc89c8b7de5acd69bdfe9c7e866ec3ee5a3f4ec5ae4de22a07511791824a9332cfdc70ffb2060bed5fbb39bb8810f723f6db3046cd03441ee1e48dc4e7a43bd7e3f1531000db991bf80bba5a96974eea453f9af4e8b807790a5eaf61e605f8613a5f7c62ae1a163b1c29164586d1e1a62092afdff73ff84d193dab505794adbf3bacf2d942e7b35dc5590494ba2db343e94f0839660f1ac5f3fd7e1d2908da4da6f6ec837b402b7478dbbf6c0e14b7ea1a5563dc93f05206a058ae8ffb89084e793a03de93545b527f1646765b6c83a629319fb86d1d801183259134a0236a5bc748b19aedac918258156c9222af1f65c8f6e3c22625f3f927927741f2fd7fbf6ed51f559fefe445451285f8a5bf021884a0c3129581eb32c5ba807449b8c0df1228c9f6386b0df831f1bbcd115e994aa8871f46c621bdfcc9e9ca7875a7980dc8191d558b3451845bbdee42bcfc3f8a53859b99186d1bc0116f9d239fc4049f0b6dd8862778c39b757fc1157c9e5931a9a50d7de6100271b5f68cbd400076d10847be7f7486cf56e78ae9c8e5240e9b60758c066d6177c5644bf5634ef2e08008f6b873b8540ac42e3466ce889faa1a2a770fa31b0aa61504f6f846899bee4880e21274fbae5647cf693775321f58bacdcd0ea47c05aaa569c7705c974351a8122ad642a16df55d8411c85622d8707dfd955dede2cc580ad90e22e98fd3dd54e8505a01d7984e58cc37e36e8dd8c2446c6219811fb81e5d570367b872c60f68246c1b62eb5e2aa09b5e9061cdfb162bd64f7464cadb54a11f0966ca35cf7961be302ab2fe013d6f4d173f88a740b0216b4f2016a2eb0147d897612a7dd9e0f4447afb46a10fe310eaddf8bac71f960effae3285412584667a768e94437d54962b0f22eeb2a1dacd5310a246dd8c4770ef3fa97501ba43edd3aa4e0caa902a7d92b56f43f4614e5cab475801d4ca6109bb7c27a7d40ec8ed5c0502658e7efc1d2db805a2f7c851d205fc58d642f2f6282bce798edd7113e5211f0513282fcc699cb6d1133856eadb10d903cecf8186ffdf095c3c9e5545e100e1b145c93f46f4f7dd2243184608e49bb991fd61c75ce1889b9552bccadae50b483cdf1c54f3fd96bbc72470907406c0e47a434fd447d5f1a001d3a795b0986e719a9b082b38dde6b764e27aa7f8b5d57c6ff9dfbcb5c8e650d740522ad21ea8f5019b23aab81ae1a3d58dc63f1e1be423c3745a53ef3ca0b31f53bfd311f230b7a7ee56ab697ad6bdc0a79a572caf51f7ccb81384265e20cea3f11188e9b19feca70c30ecd4dd27ab59ba231976eb2fffa3a2d65cc70063f3693e7926f9a1007b988c1671c05d72be275e0774d827bbc124dfa31338bada197826d08ab739acee37709b6f2d19d840d878ce221c1e0f9babcba15bb0f48e4338267a16ebd5c8f0628f5243f70632f4a94851c7b8d29450947825b58bd27ad6a38de6ddb501521c7e5aae88fee59fa434a7b555908c5171e9de5e07959e24634d8fd55a6b7edbae33aeb7dc38f57cd650462c63692d13f185fd75ddb1f98da20cb1276d84c879cfab7a03c78cc46b9dcf9ef2dce1d1105b3f42fd4c5d52713940b5ab31798fe8a6269f51a661c7ed9949687e6b792ecbb47a1d87a369d00c2d97483786bd60ebcdfac6e4a1ca2a50ac030a754257feea82cb41c54ace2fc0a1bf76a6b014503cf1cabc4d4a9079f8d7860c27367f2119d7b6be5069b33085df80e760d026ef6b12c7ac273ab78fb7e9712fc3499df14d74c10a893e582a8202c1fd046ffa80e4fe6570f2743db48921088decbdb15bb938b3307f9280b5b73b774a0619301c9dc2258699f96750a48ac82515c8f7e10bb73699a429c390fdbc6b25f399bf324e48df6f2def332cf6265201fcc4e943d7cdac9336ad993eeb4440840a12380f47818b5935a1de3e5988f3b7c1da93627c2c5090b9bb54570635baa25f8c9eb0fc67dc0f80b024a9c3d56a4adfca5a17fad0377b8c119adb5565c47c08e8bac8555ddb95186d3b2448a9ec4910d0865431996b928e15c6aaa677894784971b9016cac3a6cef45af0302438e467f1519fe4ae8cd1db4c32b8962a0709d2970747764ba8640d62117dbdedeac38e4baa9637d428300d8d846cf0f3ecc1b9f3a01355bed0ff7de48a3916fbe7404455f52adf33e9b7c8e964e6abd49446b94caaf3b0c25317f824aa8ec33598c7bef6de2c161e2a0b821d432b910cac9e999b865986a12a86017becf84c209888dce9700bbcf513775f78c202e0d49163dc606205c3a843503e169484fc8f032ed78671d3de6e0e9042991139412e52fffcfafa09032262599a249cbf4bac0671bea5e1afc018e7556176c818f2cbe68378f98584e3384ac020e451f5ffa3d066c4111a8d3cae3222540cfac422c0638b1a51dea815df7c9185d06094e4b09e9ab94639cf8e17005895dba43d3d3be6f982b7638fdd670769441168963535af1876e5077aa573c78713a3311bb303ad8a5af8501d256e80cef291b91d4cdfeb5528c250d2bbb81933915ccb49479a13444d1ed770eb7049d946a38c7d93c54f61fb4c3187a424221a0e82a2050b605373e154ed236e5353d2dc96639af14551bf49478912a9abfaa32820378e3c402bceab7738bc98f74353ff3761d641bcb58cf3aed518e7e9857c275808e0d66f2d5722f2551b379bd7c0a00d06ce2f0ca35a4ba327924a166a16c428ff8ae1a8f79301f2ab3f60a9a9773d7cbf76b69677e5c44ce4a1a009515f3e29a6f7deff8b293c08efb02981680c827b56aa68c2e6f7966b5b1755447cebea5ae3c62a85b2b7768a71618e6176ad6b4ec55edbed3ed1fde55e67e6dab98c94db79a0e9211715d872e66ed983d9df58cd5ed2876a70b0fe6cc56e646b7faf20f47f71fc94a9520295bed3176a593bdc3cba39819cb4b8ce0fd4250417ebc42b7876ff2aa398a37a87b3ea847d0646a001854aedd298f4baaf77c2a0a423b0097551a6ee7bb9107e40181e71f1d7cc4dad4d0ba42d6e56514ca7c5ff398ecb7e9dadd5415c3369e510be8c8eddb801f176de4c9901fc705b1d0a9d9e27b38b0f53c482bb06f6563453b590c6f8c82cd62a5b476cc76aff5ebadf5695d13b92dc714c0d542ff900a67357c362aef2713808edf1aa454da5fe8dd3f0db959e54ded0cfa8e8ca440f083e5454eababedd7ae65361ea8d43ae7029b44c3f236e1e86004ea9eab6b49c7561ad494e1a9b826708566f38f4a7eccc46380b1c65075456701daab07348b91b27d31ef66013afbb8f64999f2b59a426bab62256c8e76ce31bf34136ff0407258ed92b10ed3d1c3536b6310771c3036df7da992500144cf14908619e4bd5de62683226e6aaf68f37827da180cb296ceab7950536704cacc453dd8afa6436ef7782acbccda6ac9fa57c1c0722c2ae60b1538f0ca3da7426719a5b2612ac77190a8e481dca65cca90155dba0c8dde841ec1b7db42202217eaeae541fcdd915a4be8882059df62da42f893120c1b97f4219493efaa4b1aa95e48a14f613017aad648f2b4ac8009d804633442f015b922cb0c3c4d14c82ebcc400602ae69abf2eb9e89d2b1035749e42945ff95d817316acaf76cdccd769501bb6bbe600ec098fa7cc667179ee599ce868475c534db087f8aafe5ec23ab6ff45c0fad21084a1eddec81fc58f1b35994ff0f6435159027eaab4c2732ab0f8ddd7115868fad5252a195dadedf52f9331eab3cf1cde75bb1b87317f38cd0f9e121cfa7d93503c1c151c2202e3e0ccd1480735ff5eefb6f020d538a96d293626e8a848a6b2728e84a7e33f229eb549ae9ea36e1f549d417eacf88144508ae134b95c685c78de1ec8eb28cf40ac0bbdf156c6f881a7de9f7999823bf739d002f17a117f4f9f11398a64968ada4a7fecd3a713b38a3ec9607d703d56b28e029d61e15142e499a17698528789a8cd4b15ccaf7ea6cf999ab7827e27638eb02d30ff72fbc4e661f63c6e024ef3aac5d46579fe4ea51029beba8a69b813d7991cf42e9f586e7f9ab6c289bc2fc4b3b79dc3645fe972bd46f6a700ec8b6fd4482f00165169a6d14aa76074115a2647140224dae626aa06d6b45b37b4d7738d684eaa8b5b3bc6f43c97b14f77db6aadaaa7cf9bf3bf7c7dab942a1c87f61d65c127001ab03243a9976c5187ad7e8150d8a50dc52fd534a639368ed876e6ff0b2c2b4988dee23f3310b08384911341a2ebb86f0c5612308da698a7431ff60926e171e83a441d322faf8bf988accf4c3b6ef96fb962b358ce7e370d293d77fa9bc908e3a21697acdd28dff16289b84abbb444c3fcab07c3b7fa89e31232eb46bb6651e99192ebcdd3660a3dec4d3190f268b50867a936e3b13360b41986e84516cac4c044519a4c1ad8a80aebddf422582da780eb39243c4535b8eb270d904de25c88c3dc33747ae17a1f100086cf6b4a90da489e4bb968926f6f4c3d00c1ad7e0ad9c40a4ef7ffe1d6731540bc1a0ef969d0d4e483a73dda77c5076158c411838e838d08d59a52e7b98b81c0078761a48db6511bf4378fae78e25e9fed98696a0bed13e57d7f05527b7dcf38110f3c12c9ad94ae41992c1ca3bc49a25947189ad8ea9ef288851faee13b82a004c77f2d85f5d3e33032a96b66d678158ad4bdbee5824e466ea4c7049b6ca9cc4a4d1a148a9767098c0aaae7d3b49ffb49255f3ae2620f0906f7aed2e9ef31151fb931c0462d1933163ad92098e0e4ccd279e0ab656157f6cca1f21cadcdb0a918f450656ab8330ef00d065ada7476944aab5673f9d0d675960c253e29cd412540e1c5500b01247ef70206bb12831bcb6ee2d1dfd758a1c674f7875d2f00991f36af303b29bca93bb1b6fc4c81a2069044a62fca88f2220492f405f613cd04336f16956c7d58e1377514a3a064a28bfa22e48bb0a89fee6ec153e520c30819fa38ddb85dbd435c30d4b27d1a4dba6d0d1ec10394b0b8f6257fb25c943f7d199b08996b042f3e07ab14cf90c09f7571721995b8f5e2e8ed616098076547e0c7d0f15806a70de6daf16b3306c7e966e9af13b9a25bcf50d0eff5f9d5a502841dd852afe6c65a7ab573bd759f37e59d7eab8d24c1028e11b09391719c2794a349a3e49b95ba6471d84fff0eca63d62127cf75eee8a47fd6c409a2c542fbf6261ac93cded9286e8480a60e67f87174574aace49db876e3781a8d9610f53ef9786747bbd09dea17670751c1c55ba14c28d064bca593ccd96932bc6fdac2021407fa934c49340a55105fad0896d9a9ff413a99f7d107c54dc7deade19941845e2a48d94fd13df59328cc0c0766ec5ac85b84d404eead935f9c0d640f95111c57f28edad2dd1e386d28ca55a31d0d8d93b8a8cac9d3c976dcf23f0e717a1fbaa339ee53a04e225e9cd7dd649aee94c89a8518789b45cea6ee88806c1ec3c6ecdbd7f231d9ada815920fc6d43a2a722335fa5cf20c0c13d353cdb137a6305a6f1f117bd0df027f6d3617b935ee3be360e661201aaae7ec367df975a8b3fc8bc371a71836e54ccf660a584c7af7758dcbfbfd2439b4833b06feac09a941ccad95edb260f3f7d1985feeb66fc869e0df343d2a9c8450008461129f6cd5f07874f1e91894ae785964a62b5063dc23bc9d01f056db249ed4a83c8479ecef680ec12213ffd5b378ff0f0807a3e76d86c28d33c66ba125987bab9a29c46fb926fe4a9bb34d76bf6f32f88a0a9553ba25019cbaad03f88961bf1d9592c8dd7745e0e46a43c927aa49ef74435d51c5fb434792ebe60f6fe925d05df2330e633c7406c9b2af7efec45b434ef565a0001f507c29ca16c1e2031ad63e54f36bfb1df4b04f3327648cf23a1eac15c73d4fb445f3160034915e1efd8afb8b69088a594dffb02b38edef40037492f8e5ad8781530f64b663911b73b9f82c3948a09e271806592f574cc7d2f0398317c7b940420b870f2837a21911f4c78b242e70df71824badb942656c0ff5b56630e7ab2a7272c9d52f73cf2f403a09dbd674e493f2abf3173cd62f072c0ade7a08ca4907f6bae7fb5e8b4463cc1c0258d1d80666a034e06e558a30e2481726330fcef22bcf62d30e793ce11ff160e95fd80472e51d1d22293aced9c1c9a18785ae4ac87b1cc0cb6ead7123f564622c587d2a0a4bed95be6bec9d47035af528758d9712d40ea663625123deed0b06e3aa9a184690217215e85d745cba6bc70f76ad9e91a5e14e5af0f4458753014dc096d25ff569c5afa69f5be86ac72d1c748a8e9cf34a2209efb3cab4b92058fd1eebea4b18b3c9fb8540c28d0da4bc10848684bf6bebceb0774e9b82f0bc26d17d91c13461fc194275648fb0261023539b0bde3fe38730a23a2b3f2208b5b1346381fc8e24ecd8d10586e6f134708b874286cad2f02c80710143b6e4600dca8e75821d2bb731d32d434fe221c8f2064de3be763de0fb0490e6a6c102d4949bde18c9615dce6000f6adc2cb1716d1840390f1a07d05358f070ee559a639a5372c68e9e52d72491e3a05d88dd32542cbef160324afe317749a179818b9be48f7b06441be57eca3f236e8fa4ea9c47f916278f2919b6fd3f095f93dda7e51791ab1f1df23d5cde8edb7b49f4fc9d9c74e3782e48f53e5999bd4b7d8e62b2aae095086a1e08b8c227ea405879db14fe81fd3e4a647ec0706f0835377d8ff9ccf55b796ccdc2aeaedb2d7f587e1a1526d2387e1fc8f102ce1faeb0c371e7d45fcb6ab68d66454bf4cd7defa42c0536ad6ddaa19404b01ce4361203a5e2e99c714155897361b5ba7acb37379279137c7e48d8e26014c7fc1adf24e2797ec84be61312c03158f6f9bc668a6e215dea205df3547ac973ab45223c980e167abd036bc58ca765c14c4bafc3fe4c853bbb0c744819d4958e06d3a30e2ad949e2396e65f974cae35037def43757268c76f3e3dc1081f3ab7528e8b650a429469fa8bf9861996859d6c8d88af6d6dd4a80cbd1aad3b47b3d09507319d7afaf31f39d46c41637a69f5f0af293feddad069840bf515a3343bec36a3bc691e831f1195d8341d5000d7774eabbe6a35c070d4e88a3f7817aaa82bb511cc9f5e2a051c0cec95cd13754cf48315dd6d963de8d0065e090706128221634cd96eab346855812c19fb6b0e13d451c6a27c8da05a35251b2a2edb6ef553340d80aabd5b72cef939a45bb3dc9339d3ee32a064fcb01a13778441bd30f3aa452af3835a87cf72aea60d40b042ecc75e202e5e133fdcb505d9c5ae9f7798d967d7efdec0b57e6776ab0bfe22ee2713429d839c71ffa1864daba374e0780b3f44f6295bc84b738f5e405207d36a07cc0183c76721fe31f719aeccf6db75b90a620ce75ac9107465beb1abf6c7982a816f765e97b9bd487008e71368d78efec3c323224a9fa96ac431e4d4f78c11dd42498885cd6147907a73b238cf30f21ae3e60a487465b47eb0f06dabf954677a305f9bfbb2414579b6b2ef4dfe8c99ba0f9ab69173b6e4706cdf6002a8de3410540e1babc4d7bd395891d97c5a27f61b29fce50d154b3b2823f99c89235480d9100fdb8269f7c80603391acc7c409e4cf1f0d53a313e11ad7ed05545948437795210cb3cfbf2ebc5b474a1b2fcf2e9f23848196ae0bb268dd3776aea5601b3b8eb71db37b43899fad7008a0bb0f84d0f973f458cd1c5c4b9f89d80abd63a0ed8bb54ec8f931733079672bdaf2f7854bddb9d6c7764a8d61084851a5f305bf50d166cd802272b7d386c8d3876a8248c0e1564ce852f752d2466eb33d9ddf510ecab946f046255b3484a984e68590e9f07a72f744d2a66490b6833095958f6d9befaac918b11b7e7bc7cf5dda55e4b58ddae609bb4e55579dd53a2e90183351dac8b7a2b823e1dc86d072e0e922425ee1356f86ee898051004a67a1d4385e1cb453ff737044f7772492a69b762919df460275d88b34b64d7ea9b52965c6cf5fe28770c1eb44255c0b0678d8460726f7d73c69938e57675f0e35705b62938400c1cef6af8b02e136152ea80662538346b8e7a64a5e5bf6934c4c2519592b6a5d5b8c211a79544b61882c3d9802128defc329a0d3b997a1c91794d8c4f0989786ca08f797b7f14d0ca02fa89e51c5d8eadbffa07b64504abe9d710e22662eff2e7b9742a73f3d71978241886d6f8da647ad8f38b641d6c99e2e2513cb3c1624cac2d51e0bb449bcad854d015a88738b0e0180b8f95105d59360ac933dfbf86e49ed586212627c7b74f532d399ceeda7c6bbc11ffbd888fd6735a0b62baac741baf05afa2fc0b9c141066cbe553d0767b72434a166fc1db613d5b6d2afe1a9407956c892dcbd5b1e1fb1da44da254c2d24fc3edd343e52c4179f14f18489ac33ebfe010bb19f043bd4ee1f24f8f1bcf677fc67538c22cff3f8b4c1f07d297c49bd0a08b185515b0689065482ca67e48f8345ce4f2dd0ebd3ce86a75a11c4a7ae387302d76b385fd30d5340e4aabf8990d3cf66e4a0980c10c8b21f7626404b41308947f61083ff9434770cb74edc949dded8c4c8f5b6348f35cc8d9dbcb37e59c2e0187cd86ba4b75445e36f94085acc90b5e784d4f02440af252d67c5586a34a758584b714878c793dd35d654729949726dd417bfa5b3cf7eb7c9a48a9bb21e5edafd6443bc00e5ebb820ac64032e3678b4191d3ceb2969c48d74e4116369c562651a45131bbf081c63129ff30db27174344e0fe4dc6162cef167abbf6a9b69f2fba25f51dc1c735ceddef893766b4a5c940145d35fdd8e11f50d40efd98f2b4fcb0265c2730d57629ea4ca182576e84f1b1476e9ef445073838ee197379106c91a0c69052b70a007568189dca063fbda0741f05aedc0ecb8e0e264ddfac0bda80918d3619c55a542456433c43134bb0200f83f4e2d474576544cc5c8ad43b004ae0d9bd92cb871bc1e830b724e62a0721b3564b8c3d5ab1029527a14fbaed6c78bedf36af7ada17a283da2b0a51b27a8a4b2aeb6e6a44607bc5626e6921f27051c64fac5dd478ba21117ec53ec586966a0fe97cbfc61f820d01d73b13e077e4922176975a6a886f52ba13e0b4c985a5082a25868cab733ee4a0744601729e9da3e463198e42f41a75f4d24a4520c1342e0430c424c71c60f5effa71035f51feed20c80601169034a7dab46cb668018062e23d30698e5612df51291c025a541b795d2d58f00b3700bca017c954f3bd1b6de4bf706f67e3c9831d3615f4b9c1f5941a9398431de5a133fca68fd5ffac70d315ca10e0126f1f380890684300794211c38f6cca9f754f2a85661108eca928b2ac64761b2e272420e3f6eff4dd2939463f094c328e5a28278f09a85796ecf04910e151fa640fe5be58ef555748cffc52e43d2998901e653f2254a0e25deda16809a3fec2ed79c9cfaa24db613c612a66ecfbd468c5c80983b37ff0178f0c69725e460df9d2bc73577decd6fe250d9cafe74f1560112da2388ecd0e64a05333ea48718cbc14f38263f4652ab9ce7d4bbf8bc804db096b954a1f7130947470e7e8918b707aed0357b391fad57a095ee0d17c49af8b7afdb909ff9d526cee7de17c5ca3bd963fbcf83fe55c27718a9504f4df0342f6a084d4c24965b0cb1a3bbb7da179cc078a49396b3dfaa78559b06912838b374e05d92e5d4199061541d0406bd0f6fe78646d64abb0b101e4144afe6bec30dee745dadf40273df092d4d9a095a9ac140ab57642d73228289691012c3e05d129fb2131f492d5f8aa5688b4622e62a1fdb55bc097d976e673c644c185f2a5a19c7981006963de8ffeeb500f080f3512debaaa43cb99a5b2ed7dc45a545d1282c346a1be707d6c6d26dfbc06b9e4e96bfdd61a8351b60f50db8fde3dab143d5d70c63a310652fba50ef303ce265ecc77cdbad5905b9616c93983ffebe19c319c7bf5eef2945b9b5af274add554e3fe2bc6735897b83f05d3fc8f912ca81ff48586439e9ba2c74eb68de89ddbdbebd5465c890e8ce8c3eb9be026ad8195f56f6245abc119f3779970fc98542189c580a5961275fed159f73ef226ce044961d4e14ec51c06baa3ac7612b1e8127bc19faa5f398d7e63437d1351dab31221242ac7e9134fee5c3f247f79192ea85e602aa6cee7c09c624521c9b038c0bf319eb1e2b17d826ceff8957230b8341b1080ac4dcddfcb3816dd6f757a0939f1c6b48337a37a069beb9ec8234579f81b4244ee5d2a4e4171b72fcf0b5b9a631a3d6e30b2d558c6464a0116d681a69011f3712d7d25cb13a1715c9d1a4aed62673c5eb11c9cba8625bd4348b9ba175c7dd3b7ef8879be5ce6e51c7130b2e43dc17b94ed9c8ba205cb22eb0abac2378825381824b06e83a516f5d0ce1f74e642b4a514f69473b563105c32f0b916f5fdbb040cbbba41274ffbb2dff01d538d6e484fad8c7ba35cd4fcdc66d9ca6aed9e90ec52c577c4fc5026d21f5dc0cd9e76693544a7d08addc8f1865d5b6a6860eb7104a539a103fd8dfdc70ca8dc0c5106e1d8f1a7db72903a28e3066744dc00c015ca559dbc3de7a359516bd81b65a3de8a5cbf55ecf851281b803e3283b071565d85b5ff249cc96fbf2a898636845ff9857694588f20a96cb6d40138ea6220a1228a408a256106e89efb2483ceda41435311739f203af8f953db8316d75a38e39db699f5f08e963df71d954b58338b91efa56b14db37f3c1b2bec4679272b9e618d124733458db9b0730978c78750aaf4b77b065b9bb2ed23757eef260a69a3b8929531654a4b46ac506ad6a7ee8dc65b12a2418fde810c1eef65f8791ce7252fbc901920694477cae2c968ce59f6841d30ca252417f0ab119ca04f05fc5d8ca3e4feb9e4d0c401b390bebd3612e15b887b9f09f549d4fb0c4d9c1f7db59201555bd2433facc394973d2de9f9777019991df08b2a34d2b7f1a2743cf0d8cfaf2c35c398ff1e2ec591fe028c525a149e9e1d948297d284d77975dada84dfd76e7f6d536f3eec4fbd5070371cd3bc1006db12d6fc9bbeac35fbde0bf73f75f6bdc94fd57dcd920f509ceb5d1b2236ccb4c08dd5548ff7a85ed5e4c6b86d93f54d337a6438b0f9db4eb384f62d50ca56fe00bd81509bac13b2a082dd52dce64aa1ae9bc00ba5dd7bd82f1e0a38f5819793534d57f3203116b4711da048e8bba51aac41376e2d984ef8bb800178961afbcae6b7cc4ecb72f7e21fccf6b6ab91387425e1bf9c8420046cfb9afc690ab19e131fb43c467b75082008ef2bdb80cc42b746537652fa1c3f294847f5814e11fa13fb8625183be76434ce6a2b43a34e9f922af6aa806275c2e4ccdb372f911ba99795ecc554aa4d53ce07d9c8a4c9de14baddebda25013740bf918b70d4a1fe68265d2341a28b9286afba216e5df7a1adc16ba5ec08001e656dad6a3d039ffdb5245c03f8b4f248d0f234768f58bb4350c8cf8f583df47d28b3f2f09ac5ec3de48ec8a0c97974a3922484502b65e17ff6743ea3731b97d782a6755f73b39799a9b1105f05a16003b6379b13f4d96c19bcf37a18b4079afdb82d3e69b6b5db030aab0139a9356f95370b398ae4718e73aaa1a103a3af7675d694b4f397d209f61f772923aeda7b2cfac75390bfedba0ab3aeb86abcb061c3d9b41b7870ea57bbb60cc2d09c9bed9aba15807174eeffc9f7cd3af14ce51ff9693a1670368c58fa2b421009676149f7280890f67bf3eded76514876c5cdb6c4e6c5c6429fb29234f0a4faa88036d9f015e5e151cdccab2ff858d361efbff9af604c8e347635932e68329bc1e70b8a40e8ec3937c6095d6ea27b6489958468e56bff919c7e860bceec9cd163955add9c903f615ea068c9cb126c99e8c0edabf27560815ac5577c7b399eaa72a940bd92c04eac86a826596664a757b3ec5fefe82f52c144712a89be9f0f0ae4aaf393090ba592a8c00fbfc4bedd4a2a9a1e752ee88a47753a12eecabd91c03f211cd3c0b7295ad9c06f11c3031271204ac7d307fb9b8153ef24712544a24be08a16101aa85dc8a667c2da83012bb1ea472fe5278942b16c3a9e18bd3332dbee595a872e6f31043e5a381eee11be562cd057f5c496fcb5eb627395b9d8846c20428698d6bf7697cf3a2a7b8a54ff77fa67ff8bc79024369f6410540666c7a47d6ea698341e3e2ecb21b6f3302ac07e5a63e672dc483c36c54018cb11b56dfe3bacc2badaee3ffce2ac9d96f11f25e5cb8022fcf53538eb10265b88f6b2723cdfc710b527c539a8c0065fd0bc4c7114fad41f8830b9302aeca7b5e4d5aef114eb0b34a5ac08b4499756409db11e45c53480d47b34f47018e95c6f6147870f6675f1944857ac602c0455471b13b6b8e8fae5dea7833d9e9ec90b1ff25daccbccf6765dd3cef106afd1c990678830b140a88d69fad6ff3f7ef4c5bee2a874406a91c185776e4949aebbbcb87782342fa79a68df754604c03444750422e64c1a3838597600ca9e72d182dd6c5e63d2ac636cab04862f8f153b35005d90c44d34a2cea9a7b47fc0366a3a8a01b220f4d9a30bb4c5d57df6c4aa30c05e4922bc9a0323953828b7c0645b8aec207b6bd8e45719a63308b2f324a10e63ad79bf21e6d938c5bd35a7f4b660457ed350db891fa6df2cdadca3799103a64cb858bbfe45a681404de425bdae8322f448edc8769f20487edaf78041a6bee16fce20d8e079da282152d2cb189e599335d6494b21904949c8cd9200a4bb34077ad2d0b3fc0de9c047df98c75b7eeeba6ca2002f227c15aae07828dff6a77e7428744267f540f7c0bfe1e42550c1a2ccd5cc30bfeb833e9db03553bb8b4d9012641052962739db326307f13fdab01c9eea1894539b176b44fa16bcd18085c9f07104d2e56a367146149e369673a3850a7698c22e9b857ad3ce8f8a3bda702fc55a8e74f447db85900ba3144a50cff55d97e68e55d644ae05818446eef19e77a37d88f141710f3fdd3bffd3dfe8676197a33132f4e51b2278f8956813abee7c80008a033095157869920122688cae3fd7d9da2f6879b920f446205764801b506d813806b8635499943b39610b955804aaeaa35b28d7d80f1d670142a02b9d5a5457fcc62b6acfc513121289161ed18f0829e94adea93cc611f96944f54b81006a5881af02990309986433ec12e9fdbaa7da1c3a12a65f4c6cab198cda746cfb6af01753dcebcb31777f5db23d338d286e0e1a176a74736a4b51a6614d24f7f2286b8ae8b6b3b5acb95eed470030fb94f83dd816750481f2454f3c0c954e9a0580cf87d502e80d15c56be8d07f089d3d991da1137a354b13d62fb1472f0e311eb4de1d4d3f56ed6f8e2689145765b269e9cf04ba586c6333f64441977f02b0527a98d9dddac847e6d94b2b86e2c1f2d26d34d75dc7afd5b0dbf46c47e6841c1ed3cc0de81006d6c250dfc7bc3d0cd844f6d3c5986f3414f3c29a45d7ac57ae2bf29c8e41cc18df4b1ab4b4a8e6e983983d975a2ac9e0f6abc1262ba940d3ea5583cd40b94401d70d508ce48823149904af7fc16096b8978eab13942f6810542bd8f37044c1b43c7cafd80b74e850b3d12e95fcdcb5e5754cceab336f937f1be671f7f0d01548ecf4ba181a7f3faf353c5630f5bd1d3b455e5498d79e84089fbf6ab8573d517823b2f386daf6c581c937706f20934d7dd5219043b258cf4111c300d709152eea7caaccc443ba31d5c047b019889f1d92b40779f0b8e80047fe7297a7fe001dc4812c3fa7f7c0722098bec862a63d66cb5d0a7cfaaf75612eaecd13d06917bf24bdc3928dc115f50a0d97e27dfd3bb80c931d09cbf1ba0af4ffe161f515869a186f563f2c66882273648a8531e2903fa723a812b0a59a3bf9ff7ac4b5e359d4b2a731941a7d9544f0fcd165156c6621ad0e497a53af44a8a934f9080d7c0ebc5d1c2ea79e782b010504420c63af542d0b928afe60e9c20d6db98f7c56fc625011b0efa433bca748ed9b6ea6c3203916deee43bd2287ce98de6f299a5f12b1e2f5c7d8726d2c32839c99020307c4d7ff5920688a2903474c8fd7f56c7ca3f403f069ed009d3ee7b3cdbb56fd525e4beff2f65e390aecf1f304a6d28410a01e6f894593b78fbaa2ef7767bd009c3b9ad9dab18f9b6d4ac9a17c9fa7513d2fbf814e554bdb7a3f52782ba92df772d411620f0cbd55dd24471707322f4317e97d3456fcafec6caee9427c3aee063fd98771513028e77d2cd5aa25d5bba93defef31b96fe5b8471f915552f23e1d5677473dc131a49c9fb497ab123924b02a796cb9539452114fb310d0b72301fe378035f825e9116f4c9c732fb3efb1322af248a75a473968695fd48fa713fc5f28d2862af74e995e922d475fefc025a6c0cb9c6f4ef5c25c6446e9edbf47a812b004327c52e606e3d87e4d79e0ca6f21b78ad038b37ab5707fc1388253e4dfde50a37def575461ceec77ea82fd32b1509ee0f34e525dd02db05e50498c91e47019b87e33ccc37aa4b5711e4e79608c3494839489b09d5fdf710d323c6c79d85b4d0c52f5c55bebceec9f089587b6e49828dae9c74e6a6dedd4f2efc4eb92400848bf9181539f02f5029fb8edf8ac98b17f138dbea8814d7c92065d683fd21c5d4cd5f221cc5a33473d91acc49b74c45abd7005c2c092b022609050182fed6ea3de7b251c2b758f96cb788674ea2b9cf47951eb354dcee37058c2799f49ff67eca127509a3f95428c14fceca6a18a4d3cb44cc2ac05227b38dc22af6fe7f2cdd0009903730f1a0b7cf0acd9ac425e79381361112ea903348679e03a699da5e300377dbfd513cfaf444f8194b5f5151dc3c815ce3febfcd49afdf29e646361d79128e5e4b580135a10afeff80605467338a658cef18d49179496a09e4f298d8eab75fab22bbfe47f38384e3e01f9154419e41187ab994d53e11b3170142350d8a1a7ac1eb4a2e2af8edefb451be9a270cfacc3991c460cccbd6f9ed2ba6f2a6ecad5a387cb24598fe8fe54958a5415816cbc15881e4a183cb3938ec573182908cb60a9acfa3a13e5fcfd8f36e1f6c5b159a74825f940abc0608b204f322ad13bee33b77e39b8f810a3eba9dcb6ef4b7bf2ebc08fc1c3585f779876640e62b30bb55b7e2ec3ec2a290744779a7190d335621db450c21eac063240212b498928aaa7948699ba554ede1f68a063059304af850de8ef9f5dedee87433fe00e357b248c3405b355c1b8b6f22a35fb035b43c8c4d4dd4b6a79728dc5b3338d683c56ce6eacc706f984a75d83b183300694cb3d8f673d670604203460f129f6c1b959e1fc63d4740c60dcf71fc84f016709c1b9e1c7ddaf713230bf440ba428f82658879f7dc914c35dc1babc82b8f6784d80b1e0a4aad81c3b2041ff63f8f91b8da03622c71b8983c23279114c8d2a6071a10c9aae19ca2c0eb28e5306eef20c852d24bf12a0c37aa3b56eed8a037008f658afc3e4fbaaff2a286ac9c9c7d8f39eacd01ade7a2e2dd961a9975df42b2ff265674fa0ad75ae4cb5b8ae20e6e14f25b433e61e5c670d8bf3fff0e7a025eeaae1d546481798dafd8662d3c830d2c2b7bcdca3dcf768ee3a95a2d6f8baf35eafc520a25ed7b50c6115e560b0af32fd157350b9330406a7ccecd12b8cc24dbff9270b9e2367bc581aef64a949f8a10babdf3183f6018ee0a6f1423e68519eb0ea63ae2e5979caa6d0d7c3c8964fe22bd7fd25f1271fa7e178eecea61cc59d40ccd69f84d75c950ca2749719b7aecb36dae03f4b52e4795c0c8dcd48ee7fa6f93964022e92be61311efbe9609b1a4e2baf4e243c5e02705f203b95cff1c1c51f1ad07fade2e15a0962bb77212fa0e3effe6e23a0533f29a7a6e24932b191fe44159577b3de2ef8b92228e271daec016753f398f05e16e3fd8c8da417773325e77d75a1505c30c333f2afc145be4309a6ed03fb7bd03b9dc84b041252174b0fefa6e9f9b60d7df598035041c8616fffcaf48824db106a6dab2b5f193302b9b950b5675fefdd2d2a8d16b1180841cc75e93a6e9c6436d555dee8d3d36a9820d3db1ba376b13603b1268598f0ede578b341c10e706e03fa505d10f79d335ea0a74b9faa9006fa668e79261f660badec7cad08d5773be3fc965da1c9892a93cc7f91f4968aec41ba810e5752b6edb20dc0cfa46d40e218c7c3dfbcd6311c4ce803b60c6eeccbfbc7a06a44616bdb848c92b39d27e987815a8ea70b4c9e2178d2ddf810328cbb33e316c9d5e9a95e991db9ed55baa0b9142bb4fa6a1e8e427e0fb70fba5592da4df0db2becf1271c63d8fd6a44610d472de93beca6848263361abae665b610b78df4b729811e38bb765139fda5653270499408a2f6b43cd099169b2a4d19b318a49fd7ac9b3d08a82cb0647533af5df4f0132f9efbda194b37d35597271a0dead2f7fb8133509e4af27c2f347546b3fdf55670a0812d3311c0d6f6d983e8aea62186d6b0feb4c996ae2b10c41aea6983a7a074fd15594f82e30eb004ebeb64e0fc212d130b269acf4f22ba4756741ffee8dbc4fcdd2936112dccc350ead5b1b8691eef40b613e1c2d3f5b497fa50c5c6695ea70158eccc63ff9bc93e7da6f44a57f1c7de03e4e465eb3a5fde7b0fe8ffab6688871a0d064b7847c231be0746c951b109402374f63533da2df3dad5bce2134b8ad4e5afa33e433fc4f3bc050de7d562ecbaa06ae2eed19f75a2ed9c1077b466a518a06c2979447db9ade04d3ffbf4514056c2f4c46ba8e3c9878f69e95c8051c992688bd7de9be233bd8c7e384c9bd5c42bcd1cc0a83cee9a4808abb612528e7e35c77ff8f812af9ff5e77f3023f6145acd3fec3945f342cc25ff671636bf6f17eda34b7ae0c10b117d769234b86db8209dc5a9f532a0f3567518a9f56c74fae9139fbf49ecf19c6176e7669b3916bc16f6cb65587dae3abec69f4bc31fe101c9019c39d05cc376b6791c927f513267387b952a1adab4455977a3edeaf09d0bb61f4ec1b9b27f290858b44e71e291a9e2ef51a994c579ebc8ee9883393509bf7f795e22c6d812661184ceeac13f9173799dba3a9d8b8494a8e053667e59db2102545ed645ca96fb9d3d92e50eb07b96fbbc9783dd43640daf594720059e6ed8abe1d9bc5ee06ccbf9d310e80c7d1828a4312a1706d6133501f2ff377c533112bcf5aaf3243128c6a2e4b0622185d97174a7a5ada56846897ab8f14da2dbb36bb0753bc58fb4c9cdad9eb4997b0d6bb1a8bf094d342ac0e5ab597dd9b8486b263c467997f47a6ad028467634672fd2ea21a2927dfd22fabaa5b8902039b12c4d7657805e127fcd3efe269e9545300ed131a5b9c0ab4fe6a359d07b7cbf34fae7673632f281049c0f34c884613c921a844ef3da1cf0ea8ea4ab18cc5e37f75f0df40484b2abfc3ca3b4c65d037608adcf4238d7e2adfa1d8d67ba47fe5b1ba559cad87801bfe735e109a6971ccd59134f4d9398b26046ec3003aeb7b14d4a3669682acb77f674f695df8627d7ae229b3b4b31ba9486c4a0e6e349c156e81cba63b331339391bc0e1865f13462b68ba332da8c410907cca77ddf9fd0a7ec7c33cbcac93da5de103b0ff1b2577884dcce5911eceb0f44cb99940a9807252cd18f6602a9341d50fbf58bbb5d0ea27b4f45ef1cd95001059ccf42143278a2793b7c002b26da950873d3d4feb6eeaf4889e6672ef15ea6c223f50a6f038a7470e3159f417008b301dfc2653821bec998fb86e7a103b7beb8230ed1fdd711eb56a7ce8be9ed89b00fc8642a104ccc5490cc38e952e003d575b557867ac726fc9d81cd34422ce0edccb614178f2b3104afac6b769b616f44689fc3c2f3823c6f1a929181b3833ba3ccbaa9f840986930d6006a0e1b51c6136228395575e4d9d83c9e600cc3af3d4bbf72cbb24c5d89604591463341d967e2991cfac784d68c1b3225426446aa374b325a90d2af0f7a646e9340f9171822a4a303a4bb4b6d09c61558cfd6b3de22a1dca599327676047ab58380bdd7a06c9b8c510d27f6bc0420a37e45742870f4b99553579976d246372531710ed97cdcd905a17667b91530a9778901810c3d08c8d6f66612d1d940356fb3d45d43f46536666c4e0a6e1efaf5d527e3f0afaf111d97b3ef39f30ff641923cf39d3820c85fde62059812b7ed7861dfe7c2c18487a96b5c2049716af5b0a4cf6b76a5f77b85d9f5fdb154da4c8dc8ba3d1019624cfd6fbd3c3c62b4244e02662108ccb3679d1bf1c37dfbb5052b4ffade6c418e7201d39ef3f69f3829a0ded6f0945187cfb30560c093fea32f4c9c2aea26fb18e51dbb67e298f0d1d20867b7a305a5315da14bb2336eccb15d675848fba441e108ee0b0157466c817dbb7f4c31541526e5a5ab6ecf322b007859b10c8b6bdb3c42075cd564038bf42be1fee7a411b60b99fb4ab451ddcdbfc3258dffe716b76b9e685c8a4544761643e3f732fba250a3da67fe5947456d8b37c0bdbdb7d56ade5393234241db5b5aea710aaf41b24bba4f1263f0b9c106261bfae78f34fd8adf20db02400e387fd9248ab02baefac3f7840efe6463d35553ab0c00a704913e16d9b1f98ef3cc9a15fb62fa3baa296a29f70b859ba27ab16a11f42567843e2a869e89c96249fd34469b75437c9e3a704dded8ff05a396b8b0c15b7f9412fb1cd4798104b22f33b09f01ba6c5fb35f966d1eccd6da2485f5eb24d0ef6ec1d51ea724cc660ccdeb591e68a438f50864073bf925434e6d85feb88652e012f05149b0b3720917cea9733c951264b7ace38a62733b317c48e11c50c16ecf2f63a1d3db821a1fa3c550765113eda5d765e66b84c92e5a1cd7e398614fd6b7a75da1a5d79a70ee4df2634ed5ef73e9a6bc37aa6dee6da22b1d923d8d8da109d04aa04dde74191036e75d7a04285d5c3d38719bebf53433cbb69e20cd6d9dcfdbc45a9e0b260375697dadddcf19e8c2515eb7bc4243962435cdb6719ba229f40832cae47bcbda86f483a8fcae9e93107db627b78c523e0fa20b5c82ce1baa3a7000404553d536166c1145c4288c61e3da618dee123669640e7c9ff914f5893d761613ffcea533784f5aeae0f61f1ac16022ce7581da4497304d314590c2990430178fc4a5ee918fd0c482ac1d2ffe26fc961c9a2774306fc7a4a0ce6300166cb6263915493d6107cde3ce1c89a0a611c22fd48edba268669664b50525e521db3e532ba3e261ed45a39a633c9dea2da29141df9d71bac9907ce1e3571648365cb423c02dcd3bb511efa83a4ce49374d0b6afacde6cf4301627d2d0b49bdaf33d3223bc3d98fcbc0f774e7804b58df0504c175ce88751a6a481926226ca686655735bf9e3f23beb14919a95104066ca92a1d194fea95df3918e128d27e21bd9ab58041064dba684c1ed6ce55596be77b9c2f5c98cb492f81c6e7b7d457604853d65dfa9dd4c5335efdb9ee8e7a3979b484ca24683a92449a476232cc39030b36b637c95126ae02c10b6249767162229bf0a78f62023c4da99210cae975321a0a0466cb7f1241631f1a3284b483991e75c39238054043c5c9f14124a8afe9ee5bb5f76d59825ff14b72f4ea55cfc30c9dac04422fb67c86a412c37c63f9b1a3e038d90f70dff3bfaeecd94699fc7f2132b63296c15325d83ef0fb6629f038beb5547455742c180aff74ef794e4c0ce6ddc98bba545e9c415c23ff68550295398eb8a07a225139837b79d14e915a65a8c2a68d7baed4dff5ac8a5726eb2ef80c2bb98c9a4e986f81c1b14d536cce87ca925fe0946bdbbcc536a951b7ce08eefe43074b8b2abe2ff2fa5d1b436693ecaf7dba55874b6624a2d2da1c405fd266bca8a43f741e82779b0878e3ece98ffa8b95332a82c3ce56dc75f7c648b0116c89220c237f4f6e9394d164e534509dbb9f540ff4b98024838aceaef7a594fafb83ea6a2b2fe91e806f8045c21d05197ae6d8aa96d697f61b6f3c1f704022a910a33cf4417bd7ede580ea460ae862e35905682f3d75b584a34872c2c6519acf20f456343b74c5d01d39b30dcfd4b12dfe78f501dcaf79164ec0b3e1df0fa431f774a867f5f1944d1716ee7a52d63196a6e85081a6c31c2145eb0b05c278b3f7ecec40c64390b4c0bdf8f49b5d8282f0ad3a55dfa4c773f0c18e679a1da2fbd31cb6977fa48208a4f5e56669a6effad86331342e2ef89f6ff31ce8395493dddf64bb4b032dd04a6baf5d692cd7135cd8a79a781a0a76f1b2c502ab58a89449c646e55f491cd73e224492d2fa90e643e362320c0abafcbcce7e673018df189915215c0136ce2e9aa495d959836a4f5e1fd198a4bc5e263c4eacf009b92db6527d726e870e255493a39aa85f28139336507f0a9989c09fbc1a075c4c02336600f5f6d6c89925813072d8c8c2f77060360a4157da0e9e013406dd35bc1182e10201cd3b98804b014d764b17b8578616ccf82a8172e2f8964e86c1fdcec94b963f73bb1ecce66cfd73a4a97a0d6a99ca9e910d60cbe1da8da99593214de7e799a5c845683d38a53b6a5239939b4679db86dcccaf601dfdf79d04479183e561812d496fc7b6bf77503e7da0ad263afc7b259f7fdc8900fd1b4aa2c88ad52f486ed4353cfed7e0bc6c5ba196b034e6a21b56b3ab0e7adaf05b15d4ba34c1cb947c86dec9b28a93c07ee1983160ffcd39c45069ba91659e0b245117f381d48b6cfaa3e5c027c77544631643e8561224c450c7ea181808deca9a2419e26c3740842bdcd0058928a22e56ae8a6196f748c995af76c4fd1ec9166552d2556291cbed52a8c47d898b9475ca3bf3483cb6e5dff9154e45776f6053d29eb08b6748ee10eba09c37c106087425556c00f22dd454b90a447c02d2ea883aa06fe1bdc062ec97e9fd641a47784dbb8265d8ab3ba48635e85204372efcbe2e1f806bf939dee04d8fbbe09eb489e1792c5788b517f6f3561e9adfa7e1ec45871e122846f250718a1117311095427a68ac5181a2df3a4b164fc767d3973e63f59b880dd61cc101addb897c4f6d82266d05817a0df4af2d0d898f1d0645270629008f3cc50c304dd7046e696d1459b76920ccd4d114ba0835e341a6ec388adae52c2ef13b30200e082a53a58245e0883f9b1d2ce79c565c9491a179060cffa4c9f4765c883b3d7c82ea708941995489edcfe2153f7dc0f2245fe1ea7bf6db28ce336adddbc76055d53a78951223047c82878e2c432ce082d524fcff96eb53ac4f21383160b6d694be6bf1ba05b5c8739c3e8dbd8dadb4d2128f2b4af68cd9aa98adef2369e034c56622d3d232bd12e0a66c8abe66f592f922d34ee7258c0e951e70f50c1d8f8fa1bc98739550f7adfd012f4053ab9c5af875cdba3987c7c37eec2b0dc9b310083a613289fae8e1ead21f2fada719a37c114653632d6bef327c25c5d751287a95a06315915858d6e057c332ce57c30177eef0cf7dcc041c36e6c4184a8d9af6862bccb5a5ffa76ae322bc5158c466ab4bed2eadc393861b874ea51424d8d0c8ed6404004da3807d673adce6e2e868bb7bfc961952cacaa2f78cf5bd4e2cf4178052d12463bc5616af1ae6d03e1689963eb34b09a36cb03a26c27dee4bf611c03007d6b2d2f3b902684c32caa67412ff496cccea0312ad4d1b344b6f9bdce6322a3825e91eb94488b2a58b4952159d31fa3cddce3dfb3d3c9c6849850103f0d6d575cb8dd90a983b1a52eb2270b72083cb6dea31104f6791763263cf843c096aba25557fb350dfda1d84b8ecf976a37c11687f947119fc2f97917a7b3220a508827d3d268815dddc1eacb5d8c1e73886f27da2ba37d4f8a5a51ef2039f33746a0d4c3e4aa77611e0047a0a3f7e68f8ead57ef3fa48bd177a0a6135982466e196171e636fcf28c461020a3313c74ae427c38caee28a9b80213d2cabc8e61b3251d0f066cc84ffba95e39fe6ac97f06b4b31e1e6c7f75ed818faad31fd6370822c8883bbb2abf0d56c1100c27ea054b6a5f386a82583438cc9844f8e0c4ae753ace208fe0a958a13b7d3025c899f84d5f05e1fc2b82f5c5fcaa9ba102990f6d461472927a76ca623cf58cb68789e36f1ebf1e697c2cd1ae19d8c413719af1ccb05c47456ad0d22d04a937a1b094354a88f95a3e7d3c5bb4860722840144583eaa9cf110e6be6540d3963746d24d479e1768cdb97cd6b8c9d27c1238a46b9d81c21d13e7e0a91d5f1955997420f47255709d48d162ec2b2087a87ce078d6f0e2b7c70f5dd5799bcb8890ee90183f2f7c4f78fcf8e8124d52f4f0dfcfe9e21a2edfe5252f2a111f71f2c9ad9b8fcd86ce3867679bbb0f85a40a76faad8d7fe09233ac506d7fc2e15a8ea3e97105d21d444dc6d65cd08f59079fecbf8f5a27c9f9489dfe484e07571935a9872b07cc581a98cf6efba13b8238225e6c32560f6669181e686f0eda865a3d1c80d0d037ef2fc238f7e9e505925d05036097446a3356406b8d7f28c4236e159251c492f4acaca41a183fee965ddb59e911421136c51f8dd0a13b5d3152223207a3ef9dea1c08d897bbc30dc3ffc8fb252f0916adff5e54f0327a8d30c25b76d39f7fb01d34e6f794cc60cbd64a665f3d0a0775e410cf15babcd527fc674d2239d9f89fda9be3ccceb005b85c8199e2bfbbb2896cfc3f55fb71148bcd36f8c5a5fda1436793572e5424017f51ef319ec237dde8440209df61bfc83d51e798d38db56935757a92660a8e62c6266059b3cf52e317f8dc313acf6219b6f053c043032a4ad0462439717cf556504f39af33468edd091ecb70e069d13342773963533947897fba9fe1b6ea34039be90a28d73bcb99babecb104bad0e18dc3d419bd775cc15633befa5a512b84005d4be7af6fd7d124fa8adcb9fa784f1a9776b571eee3092ade585819c7915a081fdaae5998c2d695aabef059bf802cd3bcf5312b3f4da8545556ebca8d785ee92edb6d9654352145e807f7faadd7842249de2058e29f2900da9f8f64bf7f5c4c4808b08cea4fd6a916270e75d7a7496def9342ce980b72ec6328091f13581467102d2620245bd0a043c599c20a3b6df54da4b2ae2dc325a86bc3495c519ca3a88100d62b1cac3a45e5756a5ba598cec0eee4ae8534256b7e47769b7523ad62e51418e7d57a8c0c21a0c397319a9679abfed2f086c95e0ca0d70d58d2347ea4472cf812fc31554c996d4ef6e4c6970774dd8cc3c6b077b9e0a1d4050bf6cfb1f5238276727a2989e9706a21f03dec87e9c5e73ce10bfdb839103ac95acbb3bc69ea254cd9059cdc13c678c2fe8b244175aad07f406cb468b007dcf6d212754b4af5b3d6cc9c78ff85228c119a057e37843f1138e1389e533599ea4fa7c6f9f82757cc325ac301ed6d98d7de37ee842b06947a08025f34ba346bd8926d5b07955293ad2c7e1a788c536bf36d46be3bbba756eb5b0ab059951c578ed883de350e60f03aac6f2aafbc8fa2714ee8ff45c91b1c652ec781de2693fa3b315732aeaf5787d73679dee7baaf3032cd1bf33119f3b4e760f3305898766b1e3d7e8f6d41a2b6f25b505996d91735719b1a8757df456e5df8c8b64f7e501fcb099cdbaa0d4ccb095065fa35fddefcd764b5ee98682dd6fe120dbbd7bc4c3c48d6d6b0fc0af63e09a00d2d71f615d3c1e3a45399b1a139f1ff80a3e3756a1df682fc6eed28bc7ca8acb0f745d698d7f3f83ed60562574a1ebc49ee8a359463b7e01828b13c991a956bccfc8a1cb0fe50c7ca5012a83c804be0231f2479062e2ab7c5ae663f912862cc9c83bf595a31c46a9d238fb283fa4863c39899f5d1323b3a2a2be4fa9a09e816de8a9de9c8adc4017c1d94ec70fb4caa9f4dbf98927c19c67e9412f089d65fe31531870d204720bac92f0fc5f04deeda79e2fc537c05d2a04436fae8c5a6ad9f1c6ebf3bba63cc875429683f6d32a94aac69038c06000acffb7abb6ce20f17a02026ef73cfabcaa3a436abc02a0d14df21d5b1380a1fa714ab27d959e06e65f235716b92bb971401a903e3b75681202b97be284472aca77ceb1392876385dddecd66bf90959dbd972cddeb621d310518b45014839b25b69ab53a56ca7b3916a64d0d366ec50529bc3fa33f9febab22677236b698e1a0c9c6bef39ab5fea6a47d002e92eaf9e62ed4c169830a927a15bcc07286bf2bf9bd4b9540fc3d27cbcaed8b5a8456d143d0c8c924592b88a4fff5a3bd48cc719aa6e49b49d13ad614d730aecf9ed0a475668d1115de6307b039f6813592dff19efa622fbbe40cc300873408aada8dcb2cfeeb409dba9f0055c2f68fff11b41fba9cc9432ae47f9e01fca0d52232daed038df3671744f7c9fbbe5141415abda6df30569f4bf2f7bb84e31bbe8c8b281e26682a9d59e9497852298e48f0ccaea251e10e6b33c33e16e2f0b87f73d14c0ef48e519f7fbfe17f4bbbaa1aa5f5f0fb4bda13e2ac40480e5af10f330e8898fc50c471c0eeda9d730cc1d62d8b571a215a65644adfe9bf1a97db797660966630b02b079ef5bcd73686dd83be94f91e2d9d2dd28c9f8e73d109a154b6bfea14d66e3117ed0d72a0020d58770b816b78cdf62eb2eebd17b823a762f4d662c66942f08b5f1d1bc0bf876a79a04131baab40042bee57f3eb7d70a947249bd9317b506d3d21fbfb64db62cdee6d4532b4011501ae48dec63058771446500df540e25a9313ab4c33d3edb74ac1953a097f4f43982123f8dde59ff5aafcaa78f1aade6252f05334549ac94f717ceda83fa73a7e3b79936166a9db8a73049d12af456e7b5bb93419d468d1d3490e926e96f2e33b471e17c03c10a9dfbd2251e469db8e3956b717568c8eab4d4cc8da8ab8e4ffc4858fd19387547d40752766ec390177fa6c5611ab20a9b3d7c717aff7e01b54c5343127c990c24044428335dc89da6a2036d6e86f8e2f9a3448865ac47838337624a5591037966c132e4b0e5942178401c4fa6780e36ab6c66308708e24ec6397607e96b8b1aa6e48f1379597e73261b97e08d5c50a9235fcf5944c098af0538a0cdf36494b9f7ce00f0ddd1ac07f2ede3090f3276aa7c5021012c99e74f98c747f7964c9d80b886cfd94a4f2d8a747024bbb38db4c6337d020305c0972a0755d829c1eb885d4797ae6343f87f84eb6136746ce803131c9fadf4daa4976c6643d787604288cc14de313da927e133cab244eb3e381b6636f55f855eaf6adab41b3bd8e4a5745d632c78f8f557060706c5b02e1674b4905cb3d663f5b0c9bc0cbd79e082a902b83bbd3b43f4ab0dd9d2f0c90f59c66db45c3210512ad3f8bab8eedb28092e48aa75bb0cdb9340c043667506d1676d1fa2d346e7c23aaa86a54bd3bc83b8707018f86c60bc87fe2057bddadc076d0a2c604df1de12f4e2800e2ff7b0f4693525389ecbdb587ca28406c8fb40db48a067611bc823661f8e85905408e4768c1b7ed0de55ab535e0ebffaef6b83c6a3d1d640dc3b8dd58b5fed087163dfa1b37da38567036f04e046e91427de00ecb994f7a852528ccd7b3644e60bd252d4f9f72c06ef50f127059719dd609f3f693f402d97c5e16abc5adb7dac641e97cdc8bf707b91ede72f0423805f582fd67b1b7e079927d4dcf7b52d4efbfe9db602b4b6f5966930e3086ded402c31fe7a348549c59e5d8381751bfe007c849c17aacc31f73d932063776d8261c3674decd242a60302f662d29bb823d6d92d066023045b6f28b128cef2b26de61b308cb6dc46dc044f526d837eaa47b7ff2c2dd5c86d7f7265d84a87cdad3d403b53e68147cd41b2525224f0596dad633d45f06f77e7c8fc67084daac7002d891727ffb11d5135dc40767b9b63bea62a0841e99901a0b47a6c7fb30858ed57e873b8cf1ba1e453401937533bf2713f5bf79e1bdd72a0c13894d544db9b6248348a947a2812f6c8e5cae23a2fd3edb921bfb283fc1db30f36847af98f3f84d93c4ae1916ff735746ffcd9e0109b9b59b2bd4e46bf9dab034418af83a39b047a93a5a44e48bf3f66f9a9d13343e1e8fb37629aa539cd34a2f01e51f5a10501711001c1e96821ab1c18805a90578aa59b11f75084e9105e8dfa80644f60c1f490f07d570a86914fa6f9acbc9807cd54b0e5a4557bb61130f5c7df9157a028327b9e1be1aa3a6a8583a80e4457181da6faf3cf469532f19a175706db2333e1d0718f11ed3d125c2357236dc51367379ac55cd5c53efbbce26d2f44c0f2f7d6d7ac4c47840e01b22ed05eb5338b5b2a659fe354059e2025e5e7dd519c6edad75ad5d1e6a5c2731e7164a759edae03a500a7efe1414db4bcd18fcf2c41398b61abfbb459300218811ab66732d9b2dcb7ef595ccbb4e1a252adb488c1a1082cd4cc930ff8ba49e9839e76d2a7169bbab35d7ef74d6ad0410cd65243561e59f98ae0ec1410f3cb81d44e347963e651e69f6956f7ae246b4e39b0a3d2475f54fcdc1fb38bff0656aec3b938458d7cdde1ca2917bddaef5f198ce2578c57d3fa0f66cec6028b3aa4e6cedd375d1df06dfd06a116615f42b37612bbfa3d588d7e1545b5192ac705d8db2f381481ab688a312b82c99fd125966c2fc387c92c421ae65bed15882ee7d2400340debf6497bb9eacff1dd832acdc323048445f1f7f60575290ef6768dff7f27fd70e6da81a69f2274553eec2b407fe8626d63d078ec87e9964ef2c594753fbc00e09b9e5da2ba8a3716a3fa86fe34edd6115412b22184bbcb8d3849a24cb10089f064a496c2f7200fc48d40ce31c66fc023077a91981d00239b46b40486531c435b6a5c76b8649b278edf0551ece51a1262e1cf0fa386ab8bbbaf184400a60c187d0aadc2ca041a2fe058f96b17d477d2e84dc01ba86604adc6f491c437ad9f2bd98857ca7a8d9ca21f2e6a76b3d4d0190129000097706df9f665758fdf63be4d3f28a5bbba660c69d27c1b292e26d1b542a33bbb8efcecc816ba905418155e48248ca1541880439a4ca701eb1c7f33cc76fbc520a9205e91a207c2137621115d063eb9fe6814132a9212e9287661fd69daf7a2a5cdebe5d174aeb13bdeb356515cf15b03f4a3182348c4404fc6a763fd03617811cee8df66610f8ebed9f01382d828d2d4026216c1bd189866894e9746214970a713ace9b0e88849ce043667c9aceb672a224977ca8b5028a5a9d30fdd6afb732744825081ef81bef0a02cf2d96b4f586968278c848de748e09377fc111a5e69aad9b3a1471994edcc4e2545b888f6f5dd07f1bd903947c4b7352bb5f6df3dd50e7adb7687e1b46a5d185a83bf8be9e5c8246e94fae247d5cae7d9b0c364b89ebc50987ba0d210215312a82e0e96e64375ee0bbb7e326ca6b238ddbe29549224512d4f14b382966124177e05072e7aeda56390ae5c1a7788cc40d060046a6676853fa01fc86554f4f922204b58fc480017e38ce20213615ca4fa9500f09457762fde417e89c09f6e338fdcb278cb1d67abe339ea44218824cf2dd5c9e3fed1c6772084527eac471b2ac6a24ec2336f72a75abb63ac929a18bd271395433a0f2114862a7df77de716b707b4d3e9477c903fb14073da1f38d75aa40b6eee5958cd7587af019e1cdfd6027c2cb3f95be3e131fe866d22688dd57a86a2da663be49e05e36a4f02c2f9d1ef316f6d75e8be02944584ea25e3345e06207b9d29affda7a4054ef56f66522a102d14c314c9494ef1c39b38845d572d17390669d2d655a7b2f9225f1e1d9bca7ca0e41c3a4191d9f1b233a91032958b78332ecd57ef1164fd7d91941275f5cce5be5f5b42ed1ac11ddd0fc31c1fac2f221eda2dbf6bad8e916419d345eb5d75c76ac76945c80d8b07535106b7f90275e0ad4d87d7aa43d758139715900a0e66f87cb39265e44f21a75d01e81de2bd350537d4b23d1dc5710a12b58336d025085f9b387ebfde516167470b00c2bb53d5a939d1e2348e8a5d602854ce0a1afb371f3a70ec894443f5ae1a130db242a28fc6275a225853255b7c53f19a3fa09c13846c686a514eb42131c1f5f76ae09e4edbfec45796ecebebdcd59e82e7f8eeabf08d967b8e983750d73ea07f215c79d1bbb2680f874151a2f24b47df54b66fc375b0b9ee74f36cd76eb93794c6357923101984e92cdf6435566f8fd8d448d489161b911a98677ac959ab9fb607e5739105e2ac8dd17d49902b8805c7412f90a0dab295b5295e924929afa76a2b9a76ca4705c3954f1c867492e74bdda3681f232613033229b406e7111a019c8d4fb2107873a9cb934e611dd84153964839792bb03e91a92b76efa47b02d5538d0501fe4f1b389e50a3adbc03eaf85f92ad53defcc87161a3b78b7e1f8b5d15980a783966c9c1f75b50d45f654a58193d917a5ae93e56c466dab9d402e32d483652c1f18eb4794dd81c65cd945d8a70f695ea29dc69c9c33ae2528e6500954e533c6d0f262dc7d389f1d93bc72ae4a4cf74a751842bdf5d546f0209c26afaa42cd3df14717bb70e1cc9ace64a04924dbc8af5fbab03a2faa170d8c3af9cd769252a76fe4676c32cdf502dff08a8ac10350e84edaa5569cc4a77248b023aa8f78561251779089c919f4cf8340cce41ae787f9608f5a89492ce27f158be0e2e8d458b65288fef97514040b23ea304d1587925b55beb17ee8e7443e86040e28f19022160d823f54b7fac63bef91b014f599684d4747177a781059f857773924b967c4649d0e65281f73abc75b00098fabe8d1e37911cdc3d9ee8707807ca899f0f60469e826542894cedc3ad174127d22751a51f98ed401cb682d1b396d62c2303ce57bdae31fa60beae6c8020dde82f7be438a2d7b3d9a032891a2f2a43ae772fd797c8766dece9ee70ecb601fd1303815caa537ffc5bfef603064de46066cb8331705c7e0e14fbbaa4bf5d8603101712652e437aa3801fdbc15873ed1701d65a38882d0ef8fb88cd38ca7cdfe767b7e55ad93ad81023a1244fcab5d415cc039163c4a94030cd381b49ae72f608e5346c5abcf0e1c5d61319ed06aae6b5b8aed1473163dd9601bc67f330edb2278271f619998805a7d3e4bfd73422248549cad31b59384930833a2257ccd3cf72ebe37189e09dd4956814dbdbf79e184da19fa506f779b3b33974349f6f71eb0f741a74520170a1405949dbc3e97d0f59940d43231fd213137fa56116eb4d3df3affd9ad1f4c1e002347ec5ecdf86247d94da7de38d4350f83584ef2b843b0cba4d9a5696c5274537da06d1e4e00e8d0183d4036fa06cf60a0c8c3b3825bed78998173f8fe7848682eb3bdb9730f58fa3ac70f2e52066db16388e62f4fc14162414cdf3533df40b6dda1206f07c28a6f9f1ea68abcbef90d1edcdcbb56827359b32a2c7a37f5d72f19f87742937e13cf60bd2323d68072c38b4ca124bfaef37cf43bbc6f770301fa22cb7f19fbeb9c54a42b6f53a2d7b01e526a3a475a6e9ed79d1990fdb8c54fe46fda84394e02588d371741bf170e1e54f986e074fdd8b767eef02d199326df2cae97f276ffdf20a1517a8a0c3a92076870d3162742b667300edc4c52b8e3fa6dbbe711b5fd6906c24636bb04800242d0d06646a429168b45311945cf456081e0b0bca94d59930b27cc9f49038adb4a087bd27637f0d29bc561ef465b7110f9e7b52b96668864eba6eedf03f86a7a96843120bd12a890483a0f5dc89a4b58196512587ebbabc3ffea0416c2dea739f773164e124fd6c34387d3298b23d42e557f9c37b444983d8b6b2621de9b21bef6b9bb3571f5d41fa36c93eb88ed0dc7b8609e39f0e28c211e3dab573acdafc2ac158f8ff210ea90b50523cd747da0d90d7e244ff4c0096b77712f7109d1703a7da3a24797cee540c9f562aa608f987ac1c5177fdf641654dd1980ad2227bf523fdcb5c616bbe0b30e399e17bc105331daecaa81728fadc9d7fa317cc41f9fa0f9482239a11d930c749cb9ab7e61da07086d5b66f1557512af877781009535cb1d95bcc1e1d7ac7e0197f1c8f8c6952d37e0ec14b8f4c9c9e13fd3685ad659462363e30dfe4c89154b4d3a79cce180d970897e447fc36f8db7c9906295c1596e193be1322cc2dea5849521e6ee477003e5ca3d282450c38c5258f4cca6a643ab2cf56f5ba275a2f16914a4b2dfd5e8c290f27118d5bd6be60ef62bcadb15f43cca0aa93d380555c5ac56dfb30122485e42d0622989915cea21a0ce20b3bc7451bc59dd53b6b134db610dd42add6c1bea201ef5036a37faa700873d826512c23cd4adf1f4c5b559c9ed7fd1ee49febb286b0c444dfbed51c4317238f10bc5b13a3e7561c9f61e15c343547347a84613c4da17c7a72a342793f58158d6f72ca6ab98ac77445b56397db228a0f3a4ea88f5ad3a21fca2a9bdaa58ba6109f19848428b78adb8925ac4cb739bc1c48c430275998c7fb0bfcb47d822ca175069235242a0b1e5c9773dc20dbc866202f704c2b9f99a154ec80204ae64997aabf79c1bd943b52536843709733ebc28262b838df2da6c8acbb65e2f0fa02a41d4c61e8ce5caa68bb4e03db1c0b3999687aa7ffac3ce3829706c5ef00e6a499e0a89e39a4f8260bc22e118ae528f597f6b496f81da3a8e7001616a4d0df1d354bf491b4d126cc6e5c67b1446023bb609cdf1574f35167b0e5c2622914e9eebfaceb45ca6bd53063d32c963d92961210b15b865e92b5a0363b6eb094d6fb84ac853bb322312a0690ead321be1215d08f875846b6ee964c015f37366d16c3fee853a887f6f00a4332131d17031caa27e04c0e02cc0c530dc484acf168abf7fe98feaf421408e8f5b18505b3ec22818b04518af8aee457fec435721f2b4761577908a2ae42203662c4b5ecd7eb8969fc63a63fa98861370c3bc327272ff79419188ed7f988473ffbef1f63b0d86aa37ad30d100d99a2ee210706cd1b164c3600772fd27a7893c74ea8bf7febad49d20c1e41fe74a4070a763a8eb7f2fc400cfcc4693ee050e2a01481f0b8248848c83c4787fb93c9d5f24544c4dea68af30aafc3ada1f7b40adf4181319c669bcdfeba187d0355de6ac4c7383c83fc1dd25ebd05b3e289d40b6f80574ad6c8803eb6bd488e237c3a63bd92e2bce587e67c6cfc009580d8e22e510929a6d47af34c668a66c41e099deb5dad9f21ab1c8223d30c2a136ac30fd19c2d313255cb935fdfac5a7870b13b841885cf95b484247ea0c4990983786555197d99dafdc66d51181c9ad4bd3afcbc576df42046ef29467f0a3447dd48f45c4db1c73c6b028c3ee215e2ac0c4fcb877029a80edd0920f29f4b788ba4ca0ff52d5529278d4cc41e2ad547aa25c825e9ff19da79e34b25b1ddbe99632a4e92292faf3d458b8f30d2f87f7ef4c64eb565205c40e4fbb47e76a421e71d5cf5cf8244866208392c7b2eae05a8115554c1e6ffa146f5e63ee20febbf7ff0b3dd163690794fa1cae40e8a893c8c42e75f4a5d871bb93376d4e68ab7e73ece047834fc097d6b74d5022fc3a2da644e4293a6b1143baed47b5f1673215a9d138253df8d4919b464812268bce5e597f26b1c10b885ac0bce7ed3faf6a040ea27d813d2c3973a8daa7faa3d3e188a20b54fa1c1efd9be256df9d0ca906e24913800cb29129008eaad8ca5934765f5e97eb14244bbcb7f9ddce2c3583d11b46f8c5ae1c0796d675678a7d6ffd729468bc19dcbdd1d7efd682f754cb032f29ce524ca7b700f2559e4128ea3a1d0128d58337c15fc4d865786446a6f70e888b62f8c4d9951778648423942bca0b7fa1bebd7979e4129bf4a0e3c19dbf0ab49b41a14591983f3f09dafa39c24adc38188ca8fb6075ee6a8c869d79ee6d8c99c7e0e108fc9e21e85acc89859f07e11db7eba2ac7fa391bd58a4faade1067fddbf41dbfb4a7fd88fb90fc45c993e463d7f61a673a84da857831673630ca4fd3eb0891d371446fe2392fe2fe3c35bc47d8976fbba767a4eca07e1265c49acaa50ea08b36b5debee781668b7f7c6e5a737dfcb3a1ef083237c738b2bf61a1e66e8598c4a4c2ebcba2135e05074dc676b525f0e446c3d567be6228a16defc136c40afa7716b9c89ec44881420f831a31f99eabc7d595182bc6bd035bd998cbedcde0fc9de584eef236462f473b97a0d007b8c6f134d51f3e9baf03fd1c6cab6559473be85a733f5917169ea183a01316daf425ea17e83bc66616ea1b3cabaa4ebc7c258131764e86381dbaed3d38363497c681f170462c129c0cbf939b2840102839125ce06cd80f9681f146b62d606d0fc00aee461b9556eb19f9373a4984f4e978b2b6aa6245fd52f82e0010e8c38e97be4043fe6abba021a3a76ffea828457ae7295f298b2b7bdb5776ee8a00c2be7a4b932aeaada2390ff444defda69eb95aff96d25c8c43e20fc6bbbe33dfd5c45f5cbab966c1ce1bb0f5b88016c26e4b361a44f228dc268981cb257c34373b3d65bf4a4a262f83048737b2bdefc8ea14bda5f3568de736a2db46baf3f14ea29745ca06acdc7335bf8542e53cd26cf253b27b2178e8d5bd0b9906736a53944bef27925244e377f170291a503117edd9e061e52013cdee8e9703d66db784de5f7b475bd8b53d4cc85d9c69c25af4281c131fb553e3d13be6294dde5bb1858d16972226074251138b64e982d730c4e0516361dc98dd97c41ee7f25423a5440f3620444162c74eab7c54fa7f2ad7190d4835d3b94206ead63ecc3449c95f3bda490f359cbbedf7888d3cb0d3c6b60a7b57488db3081fe040bf853cd1bbdd4035e32d7c346d9db82024295e050c78c90a6649bdb0361b1b94d878c412c1a69800adc5e613b80eb0c50ebaecd3b46dace7a1f49a71ba7f5daaac90f6e4ab33c75facc4ea6380f3af984aa85165f4b47dc83b2ac796ef0ef67d1af1aadf5f793978a9298fadf11a4b082eec071d3c84b89162dd5d3caaa6daa473e4dbb661e968a8d3a7a6b1a1750ba69259ce88bb287738f2960d051f773ff62b7046a5846ca875621ffb09262c5ab5574a74cc5b4f9ffaba8ec4eebadd126dc211343ea064cf88a5d11dd49e2e0fad21f57a992377eda459e6960a0704a5d8533bfda1704e3b83a393113a338ba064ab471c88f08b541fcd0c3fdde6268ef2b64627052b887865b2754b763db6cc9addbb31c9270fde5446e1c7af4f6ede79554081e2b6335cd7d185cfe516c9c6de03e87b4ed892e1c350b5f58d15a2982d737b416e0225007dbcacb004a9cb36fd278fcd26806d0dd9e4e17f0764b06d56a32673819f7bc2da55c87cd0b1f5465bb516e531e327b11c09566aaacc2f9430d21c26a7ac0b4f71aa2100c71e95588b7186bc6adaaae185f3eb138a3f18e48be9d8b7764f367ad6e2a30f374bf9df2a1c9040f017bab8976b79faf903130c7d23cdca8e32107b589722749f71ec8ac458fb5df288f78d9acd3fe01dfa09126ddfdafb48160ee96d6d3c2dbc6dea0a475074fdd95bcda115555839ad4532152f4fa3e3d30487c395646c5b6c0ea36df86107be8d7819dfa0ef13468644c13573bb26fd3a005a901112635d52e924363457eafae60ba63e64a2decb815aa34aa0cd3a106478bbe240f2564ed8e3a0a014bee83afa83b49287b034c5bd0b034d2454639a439583ae7d0000ddb4ee3c3fff24875b16e077e449fffff3be1cbdc3649533366165ca6450621aefb1c5be5e55de3f3e94ce1b9804367d46aac3a65ac402f04c6ed3fe1b84dc2a8d8c1aaa7d0a1a7c31d8b1965e8182ee7c210017222dbfb55626842ab23b7be87f62b0feb6fa1fe49729851a8256a55ae06e50313efdbd12e149fe28417560965339baa100a70aa5220d5aa60057bd5e156a3d0989cbc9b5c6cc30f3189aae6ae826d4c7b62f162871fee5737dacb2efffe57512981afa7533e32f395cf32903cdb48f30dbf13f504d0d6892749bf7f24e5f2c4e9ae9f26ad52b5ca5e705aac8c7d88cfcf40265940e0e81c902b739c1df1b7e90581977029e85974bb769e21d6cbcde0d5402e87b9cd875eeca11bb66885b38727feefb038f982da17c4ac49ee1db131117a2a0ed6b997bca1f9ca2cc1227041534bbc9c0159ac952398c4b0c922b787595f453b27d14add60e48efa61ba902ed8a0dba70485469c1f60d14ca426c9c433b0c7785f20a7a75864a7c8a719df77ef747a346ed928bcfba8bbc76ce8e0cec5a2835c129161394cb19e49ea7473d2a25a2a0f4a17bb2998e0a1cfa8d05bed48504014d983ac5a7c3cc47c436858166fe26df1149ecad68c1c87a6e23b5e0308d5d8c56a2ba32b499c5e1def84e8079f42bf4ee62609b319e32fd26c1b157ea66512531d89076ab924d5f32a97867594effe66415f6a59b0188cf83e992e3ecf4ef913b4b71da466053108ac9ad75e949fd2d10e1c27d97a3253d072c95215f2bd3a704b669827fc5d9f135d40f97cc7a66ff8e94259eff0c106e823022c2be5f339051240710f2a5cc24896b83a6c1a41b64a27fa18b176e5ba4582dee2c8f004073b4e5d899757da0452064e43888a215862f3b26a66d3841474536b9b2146f0017418a9a93b2a8d40a5910279f07a4d0bbd21914e25658e99adddbf4bce2d6b9e6de917233b7e91e6c53e410b153058c467f9af8ddfdbffb8ad30a5989640cc0231793d3e427ca4cc7808b27a7fa2a0e2d8bd99fe57185c795463771d41876a5d34928cc5ea2262f400c6bd2bb4c6e070e20776b63f063e31c597687e97303ac08cc03383443adfc1fdaa1ec9ab43210bf7bc80ffa17e29b2d385ba43964014ba8630426a73f74024ebc44d712be0a049707ff59d53b3cf063cb2e9c0d557751aa343346fba5189fd9565fa0c9c9800be58252f01cd762b30e4479470540c0a7b5460f19308024a04f1dc1d2c75639319df5a28cf286de63d95769582482eb6e18380c4d034cf892635ce523926602089e0efdbea4651339a132ad68348d0d18acd874de5eb1066b49352c88446089d2ff3d954a73a1aee8509c3ccf1f3c9c2d346e19c2ed23d9f04e1189de44a638d143997c2b89b2a02d7bc655efda19c3baabdac967a3c954dfdec5db2e715bd0fd6725746290903b7850f4d05cf58e6e02b20858ab0d856ed2edb4c528048831c2eb3db9de66c1780b7f150f38cceed58a4a064ccdafe1194c04ed01502ce955e661eac982f8c62e4c8cce512b0fd79545d2f600e34c2a4a45e4e1f893549b57d24bf5534c6817aa1acc444f338eeb01b65bbd4671191799aa3b28b0668c27538bbf3404bb87a287762d6263e0cd592295010639ac83a0507b5797adfa990890679db8d450c585a919204a14282a57d64f2e5e9850eddec33977869fee50b93566440a5fe233c592b76b3c2f9866bb0598bb977b84be15d03e8fab5c50cf46f82e7fc687d7db732e6bbc1b32a4b87b696a8ecedddd67ab3916c3e463f8d2c9cf89a4c175da6873614fb0eb8fc39faf6308d059868c0acedb54b6b1c4f930a98bba299a9990c9cc26cf8cee9c504d4d006132a9cd43cc5c53c0fb5387f8961cac3147e52f9b239496166371a4425dfde66870d2fb41274530edff284498387590552de2b70252386c37cb66fe8aae099f6e2fccb94787eb703ca80f6c1882ececd0a2c88029987d67bb6d14c4ea8f6e552eed32bbd4fb008169240a4dbd2c1c375ede3c4489ef23b86c6289ab0f715ad8c0eac5ea5420863c2bebbe2afbf278faabe067b71b40b647b39dd22414a42893d2ba170eba8e601b83387978c7b22ebac24090a406466d646a61de1dabe7c6f21540b5d5d66654fbc91368f81d9383305db8c18d2032ae7c1c3d022f5b88bbcc74d53708505ccfc14a347475a8f6df1431992435b7388e277082ea16065c8beab9d94719d84ecc6c6a9d701cb28ca56cec63565167ed0526e948c1e4f5ceba796beda576175c09d75094b432f1029bdd97e6b240530e0c7af65efdf60bb96abf07dad7f1afeeef6f42985f112fe095f667f953a2701ce6c6e0978afac9fe9a66417ec95d8b97e9c606b32d1f2e06bb305cb0ed3b8932789e48f1bdfed96780efa3cb8ae9b244fbac9aff5eac86d5428a5db8f78a8800e871a81a8f41ed9dadc25b27d6febe95612736dff9067ffc66fb3b9be1471ac8bf0881e94dae5c6ac412e313b89c352df57184a3f9db0176da21416468352b7830427705b3bfe968e3e09b86307ecef3a59609cc91c79791019c9f473ab2bffe80fdd91d9f495b322c14235d664aacd81ad2c74454b3ed9f1bc10cff8c9d7a870a4a2f0d2b5cef532b44cf20fa2f054b0d3f8f5860fd4cca66eef1fd9d1838d4f579386353e37d6f8734fa49efa73fe560e7a8569d6698640d7d12c5e5f057e2bdac9d903cec2b67e82afc15101ed34115e9fd8c046d774f3a1ff388a6b22906244f2503c9b48a3f4b3247caf72188ff6eaf3b5ff514b6b6c5c43fff6a7ebb7230a54d4f6f4189d3db367153f04601c9110d98d64650c6132861027e2e366ef3967ee6ab0f56ec94a9405611039185a54fc0550b316ca4df43fd28cf86e4817cdfd079fd8755ae8e628bd2335b8e08e10f657a242da8ae94536e33884ba7deab5652a4c5f245a95df4ba32105de6a945667072a3fabca0c99cdad9029ee168ee83eb13123aabca163fdb6b398f12a560870e5bfc6e29a27fe946948e98622795caa10405c0ec3b86ba71095a4b9bb79183ff2591f3980f5771090986d4c9ef3586099a3b9c84804dd2454c5b8d1605828a622d208143514e73ca1eb951c1d7e0586c34b80589db779345a894fff14f4acc9abd2aa8bad693fa0a18cacd0b428a9e2d84ea435ef17d7fbb0c6bea951274d45b3b89dd918bf0471124a4978a34a6b337be30984ef674014705bda4fa30f3c706d344b6f52df5e1d6710dffe3747622b56ae4cf34f16f582e629c5d537fb000764402bd2324ec7becf0ff17bd9e15181c430b4442d1d82197f561aabc48dc845ea85c782e8c8fb1289ffefeb956afbac41baeb6cf7d7932912e6c435add8f4dd14265c2dd2269a4cb970be6f8e91310652c671aa9f5b3a6c8882d9061b2551a3413f7bef9e486cb1ce7543664df11db7d5299aa68a24a9ff4c8aa732b8c7fc1a6ddd8a83e6e337350c9aa15088f528b27cc637a239a38a737d7ae8c3c60404015633a213ee290d39ccd093d2da69ae0304b73d819cb600110848535f7b695ddf888b0380366780654a58383705bae7d3e3ba7fa2d8f19a2c86feca43892a138ce11e382a713f4e3c45324c5d5a46c4b049de0af27bc5b1e3ec983b4767609dcd7c21a43a908fc5f6702bdc7d90bfdbc4406ade47f4f3b9ccaad941eeb8fcdfbea36d705985c6f325c3f20e7ec8568283adc00f9df67aaf15fd2eb2a1c5387b7c6702b0c0b180952553a43df6e254723b167141201da02521ff23a5bf696331364a35282461721999f5924538ea1ef1a17b94cf8b3c56c3a14d9a16b0790dfded54e866409b8209472a34412a7c1c5b7557f6dc2afe447ca73094a90c1f3da9f3eebcb654fef483cdfe42516663da96233bda1f3a0cbcaefe00c376c4730150c5f3af878fcdd98a54893a35694f0f4d5034303fdcc44c5210f884ec7c972db2b7d5b3587f1479b7019abef96fc5af662951106b18c8c8674ed8e247d152e9917d43c36e90c5a87beb5a95967d87461e154a4ede45a7cff2b66ca45294f0662bb5b53cd77466470683aad0aea5c1fdb576211b37a23aeedcc03780e08430d2bccc047b99a719c8655c5d10b72db2f4c11daadc3f40394ec3d93deb30a240ce0e7eb5d9a9167fbad0e520e64ed9d8ce99962c97f9d0180e86502b3482bbd02bdfa66f2e5f705b5f43c2dbd2f9e95a58128dbe6b605a77025fca77958bba5290096900c563566647ad5b9c7a5d02f5c65196e677b98eed7083fc73e91b57bdb31703aafefe679225ec081ff50849e72fded0c4790a9a0f312e802533b0dde5bbf17a2cde7d79807a14b9b749635146a0e8b07133343cff6ef70f7b5a86085a71d1c1bd74c2ed4eb2192803915341567331e61b89bf7e3b9b34c4d71cd6284536c63d214aa1f48ae7e1efa1c9fec4de11748d1f35cb5105858957bb8a468c0008629f37f112b94afe84ded36390526a0d7a9ec74f415885f42e1c965ee83d126f91f445457bbe9f4555bbbd06d6246be9c948bf91d3d1fdb8a3d1da476d8b285ede30f2083bcaa872dbffb6ff1aef14c14a86b79db7184f5647f7ccaae961ad78f19a54975ecc9496ccd5349e73446ac4aa9b397340e5c2d0692a6aea7ce9588a6785d74d6d6e2f10e2f5b4890b925b6a3885f457a81df6f771f8d258977f4b8dac47c74d50ce4145e1bba2a61dd8158eca0059b6f6b94fe394dca25f9e31b2d3514673f7d5eefc8892e59670e9a9f4993e35dbe2472f07df6707756848de7dfeb9dda243480303f2cc112927840aaff02f57e5ea507f6764e842e83d7bd9439f5e393de483882c49491c0372d816019c45d43b60f25523682cc9e0da368035b5b401a07fb41a3724efc213843b7f01d07c770a7389c9b9f62d8816c8963d27ec9da2afaaa6cab138059629e4f5f08a65d1617bc083710edcda192a3cd0458df693f9b70691254a4daf62abc54b5ba7209603105f980e384cec9a0d4fd75e28f080309ee60666fd78f839622019156b06cf13bbb2505277fa490b268072e00fc117c39478b059f38dd3e285ca066bb06f1ffee79a3b255b44b4efc11802c946e8440eb86d6ebc97a1a2a4617af985d749db26e6638f0a54c93fef8962337c2901f17e9e1003d96a92df37188d1109981b153fa21ffd5c8ffbfe0b70c278ec8fc8eb2b338032a6111835533f2dc1444ca77e38d839b2ff40c087e51699f8f3146494c23083cfebc827b35a8383d1b023f7c32dab61a9c4ee9ec91a5d6102e8bc639a21f47b8eea2edf781567d312a60fe0487dc174621a37acbc2b067d9a98bf78e93f4abca9a38926a2286a71dfaea078ea1dbc12fae05eb172f1696c8b10f9a7f7df58ab03c3791475518bee6f321ecf1a7d84dc99830e5bd2cdde437494e9b3fd3cef86cebf0e367a480b59ccc7f80a1ba591e3535fcf85854bb08f2909a9337587a9c70c8892d76748fb7167c238048468ce275cb941717377765e506af35f04fe6b48a82900d8d07587c1789ec75025d834bb9a172b39b041ce5d9cc5352b9bcf635e618a18fef31dcc50e1c49551eee4778a12bac34ba8f8b02d75de16422d8570b01649a8506fea0e1d38712cad6ae62481db1329e944c1a8024dad5f49e5c768b531bc64cc131d01fb7188b259078dc50d6160a3f3e3e273cb06921f8583514b2b5fcff0821f6840a32a520503a2959f75cfa50cad37fc7e596806f5f32ab723088d5c41753d3f5fe97e7e59f9c72f37525a5f8517784a3cbc66dc0574fc08047c5c88b9869ba9136d4a1fdfb3a55888f3f274b56af6135093cc79af2d61c789f5601b9f257f3e4e207075ccf446c8ea5f44c48d36dfc349953f858df09edcd6bd16beb66854faf99bfa1394e01d9f5f709858f84197556fccfec63b557ab483ae545ce5e66a74947bf4e47e5d002515617ade4420352ce2ad56817f0857572b595353d95bc083c9a2552cc817aee62a811347e5a0557fc69c8953de1e338731961c5ca8fbe947190629d6785c5d13e8c9d7eec25f720fb539e95311ebee422a279bb7a890ea068c77a565a19301f5ffcb6c679dc2770abea1f4d47080b64d9e08808f3a3fc20c0b5746c75d4bd7b541ffc10ff24223225354b762c73c70f438e94379de4cfa13cd2b8588e99ea723e8663ecce05054a59102b8fe02648b58fb93ece83f25be00f88094833653b65215e63288516efb0811df5a4c33be3008018d9ae5e6ee85e741bb92fe4f0eca2070c3beb3026862584562f3f7f3495fe2765081509ca2ed35fd21c3b8b92a4a6c72f052255e1ea44078426fb357c7340d12d29b45c5b2bb34b2d86269c1873603853d3b1d711c4092fd975b576605d11ad152c13def5782002cfc50ccebd3d9a0cfcbb6a2ab0fde4b803cd6cec48e48c867d4458882645925f5df79acac61043a6969ce6ff344ec211b650ea037f03c93f3061d861eec0141b0922d68ba98401890559e0aa21ef11436d0c630fc63e65457156fbb03ec49e15df5a0b37480b061ba5baad2ae47a24fbcf28ef7c4b93ff35cfec17a160461ff6efec60d6764db6a1eec42ef31e109b15d7303bf5c00a35dbd5cf134ba8731e624f12f241e8b36b4a12b887651dbec49b0f45ba7f065a678df5f3fa73e321f6f4e831a755ea720224aea1739300c4de573940d53ab29998199004b56dfec6073082b64fdf010c9d72549df33a68449b3f734d92616759c5b7d695d9c73d0802ac3365629f33427f4f6aba50e06b1a250047cab4b62c3f47acea33a0a9927822e8c129c269123b0585730137d4bbd9d8a454f4c27e7c9f628b91b73d31da2b3ee76cd6049d238987af1b476bbfff010db8da719a07e7a7315385ceacda977c8e91835e50dec61430ea465e521f93ad0b7b8dad035bd318a09be15cd84d47c6a0abbcdc4cb7da69f94959868469917b922f2f1395cdff0707d58bc98a7911b9468ad1a92e1987715141192d1d73c714f46fd101a3a8775724f1da2b45c06af5d475d5d64e464f8af57524f44d6b19411883eeb1bab5527537fa24eb10b43be744b50b98fd615e04086173b1a93649a024629b7430fd214173ad3d4e5b7d53335850fcc5abcab5505280296665011ef117e1baa568c91c05badb364575359953460cc203e7e86ea68f55ee930ea40af1e03754b8b54ff65a8bcb51c5226c4d4d0a7f4522adc3b8d1ebbac01eea2387f7be592c4b52130704c6148620cc5bb7540279e97553ecbb5bf17ae44dc55292dd697bec63ed3345a5c1eb0e2d83039ff49b317be8ceabfa560e06b6eee26bbb0efb2246b0040bf7ed77ef0c80025cf2450193d2463eb763ff428741f585074b3c9fbaa54761ecca6594d171ccae3542296ea50a48be53259c22d4f4589ee9229349ea045bfa0b424ae40043cc26690d0203a3fc37f06f9b45c2fc3745777862990c1cec34f1d132a3ed48ee4eaeac9e1519b8cb3075a21ad527c294cb2a5c480ebf4c37f95c3ab3c2df3c254e60b3edc0c89c15e64b05967bef0bec7b48227f55fa032ea87c0b171f992205b1acb5481013737d4764ac41b8269f8715e8844343baf8a5b68b8586794d522d92b729a9ae8f97097fe7b607146448f516b4d56284fb1ab8fef89549aed4ee172be44e77f7952652257c92cf8b28455c1c59c23bc06b129b0cffc8044a3e68374664f8973e1a8b0cc8cdaa8f38c85a52efd5e8735cc7c268fcffcb786412294ae49c720019cc4d9a9e4c9baff84dea0840d6e354ee22433864defacde8c4c7773e155d3c4109e4a2db940a0d44906f7404339df61aed20b42fe94c012b8f68cde166cf4d490e378e979985b03b2c15a4718bbed9802f993a31c183a703f2d3b1ca24e4d42d8b7c21dcd4a4d87136f6ca0b08ee829b2c6ba8b9a3e50d4e142bbd80c63e8d051762000fbc72e79e1ea4ed929d4fe8878572ed69a2152e460f230793200c9ec5517a966d236a1e2e804614665e9b96e15ea8724a7a90b1b86b687f288653c969ec76754dc191f034ddaaefd712a5c90046b9633e822c697017470f2377fa6ce0ec302e02b65ed381bff9a2c8bf18a080280c65b35f8b877630b8bbb1f8db416f6e105e90a63a4473fc93492b58cb65fbe91ad10002b0695dc294a9c2d2f06ab19be76f52c2fc395008951002028c2556ea43940d68ab9ce695716c0d63bd47206ab84bdaa351ab4768c5915946b7066b9d34343b2279271fa23a52e346a2d076a617792efb5db3f14864a12c1185b1478c8f449ef63670a5b95e7e021763cc9162742cf8300349f7f8e482167950aeb040f79db39b80bf9aa278a16312ac845356ab1808236b6efd7a7a5627fe8d5dcf172bfa9e475045d29ebb9211b6a0496b7fd69fb8ba10bc48149d00495b81fa53aa9b8185c7c02dbcffa7aefcfbc552a6fe8fad2109d494c2fed0179ab09e585729fe095312f20a7daa4b46b485d2eef37e002542dd6e8f6134585c44c750eed9383546a1396e8c837b5cc724f5a49f53e07834626dc46fa7d0a4316b8c0a1ae63ba0104af65ebca71796d330aeb92aabcbe481390a00c068fcbff3a6084e25fedc99d62f88bc25522aba2351eccab482ab5af53910be89c5effd500f041de4b692fb68add734f03af376370157cea4d459155c48b575c9f9f2eb9e88e5a491599fbe526947706cdc716247f09048ab7ab8552a250abcce19ff1123051c5b122f3c4ee79b60e044504217d6bc4fe25ffcfc1d41574970d268d0559172b4bdd96df217c3fa30464b1a0e681045e21f997f68be859cf94189937fa48377744c6bf4572df6d8c966af8408c5b7983d8042eec21abfdacc1d3489ea35d7430dba4837d2b466ff1d242b2158d43ef6468eb47ff1d92874821cbb6f1ff50fbdfe46e41aca03639d2a8ae380eba8acba1565a4c53c0015b2e4ae4a7e2d429f0549f20ef0e1ea65f4407b88912415df5ae72b97717b8fcacf91637cb3a6d22c792066d494c88870714bd41ca10b0875871f4047176375a18f2709761844d882c2f7a8942e6fd4583510a218a1ebbbadcb56d6edcdccbace405a089eab51ff2242b1463e85a04f8e269877aec4edc84fd1fbb912ba5260589678f3ad799dac60f1694f4754f57448ae35e366edd46564d42637f234dbd2f9d49be895e9f48d8272c634bfd7f410a9e414cc6050b71404f0e6e64804fa9e3def56fdcadd526aff7a47d71ae9c40c89f681a1e237ce5fa52e0a3189893cbb7ae9c8acce06f84e70888c781eaae7116e083c6152fbeff2328869f3082a8497e376b14f2103f1da2a04071d7f5b7e72c17d86d3a712991de8b446937ac92c881e4131ad28b6547a58ed174ca69a9f2231c645c0b7e2afe25ca5f9fe8b34df0829d7cf0d8780d1fb7f1f77acdc15c63a5be17117b72ce1bd52817f12156f0606fe591be4e5691b533307fd00b055682eb5fa650624959f3be2c7da060fe464b94c62b05123357b53eb0e5a11fc9846cafe7bc48ee6cc92ff9304ceb16a1328651ba6dae0a816082dcbc33b9d6a60ef70ad5c5f4cebd0a63ff0e5c0ff56b5979bb966bf721f316adfb15364a1d1255a5e9f19b7590514c45b395d8c657e773d6b481cbc8163c3d692bf46899fb5f0c45b25577c55bcb94cf5cf45d7cb6bf492e03d5a328d79dcfd0288a634256e63fae3805c8dc2c8c4146e28b9a7c63f11d745029f1fc6c9cb1406b7f96269be04f7a29dea113a706bb6d26348f8c4e4febe4542db96e8c5e14a103a4a8146f0794735c0bbd6492e41bd091f2fb0d3d21e90c78a5db7a154418fa5eabc067e4d7866c8d0c6521067e1a80e1e38fd3d66eb09f66cb7558e42b8ec8867b8bec7344c909396302cb2fcecb0a1b1fcb1f5cfc30126c81da18df8e1954d12eafb6753e9f2f8027039f0badce8d811e0596982baad4e293d9d962937e68638120a4a65d1a14a3d87065473a18a68e5dc3d2c9920f3f42ae1143a0ccd1806c9f5dc696e07ce833d03ab495e0ff97187edc536a95ff99682b737e6d3100f154a8f9492d7b541dae7dc123a88088e0629a2e286c89ad318871b6b4258039d6400ac24f405134baa1a1d6decfcc7455a8a5f8c48dfe434d5a54e3948d1363eba2cc6dcf16e2c4dfdb9b76136757a9d406d7ef528ed497b475b95dbf6eabe11169214fab469874607d28ff069a76b17109c5b5ad11d44c0cded197e491c36f469dd18ffbf9edb94eb4dbbe4c55d36ad5a33cd04fc2a3f8707a71fe3edd64b04a17b42e75eb92b486996dda6279c97c5a9f8968f0cedc2d9e13123c4eb9c5aacd408b83ec1fe29cbb29c146a70d0e3b3a074fa02de18f5e4cb3e0b3ba5095c8ecdd1f216190c366d661197d0d8e5846e311d483b356d2689d34e832671b274ef3ecded0076ebec380b6b357af83cff715d60d794628dd8a6471f5c54b4a0cd1d2fc893c3ef2d30c88d3500e587515a33a752c0e5dbde23fcdaf6ccc683379e1a1ac071d4833203c36386f7f155f26bdd909d1deeafa4c5d996dd50f833ab7e611e52211aa814c1c717dca0c543300cf2cdac08c8c01aef4e5ba859195d91b22bf58c513c6c923c40c254201ed7ba717583babb76349831ed5bbd3cf9964966a4affcfa29f4e68b8d628c34c970430aeb492cdcd0641935e3362610c3062b4bd8eace044ebfbf00badee6a1fb04381e664ad1d5531c6b8011eeb882111c357f8e9be1b82c859748aec8d4f08bc1f90911daa9e9b5965c3a1604559bed80a51f4dfd3102cd83b687b099a87e177663c14c4d78cd3e2cbe5efa83841628ca390d5645e9a9911877109d1783529d6eaeb34a5cf84f88407167cd22c4a650be45c3ae5a81c1f9994da3d037d45cf2df83a531bc0d24fd575783247a4fdb031463c0f0df1dac46dc30bc55d67ffdb0fa1ec5a2cbe897cc7d8d430c25d6c7f76ab0ef9a8b4837b9bf5528c71c125c3d2116f6fdc0e15fb391509ab3e769cda361f71dee200f667d63bf7e314aacd600b5ca3af2b4f3e74622236a49a21382fae2222bb3b62783e1a037955b18776d95a6d2428183e23f1d9e744cc5d99e4563ceb051f396040ba4dc84bc83c6f8057a05cd5ceddf07606ca5952d33cb00f94eb40282b00d80bb89fb6a458b229c8c077412f000df9bd9d0f87242bc91d16d9b371d133fe0e9f4ba519021c4e6fb42a9ca29076a41cc97f3c6dcf05d16967f2c506f41aadb9c3bb353319f4694df3b7ab10bcdfac6cbecaba3a167252e5c9b8ab3662780253197da7f9485f5ba866d1e7832ff8950515a0fa5b14172dd44bc9b10842f94d330165883e556b3626c8a3e8c97d9e73e2875b4a30a5496c18c86066d3b9f4bed39a43fb9258d88b33eba451663e3d36143ddb06c3b28e94bb03f823d97880c033cad4f51fafdfa5471df80891d9cb40f7bda963c37e96d29b21f25e565bb7761479aad4e2ed0b61be3f366ce8d2d6066e2827e0af444dd483244d4de4284e43036a4d85f9fab54a9523a958275a52d099a28b7fd9c1548d6b23a67febfb76a482a0c384282ce15c152407af8c480eefb44576828b8c0de0b2bcfa89f29f776020e1a2098139ef84f7bac29f0a38a3e2a0886801aed118242dc558bb5612eb07a0c5bd0798f3d31b55e33287493c4d15e79ac22dd714dbf948483c88dfde98915681358e8acabf45e1c86ebaf4f5e69bcf09436ccbb557c4c7ce1503f8920156f8b4b1dda0078c55e55bda383c036e66f4b199bbac8b4152b9d2a10d7da650780a2f9d0f129ee6fff5f4c988c8661e5257acaa8d89e60786f98f331a059d06a630a328610eb9fb5f9134d3374b33fc51520beee8db3e8814a56c081ab0530dbc9e19af6ec6d52cd0f928f45ab728ff22c93b530e6c44425e2bc22cb3c1b44bca33b88a64697c8126a73dd48de40e8a33430c9f7d0eee13310372fe33de632433af3e895a4a5e7df62dfcdf76b68d93282613fb7d41e9c2fc67e29ea4b62841ec18aeea9833669e810e31505b402b3a1a566b878d237d284fc23b75f468f76cf47a26b0728d392d4720e9265e38652083d81f5ba9dffd99d7f2ff0d29f136b5c27793ef561bec74f3f047b79241769262677a40e557e14bfceca1c1f4172ed3b782ec91a9d4cd6cbaad77d05f8a328c26a018cf242563168e7c6e2480207a443335ef918821439c71936dca4fbbcea8f562363542040079d1e17b8ce5ca5e5692012a762e226033035a986985a5d98c97c6f3ac84ea3d7a526900e548feb567b79ca5d7cf3aafd9e1be7a9a81f60313cbe7bb2cd0fc704c13d06e7e6e13f5302847c02b890d59f34a71e685b7540b26e3828dfb55df4dfc6abcefb3228e513d983d99ea684e009e7343a99e649f7a301ecfe8407203cc5298aafdbdc2c215725b44724d532c71b368e690d8761a0e4ca773ef0f18d547945ba412927311fcf3574a9dd70a85da3ef85dc374863cb01704881115c7fac1fc3cb498733dd5701e1b49b0c329ef67c3cf7769f0046dcea166fa38805f6d80e35b880e11ac7f70cddcae0d07227319bed267e7a88dc993e299a13db7ff7d158da9e103c6e94a4e61908f76b883bc32b08febd1431437df0e8c8dd1c98d85ee5647bf59d65269f3d113544d30cb57fa3c19337efc79fa68ea70011ce01f44f4709b7fca38c7525eca3b26c3ab86ab061f8154f8099c85d1606527ca6c63df0b2eb84b8fbabf4b04328abbe80397bab2c996eebb9b508713ccf7e85120268f427b25e3cdb2dcee7348c8dbd2246bc1fc0f954b62f811306a2563502122ef0489fa6c5f517d726be8eda89f4db694a353cdd5de36469b44edc3fcc742e9ea5c73b77d7e92e4b672b8b8004d407045c859256d29fa9b95423bea4ed551aac257a0f8d7ee5c23a2979695ed93e737c5771d25012d7945f7c579b54a81c51d8e41d789cbc70a3c529afcbe5c64a9fc43de5a392c48f769376fa5c2ac4b95f7aaeddecb45e0900316d05657c97010a7f2a1cb83becbe28886b9814919f8356076d77c9694940fc34d845913993e1978e5215d12ecf3446a09c3e9e53e281e064c231260ac2bd942836ec42e3614b56eae2eaec1b4a9cb60569c</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>openstack</tag>
        <tag>nova</tag>
        <tag>netron</tag>
        <tag>编排工具</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack</title>
    <url>/2020/05/OpenStack/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>KVM 维护</title>
    <url>/2020/05/KVM%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="KVM-维护"><a href="#KVM-维护" class="headerlink" title="KVM 维护"></a>KVM 维护</h2><a href="/2020/05/KVM%E5%AE%89%E8%A3%85/" title="KVM安装">KVM安装</a>
<h3 id="修改虚拟机内存，cpu-core"><a href="#修改虚拟机内存，cpu-core" class="headerlink" title="修改虚拟机内存，cpu core"></a>修改虚拟机内存，cpu core</h3><blockquote>
<p>扩大内存，cpu个数需要重启生效</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 列出虚拟机</span></span><br><span class="line">virsh list --<span class="built_in">help</span></span><br><span class="line">virsh list</span><br><span class="line">virsh list -all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑配置文件</span></span><br><span class="line">virsh edit yfgitlab</span><br><span class="line">---</span><br><span class="line">&lt;memory unit=<span class="string">'KiB'</span>&gt;16777216&lt;/memory&gt;</span><br><span class="line">&lt;currentMemory unit=<span class="string">'KiB'</span>&gt;16777216&lt;/currentMemory&gt;</span><br><span class="line">&lt;vcpu placement=<span class="string">'static'</span>&gt;4&lt;/vcpu&gt;</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启虚拟机</span></span><br><span class="line">virsh reboot yfgitlab</span><br><span class="line">or</span><br><span class="line">virsh shutdown yfgitlab</span><br><span class="line">virsh start yfgitlab</span><br></pre></td></tr></table></figure>
<h2 id="动态调整（虚拟机内存，cpu-core）"><a href="#动态调整（虚拟机内存，cpu-core）" class="headerlink" title="动态调整（虚拟机内存，cpu core）"></a>动态调整（虚拟机内存，cpu core）</h2><blockquote>
<p>KVM虚拟机可以动态增加和删除vCPU，但是前提条件是，必须在虚拟机offline模式下先设置好最大vCPU数量。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 调整内存</span></span><br><span class="line">virsh setmaxmem devstack 32G</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调整cpu core</span></span><br><span class="line">virsh setvcpus devstack 4</span><br><span class="line"><span class="comment"># error: unsupported configuration: failed to find appropriate hotpluggable vcpus to reach the desired target vcpu count</span></span><br></pre></td></tr></table></figure>
<hr>
<h3 id="创建快照"><a href="#创建快照" class="headerlink" title="创建快照"></a>创建快照</h3><blockquote>
<p>raw 格式盘不支持快照</p>
</blockquote>
<h2 id><a href="#" class="headerlink" title></a><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 列出当前快照</span></span><br><span class="line">virsh snapshot-list yfgitlab</span><br><span class="line"></span><br><span class="line"><span class="comment"># virsh snapshot-create-as 虚拟机名称     快照名称     快照描述</span></span><br><span class="line">virsh snapshot-create-as yfgitlab yfgitlab`date <span class="string">"+%F_%T"</span>` <span class="string">"test"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 还原快照</span></span><br><span class="line">virsh snapshot-revert --domain yfgitlab yfgitlab2017-05-21_08:34:12</span><br></pre></td></tr></table></figure></h2><h3 id="KVM-添加磁盘"><a href="#KVM-添加磁盘" class="headerlink" title="KVM 添加磁盘"></a>KVM 添加磁盘</h3><a href="/2020/05/LVM%E9%80%BB%E8%BE%91%E5%8D%B7%E7%AE%A1%E7%90%86/" title="LVM逻辑卷管理">LVM逻辑卷管理</a>
<blockquote>
<p>qcow2是集各种技术为一体的超级镜像格式，支持内部快照，加密，压缩等一系列功能，访问性能也在不断提高。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建磁盘</span></span><br><span class="line">qemu-img create -h</span><br><span class="line">qemu-img create -f qcow2 yfgitlab2.img 50G</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看磁盘格式</span></span><br><span class="line">file hello_data.img</span><br><span class="line"></span><br><span class="line"><span class="comment"># 磁盘格式转换 （raw 占用磁盘空间，qcow2 不占用磁盘空间）</span></span><br><span class="line">qemu-img convert -p -t directsync -O qcow2 test.raw test.qcow2 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出虚拟机</span></span><br><span class="line">virsh list</span><br><span class="line">---</span><br><span class="line"> 11    yfgitlab                       running</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="comment"># 磁盘挂到虚拟机</span></span><br><span class="line"><span class="comment"># virsh 添加磁盘   虚拟机名           磁盘位置             虚拟机中盘名  是否缓存</span></span><br><span class="line">virsh attach-disk yfgitlab /data/img1/yfgitlab-data.img vdb --cache none --subdriver=qcow2</span><br><span class="line">virsh attach-disk yfgitlab /data/img1/yfgitlab-data.img vdb --cache none --subdriver=qcow2 --config</span><br><span class="line"></span><br><span class="line">--config   会把文件写入配置文件（下次启动有效）</span><br><span class="line">--live     直接有效</span><br><span class="line">--current  当前有效</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件</span></span><br><span class="line"><span class="comment"># /etc/libvirt/qemu/yfgitlab.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载磁盘</span></span><br><span class="line">virsh detach-disk yfgitlab /data/img1/yfgitlab-data.img</span><br><span class="line"></span><br><span class="line"><span class="comment"># 到虚拟机中查看磁盘</span></span><br><span class="line">fdisk -l</span><br><span class="line">---</span><br><span class="line">Disk /dev/vdb: 53.7 GB, 53695545344 bytes, 104874112 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式化</span></span><br><span class="line">mkfs.ext4 /dev/vdb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载目录</span></span><br><span class="line">mkdir /data</span><br><span class="line">mount /dev/vdb /data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看</span></span><br><span class="line">df -h</span><br><span class="line">---</span><br><span class="line">/dev/vdb                  50G   53M   47G   1% /data</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写到挂载文件 /etc/fstab</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"/dev/vdb /data ext4 defaults 0 0"</span> &gt;&gt;/etc/fstab</span><br><span class="line">mount -a</span><br></pre></td></tr></table></figure>
<h3 id="KVM-扩磁盘大小"><a href="#KVM-扩磁盘大小" class="headerlink" title="KVM 扩磁盘大小"></a>KVM 扩磁盘大小</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看磁盘格式</span></span><br><span class="line">file hello_data.img</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看磁盘信息</span></span><br><span class="line">qemu-img info hello_data.img</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭虚拟机</span></span><br><span class="line">virsh shutdown xp_4_test</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扩容磁盘文件</span></span><br><span class="line">qemu-img resize hello_data.img +150M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 缩容</span></span><br><span class="line">qemu-img resize hello_data.img -150M --shrink</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看磁盘信息</span></span><br><span class="line">qemu-img info hello_data.img</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动虚拟机</span></span><br><span class="line">virsh start xp_4_test</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>虚拟化</category>
      </categories>
  </entry>
  <entry>
    <title>Docker 使用</title>
    <url>/2020/05/Docker/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><ul>
<li><a href="https://www.redhat.com/zh/topics/containers/whats-a-linux-container" target="_blank" rel="noopener">容器原理</a></li>
<li><a href="https://docs.docker.com/engine/" target="_blank" rel="noopener">docker doc </a></li>
<li><a href="https://docs.docker.com/reference/" target="_blank" rel="noopener">docker 参考文档</a></li>
<li><a href="https://container-registry.oracle.com" target="_blank" rel="noopener">oracle 镜像库</a></li>
</ul>
<a href="/2020/05/Docker%E5%AE%89%E8%A3%85/" title="Docker安装">Docker安装</a>
<h2 id="Docker-维护"><a href="#Docker-维护" class="headerlink" title="Docker 维护"></a>Docker 维护</h2><ul>
<li>镜像<ul>
<li>使用 Dockerfile 制作镜像</li>
<li>使用 tag 制作新的镜像</li>
<li>使用 commit 把容器制作成镜像</li>
<li>公共的镜像仓库</li>
<li>使用 harbor 搭建私有镜像仓库</li>
</ul>
</li>
<li>容器<ul>
<li>使用 docker run 创建容器  </li>
<li>使用 docker-compose 进行编排容器<ul>
<li>compose file 格式</li>
</ul>
</li>
</ul>
</li>
<li><p>overlay文件系统</p>
</li>
<li><p>CLI 使用</p>
</li>
<li><p>API 使用</p>
</li>
</ul>
<h2 id="Docker-原理"><a href="#Docker-原理" class="headerlink" title="Docker 原理"></a>Docker 原理</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># docker Namespaces 隔离</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># docker 四种网络模式</span></span><br><span class="line"><span class="comment"># host</span></span><br><span class="line"><span class="comment"># contianer</span></span><br><span class="line"><span class="comment"># none</span></span><br><span class="line"><span class="comment"># bridge</span></span><br></pre></td></tr></table></figure>
<h3 id="容器与宿主机文件拷贝"><a href="#容器与宿主机文件拷贝" class="headerlink" title="容器与宿主机文件拷贝"></a>容器与宿主机文件拷贝</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># docker cp 容器名：要拷贝的文件在容器里面的路径   要拷贝到宿主机的相应路径</span></span><br></pre></td></tr></table></figure>
<h3 id="docker-容器修改"><a href="#docker-容器修改" class="headerlink" title="docker 容器修改"></a>docker 容器修改</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置文件修改</span></span><br><span class="line"><span class="comment">## 获取id</span></span><br><span class="line">docker inspect e32ee41a614b |grep -i id</span><br><span class="line"></span><br><span class="line"><span class="comment">## mac 系统中使用轻量级虚拟机 hyperkit</span></span><br><span class="line">/var/lib/docker/containers/[hash_of_the_container]/hostconfig.json</span><br></pre></td></tr></table></figure>
<h3 id="docker-容器镜像导出导入"><a href="#docker-容器镜像导出导入" class="headerlink" title="docker 容器镜像导出导入"></a>docker 容器镜像导出导入</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看容器ID</span></span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出容器镜像</span></span><br><span class="line">docker <span class="built_in">export</span> 容器ID &gt; container`date <span class="string">"%F_%T"</span>`.tar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入容器镜像</span></span><br><span class="line">docker import - 镜像名 &lt; container.tar</span><br></pre></td></tr></table></figure>
<h3 id="docker-镜像导出导入"><a href="#docker-镜像导出导入" class="headerlink" title="docker 镜像导出导入"></a>docker 镜像导出导入</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看镜像</span></span><br><span class="line">docker image ls</span><br><span class="line">or (old version)</span><br><span class="line">docker images </span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出镜像</span></span><br><span class="line">docker save 镜像ID &gt; image`date <span class="string">"%F_%T"</span>`.tar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 同时打包多个镜像</span></span><br><span class="line">docker save -o images.tar postgres:9.6 mongo:3.4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入镜像</span></span><br><span class="line">docker load &lt; image`date <span class="string">"%F_%T"</span>`.tar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打上tag</span></span><br><span class="line"><span class="comment">#           镜像ID            repo        :tag</span></span><br><span class="line">docker tag 21de6f73b9ac sameersbn/gitlab:8.14.4</span><br></pre></td></tr></table></figure>
<h3 id="通过-registry-来进行镜像同步"><a href="#通过-registry-来进行镜像同步" class="headerlink" title="通过 registry 来进行镜像同步"></a>通过 registry 来进行镜像同步</h3><a href="/2020/05/Harbor%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/" title="Harbor安装配置">Harbor安装配置</a>
<hr>
<h3 id="Docker-使用"><a href="#Docker-使用" class="headerlink" title="Docker 使用"></a>Docker 使用</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># docker help</span></span><br><span class="line"><span class="comment"># docker image help</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索镜像</span></span><br><span class="line">docker search busybox</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去镜像库拉镜像</span></span><br><span class="line">docker image pull busybox</span><br><span class="line">docker image ls</span><br><span class="line">docker image inspect busybox</span><br><span class="line">docker image create -d --name b1 busybox</span><br><span class="line">docker container ps -a</span><br><span class="line">docker container start b1</span><br><span class="line">docker container <span class="built_in">exec</span> -it b1 /bin/bash</span><br><span class="line">docker container logs b1</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">docker container run --name b1 -it busybox</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看本地镜像</span></span><br><span class="line">docker image ls</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看运行的容器</span></span><br><span class="line">docker container ps</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器信息</span></span><br><span class="line">docker container inspect b1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有容器</span></span><br><span class="line">docker container ps -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除容器</span></span><br><span class="line">docker rm b1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制删除容器</span></span><br><span class="line">docker container rm b13c1f94e78c --force</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一次删除所有容器</span></span><br><span class="line">docker container prune</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看日志</span></span><br><span class="line">docker logs b1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 交互状态进入容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it b1 /bin/sh</span><br><span class="line"><span class="comment"># or 新式命令</span></span><br><span class="line">docker container <span class="built_in">exec</span> -it b1 /bin/sh</span><br></pre></td></tr></table></figure>
<h2 id="增加一个docker-没有指令（查看tags-版本）"><a href="#增加一个docker-没有指令（查看tags-版本）" class="headerlink" title="增加一个docker 没有指令（查看tags 版本）"></a>增加一个docker 没有指令（查看tags 版本）</h2><blockquote>
<p>网上找了一段shell，我给加了个缓存。官方怎么就没考虑这个需求</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;dockertags</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">usage</span></span>() &#123;</span><br><span class="line">cat &lt;&lt; HELP</span><br><span class="line"></span><br><span class="line">dockertags  --  list all tags <span class="keyword">for</span> a Docker image on a remote registry.</span><br><span class="line"></span><br><span class="line">EXAMPLE:</span><br><span class="line">    - list all tags <span class="keyword">for</span> ubuntu:</span><br><span class="line">       dockertags ubuntu</span><br><span class="line"></span><br><span class="line">    - list all php tags containing apache:</span><br><span class="line">       dockertags php apache</span><br><span class="line"></span><br><span class="line">	- clean cache</span><br><span class="line">       dockertags clean</span><br><span class="line"></span><br><span class="line">HELP</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 增加个缓存，防止重复请求</span></span><br><span class="line"><span class="function"><span class="title">cache</span></span>()&#123;</span><br><span class="line">	mkdir -p <span class="variable">$HOME</span>/.dockercache</span><br><span class="line">	<span class="keyword">if</span> [ -f <span class="variable">$HOME</span>/.dockercache/<span class="variable">$1</span> ];<span class="keyword">then</span></span><br><span class="line">		cat <span class="variable">$HOME</span>/.dockercache/<span class="variable">$1</span>|egrep <span class="string">"<span class="variable">$2</span>.*"</span></span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">        tags=`wget -q https://registry.hub.docker.com/v1/repositories/<span class="variable">$&#123;1&#125;</span>/tags -O -  | sed -e <span class="string">'s/[][]//g'</span> -e <span class="string">'s/"//g'</span> -e <span class="string">'s/ //g'</span> | tr <span class="string">'&#125;'</span> <span class="string">'\n'</span>  | awk -F: <span class="string">'&#123;print $3&#125;'</span>`</span><br><span class="line">	    <span class="comment">#echo "$&#123;tags&#125;"</span></span><br><span class="line">	    <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;tags&#125;</span>"</span> |sort -r &gt;<span class="variable">$HOME</span>/.dockercache/<span class="variable">$1</span></span><br><span class="line">		cat <span class="variable">$HOME</span>/.dockercache/<span class="variable">$1</span> |grep <span class="string">"<span class="variable">$2</span>.*"</span>	</span><br><span class="line">	<span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -lt 1 ]; <span class="keyword">then</span></span><br><span class="line">	usage</span><br><span class="line">	<span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">image=<span class="string">"<span class="variable">$1</span>"</span></span><br><span class="line">[ <span class="string">"<span class="variable">$1</span>"</span> == <span class="string">"clean"</span> ]&amp;&amp; rm -rf <span class="variable">$HOME</span>/.dockercache&amp;&amp;<span class="built_in">exit</span></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$2</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">	cache <span class="variable">$image</span> <span class="variable">$2</span></span><br><span class="line">	<span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">cache <span class="variable">$image</span> <span class="string">""</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<h2 id="Docker-API-使用"><a href="#Docker-API-使用" class="headerlink" title="Docker API 使用"></a>Docker API 使用</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># go </span></span><br><span class="line">go get github.com/docker/docker/client</span><br><span class="line"></span><br><span class="line"><span class="comment"># python</span></span><br><span class="line">pip install docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># curl</span></span><br><span class="line"><span class="comment"># 创建容器</span></span><br><span class="line">$ curl --unix-socket /var/run/docker.sock -H <span class="string">"Content-Type: application/json"</span> \</span><br><span class="line">  -d <span class="string">'&#123;"Image": "alpine", "Cmd": ["echo", "hello world"]&#125;'</span> \</span><br><span class="line">  -X POST http:/v1.24/containers/create</span><br><span class="line"><span class="comment"># 返回容器id</span></span><br><span class="line">&#123;<span class="string">"Id"</span>:<span class="string">"1c6594faf5"</span>,<span class="string">"Warnings"</span>:null&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动容器</span></span><br><span class="line">$ curl --unix-socket /var/run/docker.sock -X POST http:/v1.24/containers/1c6594faf5/start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看状态</span></span><br><span class="line">$ curl --unix-socket /var/run/docker.sock -X POST http:/v1.24/containers/1c6594faf5/<span class="built_in">wait</span></span><br><span class="line">&#123;<span class="string">"StatusCode"</span>:0&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看日志</span></span><br><span class="line">$ curl --unix-socket /var/run/docker.sock <span class="string">"http:/v1.24/containers/1c6594faf5/logs?stdout=1"</span></span><br><span class="line">hello world</span><br></pre></td></tr></table></figure>
<h3 id="Docker-go-API"><a href="#Docker-go-API" class="headerlink" title="Docker go API"></a>Docker go API</h3><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"context"</span></span><br><span class="line">	<span class="string">"io"</span></span><br><span class="line">	<span class="string">"os"</span></span><br><span class="line"></span><br><span class="line">	<span class="string">"github.com/docker/docker/api/types"</span></span><br><span class="line">	<span class="string">"github.com/docker/docker/api/types/container"</span></span><br><span class="line">	<span class="string">"github.com/docker/docker/client"</span></span><br><span class="line">	<span class="string">"github.com/docker/docker/pkg/stdcopy"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// "github.com/docker/docker/client"</span></span><br><span class="line">    ctx := context.Background()</span><br><span class="line">    cli, err := client.NewClientWithOpts(client.FromEnv, client.WithAPIVersionNegotiation())</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 拉取镜像</span></span><br><span class="line">    reader, err := cli.ImagePull(ctx, <span class="string">"docker.io/library/alpine"</span>, types.ImagePullOptions&#123;&#125;)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    io.Copy(os.Stdout, reader)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建容器</span></span><br><span class="line">    resp, err := cli.ContainerCreate(ctx, &amp;container.Config&#123;</span><br><span class="line">        Image: <span class="string">"alpine"</span>,</span><br><span class="line">        Cmd:   []<span class="keyword">string</span>&#123;<span class="string">"echo"</span>, <span class="string">"hello world"</span>&#125;,</span><br><span class="line">    &#125;, <span class="literal">nil</span>, <span class="literal">nil</span>, <span class="string">""</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 启动容器</span></span><br><span class="line">    <span class="keyword">if</span> err := cli.ContainerStart(ctx, resp.ID, types.ContainerStartOptions&#123;&#125;); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查看状态</span></span><br><span class="line">    statusCh, errCh := cli.ContainerWait(ctx, resp.ID, container.WaitConditionNotRunning)</span><br><span class="line">    <span class="keyword">select</span> &#123;</span><br><span class="line">    <span class="keyword">case</span> err := &lt;-errCh:</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="built_in">panic</span>(err)</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">case</span> &lt;-statusCh:</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查看日志</span></span><br><span class="line">    out, err := cli.ContainerLogs(ctx, resp.ID, types.ContainerLogsOptions&#123;ShowStdout: <span class="literal">true</span>&#125;)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    stdcopy.StdCopy(os.Stdout, os.Stderr, out)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>jenkins</title>
    <url>/2020/05/Jenkins/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="/2020/05/Docker%E5%AE%89%E8%A3%85/" title="Docker安装">Docker安装</a></li>
<li><a href="https://www.jenkins.io/doc/" target="_blank" rel="noopener">jenkins docs</a></li>
<li><a href="http://mirrors.jenkins-ci.org/status.html" target="_blank" rel="noopener">jenkins 插件镜像</a></li>
<li><a href="https://www.jenkins.io/zh/doc/book/managing/plugins/" target="_blank" rel="noopener">jenkins 中文社区</a></li>
<li><a href="https://github.com/jenkins-zh" target="_blank" rel="noopener">jenkins github zh</a></li>
<li><a href="https://plugins.jenkins.io/" target="_blank" rel="noopener">jenkins plugins center</a></li>
<li><a href="https://hub.docker.com/_/jenkins" target="_blank" rel="noopener">jenkins dockerfile </a></li>
<li><a href="https://github.com/jenkinsci/docker" target="_blank" rel="noopener">jenkins github </a></li>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/jenkins/plugins" target="_blank" rel="noopener">清华大学镜像源</a></li>
</ul>
<h2 id="docker-compose-安装"><a href="#docker-compose-安装" class="headerlink" title="docker-compose 安装"></a>docker-compose 安装</h2><p>JENKINS_UC：主要的插件更新中心，会提供Jenkin 长期支持的版本。默认值就是 <a href="https://updates.jenkins.io" target="_blank" rel="noopener">https://updates.jenkins.io</a>.<br>JENKINS_UC_EXPERIMENTAL：主要的插件开发/实验版本更新中心。<br>JENKINS_UC_DOWNLOAD：从插件更新中心的下载链接，默认为 $JENKINS_UC/downloads。</p>
<blockquote>
<p>使用最新的docker 镜像进行安装，安装完成报 jenkins 不是最新的。尝试了很多次插件安装的问题都不成功。<br>自己下载了jenkins.war 包制作镜像。jenkins插件是最大的诟病。</p>
</blockquote>
<h2 id="jenkins-conceptual"><a href="#jenkins-conceptual" class="headerlink" title="jenkins conceptual"></a>jenkins conceptual</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">item        <span class="comment"># 工程</span></span><br><span class="line">pipeline    <span class="comment"># 流水线</span></span><br><span class="line">build       <span class="comment"># 构建</span></span><br><span class="line">webhook     <span class="comment"># web钩子，属于http触发器</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义执行环境</span></span><br><span class="line">workspace   <span class="comment"># 工作空间，包含来自远程仓库的文件和一些用于Pipeline的工作文件</span></span><br><span class="line">agent       <span class="comment">#</span></span><br><span class="line">stages      <span class="comment"># 块</span></span><br><span class="line">    stage(<span class="string">'Build'</span>)   <span class="comment">#</span></span><br><span class="line">    stage(<span class="string">'Test'</span>)    <span class="comment">#</span></span><br><span class="line">    stage(<span class="string">'Deploy'</span>)  <span class="comment">#</span></span><br><span class="line">        steps   <span class="comment"># 步骤</span></span><br><span class="line">executor    <span class="comment"># 执行器</span></span><br><span class="line"> </span><br><span class="line">environment <span class="comment"># 定义环境变量</span></span><br><span class="line">post        </span><br><span class="line">    always      <span class="comment">#</span></span><br><span class="line">    success     <span class="comment">#</span></span><br><span class="line">    unstable    <span class="comment">#</span></span><br><span class="line">    failure     <span class="comment">#</span></span><br><span class="line">    changed     <span class="comment">#</span></span><br><span class="line"><span class="comment"># 通知</span></span><br><span class="line">mail to:        <span class="comment">#</span></span><br><span class="line"><span class="comment"># 部署</span></span><br></pre></td></tr></table></figure>
<h2 id="jenkins-daemon-安装"><a href="#jenkins-daemon-安装" class="headerlink" title="jenkins daemon 安装"></a>jenkins daemon 安装</h2><ul>
<li><a href="http://mirrors.jenkins.io/war-stable/latest/jenkins.war" target="_blank" rel="noopener">jenkins 下载</a><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 运行jenkins</span></span><br><span class="line">java -jar jenkins.war --httpPort=8080.</span><br><span class="line"><span class="comment"># 访问</span></span><br><span class="line">http://localhost:8080</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="docker-镜像安装-Jenkins"><a href="#docker-镜像安装-Jenkins" class="headerlink" title="docker 镜像安装 Jenkins"></a>docker 镜像安装 Jenkins</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查找镜像</span></span><br><span class="line">docker search jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载</span></span><br><span class="line">docker pull jenkins/jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建容器</span></span><br><span class="line">docker container create --name=jenkins -p 8080:8080 jenkins/jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器</span></span><br><span class="line">docker container ps -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动容器</span></span><br><span class="line">docker container start e32ee41a614b</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改容器资源</span></span><br><span class="line">docker container update --cpus 2  e32ee41a614b</span><br></pre></td></tr></table></figure>
<h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 一直停在 Your browser will reload automatically when Jenkins is ready.</span></span><br><span class="line">需要你进入jenkins的工作目录，打开-----hudson.model.UpdateCenter.xml将 url 中的 </span><br><span class="line">https://updates.jenkins.io/update-center.json</span><br><span class="line">更改为</span><br><span class="line">https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</span><br></pre></td></tr></table></figure>
<h2 id="下载最新版本-自己-build-一个镜像"><a href="#下载最新版本-自己-build-一个镜像" class="headerlink" title="下载最新版本 自己 build 一个镜像"></a>下载最新版本 自己 build 一个镜像</h2><p>build 过程中直接使用 root 用户<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line">mkdir jenkins</span><br><span class="line"><span class="built_in">cd</span> jenkins</span><br><span class="line"><span class="comment"># 把官方的 dockerfile 下载下来</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/jenkinsci/docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载 war</span></span><br><span class="line"><span class="comment"># wget http://ftp-nyc.osuosl.org/pub/jenkins/war-stable/2.222.4/jenkins.war</span></span><br><span class="line">wget http://ftp-nyc.osuosl.org/pub/jenkins/war-stable/latest/jenkins.war</span><br><span class="line"></span><br><span class="line"><span class="comment"># 目录结构</span></span><br><span class="line">/Users/alert/jenkins</span><br><span class="line">├── data</span><br><span class="line">│   └── jenkins <span class="comment">#启动时数据目录</span></span><br><span class="line">├── docker <span class="comment"># build 目录</span></span><br><span class="line">│   ├── CHANGELOG.md</span><br><span class="line">│   ├── CONTRIBUTING.md</span><br><span class="line">│   ├── Dockerfile</span><br><span class="line">│   ├── Dockerfile-alpine</span><br><span class="line">│   ├── Dockerfile-centos</span><br><span class="line">│   ├── Dockerfile-jdk11</span><br><span class="line">│   ├── Dockerfile-openj9</span><br><span class="line">│   ├── Dockerfile-openj9-jdk11</span><br><span class="line">│   ├── Dockerfile-slim</span><br><span class="line">│   ├── Dockerfile.bak</span><br><span class="line">│   ├── HACKING.adoc</span><br><span class="line">│   ├── Jenkinsfile</span><br><span class="line">│   ├── LICENSE.txt</span><br><span class="line">│   ├── Makefile</span><br><span class="line">│   ├── README.md</span><br><span class="line">│   ├── docker-compose.yml</span><br><span class="line">│   ├── install-plugins.sh</span><br><span class="line">│   ├── jenkins-support</span><br><span class="line">│   ├── jenkins.sh</span><br><span class="line">│   ├── jenkins.war</span><br><span class="line">│   ├── multiarch</span><br><span class="line">│   ├── plugins.sh</span><br><span class="line">│   ├── publish-experimental.sh</span><br><span class="line">│   ├── publish.sh</span><br><span class="line">│   ├── tests</span><br><span class="line">│   ├── tini-shim.sh</span><br><span class="line">│   ├── tini_pub.gpg</span><br><span class="line">│   └── tools</span><br><span class="line">├── docker-compose.yml <span class="comment"># docker-compose 文件</span></span><br><span class="line">└── dockertags <span class="comment"># 获取标签的脚本</span></span><br></pre></td></tr></table></figure></p>
<h2 id="修改dockerfile"><a href="#修改dockerfile" class="headerlink" title="修改dockerfile"></a>修改dockerfile</h2><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'GEOF'</span> &gt;docker/Dockerfile</span><br><span class="line"><span class="keyword">FROM</span> openjdk:<span class="number">8</span>-jdk-stretch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用阿里云镜像</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">echo</span> <span class="string">"deb http://mirrors.aliyun.com/debian/ stretch main non-free contrib"</span> &gt;/etc/apt/sources.list \</span></span><br><span class="line"><span class="bash">&amp;&amp;<span class="built_in">echo</span> <span class="string">"deb-src http://mirrors.aliyun.com/debian/ stretch main non-free contrib"</span> &gt;&gt;/etc/apt/sources.list \</span></span><br><span class="line"><span class="bash">&amp;&amp;<span class="built_in">echo</span> <span class="string">"deb http://mirrors.aliyun.com/debian-security stretch/updates main"</span> &gt;&gt;/etc/apt/sources.list \</span></span><br><span class="line"><span class="bash">&amp;&amp;<span class="built_in">echo</span> <span class="string">"deb-src http://mirrors.aliyun.com/debian-security stretch/updates main"</span> &gt;&gt;/etc/apt/sources.list \</span></span><br><span class="line"><span class="bash">&amp;&amp;<span class="built_in">echo</span> <span class="string">"deb http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib"</span> &gt;&gt;/etc/apt/sources.list \</span></span><br><span class="line"><span class="bash">&amp;&amp;<span class="built_in">echo</span> <span class="string">"deb-src http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib"</span> &gt;&gt;/etc/apt/sources.list \</span></span><br><span class="line"><span class="bash">&amp;&amp;<span class="built_in">echo</span> <span class="string">"deb http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib"</span> &gt;&gt;/etc/apt/sources.list \</span></span><br><span class="line"><span class="bash">&amp;&amp;<span class="built_in">echo</span> <span class="string">"deb-src http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib"</span> &gt;&gt;/etc/apt/sources.list</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 去掉系统更新，系统更新下载太慢了</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apt-get update &amp;&amp; apt-get upgrade -y&amp;&amp;apt-get install -y git curl &amp;&amp; curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash &amp;&amp; apt-get install -y git-lfs &amp;&amp; git lfs install &amp;&amp; rm -rf /var/lib/apt/lists/*</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 root 用户</span></span><br><span class="line"><span class="keyword">ARG</span> <span class="keyword">user</span>=root</span><br><span class="line"><span class="keyword">ARG</span> group=root</span><br><span class="line"><span class="keyword">ARG</span> uid=<span class="number">0</span></span><br><span class="line"><span class="keyword">ARG</span> gid=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ARG</span> http_port=<span class="number">8080</span></span><br><span class="line"><span class="keyword">ARG</span> agent_port=<span class="number">50000</span></span><br><span class="line"><span class="keyword">ARG</span> JENKINS_HOME=/var/jenkins_home</span><br><span class="line"><span class="keyword">ARG</span> REF=/usr/share/jenkins/ref</span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> JENKINS_HOME $JENKINS_HOME</span><br><span class="line"><span class="keyword">ENV</span> JENKINS_SLAVE_AGENT_PORT $&#123;agent_port&#125;</span><br><span class="line"><span class="keyword">ENV</span> REF $REF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改了一下，不要创建新用户</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> mkdir -p <span class="variable">$JENKINS_HOME</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">VOLUME</span><span class="bash"> <span class="variable">$JENKINS_HOME</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> mkdir -p <span class="variable">$&#123;REF&#125;</span>/init.groovy.d</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ARG</span> TINI_VERSION=v0.<span class="number">16.1</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> tini_pub.gpg <span class="variable">$&#123;JENKINS_HOME&#125;</span>/tini_pub.gpg</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> curl -fsSL https://github.com/krallin/tini/releases/download/<span class="variable">$&#123;TINI_VERSION&#125;</span>/tini-static-$(dpkg --<span class="built_in">print</span>-architecture) -o /sbin/tini \</span></span><br><span class="line"><span class="bash">  &amp;&amp; curl -fsSL https://github.com/krallin/tini/releases/download/<span class="variable">$&#123;TINI_VERSION&#125;</span>/tini-static-$(dpkg --<span class="built_in">print</span>-architecture).asc -o /sbin/tini.asc \</span></span><br><span class="line"><span class="bash">  &amp;&amp; gpg --no-tty --import <span class="variable">$&#123;JENKINS_HOME&#125;</span>/tini_pub.gpg \</span></span><br><span class="line"><span class="bash">  &amp;&amp; gpg --verify /sbin/tini.asc \</span></span><br><span class="line"><span class="bash">  &amp;&amp; rm -rf /sbin/tini.asc /root/.gnupg \</span></span><br><span class="line"><span class="bash">  &amp;&amp; chmod +x /sbin/tini</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ARG</span> JENKINS_VERSION</span><br><span class="line"><span class="keyword">ENV</span> JENKINS_VERSION $&#123;JENKINS_VERSION:-<span class="number">2.176</span>.<span class="number">2</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ARG</span> JENKINS_SHA=<span class="number">33</span>a6c3161cf8de9c8729fd83914d781319fd1569acf487c7b1121681dba190a5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把下载的 jenkins.war 添加到镜像</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> ./jenkins.war /usr/share/jenkins/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以把此处改了</span></span><br><span class="line"><span class="keyword">ENV</span> JENKINS_UC https://updates.jenkins.io</span><br><span class="line"><span class="keyword">ENV</span> JENKINS_UC_EXPERIMENTAL=https://updates.jenkins.io/experimental</span><br><span class="line"><span class="keyword">ENV</span> JENKINS_INCREMENTALS_REPO_MIRROR=https://repo.jenkins-ci.org/incrementals</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> chown -R <span class="variable">$&#123;user&#125;</span> <span class="string">"<span class="variable">$JENKINS_HOME</span>"</span> <span class="string">"<span class="variable">$REF</span>"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> $&#123;http_port&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> $&#123;agent_port&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> COPY_REFERENCE_FILE_LOG $JENKINS_HOME/copy_reference_file.log</span><br><span class="line"></span><br><span class="line"><span class="keyword">USER</span> $&#123;<span class="keyword">user</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> jenkins-support /usr/<span class="built_in">local</span>/bin/jenkins-support</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> jenkins.sh /usr/<span class="built_in">local</span>/bin/jenkins.sh</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> tini-shim.sh /bin/tini</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">"/sbin/tini"</span>, <span class="string">"--"</span>, <span class="string">"/usr/local/bin/jenkins.sh"</span>]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> plugins.sh /usr/<span class="built_in">local</span>/bin/plugins.sh</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> install-plugins.sh /usr/<span class="built_in">local</span>/bin/install-plugins.sh</span></span><br><span class="line">GEOF</span><br></pre></td></tr></table></figure>
<h2 id="开始-build-手动build"><a href="#开始-build-手动build" class="headerlink" title="开始 build(手动build)"></a>开始 build(手动build)</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开始 build</span></span><br><span class="line">docker build -t myjenkins:0.1 .</span><br><span class="line"><span class="comment"># docker build -f ./Dockerfile-centos -t myjenkins:0.1 .</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># docker-compose.yml</span></span><br><span class="line">cat &lt;&lt;EOF &gt;docker-compose.yml</span><br><span class="line">version: <span class="string">"3.8"</span></span><br><span class="line">services:</span><br><span class="line">  jenkins:</span><br><span class="line">    container_name: jenkins</span><br><span class="line">    image: myjenkins:0.1</span><br><span class="line">    volumes:</span><br><span class="line">    - ./data/jenkins:/var/jenkins_home:z</span><br><span class="line">    ports:</span><br><span class="line">    - 8080:8080</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">    - JENKINS_UC=https://mirrors.tuna.tsinghua.edu.cn</span><br><span class="line">    - JENKINS_UC_EXPERIMENTAL=https://mirrors.tuna.tsinghua.edu.cn/experimental</span><br><span class="line">    <span class="comment">#- JAVA_OPTS=-Dhudson.footerURL=https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json jenkins</span></span><br><span class="line">networks:</span><br><span class="line">  jenkins-net:</span><br><span class="line">    driver: bridge</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<h3 id="docker-compose-yml-build（自动build）"><a href="#docker-compose-yml-build（自动build）" class="headerlink" title="docker-compose.yml build（自动build）"></a>docker-compose.yml build（自动build）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt;docker-compose.yml</span><br><span class="line">version: <span class="string">"3.8"</span></span><br><span class="line">services:</span><br><span class="line">  jenkins:</span><br><span class="line">    container_name: jenkins</span><br><span class="line">    build:</span><br><span class="line">      context: ./docker</span><br><span class="line">      dockerfile: ./Dockerfile</span><br><span class="line">    image: myjenkins:latest</span><br><span class="line">    volumes:</span><br><span class="line">    - ./data/jenkins:/var/jenkins_home:z</span><br><span class="line">    ports:</span><br><span class="line">    - 8080:8080</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">    - JENKINS_UC=https://mirrors.tuna.tsinghua.edu.cn</span><br><span class="line">    - JENKINS_UC_EXPERIMENTAL=https://mirrors.tuna.tsinghua.edu.cn/experimental</span><br><span class="line">    <span class="comment">#- JAVA_OPTS=-Dhudson.footerURL=https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json jenkins</span></span><br><span class="line">networks:</span><br><span class="line">  jenkins-net:</span><br><span class="line">    driver: bridge</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<h3 id="直接build"><a href="#直接build" class="headerlink" title="直接build"></a>直接build</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up --build -d</span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line"><span class="comment"># 停止 docker-compose 运行</span></span><br><span class="line">docker-compose up down</span><br></pre></td></tr></table></figure>
<h3 id="密码路径"><a href="#密码路径" class="headerlink" title="密码路径"></a>密码路径</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 密码路径 /var/jenkins_home/secrets/initialAdminPassword</span></span><br><span class="line"><span class="comment"># 设置用户名密码</span></span><br><span class="line">admin,admin@123.com</span><br></pre></td></tr></table></figure>
<h3 id="插件配置jenkins"><a href="#插件配置jenkins" class="headerlink" title="插件配置jenkins"></a>插件配置jenkins</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 密码路径 /var/jenkins_home/secrets/initialAdminPassword</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置插件更新地址 Jenkins -&gt; Plugin Manager -&gt; Update Site</span></span><br><span class="line">https://updates.jenkins.io/update-center.json</span><br><span class="line">改</span><br><span class="line">https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 hudson xml 配置</span></span><br><span class="line">sed -i <span class="string">'/url/s#https.*.json#https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json#p'</span> /root/data/jenkins/hudson.model.UpdateCenter.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改default.json 需要重启</span></span><br><span class="line">cp default.json default.json.bak</span><br><span class="line">1,<span class="variable">$s</span>/http:\/\/updates.jenkins-ci.org\/download/https:\/\/mirrors.tuna.tsinghua.edu.cn\/jenkins/g</span><br><span class="line">1,<span class="variable">$s</span>/http:\/\/www.google.com/https:\/\/www.baidu.com/g</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一定要重启否则不生效</span></span><br><span class="line">docker-compose stop</span><br><span class="line">docker-compose start</span><br></pre></td></tr></table></figure>
<h2 id="手动安装-jenkins-插件"><a href="#手动安装-jenkins-插件" class="headerlink" title="手动安装 jenkins 插件"></a>手动安装 jenkins 插件</h2><ul>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/jenkins/plugins" target="_blank" rel="noopener">清华大学镜像源</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 手动安装插件 https://mirrors.tuna.tsinghua.edu.cn/jenkins/plugins/</span></span><br><span class="line">Jenkins -&gt; Plugin Manager -&gt; Upload Plugin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 语言插件 locale</span></span><br><span class="line"><span class="comment"># Manager jenkins -&gt; configure system  -&gt; locale -&gt; 填入 zh_CN -&gt; 勾选所有用户生效</span></span><br><span class="line">https://mirrors.tuna.tsinghua.edu.cn/jenkins/plugins/locale/latest/locale.hpi</span><br></pre></td></tr></table></figure>
<h3 id="jenkins-CLI插件安装"><a href="#jenkins-CLI插件安装" class="headerlink" title="jenkins CLI插件安装"></a>jenkins CLI插件安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载 http://182.92.67.154:8080/jnlpJars/jenkins-cli.jar</span></span><br><span class="line"><span class="comment"># java -jar jenkins-cli.jar -s http://182.92.67.154:8080/ install-plugin &lt;SOURCE&gt; ... [-deploy] [-name alias_name] [-restart]</span></span><br><span class="line">参数说明：</span><br><span class="line"></span><br><span class="line">SOURCE，是插件文件或插件的网络URI；</span><br><span class="line">-deploy，直接部署插件，无需推迟到Jenkins服务器重启的时候再部署插件</span><br><span class="line">-name，给插件起别名</span><br><span class="line">-restart，安装插件后重启Jenkins服务器</span><br><span class="line">-auth admin:admin@123.com <span class="comment"># 用户名:密码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行</span></span><br><span class="line">java -jar jenkins-cli.jar -s http://129.84.8.33:10100/ -auth admin:admin@123.com install-plugin https://mirrors.tuna.tsinghua.edu.cn/jenkins/plugins/backup/latest/backup.hpi -deploy</span><br></pre></td></tr></table></figure>
<h4 id="jenkins-安装插件脚本-centos"><a href="#jenkins-安装插件脚本-centos" class="headerlink" title="jenkins 安装插件脚本 (centos)"></a>jenkins 安装插件脚本 (centos)</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'GEOF'</span> &gt;jenkins_install_plugin.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">log</span></span>()&#123;</span><br><span class="line"><span class="comment"># 用法：log x</span></span><br><span class="line"><span class="comment"># 方法在函数或模块前加上注释，会将注释打印出来</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\e[0;32m ------<span class="variable">$1</span>、`sed -n "</span>/\&lt;<span class="built_in">log</span> <span class="variable">$1</span>\&gt;/&#123;x;p&#125;;h<span class="string">" <span class="variable">$0</span>`\t------- \e[m"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$(<span class="built_in">command</span> -v java|| <span class="built_in">log</span> 没有jdk,退出程序)&amp;&amp;<span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">jenkins_url=<span class="string">"<span class="variable">$1</span>"</span></span><br><span class="line">jenkins_url=<span class="variable">$&#123;jenkins_url:=http://182.92.67.154:8080/&#125;</span></span><br><span class="line">userpwd=<span class="string">"admin:admin@123.com"</span></span><br><span class="line"></span><br><span class="line">[ ! -f jenkins-cli.jar ]&amp;&amp; wget -q <span class="variable">$&#123;jenkins_url&#125;</span>/jnlpJars/jenkins-cli.jar</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">execute_install</span></span>()&#123;</span><br><span class="line"><span class="comment"># install plugin</span></span><br><span class="line"><span class="built_in">log</span> start</span><br><span class="line">java -jar jenkins-cli.jar -s <span class="variable">$1</span> -auth <span class="variable">$2</span> install-plugin https://mirrors.tuna.tsinghua.edu.cn/jenkins/plugins/<span class="variable">$&#123;3&#125;</span>/latest/<span class="variable">$&#123;3&#125;</span>.hpi -deploy</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">baseplugin=<span class="string">"backup"</span></span><br><span class="line">gitlabplginlist=<span class="string">""</span></span><br><span class="line">k8spluginlist=<span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">base_install</span></span>()&#123;</span><br><span class="line"><span class="comment"># 安装基本插件</span></span><br><span class="line"><span class="built_in">log</span> 1</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> <span class="variable">$baseplugin</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"install plugin: "</span> <span class="variable">$p</span></span><br><span class="line">execute_install <span class="variable">$&#123;jenkins_url&#125;</span> <span class="variable">$&#123;userpwd&#125;</span> <span class="variable">$p</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">gitlab_install</span></span>()&#123;</span><br><span class="line"><span class="comment"># 安装 gitlab 所需插件</span></span><br><span class="line"><span class="built_in">log</span> 2</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> <span class="variable">$gitlabplginlist</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"install plugin: "</span> <span class="variable">$p</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">k8s_install</span></span>()&#123;</span><br><span class="line"><span class="comment"># 安装 k8s 所需插件</span></span><br><span class="line"><span class="built_in">log</span> 3</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> <span class="variable">$k8spluginlist</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"install plugin: "</span> <span class="variable">$p</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">base_install</span><br><span class="line">gitlab_install</span><br><span class="line">k8s_install</span><br><span class="line">&#125;;main</span><br><span class="line">GEOF</span><br><span class="line">chmod 755 jenkins_install_plugin.sh</span><br></pre></td></tr></table></figure>
<h3 id="2-4-新版本"><a href="#2-4-新版本" class="headerlink" title="2.4 新版本"></a>2.4 新版本</h3><p>插件管理 availble 不再全部显示。可以直接搜索</p>
<h2 id="jenkins-maven-配置"><a href="#jenkins-maven-配置" class="headerlink" title="jenkins maven 配置"></a>jenkins maven 配置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 系统工具 -&gt; 全局配置工具 -&gt; Maven -&gt;</span></span><br><span class="line">Name: maven3</span><br><span class="line">MAVEN_HOME: /var/jenkins_home/jdk/maven/</span><br></pre></td></tr></table></figure>
<h2 id="jenkins-jdk-配置"><a href="#jenkins-jdk-配置" class="headerlink" title="jenkins jdk 配置"></a>jenkins jdk 配置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 系统工具 -&gt; 全局配置工具 -&gt; jdk -&gt;</span></span><br><span class="line">Name: jdk8</span><br><span class="line">JAVA_HOME: /var/jenkins_home/jdk/jdk1.8.0_251/</span><br></pre></td></tr></table></figure>
<h2 id="项目设置-webhook"><a href="#项目设置-webhook" class="headerlink" title="项目设置 webhook"></a>项目设置 webhook</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># gitlab，pipeline 插件</span></span><br><span class="line"><span class="comment"># 到项目用户的setting 中获取一个 token</span></span><br><span class="line">J2X9KnkY2JWJCUz7xmdu</span><br><span class="line"></span><br><span class="line"><span class="comment"># Credentials</span></span><br><span class="line">Scope	：Global (Jenkins, nodes, items, all child items, etc)</span><br><span class="line">API token	：Concealed</span><br><span class="line">ID：leader</span><br><span class="line">Description	：youlv 项目</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 config -&gt; gitlab connection</span></span><br><span class="line">Enable authentication <span class="keyword">for</span> <span class="string">'/project'</span> end-point	（selected）	</span><br><span class="line">GitLab connections	</span><br><span class="line"> 	Connection name	：gitlab1</span><br><span class="line"> 	Gitlab host URL	：http://119.84.8.43:10097/</span><br><span class="line"> 	Credentials	：GitLab API token (youlv 项目)</span><br><span class="line"></span><br><span class="line"><span class="comment"># jenkins iterm 中 -&gt; general -&gt; GitHub project</span></span><br><span class="line">Project url	: http://119.84.8.43:10097/youlv/b1.git</span><br><span class="line">GitLab Connection	: gitlab1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Build Triggers</span></span><br><span class="line">Build when a change is pushed to GitLab. GitLab webhook URL: http://182.92.67.154:8080/project/youlv	</span><br><span class="line"> 	Enabled GitLab triggers	</span><br><span class="line">    Push Events		</span><br><span class="line">    Opened Merge Request Events		</span><br><span class="line">    Accepted Merge Request Events		</span><br><span class="line">    Closed Merge Request Events		</span><br><span class="line">    Rebuild open Merge Requests	: Never</span><br><span class="line"> 	Approved Merge Requests (EE-only)		</span><br><span class="line"> 	Comments		</span><br><span class="line"> 	Comment (regex) <span class="keyword">for</span> triggering a build	</span><br><span class="line">Jenkins please retry a build</span><br><span class="line">--- advanced</span><br><span class="line">Enable [ci-skip]		</span><br><span class="line"> 	Ignore WIP Merge Requests		</span><br><span class="line"> 	Set build description to build cause (eg. Merge request or Git Push )		</span><br><span class="line"> 	Build on successful pipeline events		</span><br><span class="line"> 	Pending build name <span class="keyword">for</span> pipeline	</span><br><span class="line"> 	Cancel pending merge request builds on update		</span><br><span class="line"> 	Allowed branches	</span><br><span class="line"> Allow all branches to trigger this job	</span><br><span class="line"> Filter branches by name	</span><br><span class="line"> Filter branches by regex	</span><br><span class="line">Filter merge request by label	</span><br><span class="line"> 	Secret token: 3f18efd9425b48db84e609de4a4d925b</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 gitlab 创建 webhook 填入以下信息</span></span><br><span class="line"><span class="comment"># project -&gt; setting -&gt; webhook</span></span><br><span class="line">webhook URL: http://182.92.67.154:8080/project/youlv</span><br><span class="line">Secret token: 3f18efd9425b48db84e609de4a4d925b</span><br><span class="line"><span class="comment"># 设置 master 库事件</span></span><br><span class="line">Trigger</span><br><span class="line">Push events: master</span><br><span class="line">SSL verification</span><br><span class="line">Enable SSL verification ： NO</span><br><span class="line"></span><br><span class="line"><span class="comment"># 先要 commit 一次再触发测试,参考 gitlab 项目示例</span></span><br></pre></td></tr></table></figure>
<a href="/2020/06/gitlab%E9%A1%B9%E7%9B%AE%E7%A4%BA%E4%BE%8B/" title="gitlab项目示例">gitlab项目示例</a>
<a href="/2020/06/jenkinsK8s/" title="jenkinsK8s CI">jenkinsK8s CI</a>
<p>/var/jenkins_home/workspace/youlv</p>
<h2 id="java-github-jenkins-maven"><a href="#java-github-jenkins-maven" class="headerlink" title="java + github + jenkins + maven"></a>java + github + jenkins + maven</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># java</span></span><br><span class="line"><span class="comment"># github</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># jenkins</span></span><br><span class="line"><span class="comment">## 新增 maven 插件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># groovy 语法（http://www.groovy-lang.org/documentation.html）</span></span><br><span class="line">node &#123;</span><br><span class="line">   def mvnHome</span><br><span class="line">   stage(<span class="string">'Preparation'</span>) &#123; // <span class="keyword">for</span> display purposes</span><br><span class="line">      // 下载源码</span><br><span class="line">      git <span class="string">'https://github.com/jglick/simple-maven-project-with-tests.git'</span></span><br><span class="line">      // 获取maven插件</span><br><span class="line">      mvnHome = tool <span class="string">'maven3'</span></span><br><span class="line">   &#125;</span><br><span class="line">   stage(<span class="string">'Build'</span>) &#123;</span><br><span class="line">      // Run the maven build</span><br><span class="line">      withEnv([<span class="string">"MVN_HOME=<span class="variable">$mvnHome</span>"</span>]) &#123;</span><br><span class="line">         <span class="keyword">if</span> (isUnix()) &#123;</span><br><span class="line">            sh <span class="string">'"$MVN_HOME/bin/mvn" -Dmaven.test.failure.ignore clean package'</span></span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            bat(/<span class="string">"%MVN_HOME%\bin\mvn"</span> -Dmaven.test.failure.ignore clean package/)</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   // 成功后单元测试</span><br><span class="line">   stage(<span class="string">'Results'</span>) &#123;</span><br><span class="line">      junit <span class="string">'**/target/surefire-reports/TEST-*.xml'</span></span><br><span class="line">      archiveArtifacts <span class="string">'target/*.jar'</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// <span class="comment"># unstable(单元测试错误)</span></span><br><span class="line">// &lt;!DOCTYPE suite SYSTEM <span class="string">"http://testng.org/testng-1.0.dtd"</span> &gt;</span><br></pre></td></tr></table></figure>
<h2 id="jenkins-备份还原"><a href="#jenkins-备份还原" class="headerlink" title="jenkins 备份还原"></a>jenkins 备份还原</h2><p>安装 backup 插件<br>设置好备份目录 /var/jenkins_home/backup<br>可以设置为： no shutdown<br>开始备份 -&gt;<br>还原备份 -&gt; 还原的时间稍长</p>
]]></content>
      <categories>
        <category>devops</category>
      </categories>
  </entry>
  <entry>
    <title>编程方法</title>
    <url>/2020/05/%E7%BC%96%E7%A8%8B%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li>表达式<ul>
<li>常量</li>
<li>变量</li>
<li>运算符</li>
</ul>
</li>
<li>控制流程<ul>
<li>分支</li>
<li>循环</li>
</ul>
</li>
<li>容器<ul>
<li>数组</li>
<li>切片</li>
<li>Map</li>
</ul>
</li>
<li>函数<ul>
<li>参数</li>
<li>返回值</li>
<li>闭包</li>
<li>递归函数</li>
</ul>
</li>
<li>面向对象<ul>
<li>接口</li>
<li>结构体</li>
<li>指针</li>
</ul>
</li>
<li>设计模式<ul>
<li>单例模式</li>
<li>工厂模式</li>
</ul>
</li>
<li>Golang 并发<ul>
<li>Channel</li>
<li>sync</li>
</ul>
</li>
<li>错误处理</li>
<li>日志记录</li>
<li>常用包</li>
<li>包管理</li>
<li>基本库</li>
</ul>
]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
  </entry>
  <entry>
    <title>shell编程</title>
    <url>/2020/05/shell%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://www.gnu.org/savannah-checkouts/gnu/bash/manual/bash.html" target="_blank" rel="noopener">bash docs</a></li>
<li><a href="http://tldp.org/LDP/abs/html/index.html" target="_blank" rel="noopener">Advanced Bash-Scripting Guide</a></li>
<li><a href="/2020/06/shell%E4%BE%8B%E7%A8%8B%E5%BA%8F/" title="shell例程序">shell例程序</a>
</li>
</ul>
<h2 id="话说-shell"><a href="#话说-shell" class="headerlink" title="话说 shell"></a>话说 shell</h2><p>那么多计算机语言，为啥还要学shell。示例: 打开文件 </p>
<h3 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat file.txt</span><br></pre></td></tr></table></figure>
<h3 id="python"><a href="#python" class="headerlink" title="python"></a>python</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">"file.txt"</span>,<span class="string">"r"</span>) <span class="keyword">as</span> F:</span><br><span class="line">   l = F.readlines()</span><br><span class="line">print(l)</span><br></pre></td></tr></table></figure>
<h3 id="java"><a href="#java" class="headerlink" title="java"></a>java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span>  </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            BufferedReader in = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(<span class="string">"test.log"</span>));</span><br><span class="line">            String str;</span><br><span class="line">            <span class="keyword">while</span> ((str = in.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                System.out.println(str);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(str);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>是的你没看错，这就是 shell 为什么能一直流行的原因。<br>就是这么霸道，简单，高效，灵活。</p>
<h3 id="fork-炸弹-amp"><a href="#fork-炸弹-amp" class="headerlink" title="fork 炸弹 :(){:|:&amp;};:"></a>fork 炸弹 :(){:|:&amp;};:</h3><blockquote>
<p>11字符的炸弹</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 利用了递归，耗尽系统资源，extinguish ！</span></span><br><span class="line"><span class="comment"># 定义一个函数</span></span><br><span class="line">:()&#123;&#125;</span><br><span class="line"><span class="comment"># 管道</span></span><br><span class="line">:|:</span><br><span class="line"><span class="comment"># 产生一个进程放到后台</span></span><br><span class="line">&amp;</span><br><span class="line"><span class="comment"># 换行</span></span><br><span class="line">;</span><br><span class="line"><span class="comment"># 调用</span></span><br><span class="line">:</span><br></pre></td></tr></table></figure>
<h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><h3 id="shell-输入、输出"><a href="#shell-输入、输出" class="headerlink" title="shell 输入、输出"></a>shell 输入、输出</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">read</span> var <span class="comment">#输入</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$var</span> <span class="comment">#输出</span></span><br></pre></td></tr></table></figure>
<h3 id="shell-变量"><a href="#shell-变量" class="headerlink" title="shell 变量"></a>shell 变量</h3><blockquote>
<p>shell中变量值都是字符串类型<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 声明</span></span><br><span class="line">var=2</span><br><span class="line">var=<span class="string">"hello world"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 高级用法</span></span><br><span class="line">var=<span class="string">"ls"</span></span><br><span class="line"><span class="built_in">eval</span> <span class="variable">$var</span> <span class="comment"># 将字符串变成命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用变量进行字符串截取</span></span><br><span class="line">var=<span class="string">"hello world"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;var%*o&#125;</span>  <span class="comment"># 保留o左边字符</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;var%%o*&#125;</span> <span class="comment"># 贪婪匹配</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;var#o*&#125;</span>  <span class="comment"># 保留o右边字符</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;var##*o&#125;</span> <span class="comment">#贪婪匹配</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 变量判断</span></span><br><span class="line"><span class="variable">$&#123;parameter:=word&#125;</span> <span class="comment"># （无值替换）</span></span><br><span class="line"><span class="variable">$&#123;parameter:+word&#125;</span> <span class="comment"># （有值才替换）</span></span><br><span class="line"><span class="variable">$&#123;parameter:-word&#125;</span> <span class="comment"># （为空替换）</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;parameter:?word&#125;</span> <span class="comment"># </span></span><br><span class="line"><span class="variable">$&#123;parameter:offset&#125;</span> <span class="comment"># 获取偏移字符</span></span><br><span class="line"><span class="variable">$&#123;parameter:offset:length&#125;</span></span><br></pre></td></tr></table></figure><br><a href="https://www.gnu.org/software/bash/manual/bash.html#Shell-Parameter-Expansion" target="_blank" rel="noopener">Shell-Parameter-Expansion</a></p>
</blockquote>
<h3 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h3><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"># ((...))</span><br><span class="line">(( expression ))</span><br><span class="line"></span><br><span class="line"># let</span><br><span class="line">let <span class="string">"expression"</span></span><br><span class="line"></span><br><span class="line"># <span class="string">[[…]]</span></span><br><span class="line"><span class="string">[[ expression ]]</span></span><br><span class="line"></span><br><span class="line"># 模式匹配 ‘aab’ <span class="keyword">and</span> ‘ aaaaaab’ 会被匹配</span><br><span class="line"><span class="string">[[ $line =~ [[:space:]]*?(a)b ]]</span></span><br><span class="line"></span><br><span class="line"># 提高优先级使用小括号</span><br><span class="line">( expression )</span><br><span class="line"></span><br><span class="line"># 取反</span><br><span class="line">! expression</span><br><span class="line"></span><br><span class="line"># 取与</span><br><span class="line">expression1 &amp;&amp; expression2</span><br><span class="line"></span><br><span class="line"># 取或</span><br><span class="line">expression1 || expression2</span><br></pre></td></tr></table></figure>
<h3 id="shell-控制流程"><a href="#shell-控制流程" class="headerlink" title="shell 控制流程"></a>shell 控制流程</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># if # 判断</span></span><br><span class="line">i=10</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$i</span> -gt 20 ];<span class="keyword">then</span> <span class="comment"># 数值比较</span></span><br><span class="line">        <span class="built_in">echo</span> gt 20</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> lt 20</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"mm"</span> == <span class="string">"m1"</span> ];<span class="keyword">then</span>  <span class="comment"># 字符串比较</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"some strings"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"different strings"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ls /datamm 2&gt;/dev/null ;<span class="keyword">then</span> <span class="comment"># 命令处理</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"list file ok"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"file is not exist"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">------------------------------</span><br><span class="line"><span class="comment"># case in</span></span><br><span class="line"><span class="comment"># 常用 case in 制作菜单</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">read</span> var <span class="comment"># 读入字符串</span></span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$var</span> <span class="keyword">in</span> <span class="comment"># 判断</span></span><br><span class="line">        dog|cat)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"animal"</span></span><br><span class="line">        ;;</span><br><span class="line">        1|2)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"number"</span></span><br><span class="line">        ;;</span><br><span class="line">        q)</span><br><span class="line">        <span class="built_in">exit</span> 0 <span class="comment"># 退出</span></span><br><span class="line">        ;;</span><br><span class="line">        *)  <span class="comment"># 不匹配输出</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"entry dog|cat|1|2"</span></span><br><span class="line">        ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">------------------------------</span><br><span class="line"><span class="comment"># for</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="string">"abc bcd"</span> <span class="comment"># 空格分隔</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$x</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (( i=0;i&lt;10;i++ )) <span class="comment"># 计数 </span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ((;;)) <span class="comment"># 死循环</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> for..ok</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">------------------------------</span><br><span class="line"></span><br><span class="line"><span class="comment"># while</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span> <span class="comment"># 死循环</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> while..ok</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">A=<span class="variable">$IFS</span></span><br><span class="line">IFS=$<span class="string">":"</span> <span class="comment"># 改变分隔符</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line1 line2 <span class="comment"># 把一行读成两个字段</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$line1</span></span><br><span class="line"><span class="keyword">done</span> &lt;&gt;/etc/passwd</span><br><span class="line">IFS=<span class="variable">$A</span></span><br><span class="line"></span><br><span class="line">A=<span class="variable">$IFS</span></span><br><span class="line">IFS=$<span class="string">":"</span></span><br><span class="line">cat /etc/passwd| <span class="keyword">while</span> <span class="built_in">read</span> line1 <span class="comment"># 通过输出重定向读入</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$line1</span></span><br><span class="line"><span class="comment">#echo $line1 $line2</span></span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line">IFS=<span class="variable">$A</span></span><br><span class="line"></span><br><span class="line">i=2</span><br><span class="line"><span class="keyword">while</span> ((i&lt;10)) <span class="comment"># 比较数值大小</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">i=$(expr <span class="variable">$i</span> + 1) <span class="comment"># 自增</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># while 跟 for 的区别</span></span><br><span class="line">seq 60 62|<span class="keyword">while</span> <span class="built_in">read</span> n</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">ssh 192.168.0.<span class="variable">$n</span> <span class="string">"echo ok"</span> <span class="comment"># 只会执行一次</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">---</span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> `seq 60 62`;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">ssh 192.168.0.<span class="variable">$n</span> <span class="string">"echo ok"</span> <span class="comment"># 会依次执行</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>python编程</title>
    <url>/2020/05/python%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.runoob.com/python3/python3-tutorial.html" target="_blank" rel="noopener">Python 入门</a></p>
]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
  </entry>
  <entry>
    <title>python高级编程</title>
    <url>/2020/05/python%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>本文使用 python 3 </p>
</blockquote>
<ul>
<li><a href="https://docs.python.org/zh-cn/3/tutorial/index.html" target="_blank" rel="noopener"> Python docs </a><h2 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h2><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3>s = “<a href="http://www.abc.com" target="_blank" rel="noopener">http://www.abc.com</a>“</li>
</ul>
<h4 id="字符串断言"><a href="#字符串断言" class="headerlink" title="字符串断言"></a>字符串断言</h4><p>isalpha         # 字母<br>isidentifier    # 标识符<br>isspace         # 空格<br>isascii         # ascii 码<br>islower         # 小写<br>isupper         # 大写<br>istitle         # 标题 “Abc”<br>isdecimal       # 十进制数<br>isnumeric       # 数字<br>isalnum         # 字母和数字<br>isdigit         # 数字<br>isprintable     # 可打印字符 “\n”                     </p>
<h4 id="字符串常用的操作"><a href="#字符串常用的操作" class="headerlink" title="字符串常用的操作"></a>字符串常用的操作</h4><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>l = list(range(3))</p>
<h3 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h3><h3 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h3><h1 id="迭代器与生产器"><a href="#迭代器与生产器" class="headerlink" title="迭代器与生产器"></a>迭代器与生产器</h1><h1 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h1><h1 id="命名空间-作用域"><a href="#命名空间-作用域" class="headerlink" title="命名空间/作用域"></a>命名空间/作用域</h1><h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1>]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
  </entry>
  <entry>
    <title>java编程</title>
    <url>/2020/05/java%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="java-基本语法"><a href="#java-基本语法" class="headerlink" title="java 基本语法"></a>java 基本语法</h2><ul>
<li>类<ul>
<li>属性</li>
<li>方法</li>
</ul>
</li>
<li>对象<ul>
<li>实例变量</li>
</ul>
</li>
</ul>
<h3 id="示例-touch-HelloWorld-java"><a href="#示例-touch-HelloWorld-java" class="headerlink" title="示例 touch HelloWorld.java"></a>示例 touch HelloWorld.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* 第一个Java程序</span></span><br><span class="line"><span class="comment">     * 它将打印字符串 Hello World</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello World"</span>); <span class="comment">// 打印 Hello World</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>其实这已经有别于其他语言 c/c++ 也不用一个函数，类写一个文件。<br>建议先学 python，再学java。要不概念太多容易晕。</p>
</blockquote>
<p>javac  HelloWorld.java<br>java HelloWorld</p>
<ul>
<li>Java 变量<ul>
<li>局部变量,在方法、构造方法或者语句块中定义的变量被称为局部变量。</li>
<li>成员变量（非静态变量）,成员变量是定义在类中，方法体之外的变量。局部变量是在栈上分配的。</li>
<li>类变量（静态变量）,类变量也声明在类中，方法体之外，但必须声明为static类型。静态变量储存在静态存储区</li>
</ul>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Variable</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> allClicks=<span class="number">0</span>;    <span class="comment">// 类变量</span></span><br><span class="line"> </span><br><span class="line">    String str=<span class="string">"hello world"</span>;  <span class="comment">// 实例变量</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">int</span> i =<span class="number">0</span>;  <span class="comment">// 局部变量</span></span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>Java 数组</li>
<li>Java 枚举</li>
</ul>
<h3 id="不常用的关键字"><a href="#不常用的关键字" class="headerlink" title="不常用的关键字"></a>不常用的关键字</h3><ul>
<li>native</li>
<li>strictfp</li>
<li>synchronized</li>
<li>transient</li>
<li>volatile</li>
<li>instanceof</li>
</ul>
<blockquote>
<p>面向对象语言，优点是面向大型程序，缺点是封装过度。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 多态</span></span><br><span class="line"><span class="comment"># 继承</span></span><br><span class="line"><span class="comment"># 封装</span></span><br><span class="line"><span class="comment"># 抽象</span></span><br><span class="line"><span class="comment"># 类</span></span><br><span class="line"><span class="comment"># 对象</span></span><br><span class="line"><span class="comment"># 实例</span></span><br><span class="line"><span class="comment"># 方法</span></span><br><span class="line"><span class="comment"># 重载</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li><p>构造方法(初始化对象用)<br>构造方法的名称必须与类同名，一个类可以有多个构造方法。</p>
</li>
<li><p>创建对象 (这样写起来java也很简洁)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 实例化对象 */</span></span><br><span class="line">Object rV = <span class="keyword">new</span> C();</span><br><span class="line"><span class="comment">/* 访问类中的变量 */</span></span><br><span class="line">rV.<span class="keyword">var</span>;</span><br><span class="line"><span class="comment">/* 访问类中的方法 */</span></span><br><span class="line">rV.method();</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="源文件声明规则"><a href="#源文件声明规则" class="headerlink" title="源文件声明规则"></a>源文件声明规则</h3><p>一个源文件中只能有一个public类<br>一个源文件可以有多个非public类<br>源文件的名称应该和public类的类名保持一致。<br>package语句应该在源文件的首行。<br>import语句放在package语句和类定义之间。<br>import语句和package语句对源文件中定义的所有类都有效。</p>
<ul>
<li><p>Java包 （包，大型语言都带）<br>对类和接口进行分类。</p>
</li>
<li><p>Import语句<br>java_installation/java/io路径下的所有类</p>
</li>
<li><p>数据类型</p>
<ul>
<li>内置数据类型<br>Java语言提供了八种基本类型。六种数字类型（四个整数型，两个浮点型），一种字符类型，还有一种布尔型。<br>byte 8、short 16、int 32、long 64<br>float 32、double 64<br>boolean true|false<br>char 16 unicode</li>
<li>引用数据类型<br>引用类型指向一个对象，指向对象的变量是引用变量。<br>对象、数组都是引用数据类型。<br>所有引用类型的默认值都是null。</li>
</ul>
</li>
</ul>
<blockquote>
<p>java.lang.Byte、java.lang.Integer 包装类</p>
<p>内存最小的原子单位是btye，想象一下 boolean 是怎么存放的。</p>
</blockquote>
<ul>
<li><p>Java 常量<br>在程序运行时是不能被修改的。</p>
</li>
<li><p>自动类型转换<br>byte,short,char—&gt; int —&gt; long—&gt; float —&gt; double<br>在把容量大的类型转换为容量小的类型时必须使用强制类型转换。<br>强转导致溢出或损失精度<br>浮点数到整数的转换是通过舍弃小数得到，而不是四舍五入</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">byte</span> b = (<span class="keyword">byte</span>)i1;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>访问控制修饰符 (实际使用中常用 private、public)</p>
<ul>
<li>default 同一包内可见</li>
<li>private 同一类内可见</li>
<li>public 对所有类可见</li>
<li>protected 同一包内的类和所有子类可见</li>
</ul>
</li>
<li><p>非访问修饰符<br>static 修饰符，用来修饰类方法和类变量。<br>final 修饰符，用来修饰类、方法和变量，final 修饰的类不能够被继承，修饰的方法不能被继承类重新定义，修饰的变量为常量，是不可修改的。<br>abstract 修饰符，用来创建抽象类和抽象方法。<br>synchronized 和 volatile 修饰符，主要用于线程的编程。<br>synchronized 关键字声明的方法同一时间只能被一个线程访问。</p>
</li>
</ul>
<p>transient 修饰符<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> transient <span class="built_in">int</span> limit = <span class="number">55</span>;   <span class="comment">// 不会持久化</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">int</span> b; <span class="comment">// 持久化</span></span><br></pre></td></tr></table></figure></p>
<p>volatile 修饰符<br>两个不同的线程总是看到某个成员变量的同一个值。<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyRunnable</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">boolean</span> active;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> <span class="comment">// 第一线程</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        active = <span class="keyword">true</span>; </span><br><span class="line">        <span class="keyword">while</span> (active) <span class="comment">// 如果不用 volatile 修饰的话，第一个线程一直读缓存的数据，即使第二个线程改变了active 值，第一线程也读不到。</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 代码</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span> <span class="comment">// 第二线程</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        active = <span class="keyword">false</span>; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<ul>
<li>运算符<ul>
<li>位运算<ul>
<li>与 &amp;</li>
<li>非 ^</li>
<li>或 |</li>
<li>移位 &gt;&gt;</li>
</ul>
</li>
<li>三元运算 ?:</li>
<li>instanceof</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
  </entry>
  <entry>
    <title>golang编程</title>
    <url>/2020/05/golang%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Goloang"><a href="#Goloang" class="headerlink" title="Goloang"></a>Goloang</h2><ul>
<li><a href="https://golang.org/" target="_blank" rel="noopener"> Golang </a></li>
<li><a href="https://www.runoob.com/go/go-tutorial.html" target="_blank" rel="noopener"> 菜鸟教程 golang  </a></li>
<li><a href="https://github.com/golang/go" target="_blank" rel="noopener"> Golang 源码 </a></li>
<li><a href="https://github.com/avelino/awesome-go" target="_blank" rel="noopener"> awesome-go </a></li>
<li><a href="https://draveness.me/golang/docs/part1-prerequisite/ch02-compile/golang-compile-intro/" target="_blank" rel="noopener">Go 语言设计与实现</a></li>
</ul>
<figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 包定义</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入模块</span></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	<span class="string">"strconv"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 变量定义</span></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">	i <span class="keyword">int</span></span><br><span class="line">	k <span class="keyword">int</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 常量定义</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">	city <span class="keyword">string</span> = <span class="string">"beijing"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 入口函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// 变量 := 变量 + 字面常量</span></span><br><span class="line">	sum := i + <span class="number">10</span></span><br><span class="line">	<span class="comment">// 输出</span></span><br><span class="line">	fmt.Println(sum)</span><br><span class="line">	<span class="comment">// 浮点计算</span></span><br><span class="line">	fdiv := <span class="number">10</span> / <span class="number">0.3</span></span><br><span class="line">	fmt.Println(fdiv)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 把数值转成字符串</span></span><br><span class="line">	<span class="comment">// 使用 strconv 库来转换</span></span><br><span class="line">	fmt.Println(strconv.FormatFloat(fdiv, <span class="string">'f'</span>, <span class="number">-1</span>, <span class="number">64</span>))</span><br><span class="line">	<span class="comment">// 打印到屏幕</span></span><br><span class="line">	fmt.Printf(<span class="string">"x = %.15f\n"</span>, fdiv)</span><br><span class="line">	<span class="comment">// 以返回值形式返回</span></span><br><span class="line">	fmt.Println(fmt.Sprintf(<span class="string">"%.15f"</span>, fdiv))</span><br><span class="line"></span><br><span class="line">	<span class="comment">//把字符串转成数值</span></span><br><span class="line">	fmt.Println(strconv.Atoi(<span class="string">"0.333333"</span>))</span><br><span class="line">	fmt.Println(strconv.Atoi(<span class="string">"12345"</span>))</span><br><span class="line">	fmt.Println(strconv.Atoi(<span class="string">"123ead"</span>))</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 取余运算</span></span><br><span class="line">	fmt.Println(<span class="number">1</span> % <span class="number">7</span>) <span class="comment">// 比余数小取本身</span></span><br><span class="line">	fmt.Println(<span class="number">16</span> % <span class="number">7</span>)</span><br><span class="line"></span><br><span class="line">	fmt.Println(<span class="string">"------------"</span>)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 使用按位与位(乘法运算)获得循环数，相与数必须是：1，3，7，31，2^n-1</span></span><br><span class="line">	<span class="comment">// 00001001  9</span></span><br><span class="line">	<span class="comment">// 00000111  7</span></span><br><span class="line">	<span class="comment">//         = 0</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">20</span>; i++ &#123;</span><br><span class="line">		fmt.Println(i, i&amp;<span class="number">3</span>)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 使用移位算乘法,因为字长为64，所以到第63次时变负值，64次溢出</span></span><br><span class="line">	<span class="keyword">var</span> i <span class="keyword">uint64</span></span><br><span class="line">	<span class="keyword">for</span> i = <span class="number">1</span>; i &lt; <span class="number">65</span>; i++ &#123;</span><br><span class="line">		fmt.Println(i, <span class="number">1</span>&lt;&lt;i)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 包定义</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	<span class="string">"strings"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 入口函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// 循环</span></span><br><span class="line">	<span class="comment">// 一重循环算法复杂度为 O(n)+1</span></span><br><span class="line">	<span class="keyword">var</span> i <span class="keyword">int</span></span><br><span class="line">	<span class="keyword">for</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">		fmt.Println(i)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 二重循环 算法复杂度为 O(n^2) +2</span></span><br><span class="line">	<span class="keyword">var</span> k, j <span class="keyword">int</span></span><br><span class="line">	<span class="keyword">for</span> k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++ &#123;</span><br><span class="line">		<span class="keyword">for</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++ &#123;</span><br><span class="line">			fmt.Println(k, j)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 二重循环</span></span><br><span class="line">	<span class="comment">// 逐步递减</span></span><br><span class="line">	<span class="keyword">var</span> m, n <span class="keyword">int</span></span><br><span class="line">	<span class="keyword">for</span> m = <span class="number">1</span>; m &lt; <span class="number">10</span>; m++ &#123;</span><br><span class="line">		<span class="keyword">for</span> n = <span class="number">0</span>; n &lt; <span class="number">10</span>/m; n++ &#123;</span><br><span class="line">			<span class="comment">// strings 库 提供对字符串的各种处理方法</span></span><br><span class="line">			fmt.Printf(<span class="string">"%d %s"</span>, n, strings.Repeat(<span class="string">"*"</span>, n))</span><br><span class="line">		&#125;</span><br><span class="line">		fmt.Println()</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 逐步递增</span></span><br><span class="line">	<span class="keyword">var</span> c, d <span class="keyword">int</span></span><br><span class="line">	<span class="keyword">for</span> c = <span class="number">0</span>; c &lt; <span class="number">10</span>; c++ &#123;</span><br><span class="line">		<span class="keyword">for</span> d = <span class="number">0</span>; d &lt; <span class="number">2</span>*c; d++ &#123;</span><br><span class="line">			fmt.Printf(<span class="string">"%d %s"</span>, d, strings.Repeat(<span class="string">"*"</span>, d))</span><br><span class="line">		&#125;</span><br><span class="line">		fmt.Println()</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 二分法猜数</span></span><br><span class="line">	<span class="keyword">var</span> num, g <span class="keyword">int</span></span><br><span class="line">	g = <span class="number">231</span></span><br><span class="line">	fmt.Println(<span class="string">"猜一个1000以内的数"</span>)</span><br><span class="line">	<span class="keyword">for</span> &#123;</span><br><span class="line">		fmt.Scan(&amp;num)</span><br><span class="line">		<span class="keyword">if</span> num &gt; g &#123;</span><br><span class="line">			fmt.Println(<span class="string">"猜的数大了"</span>)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> num == g &#123;</span><br><span class="line">			fmt.Println(<span class="string">"猜中了"</span>)</span><br><span class="line">			<span class="keyword">break</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			fmt.Println(<span class="string">"猜的数小了"</span>)</span><br><span class="line">		&#125;</span><br><span class="line">		fmt.Println(num)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight golang"><table><tr><td class="code"><pre><span class="line">   <span class="comment">// 数组</span></span><br><span class="line"><span class="keyword">var</span> arr [<span class="number">10</span>]<span class="keyword">int</span></span><br><span class="line"><span class="comment">// 切片</span></span><br><span class="line"><span class="keyword">var</span> slice []<span class="keyword">int</span></span><br><span class="line"><span class="comment">// map</span></span><br><span class="line"><span class="keyword">var</span> m <span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印 数组</span></span><br><span class="line"><span class="keyword">for</span> k, v := <span class="keyword">range</span> arr &#123;</span><br><span class="line">	fmt.Println(<span class="string">"array: "</span>, k, v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印 切片</span></span><br><span class="line"><span class="keyword">for</span> k1, v1 := <span class="keyword">range</span> slice &#123;</span><br><span class="line">	fmt.Println(<span class="string">"slice: "</span>, k1, v1)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印 map</span></span><br><span class="line"><span class="comment">//for k2, v2 := range m &#123;</span></span><br><span class="line"><span class="comment">//	fmt.Println("map: ", k2, v2)</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">slice = <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">10</span>)</span><br><span class="line"><span class="comment">// 打印 切片</span></span><br><span class="line"><span class="keyword">for</span> k3, v3 := <span class="keyword">range</span> slice &#123;</span><br><span class="line">	fmt.Println(<span class="string">"slice: "</span>, k3, v3)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 必须要初始化</span></span><br><span class="line">m = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span>)</span><br><span class="line">m[<span class="number">1</span>] = <span class="string">"beijing"</span></span><br><span class="line">m[<span class="number">3</span>] = <span class="string">"shanghai"</span></span><br><span class="line"><span class="comment">// 打印 map</span></span><br><span class="line"><span class="keyword">for</span> k2, v2 := <span class="keyword">range</span> m &#123;</span><br><span class="line">	fmt.Println(<span class="string">"map: "</span>, k2, v2)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 打印长度</span></span><br><span class="line">fmt.Println(<span class="built_in">len</span>(arr))</span><br><span class="line">fmt.Println(<span class="built_in">len</span>(slice))</span><br><span class="line">fmt.Println(<span class="built_in">len</span>(m))</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">fmt.Println(<span class="built_in">cap</span>(arr))</span><br><span class="line">fmt.Println(<span class="built_in">cap</span>(slice))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组，切片常用的方法</span></span><br><span class="line">fmt.Println(arr[:<span class="number">3</span>])</span><br><span class="line">fmt.Println(slice[<span class="number">2</span>:<span class="number">8</span>])</span><br><span class="line">fmt.Println(arr[:])</span><br><span class="line">sort.Ints(slice)</span><br><span class="line">s1 := []<span class="keyword">string</span>&#123;<span class="string">"abc"</span>, <span class="string">"zbc"</span>, <span class="string">"edf"</span>&#125;</span><br><span class="line">sort.Strings(s1)</span><br><span class="line">fmt.Println(<span class="string">"sort: "</span>, s1)</span><br><span class="line"><span class="built_in">copy</span>(slice, slice)</span><br><span class="line">slice = <span class="built_in">append</span>(slice, <span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line">fmt.Println(slice)</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">fmt.Println(m)</span><br><span class="line"><span class="built_in">delete</span>(m, <span class="number">3</span>)</span><br><span class="line">fmt.Println(m)</span><br><span class="line"><span class="built_in">println</span>(m[<span class="number">5</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">// 高级一点</span></span><br><span class="line"><span class="comment">// map key 是int 值是 切片</span></span><br><span class="line">mode1 := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]([]<span class="keyword">string</span>))</span><br><span class="line"><span class="comment">//定义一个map（key 是 string，值是个数组）</span></span><br><span class="line">mode2 := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]([<span class="number">10</span>]<span class="keyword">string</span>))</span><br><span class="line"><span class="comment">// 定义一个string 类型map，值是map类型（值的key 是string，值是string切片类型）</span></span><br><span class="line">mode3 := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>](<span class="keyword">map</span>[<span class="keyword">string</span>]([]<span class="keyword">string</span>)))</span><br><span class="line"><span class="comment">// 定义一个切片，值也是切片，类型string</span></span><br><span class="line">_ = <span class="built_in">make</span>([][]<span class="keyword">string</span>, <span class="number">10</span>)</span><br><span class="line"><span class="comment">// 定义一个切片，切片的值是二维切片，类型是string</span></span><br><span class="line">mode4 := <span class="built_in">make</span>([]([]([]<span class="keyword">string</span>)), <span class="number">10</span>)</span><br><span class="line"><span class="comment">// 定义一个三维数组</span></span><br><span class="line"><span class="keyword">var</span> arr1 [<span class="number">10</span>][<span class="number">10</span>][<span class="number">10</span>]<span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个结构体切片</span></span><br><span class="line"><span class="keyword">type</span> s <span class="keyword">struct</span> &#123;</span><br><span class="line">	id   <span class="keyword">int</span></span><br><span class="line">	name <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line">_ = <span class="built_in">make</span>([][]s, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个结构体指针类型的切片</span></span><br><span class="line">_ = <span class="built_in">make</span>([][]*s, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"map1: "</span>, mode1)</span><br><span class="line">fmt.Println(<span class="string">"map2: "</span>, mode2)</span><br><span class="line">fmt.Println(<span class="string">"map3: "</span>, mode3)</span><br><span class="line">fmt.Println(<span class="string">"slice4: "</span>, mode4)</span><br><span class="line">fmt.Println(<span class="string">"arr5: "</span>, arr1)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
  </entry>
  <entry>
    <title>出境旅游常用英语</title>
    <url>/2020/05/%E5%87%BA%E5%A2%83%E6%97%85%E6%B8%B8%E5%B8%B8%E7%94%A8%E8%8B%B1%E8%AF%AD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>出入境填表常用词汇</p>
<p>姓：Family name，Surname</p>
<p>名：First Name，Given name</p>
<p>性别：sex，gender</p>
<p>男：male；女：female</p>
<p>国籍：nationality，country of citizenship</p>
<p>护照号：passport number</p>
<p>原住地：country of origin</p>
<p>前往国：destination country</p>
<p>登机城市：city where you boarded</p>
<p>签证签发地：city where visa was issued</p>
<p>签发日期：date of issue</p>
<p>出生日期：date of birth，birth date</p>
<p>年：year；月：month；日：day</p>
<p>偕行人数：accompanying number</p>
<p>签名：signature</p>
<p>官方填写：official use only</p>
<p>职业：occupation</p>
<p>护照：Passport；签证：Visa</p>
<p>登机、启程：Embarkation</p>
<p>登岸：Disembarkation</p>
<p>商务签证：Business Visa</p>
<p>观光签证：Tourist Visa</p>
<p>乘机常用词汇</p>
<p>航站、终点站：Terminal</p>
<p>入境大厅：Arrival Lobby</p>
<p>出境大厅：Departure Lobby</p>
<p>登机门号码：Gate Number</p>
<p>登机证：Boarding Card，Boarding Pass</p>
<p>机场税：Airport Tax</p>
<p>登机手续办理处：Check in Counter</p>
<p>海关申报处：Customs Service Area</p>
<p>货币申报：Currency Declaration</p>
<p>免税商品：Duty-Free Items</p>
<p>大号：large；中号：medium；小号：small</p>
<p>纪念品：Souvenir</p>
<p>行李：Baggage，Luggage</p>
<p>~ 1 / 11 ~</p>
<p>托运的行李：Checked baggage</p>
<p>行李领取处：Baggage claim area</p>
<p>随身行李：Carry-on baggage</p>
<p>行李牌：Baggage Tag</p>
<p>行李推车：Luggage Cart</p>
<p>退税处：Tax-free refund</p>
<p>盥洗室（厕所）：Lavatory，washroom，toilet</p>
<p>W.C.＝water closet，rest room</p>
<p>男厕：Men’s，Gent’s，Gentlemen’s</p>
<p>女厕：Women’s，Lady’s</p>
<p>使用中：Occupied</p>
<p>空闲：Vacant</p>
<p>男（女）空服员：Steward（Stewardess）</p>
<p>机内免税贩卖：In-Flight Sales</p>
<p>钱币兑换常用词汇</p>
<p>外币兑换店：Currency Exchange Shop</p>
<p>汇率：Exchange rate</p>
<p>旅行支票：Traveler’s check</p>
<p>手续费：Commission</p>
<p>银行买入价：We buy（Bid）</p>
<p>银行卖出价：We sell（Ask）</p>
<p>酒店常用词汇</p>
<p>入住登记手续：Check-in</p>
<p>客房服务：Room Service</p>
<p>退房（时间）：Check Out（Time）</p>
<p>前台：Front Desk，Reception</p>
<p>酒店大堂：Lobby</p>
<p>咖啡馆：Coffee shop</p>
<p>服务员，侍者：waiter（餐厅、旅馆的服务生、行李员）</p>
<p>电话叫醒服务：Wake Up Call，Morning Call</p>
<p>日常用语</p>
<p>你好，很高兴认识你：How do you do，I’m glad to meet you.（It’s nice meeting you.）</p>
<p>请问你叫什么名字：May I have your name, please?</p>
<p>我可以试穿一下吗：May I try it on?</p>
<p>多少钱：How much?</p>
<p>请把菜单给我：Please show me the menu.</p>
<p>干杯：Cheers! Bottoms up!</p>
<p>~ 2 / 11 ~</p>
<p>我迷路了，您能告诉我怎么回饭店吗：I’m lost．Could you do me a favor to find my hotel?</p>
<p>你能帮我拍照吗：Could you take a picture for me?</p>
<p>非常感谢：Thank you very much.</p>
<p>不客气：You’re welcome．</p>
<p>我就是忍不住：I just couldn’t help it.</p>
<p>让我们保持联系：Let’s keep in touch.</p>
<p>我怎样能跟你联络上：How can I get in touch with you?</p>
<p>我将会尽我最大努力：I’ll do my best.</p>
<p>请稍等一下：Wait a moment please.</p>
<p>你先请：After you</p>
<p>我们该走了：We’d better be off.</p>
<p>我真要累死了：I’m really dead.</p>
<p>真是那样吗：Is that so?</p>
<p>我不确切知道：I don’t know for sure.</p>
<p>太好了，太棒了：That’s something.</p>
<p>这主意真棒：Brilliant idea!</p>
<p>此话当真：Do you really mean it?</p>
<p>你帮了大忙：You are a great help.</p>
<p>我身无分文：I’m broke.</p>
<p>我一直不太喜欢这东西：I never liked it anyway.</p>
<p>别跟我耍花招：Don’t play games with me!</p>
<p>看情况再说：That depends.</p>
<p>最全食物的英文翻译</p>
<p>水果类（fruits）：</p>
<p>火龙果 pitaya</p>
<p>西红柿 tomato</p>
<p>菠萝 pineapple</p>
<p>西瓜watermelon</p>
<p>香蕉banana</p>
<p>柚子 shaddock （pomelo）</p>
<p>橙子orange</p>
<p>苹果apple</p>
<p>柠檬lemon</p>
<p>樱桃 cherry</p>
<p>桃子peach</p>
<p>梨 pear</p>
<p>枣Chinese date （去核枣 pitted date ）</p>
<p>~ 3 / 11 ~</p>
<p>椰子coconut</p>
<p>草莓 strawberry</p>
<p>树莓 raspberry</p>
<p>蓝莓 blueberry</p>
<p>黑莓 blackberry</p>
<p>葡萄 grape</p>
<p>甘蔗 sugar cane</p>
<p>芒果 mango</p>
<p>木瓜 pawpaw或者papaya</p>
<p>杏子 apricot 　</p>
<p>油桃 nectarine</p>
<p>柿子persimmon</p>
<p>石榴pomegranate</p>
<p>榴莲 jackfruit</p>
<p>槟榔果 areca nut</p>
<p>（西班牙产苦橙）bitter orange</p>
<p>猕猴桃 kiwi fruit or Chinese gooseberry</p>
<p>金橘cumquat</p>
<p>蟠桃 flat peach</p>
<p>荔枝 litchi</p>
<p>青梅greengage</p>
<p>山楂果 haw</p>
<p>水蜜桃honey peach</p>
<p>香瓜，甜瓜 musk melon</p>
<p>李子plum</p>
<p>杨梅 waxberry red bayberry</p>
<p>桂圆 longan</p>
<p>沙果 crab apple</p>
<p>杨桃starfruit</p>
<p>枇杷 loquat</p>
<p>柑橘 tangerine</p>
<p>莲雾wax-apple</p>
<p>番石榴 guava</p>
<p>肉、蔬菜类：</p>
<p>南瓜（倭瓜） pumpkin cushaw</p>
<p>甜玉米 Sweet corn</p>
<p>牛肉beef</p>
<p>猪肉pork</p>
<p>羊肉 mutton</p>
<p>羔羊肉lamb</p>
<p>鸡肉chicken</p>
<p>生菜 莴苣lettuce</p>
<p>白菜 Chinese cabbage （celery cabbage）（甘蓝）</p>
<p>卷心菜 cabbage</p>
<p>萝卜 radish</p>
<p>胡萝卜 carrot</p>
<p>韭菜leek</p>
<p>木耳 agarics</p>
<p>豌豆 pea</p>
<p>马铃薯（土豆） potato</p>
<p>黄瓜 cucumber</p>
<p>苦瓜 balsam pear</p>
<p>秋葵 okra</p>
<p>洋葱 onion</p>
<p>芹菜 celery</p>
<p>芹菜杆 celery sticks</p>
<p>地瓜 sweet potato</p>
<p>蘑菇 mushroom</p>
<p>橄榄 olive</p>
<p>菠菜spinach</p>
<p>冬瓜 （Chinese）wax gourd</p>
<p>~ 4 / 11 ~</p>
<p>莲藕 lotus root</p>
<p>紫菜 laver</p>
<p>油菜 cole rape</p>
<p>茄子 eggplant</p>
<p>香菜 caraway</p>
<p>枇杷loquat</p>
<p>青椒 green pepper</p>
<p>四季豆 青刀豆 garden bean</p>
<p>银耳 silvery fungi</p>
<p>腱子肉tendon</p>
<p>肘子 pork joint</p>
<p>茴香fennel（茴香油fennel oil 药用）</p>
<p>鲤鱼carp</p>
<p>咸猪肉bacon</p>
<p>金针蘑 needle mushroom</p>
<p>扁豆 lentil</p>
<p>槟榔 areca</p>
<p>牛蒡great burdock</p>
<p>水萝卜 summer radish</p>
<p>竹笋 bamboo shoot</p>
<p>艾蒿Chinese mugwort</p>
<p>绿豆mung bean</p>
<p>毛豆green soy bean</p>
<p>瘦肉 lean meat</p>
<p>肥肉speck</p>
<p>黄花菜 day lily （day lily bud）</p>
<p>豆芽菜 bean sprout</p>
<p>丝瓜 towel gourd</p>
<p>(注：在美国丝瓜或用来做丝瓜茎loofah洗澡的，不是食用的)</p>
<p>海鲜类（sea food）：</p>
<p>虾仁 Peeled Prawns</p>
<p>龙虾 lobster</p>
<p>小龙虾 crayfish（退缩者）</p>
<p>蟹 crab</p>
<p>蟹足crab claws</p>
<p>小虾（虾米） shrimp</p>
<p>对虾、大虾 prawn</p>
<p>（烤）鱿鱼（toast）squid</p>
<p>海参 sea cucumber</p>
<p>扇贝 scallop</p>
<p>鲍鱼 sea-ear abalone</p>
<p>小贝肉cockles</p>
<p>牡蛎oyster</p>
<p>鱼鳞scale</p>
<p>海蜇jellyfish</p>
<p>鳖 海龟turtle</p>
<p>蚬 蛤 clam</p>
<p>鲅鱼 culter</p>
<p>鲳鱼 butterfish</p>
<p>虾籽 shrimp egg</p>
<p>鲢鱼 银鲤鱼chub silver carp</p>
<p>黄花鱼 yellow croaker</p>
<p>调料类（seasonings）：</p>
<p>醋 vinegar</p>
<p>酱油 soy</p>
<p>盐 salt</p>
<p>加碘盐 iodized salt</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
  </entry>
  <entry>
    <title>编程英语</title>
    <url>/2020/05/%E7%BC%96%E7%A8%8B%E8%8B%B1%E8%AF%AD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="list"><a href="#list" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>application</td>
<td>应用程式 应用、应用程序 apply</td>
</tr>
<tr>
<td>archi-tect-ure</td>
<td>架构、系统架构 体系结构</td>
</tr>
<tr>
<td>application framework</td>
<td>应用程式框架、应用框架 应用程序框架</td>
</tr>
<tr>
<td>end user</td>
<td>终端用户</td>
</tr>
<tr>
<td>design phase</td>
<td>设计阶段</td>
</tr>
<tr>
<td>design by contract</td>
<td>契约式设计</td>
</tr>
<tr>
<td>design pattern</td>
<td>设计范式、设计样式 设计模式</td>
</tr>
<tr>
<td>object oriented design</td>
<td>面向对象的设计</td>
</tr>
<tr>
<td>collective noun</td>
<td>集体名词</td>
</tr>
<tr>
<td>The contrasts with</td>
<td>这与</td>
</tr>
<tr>
<td>involved with</td>
<td>参与</td>
</tr>
<tr>
<td>bundled with</td>
<td>捆绑一起</td>
</tr>
<tr>
<td>published separately</td>
<td>单独发布</td>
</tr>
</tbody>
</table>
</div>
<p>Application software (app for short) is a program or group of programs designed for end users. Examples of an application include a <strong>word processor</strong>, a <strong>spreadsheet</strong>, an <strong>accounting application</strong>, a <strong>web browser</strong>, an <strong>email client</strong>, a <strong>media player</strong>, a <strong>file viewer</strong>, <strong>simulators</strong>, a <strong>console game</strong> or a <strong>photo editor</strong>. The collective noun application software refers to all applications collectively.[1] This contrasts with system software, which is mainly involved with running the computer.</p>
<p>Applications may be bundled with the computer and its system software or published separately, and may be coded as proprietary, open-source or university projects.[2] Apps built for mobile platforms are called mobile apps.</p>
<h2 id="list-1"><a href="#list-1" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>assign</td>
<td>指派、指定、设值、赋值 赋值</td>
</tr>
<tr>
<td>assignment</td>
<td>指派、指定 赋值、分配</td>
</tr>
<tr>
<td>assignment operator</td>
<td>指派（赋值）运算子 = 赋值操作符</td>
</tr>
<tr>
<td>associated</td>
<td>相应的、相关的 相关的、关联、相应的</td>
</tr>
<tr>
<td>associative container</td>
<td>关联式容器（对应 sequential container）</td>
</tr>
<tr>
<td>atomic</td>
<td>不可分割的 原子的</td>
</tr>
<tr>
<td>attribute</td>
<td>属性 属性、特性</td>
</tr>
<tr>
<td>audio</td>
<td>音讯 音频</td>
</tr>
<tr>
<td>A.I.（artificial intelligence ）</td>
<td>人工智慧 人工智能</td>
</tr>
<tr>
<td>background</td>
<td>背景 背景（用於图形着色）</td>
</tr>
<tr>
<td>argument</td>
<td>引数（传给函式的值）。叁见 parameter 叁数、实质叁数、实叁、自变量</td>
</tr>
<tr>
<td>array</td>
<td>阵列 数组</td>
</tr>
<tr>
<td>arrow</td>
<td>（箭头）</td>
</tr>
<tr>
<td>arrow operator</td>
<td>运算子 箭头操作符</td>
</tr>
<tr>
<td>assembly</td>
<td>装配件</td>
</tr>
<tr>
<td>assembly language</td>
<td>组合语言 汇编语言</td>
</tr>
<tr>
<td>assert(ion)</td>
<td>断言</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-2"><a href="#list-2" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>backward compatible</td>
<td>回溯相容 向下兼容</td>
</tr>
<tr>
<td>bandwidth</td>
<td>频宽 带宽</td>
</tr>
<tr>
<td>base class</td>
<td>基础类别 基类</td>
</tr>
<tr>
<td>base type</td>
<td>基础型别 (等同於 base class)</td>
</tr>
<tr>
<td>batch</td>
<td>批次（意思是整批作业） 批处理</td>
</tr>
<tr>
<td>benefit</td>
<td>利益,收益</td>
</tr>
<tr>
<td>best viable function</td>
<td>最佳可行函式 最佳可行函式从 viable functions 中挑出的最佳吻合者</td>
</tr>
<tr>
<td>binary search</td>
<td>二分搜寻法 二分查找</td>
</tr>
<tr>
<td>binary tree</td>
<td>二元树 二叉树</td>
</tr>
<tr>
<td>binary function</td>
<td>二元函式 双叁函数</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-3"><a href="#list-3" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>binary operator</td>
<td>二元运算子 二元操作符</td>
</tr>
<tr>
<td>binding</td>
<td>系结 绑定</td>
</tr>
<tr>
<td>bit</td>
<td>(发音为beit)位元 位</td>
</tr>
<tr>
<td>bit field</td>
<td>位元栏 位域</td>
</tr>
<tr>
<td>bitmap</td>
<td>位元图 位图</td>
</tr>
<tr>
<td>bitwise</td>
<td>以 bit 为单元逐一┅</td>
</tr>
<tr>
<td>bitwise copy</td>
<td>以 bit 为单元进行复制；位元逐一复制 位拷贝</td>
</tr>
<tr>
<td>block</td>
<td>区块,区段 块、区块、语句块</td>
</tr>
<tr>
<td>boolean</td>
<td>布林值（真假值，true 或 false） 布尔值</td>
</tr>
<tr>
<td>border</td>
<td>边框、框线 边框</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-4"><a href="#list-4" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>brace (curly brace)</td>
<td>大括弧、大括号 花括弧、花括号</td>
</tr>
<tr>
<td>bracket (square brakcet)</td>
<td>中括弧、中括号 方括弧、方括号</td>
</tr>
<tr>
<td>breakpoint</td>
<td>中断点 断点</td>
</tr>
<tr>
<td>build</td>
<td>建造、构筑、建置（MS 用语）</td>
</tr>
<tr>
<td>build－in</td>
<td>内建 内置</td>
</tr>
<tr>
<td>bus</td>
<td>汇流排 总线</td>
</tr>
<tr>
<td>business</td>
<td>商务,业务 业务</td>
</tr>
<tr>
<td>buttons</td>
<td>按钮 按钮</td>
</tr>
<tr>
<td>byte</td>
<td>位元组（由 8 bits 组成） 字节</td>
</tr>
<tr>
<td>cache</td>
<td>快取 高速缓存</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-5"><a href="#list-5" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>call</td>
<td>呼叫、叫用 调用</td>
</tr>
<tr>
<td>callback</td>
<td>回呼 回调</td>
</tr>
<tr>
<td>call operator</td>
<td>call（函式呼叫）运算子调用操作符（同 function call operator）</td>
</tr>
<tr>
<td>candidate</td>
<td>function 候选函式 候选函数（在函式多载决议程序中出现的候选函式）</td>
</tr>
<tr>
<td>chain</td>
<td>串链（例 chain of function calls） 链</td>
</tr>
<tr>
<td>character</td>
<td>字元 字符</td>
</tr>
<tr>
<td>check</td>
<td>box 核取方块 (i.e. check button) 复选框</td>
</tr>
<tr>
<td>checked exception</td>
<td>可控式异常(Java)</td>
</tr>
<tr>
<td>check button</td>
<td>方钮 (i.e. check box) 复选按钮</td>
</tr>
<tr>
<td>child</td>
<td>class 子类别（或称为derived class, subtype 图表类型） 子类</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-6"><a href="#list-6" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>class</td>
<td>类别 类</td>
</tr>
<tr>
<td>class body</td>
<td>类别本体 类体</td>
</tr>
<tr>
<td>class declaration</td>
<td>类别宣告、类别宣告式 类声明</td>
</tr>
<tr>
<td>class definition</td>
<td>类别定义、类别定义式 类定义</td>
</tr>
<tr>
<td>class derivation</td>
<td>list 类别衍化列 类继承列表</td>
</tr>
<tr>
<td>class head</td>
<td>类别表头 类头</td>
</tr>
<tr>
<td>class hierarchy</td>
<td>类别继承体系, 类别阶层 类层次体系</td>
</tr>
<tr>
<td>class library</td>
<td>类别程式库、类别库 类库</td>
</tr>
<tr>
<td>class template</td>
<td>类别模板、类别范本 类模板</td>
</tr>
<tr>
<td>class template partial specializations</td>
<td>类别模板偏特化 类模板部分特化</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-7"><a href="#list-7" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>class template specializations</td>
<td>类别模板特化 类模板特化</td>
</tr>
<tr>
<td>cleanup</td>
<td>清理、善後 清理、清除</td>
</tr>
<tr>
<td>client</td>
<td>客端、客户端、客户 客户</td>
</tr>
<tr>
<td>client－server</td>
<td>主从架构 客户/服务器</td>
</tr>
<tr>
<td>clipboard</td>
<td>剪贴簿 剪贴板</td>
</tr>
<tr>
<td>clone</td>
<td>复制 克隆</td>
</tr>
<tr>
<td>collection</td>
<td>群集 集合</td>
</tr>
<tr>
<td>combo box</td>
<td>复合方块、复合框 组合框</td>
</tr>
<tr>
<td>command line</td>
<td>命令列 命令行 (系统文字模式下的整行执行命令)</td>
</tr>
<tr>
<td>communication</td>
<td>通讯 通讯</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-8"><a href="#list-8" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>compatible</td>
<td>相容 兼容</td>
</tr>
<tr>
<td>compile</td>
<td>time 编译期 编译期、编译时</td>
</tr>
<tr>
<td>compiler</td>
<td>编译器 编译器</td>
</tr>
<tr>
<td>component</td>
<td>组件 组件</td>
</tr>
<tr>
<td>composition</td>
<td>复合、合成、组合 组合</td>
</tr>
<tr>
<td>computer</td>
<td>电脑、计算机 计算机、电脑</td>
</tr>
<tr>
<td>concept</td>
<td>概念 概念</td>
</tr>
<tr>
<td>concrete</td>
<td>具象的 实在的</td>
</tr>
<tr>
<td>concurrent</td>
<td>并行 并发</td>
</tr>
<tr>
<td>configuration</td>
<td>组态 配置</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-9"><a href="#list-9" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>connection</td>
<td>连接，连线（网络,资料库） 连接</td>
</tr>
<tr>
<td>constraint</td>
<td>约束（条件）</td>
</tr>
<tr>
<td>construct</td>
<td>构件 构件</td>
</tr>
<tr>
<td>container</td>
<td>容器 容器（存放资料的某种结构如 list, vector…）</td>
</tr>
<tr>
<td>containment</td>
<td>内含 包容</td>
</tr>
<tr>
<td>context</td>
<td>背景关系、周遭环境、上下脉络 环境、上下文</td>
</tr>
<tr>
<td>control</td>
<td>控制元件、控件 控件</td>
</tr>
<tr>
<td>console</td>
<td>主控台 控制台</td>
</tr>
<tr>
<td>const</td>
<td>常数（constant 的缩写，C++ 关键字）</td>
</tr>
<tr>
<td>constant</td>
<td>常数（相对於 variable） 常量</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-10"><a href="#list-10" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>constructor</td>
<td>（ctor） 建构式 构造函数（与class 同名的一种 member functions）</td>
</tr>
<tr>
<td>copy</td>
<td>(v) 复制、拷贝 拷贝</td>
</tr>
<tr>
<td>copy</td>
<td>(n) 复件, 副本</td>
</tr>
<tr>
<td>cover</td>
<td>涵盖 覆盖</td>
</tr>
<tr>
<td>create</td>
<td>创建、建立、产生、生成 创建</td>
</tr>
<tr>
<td>creation</td>
<td>产生、生成 创建</td>
</tr>
<tr>
<td>cursor</td>
<td>游标 光标</td>
</tr>
<tr>
<td>custom</td>
<td>订制、自定 定制</td>
</tr>
<tr>
<td>data</td>
<td>资料 数据</td>
</tr>
<tr>
<td>database</td>
<td>资料库 数据库</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-11"><a href="#list-11" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>database schema</td>
<td>数据库结构纲目</td>
</tr>
<tr>
<td>data member</td>
<td>资料成员、成员变数 数据成员、成员变量</td>
</tr>
<tr>
<td>data structure</td>
<td>资料结构 数据结构</td>
</tr>
<tr>
<td>datagram</td>
<td>资料元 数据报文</td>
</tr>
<tr>
<td>dead lock</td>
<td>死结 死锁</td>
</tr>
<tr>
<td>debug</td>
<td>除错 调试</td>
</tr>
<tr>
<td>debugger</td>
<td>除错器 调试器</td>
</tr>
<tr>
<td>declaration</td>
<td>宣告、宣告式 声明</td>
</tr>
<tr>
<td>deduction</td>
<td>推导（例：template argument deduction） 推导、推断</td>
</tr>
<tr>
<td>default</td>
<td>预设 缺省、默认</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-12"><a href="#list-12" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>defer</td>
<td>延缓 推迟</td>
</tr>
<tr>
<td>define</td>
<td>定义 预定义</td>
</tr>
<tr>
<td>definition</td>
<td>定义、定义区、定义式 定义</td>
</tr>
<tr>
<td>delegate</td>
<td>委派、委托、委任 委托</td>
</tr>
<tr>
<td>delegation</td>
<td>（同上）</td>
</tr>
<tr>
<td>demarshal</td>
<td>反编列 散集</td>
</tr>
<tr>
<td>dereference</td>
<td>提领（取出指标所指物体的内容） 解叁考</td>
</tr>
<tr>
<td>dereference operator dereference</td>
<td>（提领）运算子 * 解叁考操作符</td>
</tr>
<tr>
<td>derived</td>
<td>class 衍生类别 派生类</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-13"><a href="#list-13" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>destroy</td>
<td>摧毁、销毁</td>
</tr>
<tr>
<td>destructor</td>
<td>解构式 析构函数</td>
</tr>
<tr>
<td>device</td>
<td>装置、设备 设备</td>
</tr>
<tr>
<td>dialog</td>
<td>对话窗、对话盒 对话框</td>
</tr>
<tr>
<td>directive</td>
<td>指令（例：using directive） (编译)指示符</td>
</tr>
<tr>
<td>directory</td>
<td>目录 目录</td>
</tr>
<tr>
<td>disk</td>
<td>碟 盘</td>
</tr>
<tr>
<td>dispatch</td>
<td>分派 分派</td>
</tr>
<tr>
<td>distributed computing</td>
<td>分布式计算 (分布式电算) 分布式计算;分散式计算 (分散式电算)</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-14"><a href="#list-14" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>document</td>
<td>文件 文档</td>
</tr>
<tr>
<td>dot operator</td>
<td>dot（句点）运算子 . (圆)点操作符</td>
</tr>
<tr>
<td>driver</td>
<td>驱动程式 驱动（程序）</td>
</tr>
<tr>
<td>dynamic binding</td>
<td>动态系结 动态绑定</td>
</tr>
<tr>
<td>efficiency</td>
<td>效率 效率</td>
</tr>
<tr>
<td>efficient</td>
<td>高效 高效</td>
</tr>
<tr>
<td>entity</td>
<td>物体 实体、物体</td>
</tr>
<tr>
<td>encapsulation</td>
<td>封装 封装</td>
</tr>
<tr>
<td>enclosing</td>
<td>class 外围类别（与巢状类别 nested ( 嵌套的) class 有关）外围类</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-15"><a href="#list-15" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>enum (enumeration )</td>
<td>列举（一种 C++ 资料型别） 枚举</td>
</tr>
<tr>
<td>enumerators</td>
<td>列举元（enum 型别中的成员） 枚举成员、枚举器</td>
</tr>
<tr>
<td>equal</td>
<td>相等 相等</td>
</tr>
<tr>
<td>equality</td>
<td>相等性 相等性</td>
</tr>
<tr>
<td>equality operator</td>
<td>equality（等号）运算子 == 等号操作符</td>
</tr>
<tr>
<td>equivalence</td>
<td>等价性、等同性、对等性 等价性</td>
</tr>
<tr>
<td>equivalent</td>
<td>等价、等同、对等 等价</td>
</tr>
<tr>
<td>escape</td>
<td>code 转义码 转义码</td>
</tr>
<tr>
<td>evaluate</td>
<td>评估、求值、核定 评估</td>
</tr>
<tr>
<td>event</td>
<td>事件 事件</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-16"><a href="#list-16" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>event driven</td>
<td>事件驱动的 事件驱动的</td>
</tr>
<tr>
<td>exception</td>
<td>异常情况 异常</td>
</tr>
<tr>
<td>exception declaration</td>
<td>异常宣告（ref. C++ Primer 3/e, 11.3） 异常声明</td>
</tr>
<tr>
<td>exception handling</td>
<td>异常处理、异常处理机制 异常处理、异常处理机制</td>
</tr>
<tr>
<td>exception specification</td>
<td>异常规格（ref. C++ Primer 3/e, 11.4） 异常规范</td>
</tr>
<tr>
<td>exit</td>
<td>退离（指离开函式时的那一个执行点） 退出</td>
</tr>
<tr>
<td>explicit</td>
<td>明白的、明显的、显式 显式</td>
</tr>
<tr>
<td>export</td>
<td>汇出 引出、导出</td>
</tr>
<tr>
<td>expression</td>
<td>运算式、算式 表达式</td>
</tr>
<tr>
<td>facility</td>
<td>设施、设备 设施、设备</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-17"><a href="#list-17" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>feature</td>
<td>特性</td>
</tr>
<tr>
<td>field</td>
<td>栏位,资料栏（Java） 字段, 值域（Java）</td>
</tr>
<tr>
<td>file</td>
<td>档案 文件</td>
</tr>
<tr>
<td>firmware</td>
<td>韧体 固件</td>
</tr>
<tr>
<td>flag</td>
<td>旗标 标记</td>
</tr>
<tr>
<td>flash memory</td>
<td>快闪记忆体 闪存</td>
</tr>
<tr>
<td>flexibility</td>
<td>弹性 灵活性</td>
</tr>
<tr>
<td>flush</td>
<td>清理、扫清 刷新</td>
</tr>
<tr>
<td>font</td>
<td>字型 字体</td>
</tr>
<tr>
<td>form</td>
<td>表单（programming 用语） 窗体</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-18"><a href="#list-18" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>formal parameter</td>
<td>形式叁数 形式叁数</td>
</tr>
<tr>
<td>forward declaration</td>
<td>前置宣告 前置声明</td>
</tr>
<tr>
<td>forwarding</td>
<td>转呼叫,转发 转发</td>
</tr>
<tr>
<td>forwarding function</td>
<td>转呼叫函式,转发函式 转发函数</td>
</tr>
<tr>
<td>fractal</td>
<td>碎形 分形</td>
</tr>
<tr>
<td>framework</td>
<td>框架 框架</td>
</tr>
<tr>
<td>full specialization</td>
<td>全特化（ref. partial  specialization）</td>
</tr>
<tr>
<td>function</td>
<td>函式、函数 函数</td>
</tr>
<tr>
<td>function call operator</td>
<td>同 call operator</td>
</tr>
<tr>
<td>function object</td>
<td>函式物件（ref. C++ Primer 3/e, 12.3） 函数对象</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-19"><a href="#list-19" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>function overloaded resolution</td>
<td>函式多载决议程序 函数重载解决（方案）</td>
</tr>
<tr>
<td>functionality</td>
<td>功能、机能 功能</td>
</tr>
<tr>
<td>function template</td>
<td>函式模板、函式范本 函数模板</td>
</tr>
<tr>
<td>functor</td>
<td>仿函式 仿函式、函子</td>
</tr>
<tr>
<td>game</td>
<td>游戏 游戏</td>
</tr>
<tr>
<td>generate</td>
<td>生成</td>
</tr>
<tr>
<td>generic</td>
<td>泛型、一般化的 一般化的、通用的、泛化</td>
</tr>
<tr>
<td>generic algorithm</td>
<td>泛型演算法 通用算法</td>
</tr>
<tr>
<td>getter</td>
<td>(相对於 setter) 取值函式</td>
</tr>
<tr>
<td>global</td>
<td>全域的（对应於 local） 全局的</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-20"><a href="#list-20" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>global object</td>
<td>全域物件 全局对象</td>
</tr>
<tr>
<td>global scope resolution operator</td>
<td>全域生存空间（范围决议）运算子 :: 全局范围解析操作符</td>
</tr>
<tr>
<td>group</td>
<td>群组</td>
</tr>
<tr>
<td>group box</td>
<td>群组方块 分组框</td>
</tr>
<tr>
<td>guard clause</td>
<td>卫述句 (Refactoring, p250) 卫语句</td>
</tr>
<tr>
<td>GUI（Graphical User Interface）</td>
<td>图形介面 图形界面</td>
</tr>
<tr>
<td>hand shaking</td>
<td>握手协商</td>
</tr>
<tr>
<td>handle</td>
<td>识别码、识别号、号码牌、权柄 句柄</td>
</tr>
<tr>
<td>handler</td>
<td>处理常式 处理函数</td>
</tr>
<tr>
<td>hard－coded</td>
<td>编死的 硬编码的</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-21"><a href="#list-21" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>hard－copy</td>
<td>硬拷图 屏幕截图</td>
</tr>
<tr>
<td>hard disk</td>
<td>硬碟 硬盘</td>
</tr>
<tr>
<td>hardware</td>
<td>硬体 硬件</td>
</tr>
<tr>
<td>hash table</td>
<td>杂凑表 哈希表、散列表</td>
</tr>
<tr>
<td>header file</td>
<td>表头档、标头档 头文件</td>
</tr>
<tr>
<td>heap</td>
<td>堆积 堆</td>
</tr>
<tr>
<td>hierarchy</td>
<td>阶层体系 层次结构（体系）</td>
</tr>
<tr>
<td>hook</td>
<td>挂钩 钩子</td>
</tr>
<tr>
<td>hyperlink</td>
<td>超链结 超链接</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-22"><a href="#list-22" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>icon</td>
<td>图示、图标 图标</td>
</tr>
<tr>
<td>IDE（integrated development environment）</td>
<td>整合开发环境 集成开发环境</td>
</tr>
<tr>
<td>identifier</td>
<td>识别字、识别符号 标识符</td>
</tr>
<tr>
<td>if and only if</td>
<td>若且唯若 当且仅当</td>
</tr>
<tr>
<td>Illinois</td>
<td>伊利诺 伊利诺斯</td>
</tr>
<tr>
<td>image</td>
<td>影像 图象</td>
</tr>
<tr>
<td>immediate base</td>
<td>直接的（紧临的）上层 base class。 直接上层基类</td>
</tr>
<tr>
<td>immediate derived</td>
<td>直接的（紧临的）下层 derived class。 直接下层派生类</td>
</tr>
<tr>
<td>immutability</td>
<td>不变性</td>
</tr>
<tr>
<td>immutable</td>
<td>不可变（的）</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-23"><a href="#list-23" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>implement</td>
<td>实作、实现 实现</td>
</tr>
<tr>
<td>implementation</td>
<td>实作品、实作体、实作码、实件 实现</td>
</tr>
<tr>
<td>implicit</td>
<td>隐喻的、暗自的、隐式 隐式</td>
</tr>
<tr>
<td>import</td>
<td>汇入 导入</td>
</tr>
<tr>
<td>increment operator</td>
<td>累加运算子 ++ 增加操作符</td>
</tr>
<tr>
<td>infinite loop</td>
<td>无穷回圈 无限循环</td>
</tr>
<tr>
<td>infinite recursive</td>
<td>无穷递回 无限递归</td>
</tr>
<tr>
<td>information</td>
<td>资讯 信息</td>
</tr>
<tr>
<td>infrastructure</td>
<td>公共基础建设</td>
</tr>
<tr>
<td>inheritance</td>
<td>继承、继承机制 继承、继承机制</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-24"><a href="#list-24" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>inline</td>
<td>行内 内联</td>
</tr>
<tr>
<td>inline expansion</td>
<td>行内展开 内联展开</td>
</tr>
<tr>
<td>initialization</td>
<td>初始化（动作） 初始化</td>
</tr>
<tr>
<td>initialization list</td>
<td>初值列 初始值列表</td>
</tr>
<tr>
<td>initialize</td>
<td>初始化 初始化</td>
</tr>
<tr>
<td>inner class</td>
<td>内隐类别 内嵌类</td>
</tr>
<tr>
<td>instance</td>
<td>实体 实例（根据某种表述而实际产生的「东西」）</td>
</tr>
<tr>
<td>instantiated</td>
<td>具现化、实体化（常应用於 template） 实例化</td>
</tr>
<tr>
<td>instantiation</td>
<td>具现体、具现化实体（常应用於 template） 实例</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-25"><a href="#list-25" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>integer</td>
<td>(integral ) 整数（的） 整型（的）</td>
</tr>
<tr>
<td>integrate</td>
<td>整合 集成</td>
</tr>
<tr>
<td>interacts</td>
<td>交谈、互动 交互</td>
</tr>
<tr>
<td>interface</td>
<td>介面 接口</td>
</tr>
<tr>
<td>for GUI （Graphical  User Interface）</td>
<td>介面 界面</td>
</tr>
<tr>
<td>interpreter</td>
<td>直译器 解释器</td>
</tr>
<tr>
<td>invariants</td>
<td>恒常性,约束条件 约束条件</td>
</tr>
<tr>
<td>invoke</td>
<td>唤起 调用</td>
</tr>
<tr>
<td>iterate</td>
<td>迭代（回圈一个轮回一个轮回地进行） 迭代</td>
</tr>
<tr>
<td>iterative</td>
<td>反覆的，迭代的</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-26"><a href="#list-26" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>iterator</td>
<td>迭代器（一种泛型指标） 迭代器</td>
</tr>
<tr>
<td>iteration</td>
<td>迭代（回圈每次轮回称为一个 iteration） 迭代</td>
</tr>
<tr>
<td>item</td>
<td>项目、条款 项、条款、项目</td>
</tr>
<tr>
<td>laser</td>
<td>雷射 激光</td>
</tr>
<tr>
<td>level</td>
<td>阶 层 (级) 例 high level 高阶 高层</td>
</tr>
<tr>
<td>library</td>
<td>程式库、函式库 库、函数库</td>
</tr>
<tr>
<td>lifetime</td>
<td>生命期、寿命 生命期、寿命</td>
</tr>
<tr>
<td>link</td>
<td>联结、连结 连接,链接</td>
</tr>
<tr>
<td>linker</td>
<td>联结器、连结器 连接器</td>
</tr>
<tr>
<td>literal constant</td>
<td>字面常数（例 3.14 或 “hi” 这等常数值） 字面常数</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-27"><a href="#list-27" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>list</td>
<td>串列（linked－list） 列表、表、链表</td>
</tr>
<tr>
<td>list box</td>
<td>列表方块、列表框 列表框</td>
</tr>
<tr>
<td>load</td>
<td>载入 装载</td>
</tr>
<tr>
<td>loader</td>
<td>载入器 装载器、载入器</td>
</tr>
<tr>
<td>local</td>
<td>区域的（对应於 global） 局部的</td>
</tr>
<tr>
<td>local object</td>
<td>区域物件 局部对象</td>
</tr>
<tr>
<td>lock</td>
<td>机锁</td>
</tr>
<tr>
<td>loop</td>
<td>回圈 循环</td>
</tr>
<tr>
<td>lvalue</td>
<td>左值 左值</td>
</tr>
<tr>
<td>macro</td>
<td>巨集 宏</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-28"><a href="#list-28" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>magic</td>
<td>number 魔术数字 魔法数</td>
</tr>
<tr>
<td>maintain</td>
<td>维护 维护</td>
</tr>
<tr>
<td>manipulator</td>
<td>操纵器（iostream 预先定义的一种东西） 操纵器</td>
</tr>
<tr>
<td>marshal</td>
<td>编列 列集;叁考 demarshal</td>
</tr>
<tr>
<td>mechanism</td>
<td>机制 机制</td>
</tr>
<tr>
<td>member</td>
<td>成员 成员</td>
</tr>
<tr>
<td>member access operator</td>
<td>成员取用运算子（有 dot 和 arrow 两种） 成员存取操作符</td>
</tr>
<tr>
<td>member function</td>
<td>成员函式 成员函数</td>
</tr>
<tr>
<td>member initialization</td>
<td>list 成员初值列 成员初始值列表</td>
</tr>
<tr>
<td>memberwise</td>
<td>以 member 为单元┅、members 逐一┅ 以成员为单位</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-29"><a href="#list-29" class="headerlink" title="list"></a>list</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>memberwise</td>
<td>copy 以 members 为单元逐一复制</td>
</tr>
<tr>
<td>memory</td>
<td>记忆体 内存</td>
</tr>
<tr>
<td>menu</td>
<td>表单、选单 菜单</td>
</tr>
<tr>
<td>message</td>
<td>讯息 消息</td>
</tr>
<tr>
<td>message based</td>
<td>以讯息为基础的 基於消息的</td>
</tr>
<tr>
<td>message loop</td>
<td>讯息回圈 消息环</td>
</tr>
<tr>
<td>method</td>
<td>(java) 方法、行为、函式 方法</td>
</tr>
<tr>
<td>meta－</td>
<td>超－ 元-;例 meta－programming 超编程 元编程</td>
</tr>
<tr>
<td>micro</td>
<td>微</td>
</tr>
<tr>
<td>middleware</td>
<td>中介层 中间件</td>
</tr>
<tr>
<td>modeling</td>
<td>模塑</td>
</tr>
<tr>
<td>modeling language</td>
<td>塑模语言，建模语言</td>
</tr>
<tr>
<td>modem</td>
<td>数据机 调制解调器</td>
</tr>
<tr>
<td>module</td>
<td>模组 模块</td>
</tr>
<tr>
<td>modifier</td>
<td>饰词 修饰符</td>
</tr>
<tr>
<td>most derived</td>
<td>class 最末层衍生类别 最底层的派生类</td>
</tr>
<tr>
<td>mouse</td>
<td>滑鼠 鼠标</td>
</tr>
<tr>
<td>mutable</td>
<td>可变的 可变的</td>
</tr>
<tr>
<td>multi－tasking</td>
<td>多工 多任务</td>
</tr>
<tr>
<td>namespace</td>
<td>命名空间 名字空间、命名空间</td>
</tr>
<tr>
<td>native</td>
<td>原生的 本地的、固有的</td>
</tr>
<tr>
<td>nested</td>
<td>class 巢状类别 嵌套类</td>
</tr>
<tr>
<td>network</td>
<td>网路 网络</td>
</tr>
<tr>
<td>network card</td>
<td>网路卡 网卡</td>
</tr>
<tr>
<td>object</td>
<td>物件 对象</td>
</tr>
<tr>
<td>object based</td>
<td>以物件为基础的 基於对象的</td>
</tr>
<tr>
<td>object file</td>
<td>目的档 目标文件</td>
</tr>
<tr>
<td>object model</td>
<td>物件模型 对象模型</td>
</tr>
<tr>
<td>object oriented</td>
<td>物件导向的 面向对象的</td>
</tr>
<tr>
<td>online</td>
<td>线上 在线</td>
</tr>
<tr>
<td>opaque</td>
<td>不透明的</td>
</tr>
<tr>
<td>operand</td>
<td>运算元 操作数</td>
</tr>
<tr>
<td>operating system</td>
<td>(OS) 作业系统 操作系统</td>
</tr>
<tr>
<td>operation</td>
<td>操作、操作行为 操作</td>
</tr>
<tr>
<td>operator</td>
<td>运算子 操作符、运算符</td>
</tr>
<tr>
<td>option</td>
<td>选项，可选方案 选项</td>
</tr>
<tr>
<td>ordinary</td>
<td>常规的 常规的</td>
</tr>
<tr>
<td>overflow</td>
<td>上限溢位（相对於 underflow） 溢出（underflow:下溢）</td>
</tr>
<tr>
<td>overhead</td>
<td>额外负担、额外开销 额外开销</td>
</tr>
<tr>
<td>overload</td>
<td>多载化、多载化、重载 重载</td>
</tr>
<tr>
<td>overloaded</td>
<td>function 多载化函式 重载的函数</td>
</tr>
<tr>
<td>overloaded operator</td>
<td>多载化运算子 被重载的操作符</td>
</tr>
<tr>
<td>overloaded set</td>
<td>多载集合 重载集合</td>
</tr>
<tr>
<td>override</td>
<td>改写、覆写 重载、改写、重新定义（在 derived class 中重新定义虚拟函式)</td>
</tr>
<tr>
<td>package</td>
<td>套件 包</td>
</tr>
<tr>
<td>pair</td>
<td>对组</td>
</tr>
<tr>
<td>palette</td>
<td>调色盘、组件盘、工具箱</td>
</tr>
<tr>
<td>pane</td>
<td>窗格 窗格（有时为嵌板之意，例 Java Content Pane）</td>
</tr>
<tr>
<td>parallel</td>
<td>平行 并行</td>
</tr>
<tr>
<td>parameter</td>
<td>叁数（函式叁数列上的变数） 叁数、形式叁数、形叁</td>
</tr>
<tr>
<td>parameter list</td>
<td>叁数列 叁数列表</td>
</tr>
<tr>
<td>parent</td>
<td>class 父类别（或称 base class） 父类</td>
</tr>
<tr>
<td>parentheses</td>
<td>小括弧、小括号 圆括弧、圆括号</td>
</tr>
<tr>
<td>parse</td>
<td>解析 解析</td>
</tr>
<tr>
<td>part</td>
<td>零件 部件</td>
</tr>
<tr>
<td>partial specialization</td>
<td>偏特化（ref. C++ Primer 3/e, 16.10） 局部特化（ref. full specialization）</td>
</tr>
<tr>
<td>pass by address</td>
<td>传址（函式引数的传递方式）（非正式用语）传地址</td>
</tr>
<tr>
<td>pass by reference</td>
<td>传址（函式引数的一种传递方式） 传地址, 按引用传递</td>
</tr>
<tr>
<td>pass by value</td>
<td>传值（函式引数的一种传递方式） 按值传递</td>
</tr>
<tr>
<td>pattern</td>
<td>范式、样式 模式</td>
</tr>
<tr>
<td>performance</td>
<td>效率、性能兼而有之 性能</td>
</tr>
<tr>
<td>persistence</td>
<td>永续性 持久性</td>
</tr>
<tr>
<td>pixel</td>
<td>图素、像素 像素</td>
</tr>
<tr>
<td>placement delete ref</td>
<td>C++ Primer 3/e, 15.8.2</td>
</tr>
<tr>
<td>placement new ref</td>
<td>C++ Primer 3/e, 15.8.2</td>
</tr>
<tr>
<td>platform</td>
<td>平台 平台</td>
</tr>
<tr>
<td>pointer</td>
<td>指标 指针;址位器（和址叁器 reference 形成对映，满好）</td>
</tr>
<tr>
<td>poll</td>
<td>轮询 轮询</td>
</tr>
<tr>
<td>polymorphism</td>
<td>多型 多态</td>
</tr>
<tr>
<td>pop up</td>
<td>冒起式、弹出式 弹出式</td>
</tr>
<tr>
<td>port</td>
<td>埠 端口</td>
</tr>
<tr>
<td>postfix</td>
<td>後置式、後序式 後置式</td>
</tr>
<tr>
<td>precedence</td>
<td>优先序（通常用於运算子的优先执行次序）</td>
</tr>
<tr>
<td>prefix</td>
<td>前置式、前序式 前置式</td>
</tr>
<tr>
<td>preprocessor</td>
<td>前处理器 预处理器</td>
</tr>
<tr>
<td>prime</td>
<td>质数 素数</td>
</tr>
<tr>
<td>primitive</td>
<td>type 基本型别 (不同於 base class,基础类别)</td>
</tr>
<tr>
<td>print</td>
<td>列印 打印</td>
</tr>
<tr>
<td>printer</td>
<td>印表机 打印机</td>
</tr>
<tr>
<td>priority</td>
<td>优先权 (通常用於执行绪获得 CPU 时间的优先次序）</td>
</tr>
<tr>
<td>procedure</td>
<td>程序 过程</td>
</tr>
<tr>
<td>procedural</td>
<td>程序性的、程序式的 过程式的、过程化的</td>
</tr>
<tr>
<td>process</td>
<td>行程 进程</td>
</tr>
<tr>
<td>profile</td>
<td>评测 评测</td>
</tr>
<tr>
<td>profiler</td>
<td>效能（效率）评测器 效能（性能）评测器</td>
</tr>
<tr>
<td>programmer</td>
<td>程式员 程序员</td>
</tr>
<tr>
<td>programming</td>
<td>编程、程式设计、程式化 编程</td>
</tr>
<tr>
<td>progress</td>
<td>进度指示器 进度指示器</td>
</tr>
<tr>
<td>project</td>
<td>专案 项目、工程</td>
</tr>
<tr>
<td>property</td>
<td>属性</td>
</tr>
<tr>
<td>protocol</td>
<td>协定 协议</td>
</tr>
<tr>
<td>pseudo code</td>
<td>假码、虚拟码、伪码 伪码</td>
</tr>
<tr>
<td>qualified</td>
<td>经过资格修饰（例如加上 scope 运算子） 限定</td>
</tr>
<tr>
<td>qualifier</td>
<td>资格修饰词、饰词 限定修饰词</td>
</tr>
<tr>
<td>quality</td>
<td>品质 质量</td>
</tr>
<tr>
<td>queue</td>
<td>伫列 队列</td>
</tr>
<tr>
<td>radian</td>
<td>径度 弧度</td>
</tr>
<tr>
<td>radio</td>
<td>button 圆钮 单选按钮</td>
</tr>
<tr>
<td>raise</td>
<td>引发（常用来表示发出一个 exception） 引起、引发</td>
</tr>
<tr>
<td>random number</td>
<td>随机数、乱数 随机数</td>
</tr>
<tr>
<td>range</td>
<td>范围、区间（用於 STL 时） 范围、区间</td>
</tr>
<tr>
<td>rank</td>
<td>等级、分等（ref. C++Primer 3/e 9,15章） 等级</td>
</tr>
<tr>
<td>raw</td>
<td>生鲜的、未经处理的 未经处理的</td>
</tr>
<tr>
<td>record</td>
<td>记录 记录</td>
</tr>
<tr>
<td>recordset</td>
<td>记录集 记录集</td>
</tr>
<tr>
<td>recursive</td>
<td>递回 递归</td>
</tr>
<tr>
<td>re－direction</td>
<td>重导向 重定向</td>
</tr>
<tr>
<td>refactoring</td>
<td>重构、重整 重构</td>
</tr>
<tr>
<td>refer</td>
<td>取用 叁考</td>
</tr>
<tr>
<td>refer to</td>
<td>指向、指涉、指代</td>
</tr>
<tr>
<td>reference</td>
<td>（C++ 中类似指标的东西，相当於 “化身”） 引用、叁考 址叁器, see pointer</td>
</tr>
<tr>
<td>register</td>
<td>暂存器 寄存器</td>
</tr>
<tr>
<td>reflection</td>
<td>反射 反射、映像</td>
</tr>
<tr>
<td>relational</td>
<td>database 关联式资料库 关系数据库</td>
</tr>
<tr>
<td>represent</td>
<td>表述，表现 表述，表现</td>
</tr>
<tr>
<td>resolve</td>
<td>决议（为算式中的符号名称寻找 解析 对应之宣告式的过程）</td>
</tr>
<tr>
<td>resolution</td>
<td>决议程序、决议过程 解析过程</td>
</tr>
<tr>
<td>resolution</td>
<td>解析度 分辨率</td>
</tr>
<tr>
<td>restriction</td>
<td>局限</td>
</tr>
<tr>
<td>return</td>
<td>传回、回返 返回</td>
</tr>
<tr>
<td>return type</td>
<td>回返型别 返回类型</td>
</tr>
<tr>
<td>return value</td>
<td>回返值 返回值</td>
</tr>
<tr>
<td>robust</td>
<td>强固、稳健 健壮</td>
</tr>
<tr>
<td>robustness</td>
<td>强固性、稳健性 健壮性</td>
</tr>
<tr>
<td>routine</td>
<td>常式 例程</td>
</tr>
<tr>
<td>runtime</td>
<td>执行期 运行期、运行时</td>
</tr>
<tr>
<td>common language runtime (CLR)</td>
<td>译为通用语言运行时</td>
</tr>
<tr>
<td>rvalue</td>
<td>右值 右值</td>
</tr>
<tr>
<td>save</td>
<td>储存 存储</td>
</tr>
<tr>
<td>schedule</td>
<td>排程 调度</td>
</tr>
<tr>
<td>scheduler</td>
<td>排程器 调度程序</td>
</tr>
<tr>
<td>scheme</td>
<td>结构纲目、组织纲目</td>
</tr>
<tr>
<td>scroll</td>
<td>bar 卷轴 滚动条</td>
</tr>
<tr>
<td>scope</td>
<td>生存空间、生存范围、范畴、作用域 生存空间</td>
</tr>
<tr>
<td>scope operator</td>
<td>生存空间（范围决议）运算子 :: 生存空间操作符</td>
</tr>
<tr>
<td>scope resolution operator</td>
<td>生存空间决议运算子 生存空间解析操作符（与scope operator同）</td>
</tr>
<tr>
<td>screen</td>
<td>萤幕 屏幕</td>
</tr>
<tr>
<td>search</td>
<td>搜寻 查找</td>
</tr>
<tr>
<td>semantics</td>
<td>语意 语义</td>
</tr>
<tr>
<td>sequential container</td>
<td>序列式容器 顺序式容器（对应於 associative container）</td>
</tr>
<tr>
<td>server</td>
<td>伺服器、伺服端 服务器、服务端</td>
</tr>
<tr>
<td>serial</td>
<td>串行</td>
</tr>
<tr>
<td>serialization</td>
<td>次第读写,序列化 序列化 (serialize) </td>
</tr>
<tr>
<td>setter</td>
<td>(相对於 getter) 设值函式</td>
</tr>
<tr>
<td>signal</td>
<td>信号</td>
</tr>
<tr>
<td>signature</td>
<td>标记式、签名式、署名式 签名</td>
</tr>
<tr>
<td>slider</td>
<td>滚轴 滑块</td>
</tr>
<tr>
<td>slot</td>
<td>条孔、槽 槽</td>
</tr>
<tr>
<td>smart pointer</td>
<td>灵巧指标、精灵指标 智能指针</td>
</tr>
<tr>
<td>snapshot</td>
<td>萤幕快照（图） 屏幕截图</td>
</tr>
<tr>
<td>specialization</td>
<td>特殊化、特殊化定义、特殊化宣告 特化</td>
</tr>
<tr>
<td>specification</td>
<td>规格 规格、规范</td>
</tr>
<tr>
<td>splitter</td>
<td>分裂视窗 切分窗口</td>
</tr>
<tr>
<td>software</td>
<td>软体 软件</td>
</tr>
<tr>
<td>solution</td>
<td>解法,解决方案 方案</td>
</tr>
<tr>
<td>source</td>
<td>原始码 源码、源代码</td>
</tr>
<tr>
<td>stack</td>
<td>(d)堆叠 栈</td>
</tr>
<tr>
<td>stack unwinding</td>
<td>堆叠辗转开解（此词用於 exception 主题） 栈辗转开解 *</td>
</tr>
<tr>
<td>standard</td>
<td>标准程式库</td>
</tr>
<tr>
<td>standard template library</td>
<td>标准模板程式库</td>
</tr>
<tr>
<td>statement</td>
<td>述句 语句、声明</td>
</tr>
<tr>
<td>status bar</td>
<td>状态列、状态栏 状态条</td>
</tr>
<tr>
<td>STL</td>
<td>见 standard template library</td>
</tr>
<tr>
<td>stream</td>
<td>资料流、串流 流</td>
</tr>
<tr>
<td>string</td>
<td>字串 字符串</td>
</tr>
<tr>
<td>subroutine</td>
<td>子程序调用序列</td>
</tr>
<tr>
<td>subscript operator 下标运算子</td>
<td>下标操作符</td>
</tr>
<tr>
<td>subtype</td>
<td>子型别 子类型</td>
</tr>
<tr>
<td>support</td>
<td>支援 支持</td>
</tr>
<tr>
<td>suspend</td>
<td>虚悬 挂起</td>
</tr>
<tr>
<td>symbol</td>
<td>符号 记号</td>
</tr>
<tr>
<td>syntax</td>
<td>语法 语法</td>
</tr>
<tr>
<td>tag</td>
<td>标签 标记 索引标签,页签</td>
</tr>
<tr>
<td>target</td>
<td>标的（例 target pointer ：标的指标） 目标</td>
</tr>
<tr>
<td>task switch</td>
<td>工作切换 任务切换</td>
</tr>
<tr>
<td>template</td>
<td>模板、范本 模板</td>
</tr>
<tr>
<td>template argument deduction</td>
<td>模板引数推导 模板叁数推导</td>
</tr>
<tr>
<td>template explicit specialization</td>
<td>模板显式特化（版本） 模板显式特化</td>
</tr>
<tr>
<td>template parameter</td>
<td>模板叁数 模板叁数</td>
</tr>
<tr>
<td>temporary object</td>
<td>暂时物件 临时对象</td>
</tr>
<tr>
<td>text</td>
<td>文字 文本</td>
</tr>
<tr>
<td>text file</td>
<td>程式本文档（放置程式原始码的档案） 文本文件</td>
</tr>
<tr>
<td>thread</td>
<td>执行绪 线程</td>
</tr>
<tr>
<td>thread safe</td>
<td>多绪安全 多线程安全</td>
</tr>
<tr>
<td>throw</td>
<td>丢掷（常指发出一个 exception） 丢掷、引发</td>
</tr>
<tr>
<td>token</td>
<td>语汇单元 符号、标记</td>
</tr>
<tr>
<td>transaction</td>
<td>交易 事务</td>
</tr>
<tr>
<td>transparent(ly)</td>
<td>透通的(地)</td>
</tr>
<tr>
<td>traverse</td>
<td>巡访（来回走动） 遍历</td>
</tr>
<tr>
<td>trigger</td>
<td>触发 触发</td>
</tr>
<tr>
<td>type</td>
<td>型别 类型</td>
</tr>
<tr>
<td>UML unified modeling language</td>
<td>统一建模语言</td>
</tr>
<tr>
<td>unary function</td>
<td>一元函式 单叁函数</td>
</tr>
<tr>
<td>unary operator</td>
<td>一元运算子 一元操作符</td>
</tr>
<tr>
<td>underflow</td>
<td>下限溢位（相对於 overflow） 下溢</td>
</tr>
<tr>
<td>unchecked</td>
<td>exception 不可控异常(Java)</td>
</tr>
<tr>
<td>unqualified</td>
<td>未经资格修饰（而直接取用）unwinding  ref . stack  unwinding </td>
</tr>
<tr>
<td>user</td>
<td>使用者、用户 用户</td>
</tr>
<tr>
<td>user interface</td>
<td>使用者介面、用户介面、人机介面 用户界面</td>
</tr>
<tr>
<td>variable</td>
<td>变数（相对於常数 const） 变量</td>
</tr>
<tr>
<td>vector</td>
<td>向量（一种容器，有点类似 array） 向量、矢量</td>
</tr>
<tr>
<td>viable</td>
<td>可实行的、可行的 可行的</td>
</tr>
<tr>
<td>viable function</td>
<td>可行函式 可行函数（从 candidate functions 中挑出者）</td>
</tr>
<tr>
<td>video</td>
<td>视讯 视频</td>
</tr>
<tr>
<td>view</td>
<td>(1) 视图(document/view) 文档/视图</td>
</tr>
<tr>
<td>view</td>
<td>(2) 映件</td>
</tr>
<tr>
<td>virtual</td>
<td>function 虚拟函式 虚函数</td>
</tr>
<tr>
<td>virtual machine</td>
<td>虚拟机器 虚拟机</td>
</tr>
<tr>
<td>virtual memory</td>
<td>虚拟记忆体 虚内存, 虚存</td>
</tr>
<tr>
<td>volatile</td>
<td>易挥发的、易变的</td>
</tr>
<tr>
<td>vowel</td>
<td>母音 元音字母</td>
</tr>
<tr>
<td>window</td>
<td>视窗 窗口</td>
</tr>
<tr>
<td>window function</td>
<td>视窗函式 窗口函数</td>
</tr>
<tr>
<td>window procedure</td>
<td>视窗函式 窗口过程</td>
</tr>
<tr>
<td>word</td>
<td>字 单词</td>
</tr>
<tr>
<td>word processor</td>
<td>文书处理器 字处理器</td>
</tr>
<tr>
<td>wrapper</td>
<td>外覆、外包 包装absence 缺席</td>
</tr>
<tr>
<td>access</td>
<td>访问存取通路进入</td>
</tr>
<tr>
<td>achieve</td>
<td>实现完成</td>
</tr>
<tr>
<td>acquire</td>
<td>获得</td>
</tr>
<tr>
<td>adjacency list method</td>
<td>邻接表表示法</td>
</tr>
<tr>
<td>adjacency matrix  method</td>
<td>邻接矩阵表示法</td>
</tr>
<tr>
<td>algorithm</td>
<td>算法</td>
</tr>
<tr>
<td>allocate</td>
<td>留下分配</td>
</tr>
<tr>
<td>analog</td>
<td>推论</td>
</tr>
<tr>
<td>append</td>
<td>添加</td>
</tr>
<tr>
<td>archive</td>
<td>档案归档</td>
</tr>
<tr>
<td>array</td>
<td>数组</td>
</tr>
<tr>
<td>assign</td>
<td>分配</td>
</tr>
<tr>
<td>assume</td>
<td>假设</td>
</tr>
<tr>
<td>assurance</td>
<td>确信信任</td>
</tr>
<tr>
<td>ATM(asynchronous transfer mode )</td>
<td>异步传输模式</td>
</tr>
<tr>
<td>b.. real programs kernels</td>
<td>实程序核心程序</td>
</tr>
<tr>
<td>b.. toy benchmark synthetic benchmark</td>
<td>简单基准程序复合基准程序</td>
</tr>
<tr>
<td>balance</td>
<td>平衡</td>
</tr>
<tr>
<td>bandwidth</td>
<td>带宽</td>
</tr>
<tr>
<td>batch</td>
<td>一批一组</td>
</tr>
<tr>
<td>benchmark</td>
<td>基准测试程序</td>
</tr>
<tr>
<td>best-fit algorithm</td>
<td>最佳适应算法</td>
</tr>
<tr>
<td>BFS(breadth first search )</td>
<td>广度优先搜索法</td>
</tr>
<tr>
<td>binary</td>
<td>二进制</td>
</tr>
<tr>
<td>binary relation</td>
<td>二元关系</td>
</tr>
<tr>
<td>binary tree</td>
<td>二叉树</td>
</tr>
<tr>
<td>bit series</td>
<td>比特序列</td>
</tr>
<tr>
<td>black-box white-box</td>
<td>黑盒白盒</td>
</tr>
<tr>
<td>block miss</td>
<td>块失效</td>
</tr>
<tr>
<td>blocked</td>
<td>阻塞(等待状态也称阻塞或封锁状态)</td>
</tr>
<tr>
<td>boundary</td>
<td>界线分界</td>
</tr>
<tr>
<td>bridge</td>
<td>网桥</td>
</tr>
<tr>
<td>bubble  sort</td>
<td>冒泡排序</td>
</tr>
<tr>
<td>calculation</td>
<td>计算</td>
</tr>
<tr>
<td>candidate key</td>
<td>候选键(辅键)</td>
</tr>
<tr>
<td>capability</td>
<td>能力才能</td>
</tr>
<tr>
<td>capacity</td>
<td>容量</td>
</tr>
<tr>
<td>cartesian product</td>
<td>笛卡尔积</td>
</tr>
<tr>
<td>CASE(com.. aided sof.. engineering)</td>
<td>计算机辅助软件工程</td>
</tr>
<tr>
<td>CCP(communication control processor )</td>
<td>通信控制处理机</td>
</tr>
<tr>
<td>cell</td>
<td>信元</td>
</tr>
<tr>
<td>characteristic</td>
<td>特征特性</td>
</tr>
<tr>
<td>circuit switching</td>
<td>线路交换</td>
</tr>
<tr>
<td>circular wait</td>
<td>循环等待</td>
</tr>
<tr>
<td>CISC(complex instruction set computer )</td>
<td>复杂指令集计算机</td>
</tr>
<tr>
<td>class</td>
<td>类</td>
</tr>
<tr>
<td>Client/Server</td>
<td>客户机/服务器</td>
</tr>
<tr>
<td>clock cycle clock rate</td>
<td>时钟周期时钟频率</td>
</tr>
<tr>
<td>coaxial cable</td>
<td>同轴电缆</td>
</tr>
<tr>
<td>cohesion coupling</td>
<td>内聚耦合</td>
</tr>
<tr>
<td>coincidental logical procedural functional</td>
<td>偶然内聚逻辑内聚过程内聚功能内聚</td>
</tr>
<tr>
<td>combination</td>
<td>联合配合</td>
</tr>
<tr>
<td>common</td>
<td>公用的共同的</td>
</tr>
<tr>
<td>communication</td>
<td>通信</td>
</tr>
<tr>
<td>complement number</td>
<td>补码</td>
</tr>
<tr>
<td>component</td>
<td>成分</td>
</tr>
<tr>
<td>concept</td>
<td>概念观念</td>
</tr>
<tr>
<td>condition</td>
<td>情况状况</td>
</tr>
<tr>
<td>conform</td>
<td>符合</td>
</tr>
<tr>
<td>consist</td>
<td>组成存在</td>
</tr>
<tr>
<td>constrain</td>
<td>约束</td>
</tr>
<tr>
<td>contain</td>
<td>包含</td>
</tr>
<tr>
<td>correspond</td>
<td>(corresponding) 相符合(相应的一致的)</td>
</tr>
<tr>
<td>CPETT</td>
<td>计算机性能评价工具与技术</td>
</tr>
<tr>
<td>CPI</td>
<td>每条指令需要的周期数</td>
</tr>
<tr>
<td>CSMA/CD</td>
<td>带冲突检测的载波监听多路访问</td>
</tr>
<tr>
<td>cursor</td>
<td>游标</td>
</tr>
<tr>
<td>cyclic redundancy check</td>
<td>循环冗余校验</td>
</tr>
<tr>
<td>database: integrity consistency restory</td>
<td>完整性一致性可恢复性</td>
</tr>
<tr>
<td>database: security efficiency</td>
<td>数据库设计的目标: 安全性效率</td>
</tr>
<tr>
<td>deadlock: mutual exclusion</td>
<td>死锁条件: 互斥</td>
</tr>
<tr>
<td>deadlock: circular wait no preemption</td>
<td>死锁条件: 循环等待狗熊先权</td>
</tr>
<tr>
<td>decimal</td>
<td>十进位的</td>
</tr>
<tr>
<td>decision</td>
<td>决定判断</td>
</tr>
<tr>
<td>decomposition</td>
<td>双重的混合的</td>
</tr>
<tr>
<td>decrease</td>
<td>减少</td>
</tr>
<tr>
<td>definition</td>
<td>定义</td>
</tr>
<tr>
<td>definition phase</td>
<td>定义阶段</td>
</tr>
<tr>
<td>demonstrate</td>
<td>证明</td>
</tr>
</tbody>
</table>
</div>
<p>determine |限定<br>development phase |开发阶段<br>DFS(depth first search)|深度优先搜索法<br>diagram| 图表<br>Difference Manchester| 差分曼彻斯特<br>directed graph undirected graph |有向图无向图<br>distinguish| 辩认区别<br>distributed| system 分布式系统<br>divide division| 分开除除法<br>divide union intersection difference |除并交差<br>document| 文件文档<br>DQDB(distributed queue dual bus) |分布队列双总线<br>draw |绘制<br>dual |二元的双的<br>dynamic design process| 动态定义过程<br>element |元素要素<br>elevator (scan) algorithm |电梯算法又称扫描算法<br>encapsulation inheritance|封装(压缩) 继承(遗传)<br>encode |译成密码<br>entity | 实体<br>entity integrity  rule | 实体完整性规则<br>equal |相等的<br>equation | 方程式等式<br>estimate | 估计判断<br>Ethernet | 以太网<br>evolution | 发展演化<br>exceed |超过<br>exchange sort |交换排序<br>exclusive locks |排它锁(简记为X 锁)<br>execute | 实现执行<br>exhibit |表现展示陈列<br>existence |存在发生<br>expertise |专门技术<br>external (internal ) fragmentation | 外(内)碎片<br>fault page fault |中断过错页中断<br>FDDI(fiber distributed data interface) |光纤分布式数据接口<br>FDM(frequency division multiplexing |频分多路复用<br>fiber optic cable | 光缆<br>FIFO replacement policy | 先进先出替换算法<br>figure |数字图形<br>final |最后的最终的<br>first normal form |第一范式<br>floppy | 活动盘片(软盘)<br>foreign key domain tuple | 外来键值域元组<br>form |形状形式<br>formula |公式表达式<br>foundation |基础根据基金<br>frame page frame |帧结构页结构<br>frequency |频率<br>FTP(File Transfer Protocol ) |文件传送服务<br>function |函数<br>functionally dependent |函数依赖<br>gateway | 网间连接器<br>gather | 聚集采集推测<br>general |-purose registers 通用寄存器<br>generate | 产生<br>grade |等级标准<br>graph  (graphic )| 图<br>Gopher |将用户的请求自动转换成<br>guarantee |保证确定<br>hash table hash function collision | 哈希表哈希函数(散列函数) 碰撞<br>HDLC（High-level Data Link Control）|面向比特型数据链路层协议<br>hit rate |命中率<br>host | 主计算机<br>host language statement |主语言语句<br>hypertext | 超级文本<br>illustrate | 举例说明<br>independent | 独立的<br>index |索引<br>indirect |间接的<br>influence |有影响的<br>initially | 最初开头<br>insertion sort | 插入排序<br>instruction format | 指令格式<br>instruction set |指令集<br>interface |接口分界面连接体<br>internal | 内部的内在的<br>interrupt |中断<br>IPC （Information Processing Center）|工业过程控制<br>ISAM VSAM |索引顺序存取方法虚拟存储存取方法<br>ISAM: （Index Sequential  Access Mode ）|<br>VSAM: (Virtual Storage Access Method)|<br>join natural join semi join |连接自然连接半连接<br>judgment |判断<br>kernel executive supervisor user |核心执行管理用户<br>kernels | 核心程序<br>key comparison | 键(码)值比较<br>LAN(local area network) |局域网<br>load |负载载入<br>logical functional |逻辑内聚功能内聚<br>longitudinal |水平的<br>loop | 圈环状<br>maintain |维护保养供给<br>maintanence phase | 维护(保养)阶段<br>MAN(metropolitan area network) |城域网<br>Manchester |曼彻斯特<br>map |地图映射图<br>matrix |矩阵点阵<br>memory reference | 存储器参量<br>message switching |报文交换<br>method |方法技巧<br>MFLOP(million floating point operate)|ps 每秒百万次浮点运算<br>minimum | 最小的<br>MIPS(millions of instructions per second) |每秒百万条指令<br>module |单位基准<br>monitor (model benchmark physcal) method |监视(模型基准物理)法<br>multilevel data flow chart | 分层数据流图<br>multiple | 复合的多样的<br>multiple-term formula | 多项式<br>multiplexing | 多路复用技术<br>multiplication |乘法<br>mutual exclusion | 互相排斥<br>non-key attributes | 非码属性<br>null |零空<br>Nyquist |奈奎斯特<br>object oriented | 对象趋向的使适应的<br>object oriented analysis | 面向对象的分析<br>object oriented databases |面向对象数据库</p>
<p>object oriented implementation |面向对象的实现<br>obtain | 获得<br>occupy | 占有居住于<br>occurrence | 事件<br>odd | 奇数的<br>even|偶数<br>one-dimensional array |一维数组<br>OODB(object oriented data base) |面向对象数据库<br>OOM(object oriented method) |面向对象的方法<br>oom: information object message class |信息对象消息类<br>oom: instance method message passing | 实例方法消息传递<br>open system |开放系统<br>operand | 操作数<br>optimized | 尽量充分利用<br>optional |任选的非强制的<br>organize |组织<br>overflow | 溢出<br>overlapping register windows |重叠寄存器窗口<br>packet switching | 报文分组交换<br>page fault | 页面失效<br>page replacement algorithm | 页替换算法<br>paged segments| 段页式管理<br>PCB(process control block) |进程控制块<br>peer entites |对等实体<br>perform |表演执行<br>period| 时期周期<br>permit | 许可准许<br>phase |阶段局面状态<br>physical data link network layer |物理层数据链路层网络层<br>pipeline | 管道<br>platter track cluster |面磁道簇<br>predicate |谓语<br>preemption | 有优先权的<br>prefix (Polish form) |前缀(波兰表达式)<br>preorder | inorder postorder 前序中序后序<br>presentation application layer |表示层应用层<br>primary key attributes |主码属性<br>principle | 原则方法<br>procedural coincidental |过程内聚偶然内聚<br>process | 过程加工处理<br>proficient |精通<br>program debugging | 程序排错<br>projection  selection join | 投影选择连接<br>proposition |主张建议陈述<br>protocal |协议<br>prototype | 原型样板<br>prototyping method (model ) |原型化周期(模型)<br>pseudo-code |伪码(又称程序设计语言PDL)<br>punctuation | 标点<br>purpose |目的意图<br>quality |质量品质<br>queue |队列<br>ready blocked running |就绪阻塞(等待) 运行<br>real page number |实页数<br>real programs |实程序<br>redirected |重定向<br>redundency  |冗余<br>reference integrity rule |引用完整性规则<br>referred to as |把…..当作<br>regard |关于<br>register (registry ) |寄存器登记注册挂号<br>regularly |定期的常规的<br>relation | 关系<br>relay | 中继<br>reliability | 可信赖的<br>repeater | 中继器<br>replacement | 替换<br>represent |代表象征<br>request indication response confirm |请求指示响应确认<br>resource |资源<br>response |回答响应<br>RISC(reduced instruction set computer) |精简指令集计算机<br>robustness | 健壮性<br>router | 路由器<br>scheme | 计划图表<br>sector head cylinder | 扇区磁头柱面<br>selection sort | 选择排序<br>semaphores| 信号<br>sequence | 序列顺序<br>Shanon |香农<br>share locks |共享锁(简记为S 锁)<br>short path critical path |最短路径关键路径<br>signal | 信号<br>signal-to-noise ratio | 信噪比B/N<br>similar | 相似的<br>SISD SIMD MISD MIMD |<em> 指令流</em> 数据流<br>SMDS |交换多兆位数据服务<br>software development phase | 软件开发阶段<br>software engineering | 软件工程<br>software portability | 软件可移植性<br>software requirements specification | 软件需求说明书<br>solve | 解决<br>sort | 种类方式分类排序<br>spanning tree |跨越树(生成树)<br>specify | 指定说明<br>speedup | 加速比<br>SSTF(shortest-seek-time-first) |最短寻道时间优先(磁盘调度算法)<br>stack strategy non-stack strategy |堆栈型非堆栈型<br>starvation | 饥饿匮乏<br>statement |陈述<br>storage | 贮藏库<br>store procedures | 存储过程<br>strategy | 战略兵法计划<br>strict | 严密的<br>styles | 文体风格<br>subgroup | 循环的<br>subset| 子集子设备<br>superclass subclass abstract class |超类子类抽象类<br>suppose | 假定<br>symbolic | 象征的符号的<br>synthetic benchmark |复合基准程序<br>system testing |系统测试<br>Systolic | 脉动阵列<br>table |表表格桌子<br>TDM(time division multiplexing)| 时分多路复用<br>technology | 工艺技术<br>terminal | 终端<br>testing phase | 测试阶段<br>theta select project theta join | θ选择投影θ连接<br>time complexity | 时间复杂度<br>timestamping |时标技术<br>Token Bus |令牌总线<br>Token Ring | 令牌环<br>toy benchmark | 简单基准程序<br>transaction | 事务记录<br>transmit  |传送<br>transport layer session layer |传输层会话层<br>traversal method |遍历方法<br>triggers store procedures| 触发器存储过程<br>ORACLE |系统<br>underflow |下溢<br>unique | 唯一的<br>unit system acceptance testing |单元测试系统测试确认测试<br>universe | 宇宙全世界<br>update | 更新<br>value  |值<br>variable | 变量<br>vertical | 垂直的<br>vertice edge | 顶点(结点) 边<br>via | 经过<br>virtual memory system |虚拟存储系统<br>WAN(wide area network) |广域网<br>waterfall model | 瀑布模型<br>white noise | 白噪声<br>write-back(copy-back) |写回法<br>write-through(store-through) | 写直达法<br>WWW(world wide web) |万维网</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
  </entry>
  <entry>
    <title>计算机英语1500词</title>
    <url>/2020/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%8B%B1%E8%AF%AD1500%E8%AF%8D/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h5 id="list"><a href="#list" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>directory</td>
<td>n. 目录，索引簿 </td>
</tr>
<tr>
<td>file</td>
<td>n. 文件；v. 保存文件</td>
</tr>
<tr>
<td>name</td>
<td>n. 名，名称；vt. 命名</td>
</tr>
<tr>
<td>format</td>
<td>n. 格式</td>
</tr>
<tr>
<td>topic</td>
<td>n. 题目，论题</td>
</tr>
<tr>
<td>string</td>
<td>n. 行，字符串</td>
</tr>
<tr>
<td>word</td>
<td>n. 字(词)，单词</td>
</tr>
<tr>
<td>character</td>
<td>n. 字符，符号，特性</td>
</tr>
<tr>
<td>text</td>
<td>n. 正文，文本</td>
</tr>
<tr>
<td>number</td>
<td>n. 数字，号码；vt. 编号</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-1"><a href="#list-1" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>program</td>
<td>n. 程序</td>
</tr>
<tr>
<td>type</td>
<td>n. 型，类型；v. 打印</td>
</tr>
<tr>
<td>field</td>
<td>n. 字段，域，栏，场 </td>
</tr>
<tr>
<td>variable</td>
<td>a. 可变的；n. 变量</td>
</tr>
<tr>
<td>value</td>
<td>n. 值 </td>
</tr>
<tr>
<td>function</td>
<td>n. 函数，功能，操作 </td>
</tr>
<tr>
<td>parameter</td>
<td>n. 参数，参变量 </td>
</tr>
<tr>
<td>set</td>
<td>v. 设置，n. 集合</td>
</tr>
<tr>
<td>list</td>
<td>n. 列表，显示，v. 打印</td>
</tr>
<tr>
<td>index</td>
<td>n. 索引，变址，指数</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-2"><a href="#list-2" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>display</td>
<td>vt. 显示，显示器</td>
</tr>
<tr>
<td>area</td>
<td>n. (区)域，面积，方面 </td>
</tr>
<tr>
<td>item</td>
<td>n. 项，项目，条款</td>
</tr>
<tr>
<td>window</td>
<td>n. 窗口</td>
</tr>
<tr>
<td>dialog</td>
<td>n. &amp; vt. 对话</td>
</tr>
<tr>
<td>mode</td>
<td>n. 态，方式，模 </td>
</tr>
<tr>
<td>box</td>
<td>n. 箱，匣，(逻辑)框</td>
</tr>
<tr>
<td>button</td>
<td>n. 按钮</td>
</tr>
<tr>
<td>tab</td>
<td>n. 制表键</td>
</tr>
<tr>
<td>line</td>
<td>n. (数据，程序)行，线路</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-3"><a href="#list-3" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>produce</td>
<td>v. 生产，制造 </td>
</tr>
<tr>
<td>procedure</td>
<td>n. 过程，程序，工序 </td>
</tr>
<tr>
<td>message</td>
<td>n. 信息，消息，电文</td>
</tr>
<tr>
<td>information</td>
<td>n. 信息，情报</td>
</tr>
<tr>
<td>database</td>
<td>n. 数据库</td>
</tr>
<tr>
<td>make</td>
<td>vt. 制造，形成，接通</td>
</tr>
<tr>
<td>control</td>
<td>v. 控制，支配，管理 </td>
</tr>
<tr>
<td>select</td>
<td>vt. 选择</td>
</tr>
<tr>
<td>selected</td>
<td>a. 精选的</td>
</tr>
<tr>
<td>selection</td>
<td>n. 选择</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-4"><a href="#list-4" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>keyboard</td>
<td>n. 键盘 </td>
</tr>
<tr>
<td>key</td>
<td>n. 键，关键字，关键码</td>
</tr>
<tr>
<td>press</td>
<td>v. 按，压</td>
</tr>
<tr>
<td>disk</td>
<td>n. 盘，磁盘 </td>
</tr>
<tr>
<td>screen</td>
<td>n. 屏幕，屏；v. 屏蔽</td>
</tr>
<tr>
<td>memory</td>
<td>n. 记忆存储，存储器</td>
</tr>
<tr>
<td>command</td>
<td>n. 命令，指令</td>
</tr>
<tr>
<td>mouse</td>
<td>n. 鼠标器</td>
</tr>
<tr>
<td>cursor</td>
<td>n. 光标</td>
</tr>
<tr>
<td>arrow</td>
<td>n. 箭头，指针 </td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-5"><a href="#list-5" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>specify</td>
<td>v. 指定，规定，确定</td>
</tr>
<tr>
<td>use</td>
<td>v. 使用，用途 </td>
</tr>
<tr>
<td>do</td>
<td>v. 做，干；n. 循环</td>
</tr>
<tr>
<td>see</td>
<td>v. 看，看出，查看</td>
</tr>
<tr>
<td>enter</td>
<td>v. 键入，送入</td>
</tr>
<tr>
<td>print</td>
<td>v. 打印，印刷 </td>
</tr>
<tr>
<td>drive</td>
<td>v. 驱动；n. 驱动器</td>
</tr>
<tr>
<td>change</td>
<td>v. 更换，改变，变动 </td>
</tr>
<tr>
<td>return</td>
<td>v. 返回，回送</td>
</tr>
<tr>
<td>choose</td>
<td>v. 挑选，选择，选定</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-6"><a href="#list-6" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>shell</td>
<td>n. 壳，外壳</td>
</tr>
<tr>
<td>margin</td>
<td>n. 余量，边缘，边际 </td>
</tr>
<tr>
<td>current</td>
<td>n. 电流</td>
</tr>
<tr>
<td>example</td>
<td>n. 例子，实例</td>
</tr>
<tr>
<td>menu</td>
<td>n. 菜单，目录</td>
</tr>
<tr>
<td>option</td>
<td>n. 任选，选择，可选项</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-7"><a href="#list-7" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>if</td>
<td>conj. 如果</td>
</tr>
<tr>
<td>by</td>
<td>prep. 凭，靠，沿 </td>
</tr>
<tr>
<td>with</td>
<td>prep. 用，与，随着 </td>
</tr>
<tr>
<td>from</td>
<td>prep. 从，来自，以来</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-8"><a href="#list-8" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>move</td>
<td>v. 移动</td>
</tr>
<tr>
<td>copy</td>
<td>n. 复制，v. 拷贝 </td>
</tr>
<tr>
<td>create</td>
<td>vt. 创立，建立</td>
</tr>
<tr>
<td>insert</td>
<td>vt. 插入</td>
</tr>
<tr>
<td>edit</td>
<td>vt. 编辑，编排，编篡</td>
</tr>
<tr>
<td>save</td>
<td>v. 保存</td>
</tr>
<tr>
<td>delete</td>
<td>vt. 删除，删去，作废</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-9"><a href="#list-9" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>on</td>
<td>ad. 接通，导电，开</td>
</tr>
<tr>
<td>off</td>
<td>ad. (设备)关着，脱离</td>
</tr>
<tr>
<td>mark</td>
<td>n. 标记；vt. 加标记</td>
</tr>
<tr>
<td>marked</td>
<td>a. 有记号的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-10"><a href="#list-10" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>help</td>
<td>v. &amp; n. 帮助</td>
</tr>
<tr>
<td>start</td>
<td>v. 起动，开始，启动</td>
</tr>
<tr>
<td>active</td>
<td>a. 激活的，活动的 </td>
</tr>
<tr>
<td>which pro</td>
<td>n. 哪个，a. 那一个</td>
</tr>
<tr>
<td>all</td>
<td>a. 全，全部；ad. 完全 </td>
</tr>
<tr>
<td>also</td>
<td>ad. &amp; conj. 也，亦，还 </td>
</tr>
<tr>
<td>without</td>
<td>prep. 没有，在…以外</td>
</tr>
<tr>
<td>then</td>
<td>ad. &amp; conj. 那时，则</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-11"><a href="#list-11" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>group</td>
<td>n. 组，群</td>
</tr>
<tr>
<td>subgroup</td>
<td>n. 分组，子群 </td>
</tr>
<tr>
<td>user</td>
<td>n. 用户 </td>
</tr>
<tr>
<td>want</td>
<td>v. 需要，应该，缺少</td>
</tr>
<tr>
<td>appear</td>
<td>vi. 出现，显现，好像 </td>
</tr>
<tr>
<td>related</td>
<td>a. 相关的 </td>
</tr>
<tr>
<td>following</td>
<td>a. 下列的，以下的</td>
</tr>
<tr>
<td>only</td>
<td>a. 唯一的，ad. 仅仅</td>
</tr>
<tr>
<td>each</td>
<td>a. &amp; ad. 各(自)，每个 </td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-12"><a href="#list-12" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>first</td>
<td>a. &amp; ad. &amp; n. 第一，首先 </td>
</tr>
<tr>
<td>right</td>
<td>a. 右边的，正确的 </td>
</tr>
<tr>
<td>left</td>
<td>a. &amp; n. 左边(的) </td>
</tr>
<tr>
<td>next</td>
<td>n. 下一次，a. 其次 </td>
</tr>
<tr>
<td>end</td>
<td>n. 结束，终点，端点</td>
</tr>
<tr>
<td>up</td>
<td>ad. 上，向上，a. 高的  </td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-13"><a href="#list-13" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>system</td>
<td>n. 系统 </td>
</tr>
<tr>
<td>contain</td>
<td>vt. 包含，包括 </td>
</tr>
<tr>
<td>time</td>
<td>n. 时间；vt. 计时 </td>
</tr>
<tr>
<td>letter</td>
<td>n. 字母，信 </td>
</tr>
<tr>
<td>data</td>
<td>n. 数据 </td>
</tr>
<tr>
<td>setting</td>
<td>n. 设置，调整 </td>
</tr>
<tr>
<td>desire</td>
<td>v. &amp; n. 期望 </td>
</tr>
<tr>
<td>position</td>
<td>n. 位置；vt. 定位 </td>
</tr>
<tr>
<td>down</td>
<td>ad. 落下，降低，减少</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-14"><a href="#list-14" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>task</td>
<td>n. 任务；v. 派给…任务 </td>
</tr>
<tr>
<td>view</td>
<td>n. &amp; v. 视图，景象 </td>
</tr>
<tr>
<td>switch</td>
<td>n. &amp; v. 开关，转换，切换 </td>
</tr>
<tr>
<td>include</td>
<td>vt. 包括，包含 </td>
</tr>
<tr>
<td>get</td>
<td>v. 得到，获得，取 </td>
</tr>
<tr>
<td>default</td>
<td>v. 缺省，预置，约定 </td>
</tr>
<tr>
<td>structure</td>
<td>n. 结构，构造，构件 </td>
</tr>
<tr>
<td>into</td>
<td>prep. 向内，进入</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-15"><a href="#list-15" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>path</td>
<td>n. 路径，通路，轨道 </td>
</tr>
<tr>
<td>blank</td>
<td>n. 空白，间隔 </td>
</tr>
<tr>
<td>open</td>
<td>v. 打开，开启，断开 </td>
</tr>
<tr>
<td>add</td>
<td>v. &amp; n. 加，增加，添 </td>
</tr>
<tr>
<td>enable</td>
<td>vt. 启动，恢复正常操作 </td>
</tr>
<tr>
<td>operation</td>
<td>n. 操作，运算，动作 </td>
</tr>
<tr>
<td>erase</td>
<td>v. 擦除，取消，删除 </td>
</tr>
<tr>
<td>filename</td>
<td>n. 文件名 </td>
</tr>
<tr>
<td>search</td>
<td>v. 检索，查询，搜索</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-16"><a href="#list-16" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>another</td>
<td>a. 另一个，别的 </td>
</tr>
<tr>
<td>last</td>
<td>a. &amp; n. 最后(的) </td>
</tr>
<tr>
<td>column</td>
<td>n. 列，柱，栏 </td>
</tr>
<tr>
<td>after</td>
<td>prep. &amp; ad. 以后，后面 </td>
</tr>
<tr>
<td>prompt</td>
<td>n. &amp; v. 提示 </td>
</tr>
<tr>
<td>two</td>
<td>n. &amp; a. 二，两，双 </td>
</tr>
<tr>
<td>execute</td>
<td>v. 实行，实施 </td>
</tr>
<tr>
<td>about</td>
<td>ad. 关于，大约，附近 </td>
</tr>
<tr>
<td>escape</td>
<td>v. 逃避，逸出，换码</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-17"><a href="#list-17" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>error</td>
<td>n. 错误，误差，差错 </td>
</tr>
<tr>
<td>currently</td>
<td>ad. 目前，现在 </td>
</tr>
<tr>
<td>extension</td>
<td>n. 扩充，延伸 </td>
</tr>
<tr>
<td>same</td>
<td>a. 同样的，相同的 </td>
</tr>
<tr>
<td>status</td>
<td>n. 状态，态，状况 </td>
</tr>
<tr>
<td>run</td>
<td>v. 运行，运转，操作 </td>
</tr>
<tr>
<td>argument</td>
<td>n. 变元，自变量 </td>
</tr>
<tr>
<td>statement</td>
<td>n. 语句，陈述，命题</td>
</tr>
<tr>
<td>shift</td>
<td>v. 转义，换档，移位</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-18"><a href="#list-18" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>store</td>
<td>n. &amp; vt. 存储，存储器 </td>
</tr>
<tr>
<td>scroll</td>
<td>vt. 上滚(卷)；n. 纸卷 </td>
</tr>
<tr>
<td>replace</td>
<td>vt. 替换，置换，代换 </td>
</tr>
<tr>
<td>macro</td>
<td>n. 宏，宏功能，宏指令 </td>
</tr>
<tr>
<td>page</td>
<td>n. 页面，页，版面 </td>
</tr>
<tr>
<td>quit</td>
<td>v. 退出，结束 </td>
</tr>
<tr>
<td>define</td>
<td>vt. 定义，规定，分辨 </td>
</tr>
<tr>
<td>reference</td>
<td>n. &amp; a. 参考；参考的 </td>
</tr>
<tr>
<td>other</td>
<td>a. 别的，另外的 </td>
</tr>
<tr>
<td>while</td>
<td>conj. 当…的时候 </td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-19"><a href="#list-19" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>pressing</td>
<td>n. &amp; a. 压制；紧急的 </td>
</tr>
<tr>
<td>restore</td>
<td>vt. 恢复，复原 </td>
</tr>
<tr>
<td>top</td>
<td>n. 顶，尖端 </td>
</tr>
<tr>
<td>how</td>
<td>ad. 如何，怎样，多么 </td>
</tr>
<tr>
<td>color</td>
<td>n. 颜色，色彩，(彩)色 </td>
</tr>
<tr>
<td>allow</td>
<td>v. 允许，容许 </td>
</tr>
<tr>
<td>block</td>
<td>n. (字，信息，数据)块 </td>
</tr>
<tr>
<td>decimal</td>
<td>n. &amp; a. 十进制；十进制的 </td>
</tr>
<tr>
<td>main</td>
<td>a. 主要的 </td>
</tr>
<tr>
<td>definition</td>
<td>n. 定义，确实，清晰度</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-20"><a href="#list-20" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>between</td>
<td>prep. 在…之间，中间 </td>
</tr>
<tr>
<td>optional</td>
<td>a. 任选的，可选的 </td>
</tr>
<tr>
<td>date</td>
<td>n. 日期 </td>
</tr>
<tr>
<td>remove</td>
<td>v. 除去，移动</td>
</tr>
<tr>
<td>label</td>
<td>n. 标签，标号，标识符 </td>
</tr>
<tr>
<td>within</td>
<td>prep. 在…以内 </td>
</tr>
<tr>
<td>issue</td>
<td>v. 发行，出版，流出 </td>
</tr>
<tr>
<td>different</td>
<td>a. 不同的，各种各样的 </td>
</tr>
<tr>
<td>available</td>
<td>a. 可用的 </td>
</tr>
<tr>
<td>returned</td>
<td>a. 退回的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-21"><a href="#list-21" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>associate</td>
<td>v. 相联，联想，关联 </td>
</tr>
<tr>
<td>attribute</td>
<td>n. 属性，标志，表征 </td>
</tr>
<tr>
<td>dos</td>
<td>磁盘操作系统 </td>
</tr>
<tr>
<td>before</td>
<td>prep. 以前，前，先 </td>
</tr>
<tr>
<td>order</td>
<td>n. &amp; vt. 指令，次序；排序 </td>
</tr>
<tr>
<td>modify</td>
<td>vt. 修改，改变，变址 </td>
</tr>
<tr>
<td>array</td>
<td>n. 数组，阵列</td>
</tr>
<tr>
<td>note</td>
<td>n. 注解，注释 </td>
</tr>
<tr>
<td>locate</td>
<td>vt. 定位</td>
</tr>
<tr>
<td>video</td>
<td>n. 视频，电视</td>
</tr>
<tr>
<td>printer</td>
<td>n. 打印机，印刷机</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-22"><a href="#list-22" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>bar</td>
<td>n. 条，杆，棒</td>
</tr>
<tr>
<td>bottom</td>
<td>n. &amp; a. 底，基础；底下的</td>
</tr>
<tr>
<td>carriage</td>
<td>n. 滑架，托架 </td>
</tr>
<tr>
<td>content</td>
<td>n. 含量，容量，内容 </td>
</tr>
<tr>
<td>either</td>
<td>a. &amp; pro n. 任何一个，各 </td>
</tr>
<tr>
<td>ok</td>
<td>ad. &amp; a. 对，好；全对 </td>
</tr>
<tr>
<td>space</td>
<td>n. 空格键，空间 </td>
</tr>
<tr>
<td>editor</td>
<td>n. 编辑程序 </td>
</tr>
<tr>
<td>exist</td>
<td>vi. 存在，生存，有 </td>
</tr>
<tr>
<td>scope</td>
<td>n. 范围，显示器</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-23"><a href="#list-23" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>paragraph</td>
<td>n. 段(落)，节，短讯 </td>
</tr>
<tr>
<td>multi</td>
<td>(词头)多 </td>
</tr>
<tr>
<td>clear</td>
<td>v. 清除，弄干净 </td>
</tr>
<tr>
<td>exit</td>
<td>n. &amp; vi. 出口；退出 </td>
</tr>
<tr>
<td>report</td>
<td>vt. &amp; n. 报告，报表 </td>
</tr>
<tr>
<td>execution</td>
<td>n. 执行 </td>
</tr>
<tr>
<td>backup</td>
<td>n. 备份，后备，后援 </td>
</tr>
<tr>
<td>version</td>
<td>n. 版本 </td>
</tr>
<tr>
<td>find</td>
<td>v. 寻找，发现 </td>
</tr>
<tr>
<td>pointer</td>
<td>n. 指针，指示字 </td>
</tr>
<tr>
<td>subset</td>
<td>n. 子集，子设备 </td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-24"><a href="#list-24" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>full</td>
<td>a. &amp; ad. &amp; n. 全(的)，满 </td>
</tr>
<tr>
<td>check</td>
<td>v. 校对，栓查，核算 </td>
</tr>
<tr>
<td>should</td>
<td>v. &amp; aux. 应当，该 </td>
</tr>
<tr>
<td>single</td>
<td>a. &amp; n. 单个的；一个，单 </td>
</tr>
<tr>
<td>positioning</td>
<td>n. 定位 </td>
</tr>
<tr>
<td>provide</td>
<td>v. 提供 </td>
</tr>
<tr>
<td>title</td>
<td>n. 题目，标题 </td>
</tr>
<tr>
<td>expression</td>
<td>n. 表达式 </td>
</tr>
<tr>
<td>through</td>
<td>prep. &amp; ad. 通过，直通</td>
</tr>
<tr>
<td>toggle</td>
<td>n. &amp; v. 触发器；系紧</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-25"><a href="#list-25" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>code</td>
<td>n. 码，代码，编码 </td>
</tr>
<tr>
<td>such</td>
<td>a. &amp; pro n. 这样的，如此 </td>
</tr>
<tr>
<td>beginning</td>
<td>n. 起点，初 </td>
</tr>
<tr>
<td>guide</td>
<td>n. 向导，指南，入门 </td>
</tr>
<tr>
<td>tree</td>
<td>n. 树，语法树 </td>
</tr>
<tr>
<td>environment</td>
<td>n. 环境 </td>
</tr>
<tr>
<td>but</td>
<td>但是，可是，除非，不过 </td>
</tr>
<tr>
<td>device</td>
<td>n. 设备，器件，装置 </td>
</tr>
<tr>
<td>highlight</td>
<td>n. 增强亮度，提示区</td>
</tr>
<tr>
<td>call</td>
<td>v. 调用，访问，呼叫</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-26"><a href="#list-26" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>continue</td>
<td>v. 连续，继续 </td>
</tr>
<tr>
<td>indicate</td>
<td>vt. 指示，表示 </td>
</tr>
<tr>
<td>until</td>
<td>prep. 到…为止，直到 </td>
</tr>
<tr>
<td>begin</td>
<td>v. 开始，着手，开端 </td>
</tr>
<tr>
<td>place</td>
<td>vt. 放，位，地点 </td>
</tr>
<tr>
<td>rename</td>
<td>vt. 更名，改名 </td>
</tr>
<tr>
<td>swap</td>
<td>v. 交换，调动 </td>
</tr>
<tr>
<td>work</td>
<td>n. 工作 </td>
</tr>
<tr>
<td>remain</td>
<td>vi. 剩下，留下，仍然 </td>
</tr>
<tr>
<td>close</td>
<td>v. &amp; a. 关闭，闭合；紧密的 </td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-27"><a href="#list-27" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>profile</td>
<td>n. 简要，剖面，概貌 </td>
</tr>
<tr>
<td>unless</td>
<td>conj. 除非 </td>
</tr>
<tr>
<td>so pro</td>
<td>n. &amp; conj. 如此，这样 </td>
</tr>
<tr>
<td>except</td>
<td>prep. 除…之外，除非 </td>
</tr>
<tr>
<td>turn</td>
<td>v. &amp; n. 转，转动；圈，匝 </td>
</tr>
<tr>
<td>back</td>
<td>n. 背面，反向，底座 </td>
</tr>
<tr>
<td>sure</td>
<td>a. &amp; ad. 确实的；的确 </td>
</tr>
<tr>
<td>section</td>
<td>n. 节，段，区域 </td>
</tr>
<tr>
<td>follow</td>
<td>v. 跟随，跟踪</td>
</tr>
<tr>
<td>split</td>
<td>v. 分开，分离</td>
</tr>
<tr>
<td>need</td>
<td>v. 必须，需要</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-28"><a href="#list-28" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>access</td>
<td>n. 存取，选取，接近 </td>
</tr>
<tr>
<td>additional</td>
<td>a. 附加的，辅助的 </td>
</tr>
<tr>
<td>cancel</td>
<td>v. 删除，取消，作废 </td>
</tr>
<tr>
<td>document</td>
<td>n. 文献，资料，文件 </td>
</tr>
<tr>
<td>case</td>
<td>n. 情况，场合</td>
</tr>
<tr>
<td>go</td>
<td>vi. 运行，达到 </td>
</tr>
<tr>
<td>load</td>
<td>n. &amp; v. 装入，负载，寄存 </td>
</tr>
<tr>
<td>try</td>
<td>n. (尝)试，试验 </td>
</tr>
<tr>
<td>size</td>
<td>n. 尺寸，大小，容量</td>
</tr>
<tr>
<td>entire</td>
<td>a. &amp; n. 完全的；总体</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-29"><a href="#list-29" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>leave</td>
<td>v. 离开，留下 </td>
</tr>
<tr>
<td>history</td>
<td>n. 历史 </td>
</tr>
<tr>
<td>second</td>
<td>n. &amp; a. 秒，第二(的) </td>
</tr>
<tr>
<td>reflow</td>
<td>v. &amp; n. 回流，逆流 </td>
</tr>
<tr>
<td>output</td>
<td>n. 输出，输出设备 </td>
</tr>
<tr>
<td>out</td>
<td>n. &amp; a. 输入，在外 </td>
</tr>
<tr>
<td>both</td>
<td>a. &amp; ad. 两，双，都 </td>
</tr>
<tr>
<td>install</td>
<td>vt. 安装 </td>
</tr>
<tr>
<td>source</td>
<td>n. 源，电源，源点 </td>
</tr>
<tr>
<td>way</td>
<td>n. 路线，途径，状态 </td>
</tr>
<tr>
<td>assign</td>
<td>vt. 赋值，指定，分派</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-30"><a href="#list-30" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>support</td>
<td>vt. 支援，支持，配套 </td>
</tr>
<tr>
<td>specific</td>
<td>a. 特殊的，具体的 </td>
</tr>
<tr>
<td>join</td>
<td>v. &amp; n. 连接，并(运算) </td>
</tr>
<tr>
<td>expand</td>
<td>v. 扩充，扩展，展开 </td>
</tr>
<tr>
<td>like</td>
<td>a. 类似的，同样的 </td>
</tr>
<tr>
<td>diskette</td>
<td>n. 软磁盘，软盘片 </td>
</tr>
<tr>
<td>skip</td>
<td>v. 跳跃(定位)，跳过 </td>
</tr>
<tr>
<td>application</td>
<td>n. 应用 </td>
</tr>
<tr>
<td>confirmation</td>
<td>n. 认可 </td>
</tr>
<tr>
<td>whether</td>
<td>conj. 无论，不管 </td>
</tr>
<tr>
<td>hold</td>
<td>v. 保持 </td>
</tr>
<tr>
<td>click</td>
<td>n. “卡搭”声，插销 </td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-31"><a href="#list-31" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>byte</td>
<td>n. (二进制的)字节 </td>
</tr>
<tr>
<td>abbreviate</td>
<td>vt. 缩写，省略 </td>
</tr>
<tr>
<td>show</td>
<td>v. 显示，呈现，出示 </td>
</tr>
<tr>
<td>otherwise</td>
<td>ad. &amp; a. 另外 </td>
</tr>
<tr>
<td>working</td>
<td>n. 工作，操作，作业 </td>
</tr>
<tr>
<td>delimiter</td>
<td>n. 定界符，分界符 </td>
</tr>
<tr>
<td>location</td>
<td>n. 定位，(存储器)单元 </td>
</tr>
<tr>
<td>perform</td>
<td>v. 执行，完成 </td>
</tr>
<tr>
<td>graphic</td>
<td>n. &amp; a. 图形；图形的 </td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-32"><a href="#list-32" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>confirm</td>
<td>vt. 证实，确认 </td>
</tr>
<tr>
<td>sort</td>
<td>v. 分类，排序 </td>
</tr>
<tr>
<td>clause</td>
<td>n. 条款，项目，子句 </td>
</tr>
<tr>
<td>once</td>
<td>ad. &amp; n. 只一次，一旦 </td>
</tr>
<tr>
<td>however</td>
<td>conj. 然而，可是 </td>
</tr>
<tr>
<td>extend</td>
<td>v. 扩充 </td>
</tr>
<tr>
<td>look</td>
<td>v. 看，查看 </td>
</tr>
<tr>
<td>starting</td>
<td>a. 起始的 </td>
</tr>
<tr>
<td>now</td>
<td>ad. &amp; n. 此刻，现在 </td>
</tr>
<tr>
<td>original</td>
<td>n. &amp; a. 原文；原(初)始的 </td>
</tr>
<tr>
<td>correspond</td>
<td>vi. 通信(联系) </td>
</tr>
<tr>
<td>property</td>
<td>n. 性(质)，特征</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-33"><a href="#list-33" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>several</td>
<td>a. &amp; n. 若干个，几个 </td>
</tr>
<tr>
<td>learn</td>
<td>v. 学习，训练 </td>
</tr>
<tr>
<td>cause</td>
<td>n. 原因，理由 </td>
</tr>
<tr>
<td>bracket</td>
<td>n. (方)括号，等级 </td>
</tr>
<tr>
<td>omit</td>
<td>vt. 省略，删去，遗漏 </td>
</tr>
<tr>
<td>running</td>
<td>a. 运行着的，游动的 </td>
</tr>
<tr>
<td>sub-directory</td>
<td>n. 子目录 </td>
</tr>
<tr>
<td>edge</td>
<td>n. 棱，边，边缘，界限 </td>
</tr>
<tr>
<td>form</td>
<td>n. 格式，表格，方式 </td>
</tr>
<tr>
<td>instruction</td>
<td>n. 指令，指导</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-34"><a href="#list-34" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>ascii</td>
<td>n. 美国信息交换标准码 </td>
</tr>
<tr>
<td>below</td>
<td>a. &amp; prep. 下列的；低于 </td>
</tr>
<tr>
<td>standard</td>
<td>n. 标准 </td>
</tr>
<tr>
<td>occurrence</td>
<td>n. 出现，发生 </td>
</tr>
<tr>
<td>lock</td>
<td>n. &amp; v. 锁，封闭；自动跟踪 </td>
</tr>
<tr>
<td>append</td>
<td>vt. 附加，增补 </td>
</tr>
<tr>
<td>destination</td>
<td>n. 目的地，接收站 </td>
</tr>
<tr>
<td>password</td>
<td>n. 口令，保密字 </td>
</tr>
<tr>
<td>point</td>
<td>n. 点，小数点，句号 </td>
</tr>
<tr>
<td>variety</td>
<td>n. 变化，种类，品种 </td>
</tr>
<tr>
<td>many</td>
<td>a. &amp; n. 许多，多数</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-35"><a href="#list-35" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>buffer</td>
<td>n. 缓冲器 </td>
</tr>
<tr>
<td>useful</td>
<td>a. 有用的 </td>
</tr>
<tr>
<td>object</td>
<td>n. 对象，目标，物体 </td>
</tr>
<tr>
<td>again</td>
<td>ad. 再，又，重新，也 </td>
</tr>
<tr>
<td>operating</td>
<td>a. 操作的，控制的 </td>
</tr>
<tr>
<td>carry</td>
<td>v. 进位，带 </td>
</tr>
<tr>
<td>update</td>
<td>v. 更新，修改，校正 </td>
</tr>
<tr>
<td>moving</td>
<td>n. &amp; a. 活动的，自动的 </td>
</tr>
<tr>
<td>coprocessor</td>
<td>n. 协同处理器</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-36"><a href="#list-36" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>overlay</td>
<td>v. 覆盖，重叠 </td>
</tr>
<tr>
<td>practice</td>
<td>n. 实习，实践 </td>
</tr>
<tr>
<td>navigation</td>
<td>n. 导航 </td>
</tr>
<tr>
<td>automatically</td>
<td>ad. 自动地，机械地 </td>
</tr>
<tr>
<td>total</td>
<td>n. &amp; v. 总数；总计 </td>
</tr>
<tr>
<td>previous</td>
<td>a. 早先的，上述的 </td>
</tr>
<tr>
<td>software</td>
<td>n. 软件 </td>
</tr>
<tr>
<td>shortcut</td>
<td>n. 近路，捷径 </td>
</tr>
<tr>
<td>long</td>
<td>a. 长的，远的 </td>
</tr>
<tr>
<td>unique</td>
<td>a. 唯一的，独特的 </td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-37"><a href="#list-37" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>part</td>
<td>n. 部分，零件 </td>
</tr>
<tr>
<td>updated</td>
<td>a. 适时的，更新的 </td>
</tr>
<tr>
<td>internal</td>
<td>a. 内部的 </td>
</tr>
<tr>
<td>fill</td>
<td>v. 填充 </td>
</tr>
<tr>
<td>basic</td>
<td>n. &amp; a. 基本；基本的 </td>
</tr>
<tr>
<td>math</td>
<td>n. 数学 </td>
</tr>
<tr>
<td>since</td>
<td>prep. 自从…以来 </td>
</tr>
<tr>
<td>making</td>
<td>n. 制造，构造 </td>
</tr>
<tr>
<td>center</td>
<td>n. 中心，中央</td>
</tr>
<tr>
<td>keyword</td>
<td>n. 关键字(词)</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-38"><a href="#list-38" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>action</td>
<td>n. 操作，运算 </td>
</tr>
<tr>
<td>condition</td>
<td>n. 条件，情况；vt. 调节 </td>
</tr>
<tr>
<td>quick</td>
<td>a. &amp; ad. 快速的，灵敏的 </td>
</tr>
<tr>
<td>assigned</td>
<td>a. 指定的，赋值的 </td>
</tr>
<tr>
<td>give</td>
<td>vt. 给出，赋予，发生 </td>
</tr>
<tr>
<td>large</td>
<td>a. (巨)大的，大量的 </td>
</tr>
<tr>
<td>chapter</td>
<td>n. 章，段 </td>
</tr>
<tr>
<td>computer</td>
<td>n. 计算机 </td>
</tr>
<tr>
<td>complete</td>
<td>v. &amp; a. 完成；完整的 </td>
</tr>
<tr>
<td>past</td>
<td>a. 过去的，结束的 </td>
</tr>
<tr>
<td>match</td>
<td>v. 比较，匹配，符合</td>
</tr>
<tr>
<td>recover</td>
<td>v. 恢复，回收</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-39"><a href="#list-39" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>always</td>
<td>ad. 总是，一直，始终 </td>
</tr>
<tr>
<td>require</td>
<td>v. 需要，要求 </td>
</tr>
<tr>
<td>opening</td>
<td>n. 打开，断路，孔 </td>
</tr>
<tr>
<td>network</td>
<td>n. &amp; vt. 网络；联网 </td>
</tr>
<tr>
<td>sign</td>
<td>n. 符号，信号，记号 </td>
</tr>
<tr>
<td>release</td>
<td>vt. &amp; n. 释放，核发，版 </td>
</tr>
<tr>
<td>three</td>
<td>a. &amp; n. 三(的) </td>
</tr>
<tr>
<td>recall</td>
<td>vt. 撤消，复活，检索 </td>
</tr>
<tr>
<td>deletion</td>
<td>n. 删去(部分)，删除 </td>
</tr>
<tr>
<td>fixed</td>
<td>a. 固定的，不变的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-40"><a href="#list-40" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>amount</td>
<td>vt. &amp; n. 总计；合计 </td>
</tr>
<tr>
<td>alias</td>
<td>n. 别名，代号，标记 </td>
</tr>
<tr>
<td>quote</td>
<td>n. &amp; v. 引号；加引号 </td>
</tr>
<tr>
<td>correct</td>
<td>a. &amp; vt. 正确的；改正 </td>
</tr>
<tr>
<td>else</td>
<td>ad. &amp; conj. 否则，此外 </td>
</tr>
<tr>
<td>maximum</td>
<td>n. &amp; a. 最大(的)，最高 </td>
</tr>
<tr>
<td>under</td>
<td>prep. 在…下面(之下) </td>
</tr>
<tr>
<td>take</td>
<td>v. 取，拿 </td>
</tr>
<tr>
<td>switching</td>
<td>n. 开关，转接，交换 </td>
</tr>
<tr>
<td>element</td>
<td>n. 元件，元素，码元</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-41"><a href="#list-41" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>modification</td>
<td>n. 改变，修改 </td>
</tr>
<tr>
<td>modified</td>
<td>a. 修改的，变更的 </td>
</tr>
<tr>
<td>input</td>
<td>n. 输入，输入设备 </td>
</tr>
<tr>
<td>uppercase</td>
<td>n. 大写字母 </td>
</tr>
<tr>
<td>plus</td>
<td>prep. 加，加上，外加 </td>
</tr>
<tr>
<td>found</td>
<td>v. 建立，创办 </td>
</tr>
<tr>
<td>debug</td>
<td>vt. 调试 </td>
</tr>
<tr>
<td>force</td>
<td>v. &amp; n. 强制；压力，强度 </td>
</tr>
<tr>
<td>lowercase</td>
<td>n. 下档，小写体 </td>
</tr>
<tr>
<td>just</td>
<td>ad. 恰好 </td>
</tr>
<tr>
<td>undo</td>
<td>vt. 取消，废除</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-42"><a href="#list-42" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>environ</td>
<td>vt. 围绕，包围 </td>
</tr>
<tr>
<td>why</td>
<td>ad. 为什么 </td>
</tr>
<tr>
<td>temporary</td>
<td>a. 暂时的，临时的 </td>
</tr>
<tr>
<td>put</td>
<td>v. 存放(记录)，放置 </td>
</tr>
<tr>
<td>instead</td>
<td>ad. (来)代替，当作 </td>
</tr>
<tr>
<td>encounter</td>
<td>v. &amp; n. 遇到，碰到 </td>
</tr>
<tr>
<td>across</td>
<td>prep. 交叉，越过 </td>
</tr>
<tr>
<td>matching</td>
<td>n. 匹配，调整 </td>
</tr>
<tr>
<td>wildcard</td>
<td>n. 通配符 </td>
</tr>
<tr>
<td>spill</td>
<td>v. 漏出，溢出，漏失 </td>
</tr>
<tr>
<td>level</td>
<td>n. 水平，级，层次</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-43"><a href="#list-43" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>browse</td>
<td>v. 浏览 </td>
</tr>
<tr>
<td>speech</td>
<td>n. 说话，言语，语音 </td>
</tr>
<tr>
<td>occur</td>
<td>vi. 发生，出现，存在 </td>
</tr>
<tr>
<td>memo</td>
<td>n. 备忘录 </td>
</tr>
<tr>
<td>prior</td>
<td>a. 先验的，优先的 </td>
</tr>
<tr>
<td>loaded</td>
<td>a. 有负载的 </td>
</tr>
<tr>
<td>length</td>
<td>n. (字，记录，块)长度 </td>
</tr>
<tr>
<td>round</td>
<td>v. 舍入，四舍五入 </td>
</tr>
<tr>
<td>variant</td>
<td>n. &amp; a. 变体，易变的 </td>
</tr>
<tr>
<td>floppy</td>
<td>n. 软磁盘 </td>
</tr>
<tr>
<td>machine</td>
<td>n. 机器，计算机</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-44"><a href="#list-44" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>square</td>
<td>n. &amp; a. 正方形；方形的 </td>
</tr>
<tr>
<td>supply</td>
<td>vt. &amp; n. 电源，供给 </td>
</tr>
<tr>
<td>home</td>
<td>n. &amp; a. 家，出发点 </td>
</tr>
<tr>
<td>normal</td>
<td>a. &amp; n. 正常，标准 </td>
</tr>
<tr>
<td>onto</td>
<td>prep. 向…，到…上 </td>
</tr>
<tr>
<td>during</td>
<td>prep. 在…期间 </td>
</tr>
<tr>
<td>module</td>
<td>n. 模块(程序设计) </td>
</tr>
<tr>
<td>monochrome</td>
<td>n. 单色 </td>
</tr>
<tr>
<td>assistance</td>
<td>n. 辅助设备，帮助 </td>
</tr>
<tr>
<td>tell</td>
<td>n. 讲，说，教，计算</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-45"><a href="#list-45" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>library</td>
<td>n. (程序…)库，图书馆 </td>
</tr>
<tr>
<td>demonstration</td>
<td>n. (公开)表演，示范 </td>
</tr>
<tr>
<td>stack</td>
<td>n. 栈，堆栈，存储栈 </td>
</tr>
<tr>
<td>even</td>
<td>a. &amp; ad. 偶数的；甚至 </td>
</tr>
<tr>
<td>evaluate</td>
<td>v. 估计，估算，求值 </td>
</tr>
<tr>
<td>times</td>
<td>n. 次数 </td>
</tr>
<tr>
<td>previously</td>
<td>ad. 以前，预先 </td>
</tr>
<tr>
<td>directly</td>
<td>ad. 直接地，立即 </td>
</tr>
<tr>
<td>logical</td>
<td>a. 逻辑的，逻辑”或” </td>
</tr>
<tr>
<td>template</td>
<td>n. 标准框，样板，模板 </td>
</tr>
<tr>
<td>calling</td>
<td>n. 呼叫，调用，调入</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-46"><a href="#list-46" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>later</td>
<td>a. 更后的，后面的 </td>
</tr>
<tr>
<td>driver</td>
<td>n. 驱动器，驱动程序 </td>
</tr>
<tr>
<td>therefore</td>
<td>ad. &amp; conj. 因此，所以 </td>
</tr>
<tr>
<td>saving</td>
<td>a. 保存的 </td>
</tr>
<tr>
<td>detail</td>
<td>n. 元件，零件，细节 </td>
</tr>
<tr>
<td>linker</td>
<td>n. 连接程序 </td>
</tr>
<tr>
<td>loop</td>
<td>n. 圈，环；(程序)循环，回路 </td>
</tr>
<tr>
<td>process</td>
<td>vt. 处理，进程，加工 </td>
</tr>
<tr>
<td>scheme</td>
<td>n. 方案，计划，图 </td>
</tr>
<tr>
<td>every</td>
<td>a. 每个，全体，所有的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-47"><a href="#list-47" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>refer</td>
<td>v. 访问，引用，涉及 </td>
</tr>
<tr>
<td>possible</td>
<td>a. 可能的，潜在的 </td>
</tr>
<tr>
<td>above</td>
<td>a. 在…之上，大于 </td>
</tr>
<tr>
<td>overview</td>
<td>n. 综述，概要 </td>
</tr>
<tr>
<td>result</td>
<td>n. 结果 </td>
</tr>
<tr>
<td>syntax</td>
<td>n. 语法，文法，句法 </td>
</tr>
<tr>
<td>abbreviation</td>
<td>n. 缩短，省略，简称 </td>
</tr>
<tr>
<td>bios</td>
<td>n. 基本输入/输出系统 </td>
</tr>
<tr>
<td>hidden</td>
<td>a. 隐藏的，秘密的 </td>
</tr>
<tr>
<td>null</td>
<td>n. &amp; a. 空(的)，零(的)</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-48"><a href="#list-48" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>send</td>
<td>v. 发送 </td>
</tr>
<tr>
<td>private</td>
<td>a. 专用的，私人的 </td>
</tr>
<tr>
<td>hard</td>
<td>a. 硬的 </td>
</tr>
<tr>
<td>hardware</td>
<td>n. 硬件 </td>
</tr>
<tr>
<td>say</td>
<td>v. 说，显示，假定 </td>
</tr>
<tr>
<td>equal</td>
<td>vt. &amp; n. 等于，相等；等号 </td>
</tr>
<tr>
<td>pack</td>
<td>n. 压缩，包裹 </td>
</tr>
<tr>
<td>minus</td>
<td>a. &amp; n. 负的；负数，减 </td>
</tr>
<tr>
<td>alternate</td>
<td>a. 交替的，备用的 </td>
</tr>
<tr>
<td>collapse</td>
<td>v. 崩溃，破裂 </td>
</tr>
<tr>
<td>corner</td>
<td>n. 角，角落，转换 </td>
</tr>
<tr>
<td>present</td>
<td>a. &amp; v. 现行的；提供</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-49"><a href="#list-49" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>interpreter</td>
<td>n. 解释程序，翻译机 </td>
</tr>
<tr>
<td>advance</td>
<td>v. &amp; n. 进步，提高；进展 </td>
</tr>
<tr>
<td>forward</td>
<td>a. 正向的 </td>
</tr>
<tr>
<td>fast</td>
<td>a. &amp; ad. 快速的 </td>
</tr>
<tr>
<td>special</td>
<td>a. 专用的，特殊的 </td>
</tr>
<tr>
<td>slash</td>
<td>n. 斜线 </td>
</tr>
<tr>
<td>utility</td>
<td>n. &amp; a. 实用程序；实用性 </td>
</tr>
<tr>
<td>regardless</td>
<td>a. 不注意的，不考虑的 </td>
</tr>
<tr>
<td>disable</td>
<td>vt. 禁止，停用 </td>
</tr>
<tr>
<td>compatible</td>
<td>a. 可兼容的，可共存的 </td>
</tr>
<tr>
<td>depend</td>
<td>vi. 随…而定，取决于</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-50"><a href="#list-50" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>empty</td>
<td>a. 空，零，未占用 </td>
</tr>
<tr>
<td>alphabetical</td>
<td>a. 字母(表)的，abc的 </td>
</tr>
<tr>
<td>branch</td>
<td>n. 分支，支线；v. 转换 </td>
</tr>
<tr>
<td>resume</td>
<td>v. 重(新)开(始) </td>
</tr>
<tr>
<td>multiple</td>
<td>a. 多次的，复杂的 </td>
</tr>
<tr>
<td>monitor</td>
<td>n. 监视器，监督程序 </td>
</tr>
<tr>
<td>configuration</td>
<td>n. 配置 </td>
</tr>
<tr>
<td>replacement</td>
<td>n. 替换，置换，更新 </td>
</tr>
<tr>
<td>required</td>
<td>a. 需要的 </td>
</tr>
<tr>
<td>macros</td>
<td>n. 宏命令(指令) </td>
</tr>
<tr>
<td>table</td>
<td>n. 表 </td>
</tr>
<tr>
<td>loss</td>
<td>n. 损耗，损失</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-51"><a href="#list-51" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>batch</td>
<td>n. 批，批量，成批 </td>
</tr>
<tr>
<td>exact</td>
<td>a. 正确的 </td>
</tr>
<tr>
<td>aboveboard</td>
<td>ad. &amp; a. 照直，公开的 </td>
</tr>
<tr>
<td>activate</td>
<td>vt. &amp; n. 使激活，驱动 </td>
</tr>
<tr>
<td>around</td>
<td>ad. &amp; prep. 周围，围绕 </td>
</tr>
<tr>
<td>slow</td>
<td>a. &amp; ad. 慢速的 </td>
</tr>
<tr>
<td>floating</td>
<td>a. 浮动的，浮点的 </td>
</tr>
<tr>
<td>refresh</td>
<td>v. 刷新，更新，再生 </td>
</tr>
<tr>
<td>stop</td>
<td>v. 停止，停机 </td>
</tr>
<tr>
<td>pass</td>
<td>v. 传送，传递，遍(数) </td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-52"><a href="#list-52" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>public</td>
<td>a. 公用的，公共的 </td>
</tr>
<tr>
<td>eject</td>
<td>n. 弹出 </td>
</tr>
<tr>
<td>ignore</td>
<td>vt. 不管，忽略不计 </td>
</tr>
<tr>
<td>share</td>
<td>v. 共享，共用 </td>
</tr>
<tr>
<td>sequence</td>
<td>n. 顺序，时序，序列 </td>
</tr>
<tr>
<td>consist</td>
<td>vi. 符合，包括 </td>
</tr>
<tr>
<td>step</td>
<td>n. 步，步骤，步长，档 </td>
</tr>
<tr>
<td>double</td>
<td>a. 两倍的，成双的 </td>
</tr>
<tr>
<td>come</td>
<td>vi. 来，到，出现 </td>
</tr>
<tr>
<td>lower</td>
<td>a. 下部的，低级的 </td>
</tr>
<tr>
<td>describe</td>
<td>vt. 描述，沿…运行</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-53"><a href="#list-53" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>count</td>
<td>v. 计数，计算 </td>
</tr>
<tr>
<td>pop</td>
<td>v. 上托，弹出(栈) </td>
</tr>
<tr>
<td>valid</td>
<td>a. 有效的 </td>
</tr>
<tr>
<td>suspend</td>
<td>v. 中止，暂停，挂起 </td>
</tr>
<tr>
<td>enhance</td>
<td>vt. 增强，放大，夸张 </td>
</tr>
<tr>
<td>separate</td>
<td>v. &amp; a. 分隔，分离，各自的 </td>
</tr>
<tr>
<td>echo</td>
<td>n. 回波，反射波 </td>
</tr>
<tr>
<td>necessary</td>
<td>a. 必要的，必然的 </td>
</tr>
<tr>
<td>greater than</td>
<td>大于 </td>
</tr>
<tr>
<td>able</td>
<td>a. 能…的，有能力的 </td>
</tr>
<tr>
<td>marking</td>
<td>n. 标记，记号，传号 </td>
</tr>
<tr>
<td>ask</td>
<td>v. 请求，需要 </td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-54"><a href="#list-54" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>bring</td>
<td>v. 引起，产生，拿来 </td>
</tr>
<tr>
<td>warning</td>
<td>n. &amp; a. 报警，预告 </td>
</tr>
<tr>
<td>less</td>
<td>a. &amp; ad. 更小，更少 </td>
</tr>
<tr>
<td>whose pro</td>
<td>n. 谁的 </td>
</tr>
<tr>
<td>comment</td>
<td>n. &amp; vi. 注解，注释 </td>
</tr>
<tr>
<td>effect</td>
<td>n. 效率，作用，效能 </td>
</tr>
<tr>
<td>expanding</td>
<td>a. 扩展的，扩充的 </td>
</tr>
<tr>
<td>on-line</td>
<td>a. 联机的 </td>
</tr>
<tr>
<td>reorder</td>
<td>v. (按序)排列，排序 </td>
</tr>
<tr>
<td>direct</td>
<td>a. 直接的 </td>
</tr>
<tr>
<td>enclose</td>
<td>vt. 封闭，密封，围住，包装</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-55"><a href="#list-55" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>reset</td>
<td>vt. 复位，置”0” </td>
</tr>
<tr>
<td>various</td>
<td>a. 不同的，各种各样的 </td>
</tr>
<tr>
<td>paper</td>
<td>n. 纸，文件，论文 </td>
</tr>
<tr>
<td>prevent</td>
<td>v. 防止，预防 </td>
</tr>
<tr>
<td>side</td>
<td>n. (旁)边，面，侧(面) </td>
</tr>
<tr>
<td>push</td>
<td>v. 推，按，压，进(栈) </td>
</tr>
<tr>
<td>programming</td>
<td>n. 程序设计，编程序 </td>
</tr>
<tr>
<td>upper</td>
<td>a. 上的，上部的 </td>
</tr>
<tr>
<td>row</td>
<td>n. 行 </td>
</tr>
<tr>
<td>pressed</td>
<td>a. 加压的，压缩的 </td>
</tr>
<tr>
<td>temporarily</td>
<td>ad. 暂时</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-56"><a href="#list-56" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>day</td>
<td>n. 日，天，白天，时代 </td>
</tr>
<tr>
<td>repaint</td>
<td>vt. 重画 </td>
</tr>
<tr>
<td>redefine</td>
<td>vt. 重新规定(定义) </td>
</tr>
<tr>
<td>relation</td>
<td>n. 关系，关系式 </td>
</tr>
<tr>
<td>dimension</td>
<td>n. 尺寸，维，因次 </td>
</tr>
<tr>
<td>boundary</td>
<td>n. 边界，界限，约束 </td>
</tr>
<tr>
<td>zoom</td>
<td>v. 变焦距 </td>
</tr>
<tr>
<td>initialize</td>
<td>v. 初始化 </td>
</tr>
<tr>
<td>personal</td>
<td>a. 个人的，自身的 </td>
</tr>
<tr>
<td>hello int. &amp;</td>
<td>v. 喂！；呼叫</td>
</tr>
<tr>
<td>true</td>
<td>a. &amp; n. 真，实，选中</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-57"><a href="#list-57" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>wish</td>
<td>v. &amp; n. 祝愿，希望 </td>
</tr>
<tr>
<td>font</td>
<td>n. 铅字，字形 </td>
</tr>
<tr>
<td>know</td>
<td>v. 知道，了解，认识 </td>
</tr>
<tr>
<td>convert</td>
<td>v. 转换，变换 </td>
</tr>
<tr>
<td>global</td>
<td>n. 全局，全程，全局符 </td>
</tr>
<tr>
<td>still</td>
<td>a. &amp; n. &amp; v. 静止的；静；平静 </td>
</tr>
<tr>
<td>installation</td>
<td>n. 安装，装配 </td>
</tr>
<tr>
<td>invoke</td>
<td>vt. 调用，请求 </td>
</tr>
<tr>
<td>interactive</td>
<td>a. 交互式，交互的 </td>
</tr>
<tr>
<td>described</td>
<td>a. 被看到的，被发现的 </td>
</tr>
<tr>
<td>century</td>
<td>n. 世纪</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-58"><a href="#list-58" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>literal</td>
<td>a. 文字的 </td>
</tr>
<tr>
<td>rather</td>
<td>ad. 宁可，有点 </td>
</tr>
<tr>
<td>exclusive</td>
<td>a. 排斥，排它性 </td>
</tr>
<tr>
<td>marker</td>
<td>n. 记号，标记，标志 </td>
</tr>
<tr>
<td>wait</td>
<td>v. 等待 </td>
</tr>
<tr>
<td>appropriate</td>
<td>a. 适当的，合适的 </td>
</tr>
<tr>
<td>fit</td>
<td>v. &amp; n. 适合，装配；非特 </td>
</tr>
<tr>
<td>adapter</td>
<td>n. 适配器，转换器 </td>
</tr>
<tr>
<td>filter</td>
<td>n. 滤波器，滤光材料 </td>
</tr>
<tr>
<td>break</td>
<td>v. 断开，撕开，中断 </td>
</tr>
<tr>
<td>backward</td>
<td>ad. 向后，逆，倒</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-59"><a href="#list-59" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>searching</td>
<td>n. 搜索 </td>
</tr>
<tr>
<td>receive</td>
<td>v. 接收 </td>
</tr>
<tr>
<td>dual</td>
<td>a. 对偶的，双的 </td>
</tr>
<tr>
<td>retry</td>
<td>vt. 再试，复算 </td>
</tr>
<tr>
<td>normally</td>
<td>ad. 正常地，通常 </td>
</tr>
<tr>
<td>exactly</td>
<td>ad. 正好，完全，精确地 </td>
</tr>
<tr>
<td>immediately</td>
<td>ad. 直接地 </td>
</tr>
<tr>
<td>separated</td>
<td>a. 分开的 </td>
</tr>
<tr>
<td>high</td>
<td>a. 高 </td>
</tr>
<tr>
<td>equivalent</td>
<td>a. 相等的，等效的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-60"><a href="#list-60" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>light</td>
<td>n. &amp; a. 光(波，源)；轻的 </td>
</tr>
<tr>
<td>zero</td>
<td>n. 零，零位，零点 </td>
</tr>
<tr>
<td>storage</td>
<td>n. 存储，存储器 </td>
</tr>
<tr>
<td>width</td>
<td>n. 宽度 </td>
</tr>
<tr>
<td>language</td>
<td>n. 语言 </td>
</tr>
<tr>
<td>startup</td>
<td>n. 启动 </td>
</tr>
<tr>
<td>much</td>
<td>a. &amp; n. 很多，许多，大量 </td>
</tr>
<tr>
<td>per</td>
<td>prep. 每，按 </td>
</tr>
<tr>
<td>over</td>
<td>prep. 在…上方 </td>
</tr>
<tr>
<td>mirror</td>
<td>n. &amp; v. 镜，反射，反映 </td>
</tr>
<tr>
<td>request</td>
<td>n. &amp; vt. 请求</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-61"><a href="#list-61" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>keypad</td>
<td>n. 小键盘 </td>
</tr>
<tr>
<td>keep</td>
<td>v. 保持，保存 </td>
</tr>
<tr>
<td>resident</td>
<td>a. 驻留的 </td>
</tr>
<tr>
<td>learning</td>
<td>n. 学问，知识 </td>
</tr>
<tr>
<td>talk</td>
<td>v. 通话，谈话 </td>
</tr>
<tr>
<td>summary</td>
<td>n. 摘要，汇总，提要 </td>
</tr>
<tr>
<td>well</td>
<td>n. &amp; a. 井；好，良好 </td>
</tr>
<tr>
<td>link</td>
<td>n. &amp; v. 链接；连接，联络 </td>
</tr>
<tr>
<td>identify</td>
<td>v. 识别，辨认 </td>
</tr>
<tr>
<td>designated</td>
<td>a. 指定的，特指的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-62"><a href="#list-62" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>pertain</td>
<td>vi. 附属，属于，关于</td>
</tr>
<tr>
<td>expansion</td>
<td>n. 展开，展开式 </td>
</tr>
<tr>
<td>incompatible</td>
<td>a. 不兼容的 </td>
</tr>
<tr>
<td>blinking</td>
<td>n. 闪烁 </td>
</tr>
<tr>
<td>month</td>
<td>n. 月份 </td>
</tr>
<tr>
<td>precede</td>
<td>v. 先于</td>
</tr>
<tr>
<td>transportable</td>
<td>a. 可移动的 </td>
</tr>
<tr>
<td>appropriately</td>
<td>ad. 适当地 </td>
</tr>
<tr>
<td>routine</td>
<td>n. 程序，例行程序 </td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-63"><a href="#list-63" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>listing</td>
<td>n. 列表，编目 </td>
</tr>
<tr>
<td>newly</td>
<td>ad. 新近，重新 </td>
</tr>
<tr>
<td>year</td>
<td>n. (一)年，年度，年龄 </td>
</tr>
<tr>
<td>contact</td>
<td>n. 接触，触点 </td>
</tr>
<tr>
<td>session</td>
<td>n. 对话，通话 </td>
</tr>
<tr>
<td>own</td>
<td>a. &amp; v. 自己的；拥有 </td>
</tr>
<tr>
<td>redraw</td>
<td>vt. 再拉 </td>
</tr>
<tr>
<td>here</td>
<td>ad. 在这里 </td>
</tr>
<tr>
<td>manual</td>
<td>a. 手工的，手动的 </td>
</tr>
<tr>
<td>particular</td>
<td>a. 特定的，特别的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-64"><a href="#list-64" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>rectangle</td>
<td>n. 矩形 </td>
</tr>
<tr>
<td>additive</td>
<td>a. &amp; n. 相加的；附加物 </td>
</tr>
<tr>
<td>similar</td>
<td>a. 相似的 </td>
</tr>
<tr>
<td>assembly</td>
<td>n. 汇编，安装，装配 </td>
</tr>
<tr>
<td>copyright</td>
<td>n. 版权 </td>
</tr>
<tr>
<td>description</td>
<td>n. 描述 </td>
</tr>
<tr>
<td>retrieve</td>
<td>v. 检索 </td>
</tr>
<tr>
<td>mistake</td>
<td>n. 错误 </td>
</tr>
</tbody>
</table>
</div>
<p>ram 随机存取存储器<br>exception |n. 例外，异常，异议<br>reverse |v. &amp; |a. 反向的，逆</p>
<h5 id="list-65"><a href="#list-65" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>minimum</td>
<td>n. &amp; a. 最小(的)，最低 </td>
</tr>
<tr>
<td>enough</td>
<td>a. &amp; ad. 足够的，充足的 </td>
</tr>
<tr>
<td>although</td>
<td>conj. 虽然，即使 </td>
</tr>
<tr>
<td>reindex</td>
<td>v. &amp; n. 变换(改变)符号 </td>
</tr>
<tr>
<td>third</td>
<td>a. &amp; n. 第三，三分之一 </td>
</tr>
<tr>
<td>red</td>
<td>a. &amp; n. 红色(的) </td>
</tr>
<tr>
<td>along</td>
<td>prep. &amp; ad. 沿着 </td>
</tr>
<tr>
<td>test</td>
<td>n. &amp; v. 测试 </td>
</tr>
<tr>
<td>small</td>
<td>a. 小的，小型的 </td>
</tr>
<tr>
<td>feed</td>
<td>v. 馈给，(打印机)进纸</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-66"><a href="#list-66" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>company</td>
<td>n. &amp; v. 公司；交际，交往 </td>
</tr>
<tr>
<td>movie</td>
<td>n. 影片，电影(院) </td>
</tr>
<tr>
<td>compile</td>
<td>vt. 编译 </td>
</tr>
<tr>
<td>frequently</td>
<td>ad. 常常，频繁地 </td>
</tr>
<tr>
<td>undefined</td>
<td>a. 未定义的 </td>
</tr>
<tr>
<td>state</td>
<td>n. &amp; vt. 状态；确定 </td>
</tr>
<tr>
<td>tick v；</td>
<td>n. 滴答(响)；勾号(√) </td>
</tr>
<tr>
<td>accept</td>
<td>vt. 接受，认可，同意 </td>
</tr>
<tr>
<td>intense</td>
<td>a. 强烈的，高度的 </td>
</tr>
<tr>
<td>documentation</td>
<td>n. 文件编制，文本</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-67"><a href="#list-67" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>asterisk</td>
<td>n. 星号(*) </td>
</tr>
<tr>
<td>easily</td>
<td>ad. 容易地，轻易地 </td>
</tr>
<tr>
<td>become</td>
<td>v. 成为，变成，适宜 </td>
</tr>
<tr>
<td>address</td>
<td>vt. &amp; n. 寻址；地址 </td>
</tr>
<tr>
<td>interface</td>
<td>n. 接口 </td>
</tr>
<tr>
<td>pause</td>
<td>vi. 暂停 </td>
</tr>
<tr>
<td>repeat</td>
<td>v. 重复 </td>
</tr>
<tr>
<td>restart</td>
<td>v. 重新启动，再启动 </td>
</tr>
<tr>
<td>assumed</td>
<td>a. 假定的 </td>
</tr>
<tr>
<td>speed</td>
<td>n. 速度 </td>
</tr>
<tr>
<td>entry</td>
<td>n. 输入，项(目)，入口 </td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-68"><a href="#list-68" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>organize</td>
<td>v. 组织，创办，成立 </td>
</tr>
<tr>
<td>finished</td>
<td>a. 完成的 </td>
</tr>
<tr>
<td>mixed</td>
<td>a. 混合的 </td>
</tr>
<tr>
<td>permit</td>
<td>v. 许可，容许 </td>
</tr>
<tr>
<td>formatting</td>
<td>n. 格式化 </td>
</tr>
<tr>
<td>root</td>
<td>n. 根 </td>
</tr>
<tr>
<td>symbol</td>
<td>n. 符号，记号 </td>
</tr>
<tr>
<td>binary</td>
<td>n. &amp; a. 二进制；双态的 </td>
</tr>
<tr>
<td>whenever</td>
<td>ad. &amp; conj. 随时 </td>
</tr>
<tr>
<td>reach</td>
<td>v. &amp; n. 范围，达到范围 </td>
</tr>
<tr>
<td>caution</td>
<td>n. &amp; v. 警告，注意</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-69"><a href="#list-69" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>subtotal</td>
<td>n. &amp; v. 小计，求部分和 </td>
</tr>
<tr>
<td>card</td>
<td>n. 卡片，插件(板) </td>
</tr>
<tr>
<td>general</td>
<td>a. 通用的 </td>
</tr>
<tr>
<td>associated</td>
<td>a. 联合的，相联的 </td>
</tr>
<tr>
<td>transfer</td>
<td>v. 传送，转换，转移 </td>
</tr>
<tr>
<td>connect</td>
<td>v. 连接 </td>
</tr>
<tr>
<td>partition</td>
<td>v. 划分，分区，部分 </td>
</tr>
<tr>
<td>hexadecimal</td>
<td>a. 十六进制的 </td>
</tr>
<tr>
<td>generate</td>
<td>vt. 产生，发生，生成 </td>
</tr>
<tr>
<td>specification</td>
<td>n. 说明书，规则说明书 </td>
</tr>
<tr>
<td>customize</td>
<td>vt. 定制，定做</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-70"><a href="#list-70" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>far</td>
<td>a. 远的，遥远的 </td>
</tr>
<tr>
<td>nest</td>
<td>v. 嵌套，后进先出 </td>
</tr>
<tr>
<td>duplicate</td>
<td>vt. 复制，转录，加倍 </td>
</tr>
<tr>
<td>compression</td>
<td>n. 压缩，浓缩 </td>
</tr>
<tr>
<td>unable</td>
<td>a. 不能的 </td>
</tr>
<tr>
<td>means</td>
<td>n. 方法，手段 </td>
</tr>
<tr>
<td>alternately</td>
<td>ad. 交替地，轮流地 </td>
</tr>
<tr>
<td>intensity</td>
<td>n. 强度，亮度</td>
</tr>
<tr>
<td>let</td>
<td>v. 让，允许 </td>
</tr>
<tr>
<td>explicitly</td>
<td>ad. 明显地，显然地 </td>
</tr>
<tr>
<td>compare</td>
<td>v. 比较，对照，比喻</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-71"><a href="#list-71" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>sector</td>
<td>n. &amp; v. 扇区，段；分段 </td>
</tr>
<tr>
<td>problem</td>
<td>n. 问题，难题 </td>
</tr>
<tr>
<td>vertically</td>
<td>ad. 竖直地，直立地 </td>
</tr>
<tr>
<td>horizontally</td>
<td>ad. 水平地 </td>
</tr>
<tr>
<td>backspace</td>
<td>v. 退格，回退 </td>
</tr>
<tr>
<td>people</td>
<td>n. 人们 </td>
</tr>
<tr>
<td>short</td>
<td>a. &amp; n. 短的；短路 </td>
</tr>
<tr>
<td>drag</td>
<td>vt. 拖，拉，牵，曳 </td>
</tr>
<tr>
<td>formatted</td>
<td>a. 有格式的 </td>
</tr>
<tr>
<td>preview</td>
<td>n. &amp; vt. 预映 </td>
</tr>
<tr>
<td>underscore</td>
<td>vt. 在…下面划线 </td>
</tr>
<tr>
<td>correctly</td>
<td>ad. 正确地</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-72"><a href="#list-72" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>initially</td>
<td>ad. 最初，开头 </td>
</tr>
<tr>
<td>reformat</td>
<td>v. 重定格式 </td>
</tr>
<tr>
<td>inside</td>
<td>n. &amp; a. 内部，内容；内部的 </td>
</tr>
<tr>
<td>integrate</td>
<td>v. 综合，集成 </td>
</tr>
<tr>
<td>controlled</td>
<td>a. 受控制的，受操纵的 </td>
</tr>
<tr>
<td>period</td>
<td>n. 周期 </td>
</tr>
<tr>
<td>huge</td>
<td>a. 巨大的，非常的 </td>
</tr>
<tr>
<td>trailing</td>
<td>n. &amp; a. 结尾；尾随的 </td>
</tr>
<tr>
<td>seek</td>
<td>v. 查找，寻找，探求 </td>
</tr>
<tr>
<td>introduction</td>
<td>n. 入门，介绍，引进 </td>
</tr>
<tr>
<td>indent</td>
<td>v. 缩排 </td>
</tr>
<tr>
<td>base</td>
<td>n. 基，底，基地址</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-73"><a href="#list-73" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>integer</td>
<td>n. 整数 </td>
</tr>
<tr>
<td>attempt</td>
<td>vt. &amp; n. 尝试，试验 </td>
</tr>
<tr>
<td>twice</td>
<td>n. &amp; ad. 两次，两倍于 </td>
</tr>
<tr>
<td>formed</td>
<td>a. &amp; n. 成形 </td>
</tr>
<tr>
<td>subscript</td>
<td>n. 注脚，下标 </td>
</tr>
<tr>
<td>tiny</td>
<td>a. 微小的，微量的 </td>
</tr>
<tr>
<td>model</td>
<td>n. 模型，样机，型号 </td>
</tr>
<tr>
<td>correction</td>
<td>n. 校正，修正 </td>
</tr>
<tr>
<td>rating</td>
<td>n. 定额，标称值 </td>
</tr>
<tr>
<td>secondary</td>
<td>a. 辅助的，第二的 </td>
</tr>
<tr>
<td>opened</td>
<td>a. 开路的，断开的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-74"><a href="#list-74" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>limit</td>
<td>n. 极限，限界 </td>
</tr>
<tr>
<td>sun</td>
<td>n. 太阳，日 </td>
</tr>
<tr>
<td>translate</td>
<td>v. 翻译，转换，平移 </td>
</tr>
<tr>
<td>reason</td>
<td>n. 原因，理由 </td>
</tr>
<tr>
<td>colon</td>
<td>n. 冒号”:” </td>
</tr>
<tr>
<td>avoid</td>
<td>vt. 避免，取消，无效 </td>
</tr>
<tr>
<td>range</td>
<td>n. 范围，域，区域 </td>
</tr>
<tr>
<td>allocate</td>
<td>vt. 分配 </td>
</tr>
<tr>
<td>wordperfect</td>
<td>a. 一字不错地熟记的 </td>
</tr>
<tr>
<td>simply</td>
<td>ad. 简单地，单纯地 </td>
</tr>
<tr>
<td>verify</td>
<td>vt. 鉴定，检验，核对</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-75"><a href="#list-75" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>manner</td>
<td>n. 方法，样式，惯例 </td>
</tr>
<tr>
<td>direction</td>
<td>n. 方向，定向，指向 </td>
</tr>
<tr>
<td>portion</td>
<td>n. &amp; vt. 部分；分配 </td>
</tr>
<tr>
<td>emulator</td>
<td>n. 仿真器，仿真程序 </td>
</tr>
<tr>
<td>successful</td>
<td>a. 成功的 </td>
</tr>
<tr>
<td>applied</td>
<td>a. 适用的，外加的 </td>
</tr>
<tr>
<td>sum</td>
<td>n. 和，合计，总额</td>
</tr>
<tr>
<td>achieve</td>
<td>vt. 完成，实现 </td>
</tr>
<tr>
<td>together</td>
<td>ad. 一同，共同，相互 </td>
</tr>
<tr>
<td>affect</td>
<td>vt. 影响，改变，感动 </td>
</tr>
<tr>
<td>delay</td>
<td>v. 延迟</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-76"><a href="#list-76" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>free</td>
<td>a. 自由的，空闲的 </td>
</tr>
<tr>
<td>properly</td>
<td>ad. 真正地，适当地 </td>
</tr>
<tr>
<td>kind</td>
<td>n. 种类，属，级，等 </td>
</tr>
<tr>
<td>splitting</td>
<td>n. 分区(裂) </td>
</tr>
<tr>
<td>feature</td>
<td>n. 特征，特点 </td>
</tr>
<tr>
<td>console</td>
<td>n. 控制台，操作台 </td>
</tr>
<tr>
<td>operate</td>
<td>v. 操作，运算 </td>
</tr>
<tr>
<td>kernel</td>
<td>n. 内核(核心)程序 </td>
</tr>
<tr>
<td>easy</td>
<td>a. &amp; ad. 容易的；容易地 </td>
</tr>
<tr>
<td>modifier</td>
<td>n. 修改量，变址数 </td>
</tr>
<tr>
<td>invalid</td>
<td>a. 无效的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-77"><a href="#list-77" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>compiler</td>
<td>n. 编译程序(器) </td>
</tr>
<tr>
<td>dot</td>
<td>n. 点 </td>
</tr>
<tr>
<td>beep</td>
<td>n. 蜂鸣声，嘀嘀声 </td>
</tr>
<tr>
<td>face</td>
<td>n. 面，表面 </td>
</tr>
<tr>
<td>random</td>
<td>a. 随机的 </td>
</tr>
<tr>
<td>facility</td>
<td>n. 设施，装备，便利 </td>
</tr>
<tr>
<td>heading</td>
<td>n. 标题 </td>
</tr>
<tr>
<td>asynchronous</td>
<td>a. 异步的，非同步的 </td>
</tr>
<tr>
<td>series</td>
<td>n. 序列，系列，串联 </td>
</tr>
<tr>
<td>individual</td>
<td>a. 个别的，单个的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-78"><a href="#list-78" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>explain</td>
<td>v. 阐明，解释 </td>
</tr>
<tr>
<td>paste</td>
<td>n. 湖，胶，膏 </td>
</tr>
<tr>
<td>welcome</td>
<td>vt. &amp; n. 欢迎 </td>
</tr>
<tr>
<td>six</td>
<td>n. &amp; a. 六(个)(的) </td>
</tr>
<tr>
<td>early</td>
<td>a. &amp; ad. 早期，初期 </td>
</tr>
<tr>
<td>wrap</td>
<td>v. &amp; n. 包装，缠绕 </td>
</tr>
<tr>
<td>blue</td>
<td>a. &amp; n. 蓝(色)，青色 </td>
</tr>
<tr>
<td>queue</td>
<td>v. &amp; n. 排队，队列 </td>
</tr>
<tr>
<td>interrupt</td>
<td>v. &amp; n. 中断 </td>
</tr>
<tr>
<td>respect</td>
<td>n. &amp; vt. 遵守，关系 </td>
</tr>
<tr>
<td>converted</td>
<td>a. 转换的，变换的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-79"><a href="#list-79" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>common</td>
<td>a. 公用的 </td>
</tr>
<tr>
<td>hyphen</td>
<td>n. 连字符，短线 </td>
</tr>
<tr>
<td>serial</td>
<td>a. 串行的，串联的 </td>
</tr>
<tr>
<td>loading</td>
<td>n. 装入，加载，存放 </td>
</tr>
<tr>
<td>retain</td>
<td>vt. 保持，维持 </td>
</tr>
<tr>
<td>setup</td>
<td>n. 安排，准备，配置 </td>
</tr>
<tr>
<td>freeze</td>
<td>v. 冻结，结冰 </td>
</tr>
<tr>
<td>intend</td>
<td>vt. 打算，设计 </td>
</tr>
<tr>
<td>explanation</td>
<td>n. 说明，注解，注释 </td>
</tr>
<tr>
<td>certain</td>
<td>a. 确实的，确定的 </td>
</tr>
<tr>
<td>zap</td>
<td>v. 迅速离去，击溃</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-80"><a href="#list-80" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>archive</td>
<td>vt. 归档 </td>
</tr>
<tr>
<td>negative</td>
<td>a. 负的，否定的 </td>
</tr>
<tr>
<td>image</td>
<td>n. 图像，影像，映像 </td>
</tr>
<tr>
<td>platform</td>
<td>n. 平台，台架 </td>
</tr>
<tr>
<td>often</td>
<td>ad. 经常，往往，屡次 </td>
</tr>
<tr>
<td>signal</td>
<td>n. &amp; v. 信号；发信号 </td>
</tr>
<tr>
<td>cpu</td>
<td>控制处理部件 </td>
</tr>
<tr>
<td>bit</td>
<td>n. 比特；(二进制)位 </td>
</tr>
<tr>
<td>fully</td>
<td>ad. 十分，完全 </td>
</tr>
<tr>
<td>deactivate</td>
<td>vt. 释放，去活化</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-81"><a href="#list-81" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>especially</td>
<td>ad. 特别(是)，尤其 </td>
</tr>
<tr>
<td>usually</td>
<td>ad. 通常，平常，一般 </td>
</tr>
<tr>
<td>recommend</td>
<td>vt. 推荐，建议 </td>
</tr>
<tr>
<td>maintain</td>
<td>vt. 维护，保养，保留 </td>
</tr>
<tr>
<td>important</td>
<td>a. 严重的，显著的 </td>
</tr>
<tr>
<td>central</td>
<td>a. 中央的，中心的 </td>
</tr>
<tr>
<td>addition</td>
<td>n. 加法，增加 </td>
</tr>
<tr>
<td>anytime</td>
<td>ad. 在任何时候 </td>
</tr>
<tr>
<td>analyst</td>
<td>n. 分析员 </td>
</tr>
<tr>
<td>false</td>
<td>a. 假(布尔值)，错误</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-82"><a href="#list-82" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>black</td>
<td>a. &amp; n. 黑色的，黑色 </td>
</tr>
<tr>
<td>gather</td>
<td>n. 聚集，集合 </td>
</tr>
<tr>
<td>cycle</td>
<td>n. &amp; v. 周，周期；循环 </td>
</tr>
<tr>
<td>relative</td>
<td>a. 相对的 </td>
</tr>
<tr>
<td>offer</td>
<td>v. 提供，给予，呈现 </td>
</tr>
<tr>
<td>ending</td>
<td>n. 结束 </td>
</tr>
<tr>
<td>rent</td>
<td>v. &amp; n. 租用；裂缝 </td>
</tr>
<tr>
<td>sentence</td>
<td>n. 句(子) </td>
</tr>
<tr>
<td>remember</td>
<td>v. 存储，记忆，记住 </td>
</tr>
<tr>
<td>proper</td>
<td>a. 真的，固有的 </td>
</tr>
<tr>
<td>design</td>
<td>v. 设计</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-83"><a href="#list-83" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>examine</td>
<td>v. 检验，考试，审查 </td>
</tr>
<tr>
<td>initial</td>
<td>a. 最初的，初始的 </td>
</tr>
<tr>
<td>corrupt</td>
<td>v. &amp; a. 恶化；有毛病的 </td>
</tr>
<tr>
<td>buy</td>
<td>v. 买，购买，赢得 </td>
</tr>
<tr>
<td>increase</td>
<td>v. 增加，增大 </td>
</tr>
<tr>
<td>host</td>
<td>n. 主机 </td>
</tr>
<tr>
<td>sample</td>
<td>n. &amp; v. 样品，样本；抽样 </td>
</tr>
<tr>
<td>pending</td>
<td>a. 悬而未决的，未定的 </td>
</tr>
<tr>
<td>divide</td>
<td>v. 除 </td>
</tr>
<tr>
<td>boot</td>
<td>n. 引导，靴 </td>
</tr>
<tr>
<td>hide</td>
<td>v. 隐藏，隐蔽</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-84"><a href="#list-84" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>half</td>
<td>n. &amp; a. &amp; ad. 一半，半个 </td>
</tr>
<tr>
<td>magenta</td>
<td>n. &amp; a. 深红色(的) </td>
</tr>
<tr>
<td>leading</td>
<td>n. &amp; a. 引导(的) </td>
</tr>
<tr>
<td>wrong</td>
<td>a. &amp; ad. n. 错误(的) </td>
</tr>
<tr>
<td>today</td>
<td>n. &amp; ad. 今天 </td>
</tr>
<tr>
<td>least</td>
<td>a. &amp; ad. 最小(的) </td>
</tr>
<tr>
<td>opposite</td>
<td>a. &amp; n. &amp; ad. 相反的 </td>
</tr>
<tr>
<td>white</td>
<td>a. &amp; n. 白色(的) </td>
</tr>
<tr>
<td>override</td>
<td>v. &amp; n. 超越，克服 </td>
</tr>
<tr>
<td>brown</td>
<td>a. &amp; n. 褐色(的)，棕色 </td>
</tr>
<tr>
<td>hex</td>
<td>a. &amp; n. 六角形的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-85"><a href="#list-85" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>rest</td>
<td>n. &amp; v. 剩余，休息 </td>
</tr>
<tr>
<td>damage</td>
<td>n. &amp; vt. 损伤，故障 </td>
</tr>
<tr>
<td>instant</td>
<td>a. 立刻的，直接的 </td>
</tr>
<tr>
<td>reserved</td>
<td>a. 保留的，预订的 </td>
</tr>
<tr>
<td>technology</td>
<td>n. 工艺，技术，制造学 </td>
</tr>
<tr>
<td>handle</td>
<td>n. 处理，句柄 </td>
</tr>
<tr>
<td>apply</td>
<td>v. 应用，适用于，作用 </td>
</tr>
<tr>
<td>stand</td>
<td>v. 处于(状态)，保持 </td>
</tr>
<tr>
<td>payment</td>
<td>n. 支付，付款 </td>
</tr>
<tr>
<td>kilobyte</td>
<td>n. 千字节(kb) </td>
</tr>
<tr>
<td>parenthesis</td>
<td>n. 括弧，圆括号</td>
</tr>
<tr>
<td>scan</td>
<td>v. 扫描，扫视，搜索</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-86"><a href="#list-86" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>locating</td>
<td>n. 定位，查找 </td>
</tr>
<tr>
<td>developer</td>
<td>n. 开发者，显影剂 </td>
</tr>
<tr>
<td>murder</td>
<td>n. 弄坏，毁掉 </td>
</tr>
<tr>
<td>flush</td>
<td>v. 弄平，使齐平 </td>
</tr>
<tr>
<td>unlock</td>
<td>v. 开锁，打开 </td>
</tr>
<tr>
<td>movement</td>
<td>n. 传送，移动 </td>
</tr>
<tr>
<td>consecutive</td>
<td>a. 连续的，连贯的 </td>
</tr>
<tr>
<td>collection</td>
<td>n. 集合，聚集，画卷 </td>
</tr>
<tr>
<td>front</td>
<td>a. 前面的，正面的 </td>
</tr>
<tr>
<td>addressing</td>
<td>n. 寻址 </td>
</tr>
<tr>
<td>prefix</td>
<td>n. 前缀 </td>
</tr>
<tr>
<td>carousel</td>
<td>n. 圆盘传送带</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-87"><a href="#list-87" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>safety</td>
<td>n. 安全，保险 </td>
</tr>
<tr>
<td>static</td>
<td>a. 静态的，不变的 </td>
</tr>
<tr>
<td>background</td>
<td>n. 背景，底色，基础 </td>
</tr>
<tr>
<td>product</td>
<td>n. (乘)积，产品 </td>
</tr>
<tr>
<td>assignment</td>
<td>n. 赋值，分配 </td>
</tr>
<tr>
<td>bad</td>
<td>a. 坏的，不良的 </td>
</tr>
<tr>
<td>declare</td>
<td>v. 说明 </td>
</tr>
<tr>
<td>adjust</td>
<td>vt. 调整，调节，控制 </td>
</tr>
<tr>
<td>recognize</td>
<td>v. 识别</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-88"><a href="#list-88" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>route</td>
<td>n. 路线，路由 </td>
</tr>
<tr>
<td>respectively</td>
<td>ad. 分别地 </td>
</tr>
<tr>
<td>unsuccessful</td>
<td>a. 不成功的，失败的 </td>
</tr>
<tr>
<td>received</td>
<td>a. 被接收的，公认的 </td>
</tr>
<tr>
<td>navigate</td>
<td>v. 导航，驾驶 </td>
</tr>
<tr>
<td>considered</td>
<td>a. 考虑过的，被尊重的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-89"><a href="#list-89" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>due</td>
<td>a. 到期的，应付(给)的 </td>
</tr>
<tr>
<td>recently</td>
<td>ad. 近来 </td>
</tr>
<tr>
<td>room</td>
<td>n. 房间，空间 </td>
</tr>
<tr>
<td>descend</td>
<td>v. 下降，落下 </td>
</tr>
<tr>
<td>fact</td>
<td>n. 事实 </td>
</tr>
<tr>
<td>alter</td>
<td>v. 改变，修改 </td>
</tr>
<tr>
<td>track</td>
<td>n. 磁道，轨道 </td>
</tr>
<tr>
<td>precedence</td>
<td>n. 优先权 </td>
</tr>
<tr>
<td>skeleton</td>
<td>n. 骨架，框架 </td>
</tr>
<tr>
<td>log</td>
<td>n. &amp; v. 记录，存入</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-90"><a href="#list-90" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>star</td>
<td>n. 星形，星号 </td>
</tr>
<tr>
<td>hot</td>
<td>a. 热的 </td>
</tr>
<tr>
<td>replaceable</td>
<td>a. 可替换的 </td>
</tr>
<tr>
<td>accessible</td>
<td>a. 可以使用的 </td>
</tr>
<tr>
<td>involve</td>
<td>vt. 涉及，卷入，占用 </td>
</tr>
<tr>
<td>configure</td>
<td>vt. 使成形 </td>
</tr>
<tr>
<td>question</td>
<td>n. 问题 </td>
</tr>
<tr>
<td>green</td>
<td>n. &amp; a. 绿色绿色的 </td>
</tr>
<tr>
<td>entirely</td>
<td>ad. 完全地，彻底地 </td>
</tr>
<tr>
<td>helpful</td>
<td>a. 有帮助的，有用的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-91"><a href="#list-91" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>middle</td>
<td>a. 中间的 </td>
</tr>
<tr>
<td>declared</td>
<td>a. 承认的，申报的 </td>
</tr>
<tr>
<td>compress</td>
<td>vt. 压缩，精减 </td>
</tr>
<tr>
<td>graphically</td>
<td>ad. 用图表表示 </td>
</tr>
<tr>
<td>auto</td>
<td>a. 自动的 </td>
</tr>
<tr>
<td>automatic</td>
<td>a. 自动的 </td>
</tr>
<tr>
<td>aligned</td>
<td>a. 对准的，均衡的 </td>
</tr>
<tr>
<td>anywhere</td>
<td>ad. 在任何地方 </td>
</tr>
<tr>
<td>door</td>
<td>n. 舱门，入口，孔 </td>
</tr>
<tr>
<td>expire</td>
<td>v. 终止，期满</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-92"><a href="#list-92" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>resolution</td>
<td>n. 分辨率 </td>
</tr>
<tr>
<td>local</td>
<td>a. 局部的，本地的 </td>
</tr>
<tr>
<td>semicolon</td>
<td>n. 分号(；) </td>
</tr>
<tr>
<td>critical</td>
<td>a. &amp; n. 临界的；临界值 </td>
</tr>
<tr>
<td>manager</td>
<td>n. 管理程序 </td>
</tr>
<tr>
<td>capability</td>
<td>n. 能力，效力，权力 </td>
</tr>
<tr>
<td>affected</td>
<td>a. 受了影响的 </td>
</tr>
<tr>
<td>allowed</td>
<td>a. 容许的 </td>
</tr>
<tr>
<td>border</td>
<td>n. 边界，框，界限 </td>
</tr>
<tr>
<td>cache</td>
<td>n. 高速缓存</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-93"><a href="#list-93" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>bell</td>
<td>n. 铃，钟 </td>
</tr>
<tr>
<td>play</td>
<td>v. 玩，奏，放音，放象 </td>
</tr>
<tr>
<td>quickly</td>
<td>a. 快，迅速地 </td>
</tr>
<tr>
<td>fastback</td>
<td>n. 快速返回 </td>
</tr>
<tr>
<td>answer</td>
<td>n. &amp; v. 响应，回答；答复 </td>
</tr>
<tr>
<td>represent</td>
<td>v. 表示，表现，代表 </td>
</tr>
<tr>
<td>difference</td>
<td>n. 差分，差 </td>
</tr>
<tr>
<td>highest</td>
<td>a. 最高的 </td>
</tr>
<tr>
<td>project</td>
<td>n. 项目，计划，设计</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-94"><a href="#list-94" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>physical</td>
<td>a. 物理的，实际的 </td>
</tr>
<tr>
<td>matter</td>
<td>n. 物质，内容，事情 </td>
</tr>
<tr>
<td>hercules</td>
<td>n. 大力神，大力士 </td>
</tr>
<tr>
<td>reduce</td>
<td>v. 减少，降低，简化 </td>
</tr>
<tr>
<td>publisher</td>
<td>n. 出版者，发行人 </td>
</tr>
<tr>
<td>trim</td>
<td>n. 区标，微调 </td>
</tr>
<tr>
<td>substitute</td>
<td>v. 代替，替换，代入 </td>
</tr>
<tr>
<td>disabled</td>
<td>a. 禁止的，报废的 </td>
</tr>
<tr>
<td>recent</td>
<td>a. 近来的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-95"><a href="#list-95" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>positive</td>
<td>a. 正的，阳的，正片 </td>
</tr>
<tr>
<td>upgrade</td>
<td>v. 升级，提高质量 </td>
</tr>
<tr>
<td>instance</td>
<td>n. &amp; vt. 例子，情况；举例 </td>
</tr>
<tr>
<td>happen</td>
<td>vi. (偶然)发生，碰巧 </td>
</tr>
<tr>
<td>elapsed</td>
<td>vi. &amp; n. 经过 </td>
</tr>
<tr>
<td>future</td>
<td>n. &amp; a. 将来，未来的 </td>
</tr>
<tr>
<td>midnight</td>
<td>n. &amp; a. 午夜 </td>
</tr>
<tr>
<td>though</td>
<td>conj. 虽然，尽管 </td>
</tr>
<tr>
<td>nor</td>
<td>conj. 也不 </td>
</tr>
<tr>
<td>mono</td>
<td>a. &amp; n. 单音的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-96"><a href="#list-96" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>slide</td>
<td>v. &amp; n. 滑动，滑动触头 </td>
</tr>
<tr>
<td>abort</td>
<td>v. &amp; n. 中断，故障 </td>
</tr>
<tr>
<td>jump</td>
<td>v. &amp; n. 转移 </td>
</tr>
<tr>
<td>toward</td>
<td>prep. 朝(着…方向) </td>
</tr>
<tr>
<td>throughout</td>
<td>prep. 贯穿，整，遍 </td>
</tr>
<tr>
<td>via</td>
<td>prep. 经过，经由 </td>
</tr>
<tr>
<td>among</td>
<td>prep. 在…之中，中间 </td>
</tr>
<tr>
<td>neither</td>
<td>a. &amp; pron. (两者)都不 </td>
</tr>
<tr>
<td>layer</td>
<td>n. &amp; v. 层，涂层</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-97"><a href="#list-97" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>scatter</td>
<td>v. 散射，分散，散布 </td>
</tr>
<tr>
<td>attention</td>
<td>n. 注意(信号) </td>
</tr>
<tr>
<td>convention</td>
<td>n. 常规，约定，协定 </td>
</tr>
<tr>
<td>conventional</td>
<td>a. 常规的，习惯的 </td>
</tr>
<tr>
<td>tool</td>
<td>n. 工具，刀 </td>
</tr>
<tr>
<td>handler</td>
<td>n. 处理程序 </td>
</tr>
<tr>
<td>processor</td>
<td>n. 处理机，处理程序 </td>
</tr>
<tr>
<td>desktop</td>
<td>a. 台式的 </td>
</tr>
<tr>
<td>build</td>
<td>v. 建造，建立，组合</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-98"><a href="#list-98" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>windowing</td>
<td>n. 开窗口 </td>
</tr>
<tr>
<td>development</td>
<td>n. 开发，研制，显影 </td>
</tr>
<tr>
<td>exceed</td>
<td>v. 超过，大于 </td>
</tr>
<tr>
<td>understand</td>
<td>v. 懂，明白(了)，理解 </td>
</tr>
<tr>
<td>horizontal</td>
<td>a. 水平的，横向的 </td>
</tr>
<tr>
<td>alphabetically</td>
<td>ad. 按字母表顺序 </td>
</tr>
<tr>
<td>meet</td>
<td>v. “与”，符合，满足 </td>
</tr>
<tr>
<td>protect</td>
<td>vt. 保护 </td>
</tr>
<tr>
<td>reserve</td>
<td>vt. 保留，预定，预约 </td>
</tr>
<tr>
<td>clock</td>
<td>n. 时钟，计时器，同步</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-99"><a href="#list-99" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>manifest</td>
<td>vt. 表明，显示，显现 </td>
</tr>
<tr>
<td>safe</td>
<td>a. 安全的，可靠的 </td>
</tr>
<tr>
<td>disconnect</td>
<td>vt. 拆接，断开，拆线 </td>
</tr>
<tr>
<td>clockwise</td>
<td>a. 顺时针的 </td>
</tr>
<tr>
<td>eliminate</td>
<td>vt. 除去，消除，切断 </td>
</tr>
<tr>
<td>actual</td>
<td>a. 实际的，现实的 </td>
</tr>
<tr>
<td>declaration</td>
<td>n. 说明，申报 </td>
</tr>
<tr>
<td>probably</td>
<td>ad. 多半，很可能 </td>
</tr>
<tr>
<td>ring</td>
<td>n. &amp; v. 环，圈；按铃</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-100"><a href="#list-100" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>cover</td>
<td>vt. 盖，罩，套 </td>
</tr>
<tr>
<td>indicator</td>
<td>n. 指示器，指示灯 </td>
</tr>
<tr>
<td>apple</td>
<td>n. 苹果 </td>
</tr>
<tr>
<td>icon</td>
<td>n. 图符，象征 </td>
</tr>
<tr>
<td>consideration</td>
<td>n. 考虑，研究，讨论 </td>
</tr>
<tr>
<td>skill</td>
<td>n. 技巧 </td>
</tr>
<tr>
<td>picture</td>
<td>n. 图象，画面 </td>
</tr>
<tr>
<td>layout</td>
<td>n. 布置，布局，安排 </td>
</tr>
<tr>
<td>suggest</td>
<td>vt. 建议，提议，暗示</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-101"><a href="#list-101" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>convenient</td>
<td>a. 方便的，便利的 </td>
</tr>
<tr>
<td>instruct</td>
<td>vt. 讲授，命令 </td>
</tr>
<tr>
<td>appendix</td>
<td>n. 附录 </td>
</tr>
<tr>
<td>medium</td>
<td>n. &amp; a. 媒体；中等的 </td>
</tr>
<tr>
<td>truncate</td>
<td>vt. 截尾，截断 </td>
</tr>
<tr>
<td>inhibit</td>
<td>vt. 禁止 </td>
</tr>
<tr>
<td>nearly</td>
<td>ad. 近乎，差不多，几乎 </td>
</tr>
<tr>
<td>warn</td>
<td>vt. 警告，警戒，预告 </td>
</tr>
<tr>
<td>underline</td>
<td>n. 下划线</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-102"><a href="#list-102" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>register</td>
<td>n. 寄存器 </td>
</tr>
<tr>
<td>stuff</td>
<td>n. &amp; vt. 材料；装入 </td>
</tr>
<tr>
<td>exclude</td>
<td>vt. 排除，除去 </td>
</tr>
<tr>
<td>destroy</td>
<td>vt. 破坏，毁坏，打破 </td>
</tr>
<tr>
<td>calculation</td>
<td>n. 计算，统计，估计 </td>
</tr>
<tr>
<td>angle</td>
<td>n. 角，角度 </td>
</tr>
<tr>
<td>lexical</td>
<td>a. 辞典的，词法的 </td>
</tr>
<tr>
<td>decide</td>
<td>v. (使)判定，判断 </td>
</tr>
<tr>
<td>trouble</td>
<td>n. 故障 </td>
</tr>
<tr>
<td>processing</td>
<td>n. (数据)处理，加工</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-103"><a href="#list-103" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>customer</td>
<td>n. 顾客，客户 </td>
</tr>
<tr>
<td>port</td>
<td>n. 端口，进出口 </td>
</tr>
<tr>
<td>discuss</td>
<td>vt. 讨论，论述 </td>
</tr>
<tr>
<td>segment</td>
<td>n. 段，片段，图块 </td>
</tr>
<tr>
<td>filing</td>
<td>n. (文件的)整理汇集 </td>
</tr>
<tr>
<td>identically</td>
<td>ad. 相等，恒等 </td>
</tr>
<tr>
<td>market</td>
<td>n. 市场，行情，销路 </td>
</tr>
<tr>
<td>valuable</td>
<td>a. 有价值的，贵重的 </td>
</tr>
<tr>
<td>limited</td>
<td>a. 有限的，(受)限制的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-104"><a href="#list-104" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>trying</td>
<td>a. 费劲的，困难的 </td>
</tr>
<tr>
<td>heap</td>
<td>n. 堆阵 </td>
</tr>
<tr>
<td>grey</td>
<td>n. &amp; a. 灰色；灰色的 </td>
</tr>
<tr>
<td>permanently</td>
<td>ad. 永久地，持久地 </td>
</tr>
<tr>
<td>accelerator</td>
<td>n. 加速装置，加速剂 </td>
</tr>
<tr>
<td>originally</td>
<td>ad. 原来，最初 </td>
</tr>
<tr>
<td>ability</td>
<td>n. 性能，能力，效率 </td>
</tr>
<tr>
<td>internally</td>
<td>ad. 在内(部) </td>
</tr>
<tr>
<td>derelict</td>
<td>vt. 中途淘汰</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-105"><a href="#list-105" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>redirect</td>
<td>vt. 重定向 </td>
</tr>
<tr>
<td>reside</td>
<td>vi. 驻留 </td>
</tr>
<tr>
<td>header</td>
<td>n. 首部，标题，报头 </td>
</tr>
<tr>
<td>extra</td>
<td>a. 特别的，额外的 </td>
</tr>
<tr>
<td>repeated</td>
<td>a. 重复的 </td>
</tr>
<tr>
<td>death</td>
<td>n. 毁灭，消灭 </td>
</tr>
<tr>
<td>observe</td>
<td>v. 观察，探测 </td>
</tr>
<tr>
<td>density</td>
<td>n. 密度 </td>
</tr>
<tr>
<td>management</td>
<td>n. 管理</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-106"><a href="#list-106" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>environmental</td>
<td>a. 周围的，环境的 </td>
</tr>
<tr>
<td>surrounding</td>
<td>a. 周围的，环绕的 </td>
</tr>
<tr>
<td>master</td>
<td>a. 总要的，总的 </td>
</tr>
<tr>
<td>recursive</td>
<td>a. 递归的，循环的 </td>
</tr>
<tr>
<td>trap</td>
<td>n. &amp; vt. 陷阱；俘获 </td>
</tr>
<tr>
<td>dimensional</td>
<td>n. 尺寸的，…维的 </td>
</tr>
<tr>
<td>logic</td>
<td>n. 逻辑(线路) </td>
</tr>
<tr>
<td>conjunction</td>
<td>n. 逻辑乘，”与” </td>
</tr>
<tr>
<td>identical</td>
<td>a. 相等的，相同的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-107"><a href="#list-107" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>advice</td>
<td>n. 意见，参考说明 </td>
</tr>
<tr>
<td>meaning</td>
<td>n. 意义，含义 </td>
</tr>
<tr>
<td>fall</td>
<td>n. 落下，降落 </td>
</tr>
<tr>
<td>interval</td>
<td>n. 间歇，区间 </td>
</tr>
<tr>
<td>compatibility</td>
<td>n. 兼容性，适应性 </td>
</tr>
<tr>
<td>rule</td>
<td>n. 规则，法则，尺 </td>
</tr>
<tr>
<td>flag</td>
<td>n. 标志(记)，特征(位) </td>
</tr>
<tr>
<td>criterion</td>
<td>n. 标准，判据，准则 </td>
</tr>
<tr>
<td>office</td>
<td>n. 办公室，局，站 </td>
</tr>
<tr>
<td>express</td>
<td>a. 快速的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-108"><a href="#list-108" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>volume</td>
<td>n. 卷，册，体积，容量 </td>
</tr>
<tr>
<td>soft</td>
<td>a. 软的 </td>
</tr>
<tr>
<td>rated</td>
<td>a. 额定的 </td>
</tr>
<tr>
<td>activity</td>
<td>n. 活力，功率 </td>
</tr>
<tr>
<td>odometer</td>
<td>n. 里程表，计程仪 </td>
</tr>
<tr>
<td>phoenix</td>
<td>n. 凤凰，绝世珍品 </td>
</tr>
<tr>
<td>obtain</td>
<td>v. 获得，得到 </td>
</tr>
<tr>
<td>easel</td>
<td>n. 框，(画)架 </td>
</tr>
<tr>
<td>latter</td>
<td>a. 后面的，最近的 </td>
</tr>
<tr>
<td>decrease</td>
<td>v. 减少，降低，缩短</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-109"><a href="#list-109" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>mainframe</td>
<td>n. 主机，大型机 </td>
</tr>
<tr>
<td>debugger</td>
<td>n. 调试程序 </td>
</tr>
<tr>
<td>diacritical</td>
<td>a. 区分的，辩别的</td>
</tr>
<tr>
<td>dential</td>
<td>a. 机密的 </td>
</tr>
<tr>
<td>trace</td>
<td>v. 跟踪，追踪 </td>
</tr>
<tr>
<td>division</td>
<td>n. 除，除法，(程序)部分 </td>
</tr>
<tr>
<td>regular</td>
<td>a. 正则的，正规的 </td>
</tr>
<tr>
<td>implicit</td>
<td>a. 隐式的 </td>
</tr>
<tr>
<td>mention</td>
<td>vt. &amp; n. 叙述，说到</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-110"><a href="#list-110" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>near</td>
<td>ad. &amp; prep. 领近，接近 </td>
</tr>
<tr>
<td>fifth</td>
<td>n. &amp; a. 第五，五分之一 </td>
</tr>
<tr>
<td>seven</td>
<td>n. &amp; a. 七(个) </td>
</tr>
<tr>
<td>whereas</td>
<td>conj. 面，其实，既然 </td>
</tr>
<tr>
<td>review</td>
<td>v. &amp; n. (再)检查 </td>
</tr>
<tr>
<td>whatever pro</td>
<td>n. &amp; a. 无论什么 </td>
</tr>
<tr>
<td>transform</td>
<td>v. &amp; n. 变换，变换式 </td>
</tr>
<tr>
<td>align</td>
<td>v. &amp; n. 定位，对准 </td>
</tr>
<tr>
<td>yellow</td>
<td>a. &amp; n. 黄色(的) </td>
</tr>
<tr>
<td>assist</td>
<td>v. &amp; n. 加速，帮助</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-111"><a href="#list-111" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>finish</td>
<td>v. &amp; n. 完成，结束 </td>
</tr>
<tr>
<td>micro</td>
<td>a. &amp; n. 微的，百万分之一 </td>
</tr>
<tr>
<td>beyond</td>
<td>prep. 超过，那边 </td>
</tr>
<tr>
<td>against</td>
<td>prep. 反对，阻止 </td>
</tr>
<tr>
<td>upon</td>
<td>prep. 依据，遵照 </td>
</tr>
<tr>
<td>service</td>
<td>n. &amp; vt. 服务，业务 </td>
</tr>
<tr>
<td>little</td>
<td>a. 小的，少量的 </td>
</tr>
<tr>
<td>exhaust</td>
<td>v. 取尽，用完 </td>
</tr>
<tr>
<td>choice</td>
<td>n. 选择，精品</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-112"><a href="#list-112" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>sounding</td>
<td>a. 发声的 </td>
</tr>
<tr>
<td>develop</td>
<td>v. 发展，研制，显影 </td>
</tr>
<tr>
<td>holding</td>
<td>n. 保持，固定，存储 </td>
</tr>
<tr>
<td>alpha</td>
<td>n. 希腊字母α，未知数 </td>
</tr>
<tr>
<td>constant</td>
<td>n. 常数 </td>
</tr>
<tr>
<td>warranty</td>
<td>n. 保证(书)，授权 </td>
</tr>
<tr>
<td>stay</td>
<td>v. 停止，停留 </td>
</tr>
<tr>
<td>industry</td>
<td>n. 工业 </td>
</tr>
<tr>
<td>trigger</td>
<td>n. &amp; v. 触发器；触发</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-113"><a href="#list-113" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>lesson</td>
<td>n. 功课，教训 </td>
</tr>
<tr>
<td>handling</td>
<td>n. 处理，操纵 </td>
</tr>
<tr>
<td>treat</td>
<td>v. 处理，加工 </td>
</tr>
<tr>
<td>busy</td>
<td>a. 忙碌的，占线的 </td>
</tr>
<tr>
<td>usage</td>
<td>n. 应用，使用，用法 </td>
</tr>
<tr>
<td>difficult</td>
<td>a. 困难的，不容易的 </td>
</tr>
<tr>
<td>failure</td>
<td>n. 失效，故障，失败 </td>
</tr>
<tr>
<td>communication</td>
<td>n. 通信</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-114"><a href="#list-114" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>building</td>
<td>n. 建造，建筑，房屋 </td>
</tr>
<tr>
<td>ally</td>
<td>v. 联合，与…关联 </td>
</tr>
<tr>
<td>exclamation</td>
<td>n. 惊叹(号) </td>
</tr>
<tr>
<td>turning</td>
<td>a. 转弯的，旋转的 </td>
</tr>
<tr>
<td>whole</td>
<td>a. 全部的，整个的 </td>
</tr>
<tr>
<td>parent</td>
<td>n. 双亲，父代 </td>
</tr>
<tr>
<td>connection</td>
<td>n. 连接(法) </td>
</tr>
<tr>
<td>connectivity</td>
<td>n. 连通性，联络性 </td>
</tr>
<tr>
<td>translation</td>
<td>n. 翻译，变换，平移</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-115"><a href="#list-115" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>dynamic</td>
<td>a. 动态的，动力的 </td>
</tr>
<tr>
<td>foreground</td>
<td>n. 前台 </td>
</tr>
<tr>
<td>preserve</td>
<td>vt. 保存，维持 </td>
</tr>
<tr>
<td>vice</td>
<td>n. 缺点，毛病，错误 </td>
</tr>
<tr>
<td>necessarily</td>
<td>ad. 必定，当然 </td>
</tr>
<tr>
<td>circle</td>
<td>n. 圆，圈，循环，周期 </td>
</tr>
<tr>
<td>differ</td>
<td>vi. 不同，不一致 </td>
</tr>
<tr>
<td>stationary</td>
<td>a. 静止的，平稳的 </td>
</tr>
<tr>
<td>extract</td>
<td>vt. 抽取，摘录，开方</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-116"><a href="#list-116" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>unrecognized</td>
<td>a. 未被认出的 </td>
</tr>
<tr>
<td>thereafter</td>
<td>ad. 此后，据此 </td>
</tr>
<tr>
<td>inverse</td>
<td>a. 反向的，逆的 </td>
</tr>
<tr>
<td>spell</td>
<td>v. 拼写 </td>
</tr>
<tr>
<td>limiting</td>
<td>n. (电路参数)限制处理 </td>
</tr>
<tr>
<td>restructure</td>
<td>vt. 调整，重新组织 </td>
</tr>
<tr>
<td>delimit</td>
<td>vt. 定界，定义 </td>
</tr>
<tr>
<td>pay</td>
<td>v. 付款，支付 </td>
</tr>
<tr>
<td>separately</td>
<td>ad. 分别地</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-117"><a href="#list-117" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>classify</td>
<td>vt. 分类，分级 </td>
</tr>
<tr>
<td>interfere</td>
<td>vi. 干涉，干扰，冲突 </td>
</tr>
<tr>
<td>mind</td>
<td>n. 愿望，想法，智力 </td>
</tr>
<tr>
<td>individually</td>
<td>ad. 个别地，单独地 </td>
</tr>
<tr>
<td>vertical</td>
<td>a. 垂直的，立(式)的 </td>
</tr>
<tr>
<td>undesirable</td>
<td>a. 不合乎需要的 </td>
</tr>
<tr>
<td>lot</td>
<td>n. 一块(批，组，套) </td>
</tr>
<tr>
<td>piece</td>
<td>n. 一块，部分，段 </td>
</tr>
<tr>
<td>unavailable</td>
<td>a. 不能利用的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-118"><a href="#list-118" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>unlike</td>
<td>a. 不象的，不同的 </td>
</tr>
<tr>
<td>sit</td>
<td>v. 位于，安装 </td>
</tr>
<tr>
<td>insufficient</td>
<td>a. 不足的，不适当的 </td>
</tr>
<tr>
<td>map</td>
<td>n. &amp; vt. 图；映射，变址 </td>
</tr>
<tr>
<td>figure</td>
<td>n. 数字；图，图形，形状 </td>
</tr>
<tr>
<td>prepare</td>
<td>v. 准备 </td>
</tr>
<tr>
<td>consider</td>
<td>v. 考虑，认为，设想 </td>
</tr>
<tr>
<td>detect</td>
<td>vt. 检测 </td>
</tr>
<tr>
<td>convenience</td>
<td>n. 方便，便利</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-119"><a href="#list-119" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>method</td>
<td>n. 方法，方案 </td>
</tr>
<tr>
<td>mean</td>
<td>n. &amp; vt. 平均；意味着 </td>
</tr>
<tr>
<td>salary</td>
<td>n. &amp; vt. 薪水；发工资 </td>
</tr>
<tr>
<td>pacific</td>
<td>a. 平稳的，太平(洋)的 </td>
</tr>
<tr>
<td>strong</td>
<td>a. 强的 </td>
</tr>
<tr>
<td>emphasize</td>
<td>v. 强调，着重，增强 </td>
</tr>
<tr>
<td>department</td>
<td>n. 部门，门类，系 </td>
</tr>
<tr>
<td>forced</td>
<td>a. 强制的，压力的 </td>
</tr>
<tr>
<td>ansi</td>
<td>n. 美国国家标准协会</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-120"><a href="#list-120" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>permanent</td>
<td>a. 永久的 </td>
</tr>
<tr>
<td>remark</td>
<td>n. 评注，备注 </td>
</tr>
<tr>
<td>away</td>
<td>ad. 离开，(去)掉 </td>
</tr>
<tr>
<td>concatenate</td>
<td>vt. 连接，串联，并置 </td>
</tr>
<tr>
<td>lightning</td>
<td>n. 闪电 </td>
</tr>
<tr>
<td>additionally</td>
<td>ad. 另外，又 </td>
</tr>
<tr>
<td>emulate</td>
<td>v. 仿真，模仿；赶上或超过 </td>
</tr>
<tr>
<td>tape</td>
<td>n. 磁带，纸带 </td>
</tr>
<tr>
<td>accidentally</td>
<td>ad. 偶然地</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-121"><a href="#list-121" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>concept</td>
<td>n. 概念 </td>
</tr>
<tr>
<td>optimize</td>
<td>v. 优选，优化 </td>
</tr>
<tr>
<td>counter</td>
<td>n. 计数器，计算器 </td>
</tr>
<tr>
<td>expect</td>
<td>vt. 期望，期待，盼望 </td>
</tr>
<tr>
<td>subsequently</td>
<td>ad. 其后，其次，按着 </td>
</tr>
<tr>
<td>registration</td>
<td>n. 登记，挂号，读数 </td>
</tr>
<tr>
<td>city</td>
<td>n. 城市，市区 </td>
</tr>
<tr>
<td>designate</td>
<td>vt. 任命，标志 </td>
</tr>
<tr>
<td>visible</td>
<td>a. 可见的，明显的 </td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-122"><a href="#list-122" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>consult</td>
<td>v. 咨询，顾问 </td>
</tr>
<tr>
<td>completely</td>
<td>ad. 十分，完全，彻底 </td>
</tr>
<tr>
<td>virtually</td>
<td>ad. 实际上 </td>
</tr>
<tr>
<td>substantially</td>
<td>ad. 实质上，本质上 </td>
</tr>
<tr>
<td>specialize</td>
<td>v. (使)专门化 </td>
</tr>
<tr>
<td>fail</td>
<td>n. 故障，失效 </td>
</tr>
<tr>
<td>primarily</td>
<td>ad. 首先，起初，原来 </td>
</tr>
<tr>
<td>sequentially</td>
<td>ad. 顺序地 </td>
</tr>
<tr>
<td>client</td>
<td>n. 顾客，买主</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-123"><a href="#list-123" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>e</td>
<td>n. 运行时间 </td>
</tr>
<tr>
<td>fix</td>
<td>v. 固定，定影 </td>
</tr>
<tr>
<td>author</td>
<td>n. 程序设计者，作者 </td>
</tr>
<tr>
<td>programmer</td>
<td>n. 程序设计人员 </td>
</tr>
<tr>
<td>commercial</td>
<td>a. 商业的，经济的 </td>
</tr>
<tr>
<td>particularly</td>
<td>ad. 特别，格外，尤其 </td>
</tr>
<tr>
<td>low</td>
<td>a. 低的，浅的，弱的 </td>
</tr>
<tr>
<td>sheet</td>
<td>n. (图)表，纸，片 </td>
</tr>
<tr>
<td>employee</td>
<td>n. 雇员</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-124"><a href="#list-124" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>legal</td>
<td>a. 合法的，法律的 </td>
</tr>
<tr>
<td>qualified</td>
<td>a. 合格的，受限制的 </td>
</tr>
<tr>
<td>context</td>
<td>n. 上下文，来龙去脉 </td>
</tr>
<tr>
<td>involved</td>
<td>a. 有关的 </td>
</tr>
<tr>
<td>conditional</td>
<td>a. 有条件的 </td>
</tr>
<tr>
<td>halfway</td>
<td>a. 中途的，不彻底的 </td>
</tr>
<tr>
<td>oriented</td>
<td>a. 有向的，定向的 </td>
</tr>
<tr>
<td>pair</td>
<td>n. (一)对，一双 </td>
</tr>
<tr>
<td>week</td>
<td>n. (一)星期，(一)周</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-125"><a href="#list-125" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>suppressed</td>
<td>vt. 抑制，取消 </td>
</tr>
<tr>
<td>subroutine</td>
<td>n. 子程序 </td>
</tr>
<tr>
<td>bracketed</td>
<td>a. 加括号的 </td>
</tr>
<tr>
<td>manually</td>
<td>ad. 用手，手动地 </td>
</tr>
<tr>
<td>preset</td>
<td>vt. 预置 </td>
</tr>
<tr>
<td>autoindex</td>
<td>n. 自动变址(数) </td>
</tr>
<tr>
<td>restrict</td>
<td>vt. 约束，限制 </td>
</tr>
<tr>
<td>performance</td>
<td>n. 性能，实绩 </td>
</tr>
<tr>
<td>showing</td>
<td>n. 显示，表现</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-126"><a href="#list-126" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>ever</td>
<td>ad. 在任何时候，曾经 </td>
</tr>
<tr>
<td>distribution</td>
<td>n. 分布，分配 </td>
</tr>
<tr>
<td>denote</td>
<td>vt. 指示，意味着，代表 </td>
</tr>
<tr>
<td>cash</td>
<td>n. 现金 </td>
</tr>
<tr>
<td>repeatedly</td>
<td>ad. 重复地 </td>
</tr>
<tr>
<td>replicate</td>
<td>vt. 重复，复制 </td>
</tr>
<tr>
<td>mega</td>
<td>n. 兆，百万 </td>
</tr>
<tr>
<td>conform</td>
<td>vi. 遵从，符合 </td>
</tr>
<tr>
<td>rebuild</td>
<td>v. 重建，修复，改造</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-127"><a href="#list-127" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>certainty</td>
<td>n. 必然，确实 </td>
</tr>
<tr>
<td>controller</td>
<td>n. 控制器 </td>
</tr>
<tr>
<td>pseudo</td>
<td>a. 假的，伪的，冒充的 </td>
</tr>
<tr>
<td>manage</td>
<td>v. 管理，经营，使用 </td>
</tr>
<tr>
<td>administrator</td>
<td>n. 管理人，行政人员 </td>
</tr>
<tr>
<td>ensemble</td>
<td>n. 总体，集合体 </td>
</tr>
<tr>
<td>bus</td>
<td>n. 总线，信息通路 </td>
</tr>
<tr>
<td>allowable</td>
<td>a. 容许的，承认的 </td>
</tr>
<tr>
<td>limitations</td>
<td>n. 限制，边界 </td>
</tr>
<tr>
<td>restriction</td>
<td>n. 限制，约束，节流</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-128"><a href="#list-128" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>height</td>
<td>n. 高度 </td>
</tr>
<tr>
<td>remainder</td>
<td>n. 余数，余项，剩余 </td>
</tr>
<tr>
<td>traverse</td>
<td>v. 横渡，横过，横断 </td>
</tr>
<tr>
<td>organization</td>
<td>n. 结构，机构，公司 </td>
</tr>
<tr>
<td>resulting</td>
<td>a. 结果的，合成的 </td>
</tr>
<tr>
<td>solution</td>
<td>n. 解，解法，解答 </td>
</tr>
<tr>
<td>external</td>
<td>a. 外部的 </td>
</tr>
<tr>
<td>adequate</td>
<td>a. 足够的，充分的 </td>
</tr>
<tr>
<td>interpretability</td>
<td>n. 配合动作性</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-129"><a href="#list-129" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>vary</td>
<td>v. 变化，变换 </td>
</tr>
<tr>
<td>gap</td>
<td>n. 间隙，间隔，缝隙 </td>
</tr>
<tr>
<td>indexing</td>
<td>n. 变址，标引，加下标 </td>
</tr>
<tr>
<td>board</td>
<td>n. 板，插件板 </td>
</tr>
<tr>
<td>package</td>
<td>n. 插件，(软件)包 </td>
</tr>
<tr>
<td>insertion</td>
<td>n. 插入，嵌入，插页 </td>
</tr>
<tr>
<td>intervene</td>
<td>vi插入，干涉 </td>
</tr>
<tr>
<td>conflict</td>
<td>v. 冲突，碰头 </td>
</tr>
<tr>
<td>really</td>
<td>a. 真正地，确实地</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-130"><a href="#list-130" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>overflow</td>
<td>v. 溢出，上溢 </td>
</tr>
<tr>
<td>charge</td>
<td>n. 电荷，充电，负荷 </td>
</tr>
<tr>
<td>phone</td>
<td>n. 电话，电话机，音素 </td>
</tr>
<tr>
<td>virtual</td>
<td>a. 虚(拟)的，虚拟 </td>
</tr>
<tr>
<td>compose</td>
<td>v. 组成，构成，构图 </td>
</tr>
<tr>
<td>snapshot</td>
<td>n. 抽点打印 </td>
</tr>
<tr>
<td>sensitivity</td>
<td>n. 灵敏度 </td>
</tr>
<tr>
<td>familiar</td>
<td>a. 熟悉的，惯用的 </td>
</tr>
<tr>
<td>mach</td>
<td>n. 马赫(速度单位)</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-131"><a href="#list-131" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>incorrect</td>
<td>a. 错误的，不正确的 </td>
</tr>
<tr>
<td>cut</td>
<td>v. 割，切 </td>
</tr>
<tr>
<td>lowest</td>
<td>a. 最低的，最小的 </td>
</tr>
<tr>
<td>simple</td>
<td>a. 简单的 </td>
</tr>
<tr>
<td>subsequent</td>
<td>a. 后来的，其次的 </td>
</tr>
<tr>
<td>capitalized</td>
<td>a. 大写的 </td>
</tr>
<tr>
<td>compact</td>
<td>a. 紧致的，压缩的 </td>
</tr>
<tr>
<td>plain</td>
<td>n. 明码 </td>
</tr>
<tr>
<td>noted</td>
<td>a. 著名的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-132"><a href="#list-132" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>desirable</td>
<td>a. 所希望的，称心的 </td>
</tr>
<tr>
<td>substitution</td>
<td>n. 代替，替换，置换 </td>
</tr>
<tr>
<td>consume</td>
<td>v. 消耗，使用 </td>
</tr>
<tr>
<td>forget</td>
<td>v. 忘记 </td>
</tr>
<tr>
<td>keyed</td>
<td>a. 键控的 </td>
</tr>
<tr>
<td>overstrike</td>
<td>n. 过打印 </td>
</tr>
<tr>
<td>tornado</td>
<td>n. 旋风，龙卷风 </td>
</tr>
<tr>
<td>quotation</td>
<td>n. 引证，引用(句) </td>
</tr>
<tr>
<td>ones</td>
<td>n. 二进制反码</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-133"><a href="#list-133" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>parse</td>
<td>vt. (语法)分析 </td>
</tr>
<tr>
<td>experience</td>
<td>vt. &amp; n. 试验 </td>
</tr>
<tr>
<td>manufacture</td>
<td>vt. &amp; n. 制造(业)，工业 </td>
</tr>
<tr>
<td>hundred</td>
<td>n. &amp; a. (一)百，百个 </td>
</tr>
<tr>
<td>thousand</td>
<td>n. &amp; a. (一)千，无数的 </td>
</tr>
<tr>
<td>twentieth</td>
<td>n. &amp; a. 第二十(的) </td>
</tr>
<tr>
<td>understanding</td>
<td>n. &amp; a. 了解的，聪明的 </td>
</tr>
<tr>
<td>hand</td>
<td>n. &amp; a. 手，手工(动)的 </td>
</tr>
<tr>
<td>restricting</td>
<td>n. &amp; a. 限制(的)</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-134"><a href="#list-134" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>fancy</td>
<td>n. &amp; a. 想象(的)，精制的 </td>
</tr>
<tr>
<td>wide</td>
<td>a. &amp; ad. 宽的，广阔的 </td>
</tr>
<tr>
<td>fine</td>
<td>a. &amp; ad. 微小的，细的 </td>
</tr>
<tr>
<td>worry</td>
<td>v. &amp; n. (使)烦恼 </td>
</tr>
<tr>
<td>somewhat pro</td>
<td>n. &amp; ad. 稍微，有点 </td>
</tr>
<tr>
<td>quiet</td>
<td>a. &amp; n. 静态，静止的 </td>
</tr>
<tr>
<td>purge</td>
<td>v. &amp; n. 清除 </td>
</tr>
<tr>
<td>mod</td>
<td>a. &amp; n. 时髦的</td>
</tr>
<tr>
<td>whichever</td>
<td>a. &amp; pron. 无论哪个</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-135"><a href="#list-135" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>purchase</td>
<td>n. &amp; v. 购买 </td>
</tr>
<tr>
<td>care</td>
<td>n. &amp; v. 关心，注意 </td>
</tr>
<tr>
<td>watch</td>
<td>n. &amp; v. 监视，观测 </td>
</tr>
<tr>
<td>endeavor</td>
<td>n. &amp; v. 尽力，力图 </td>
</tr>
<tr>
<td>mismatch</td>
<td>n. &amp; vt. 失配，不匹配 </td>
</tr>
<tr>
<td>printout</td>
<td>n. 印出 </td>
</tr>
<tr>
<td>ellipsis</td>
<td>n. 省略符号，省略(法) </td>
</tr>
<tr>
<td>ship</td>
<td>n. 舰，船 </td>
</tr>
<tr>
<td>british</td>
<td>a. &amp; n. 英国的；英国人</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-136"><a href="#list-136" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>parallel</td>
<td>a. 并行 </td>
</tr>
<tr>
<td>custom</td>
<td>a. &amp; n. 常规的，惯例；用户 </td>
</tr>
<tr>
<td>congratulation</td>
<td>n. 祝贺 </td>
</tr>
<tr>
<td>protection</td>
<td>n. 保护 </td>
</tr>
<tr>
<td>glass</td>
<td>n. 玻璃 </td>
</tr>
<tr>
<td>pattern</td>
<td>n. 模式 </td>
</tr>
<tr>
<td>insure</td>
<td>v. 保证，保障 </td>
</tr>
<tr>
<td>stopping</td>
<td>n. 停止，制动(状态) </td>
</tr>
<tr>
<td>factory</td>
<td>n. 工厂，制造厂</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-137"><a href="#list-137" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>implement</td>
<td>n. &amp; vt. 工具；执行，实现 </td>
</tr>
<tr>
<td>effort</td>
<td>n. 工作，研究计划 </td>
</tr>
<tr>
<td>worker</td>
<td>n. 工作人员 </td>
</tr>
<tr>
<td>ampersand</td>
<td>n. &amp;号(and) </td>
</tr>
<tr>
<td>deal</td>
<td>v. 处理，分配，交易 </td>
</tr>
<tr>
<td>power</td>
<td>n. 功率，电源，幂 </td>
</tr>
<tr>
<td>difficulty</td>
<td>n. 困难，难点 </td>
</tr>
<tr>
<td>lose</td>
<td>n. 失去，损失 </td>
</tr>
<tr>
<td>magic</td>
<td>n. 魔术，幻术</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-138"><a href="#list-138" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>proprietary</td>
<td>a. 专有的 </td>
</tr>
<tr>
<td>aware</td>
<td>a. 知道的，察觉到的</td>
</tr>
<tr>
<td>vowel</td>
<td>n. 元音，母音 </td>
</tr>
<tr>
<td>closely</td>
<td>a. 精密地，仔细地 </td>
</tr>
<tr>
<td>accuracy</td>
<td>n. 精确度，准确度 </td>
</tr>
<tr>
<td>traditional</td>
<td>a. 传统的，惯例的 </td>
</tr>
<tr>
<td>synchronization</td>
<td>n. 同步 </td>
</tr>
<tr>
<td>fragment</td>
<td>n. 片段，段，分段 </td>
</tr>
<tr>
<td>primary</td>
<td>a. 原始的，主要的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-139"><a href="#list-139" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>safely</td>
<td>ad. 安全地，确实地 </td>
</tr>
<tr>
<td>habit</td>
<td>n. 习惯 </td>
</tr>
<tr>
<td>comprise</td>
<td>vt. 包括，由…组成 </td>
</tr>
<tr>
<td>landler</td>
<td>n. 兰德勒舞曲 </td>
</tr>
<tr>
<td>absence</td>
<td>n. 缺少，没有 </td>
</tr>
<tr>
<td>revolutionize</td>
<td>vt. 变革，彻底改革 </td>
</tr>
<tr>
<td>constantly</td>
<td>ad. 不变地，经常地 </td>
</tr>
<tr>
<td>seldom</td>
<td>ad. 不常，很少，难得 </td>
</tr>
<tr>
<td>unfortunately</td>
<td>ad. 不幸，遗憾地</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-140"><a href="#list-140" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>expunge</td>
<td>vt. 擦除，删掉 </td>
</tr>
<tr>
<td>security</td>
<td>n. 安全性，保密性 </td>
</tr>
<tr>
<td>touch</td>
<td>v. &amp; n. 按，揿，触；触力 </td>
</tr>
<tr>
<td>contrast</td>
<td>n. 反差，对比，对比度 </td>
</tr>
<tr>
<td>invent</td>
<td>vt. 创造，想象 </td>
</tr>
<tr>
<td>reflect</td>
<td>v. 反射 </td>
</tr>
<tr>
<td>undone</td>
<td>a. 未完成的 </td>
</tr>
<tr>
<td>unshift</td>
<td>v. 未移动，不移档 </td>
</tr>
<tr>
<td>complex</td>
<td>a. &amp; n. 复杂的；复数 </td>
</tr>
<tr>
<td>complexity</td>
<td>n. 复杂性，复杂度</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-141"><a href="#list-141" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>creation</td>
<td>n. 创造，创作 </td>
</tr>
<tr>
<td>unknown</td>
<td>a. 未知的，无名的 </td>
</tr>
<tr>
<td>greatly</td>
<td>ad. 大大地，非常 </td>
</tr>
<tr>
<td>cost</td>
<td>n. 值，价值，成本 </td>
</tr>
<tr>
<td>degrade</td>
<td>v. 降低，减少，递降 </td>
</tr>
<tr>
<td>suggestion</td>
<td>n. 暗示，提醒 </td>
</tr>
<tr>
<td>real</td>
<td>n. 实数，实的，实型 </td>
</tr>
<tr>
<td>experimentation</td>
<td>n. 实验(工作，法) </td>
</tr>
<tr>
<td>experiment</td>
<td>n. 实验，试验(研究) </td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-142"><a href="#list-142" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>substantial</td>
<td>a. 实质的，真正的 </td>
</tr>
<tr>
<td>solely</td>
<td>ad. 独自，单独，只 </td>
</tr>
<tr>
<td>announce</td>
<td>vt. 发表，宣布 </td>
</tr>
<tr>
<td>squeeze</td>
<td>v. 挤压 </td>
</tr>
<tr>
<td>distribute</td>
<td>vt. 分布，配线，配给 </td>
</tr>
<tr>
<td>negate</td>
<td>vt. 否定，求反，”非” </td>
</tr>
<tr>
<td>capture</td>
<td>vt. 俘获，捕捉 </td>
</tr>
<tr>
<td>father</td>
<td>n. 父，上层(树节点的) </td>
</tr>
<tr>
<td>reinstate</td>
<td>vt. 复原，恢复</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-143"><a href="#list-143" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>tutorial</td>
<td>a. 指导的 </td>
</tr>
<tr>
<td>nicety</td>
<td>n. 细节，精细 </td>
</tr>
<tr>
<td>roll</td>
<td>n. &amp; v. 案卷；卷动，滚动 </td>
</tr>
<tr>
<td>exponent</td>
<td>n. 指数，阶，幂 </td>
</tr>
<tr>
<td>exponential</td>
<td>a. 指数的，幂的，阶的 </td>
</tr>
<tr>
<td>prefer</td>
<td>vt. 更喜欢，宁愿 </td>
</tr>
<tr>
<td>complicated</td>
<td>v. 使复杂化，使混乱 </td>
</tr>
<tr>
<td>reactivate</td>
<td>v. 使恢复活动 </td>
</tr>
<tr>
<td>spread</td>
<td>v. 展开，传播</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-144"><a href="#list-144" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>synchronize</td>
<td>v. 使同步 </td>
</tr>
<tr>
<td>formation</td>
<td>n. 构造，结构，形成 </td>
</tr>
<tr>
<td>widely</td>
<td>ad. 广泛，很远 </td>
</tr>
<tr>
<td>comma</td>
<td>n. 逗号”,”，逗点 </td>
</tr>
<tr>
<td>very</td>
<td>ad. 很，非常，最 </td>
</tr>
<tr>
<td>unnecessary</td>
<td>a. 不必要的，多余的 </td>
</tr>
<tr>
<td>unchanged</td>
<td>a. 不变的 </td>
</tr>
<tr>
<td>cross</td>
<td>n. 交叉，十字准线 </td>
</tr>
<tr>
<td>yet</td>
<td>ad. 还，仍然，至今</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-145"><a href="#list-145" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>slowly</td>
<td>ad. 缓慢地 </td>
</tr>
<tr>
<td>inexperienced</td>
<td>a. 不熟练的，外行的 </td>
</tr>
<tr>
<td>noninteractive</td>
<td>a. 不相关的，非交互的 </td>
</tr>
<tr>
<td>unwanted</td>
<td>a. 不需要的，多余的 </td>
</tr>
<tr>
<td>unused</td>
<td>a. 不用的，空着的 </td>
</tr>
<tr>
<td>unmarked</td>
<td>a. 没有标记的 </td>
</tr>
<tr>
<td>nothing</td>
<td>n. 没有任何东西 </td>
</tr>
<tr>
<td>chart</td>
<td>n. 图(表) </td>
</tr>
<tr>
<td>dearly</td>
<td>ad. 极，非常，昂贵地</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-146"><a href="#list-146" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>extremely</td>
<td>ad. 极端地，非常 </td>
</tr>
<tr>
<td>hardly</td>
<td>ad. 几乎不，未必 </td>
</tr>
<tr>
<td>placement</td>
<td>n. 布局 </td>
</tr>
<tr>
<td>think</td>
<td>v. 考虑，以为，判断 </td>
</tr>
<tr>
<td>technical</td>
<td>a. 技术的，专业的 </td>
</tr>
<tr>
<td>idea</td>
<td>n. 思想，观念 </td>
</tr>
<tr>
<td>stamp</td>
<td>n. 图章 </td>
</tr>
<tr>
<td>indirectly</td>
<td>ad. 间接地 </td>
</tr>
<tr>
<td>equation</td>
<td>n. 方程，方程式</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-147"><a href="#list-147" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>smooth</td>
<td>v. &amp; a. 平滑；平滑的 </td>
</tr>
<tr>
<td>attached</td>
<td>a. 附加的</td>
</tr>
<tr>
<td>e</td>
<td>n. 平均，平均数 </td>
</tr>
<tr>
<td>quietly</td>
<td>ad. 静静地 </td>
</tr>
<tr>
<td>discard</td>
<td>v. 删除，废除，放弃 </td>
</tr>
<tr>
<td>never</td>
<td>ad. 决不，从来不 </td>
</tr>
<tr>
<td>initiate</td>
<td>vt. 开创，起始 </td>
</tr>
<tr>
<td>powerful</td>
<td>a. 强大的，大功率的 </td>
</tr>
<tr>
<td>purpose</td>
<td>n. &amp; vt. 目的，用途；打算</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-148"><a href="#list-148" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>regard</td>
<td>vt. 考虑，注意，关系 </td>
</tr>
<tr>
<td>daily</td>
<td>a. 每日的，日常的 </td>
</tr>
<tr>
<td>possibly</td>
<td>ad. 可能地，合理地 </td>
</tr>
<tr>
<td>potentially</td>
<td>ad. 可能地，大概地 </td>
</tr>
<tr>
<td>moreover</td>
<td>ad. 况且，并且，此外 </td>
</tr>
<tr>
<td>american</td>
<td>a. 美国的 </td>
</tr>
<tr>
<td>guard</td>
<td>v. &amp; n. 防护；防护装置 </td>
</tr>
<tr>
<td>world</td>
<td>n. 世界，全球 </td>
</tr>
<tr>
<td>independent</td>
<td>a. 独立的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-149"><a href="#list-149" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>independently</td>
<td>a. 独立地 </td>
</tr>
<tr>
<td>continuously</td>
<td>ad. 连续不断地 </td>
</tr>
<tr>
<td>shield</td>
<td>v. 屏蔽，罩，防护 </td>
</tr>
<tr>
<td>glance</td>
<td>n. 闪烁 </td>
</tr>
<tr>
<td>happening</td>
<td>n. 事件，偶然发生的事 </td>
</tr>
<tr>
<td>transaction</td>
<td>n. 事项，事务，学报 </td>
</tr>
<tr>
<td>emulation</td>
<td>n. 仿真，仿效 </td>
</tr>
<tr>
<td>strike</td>
<td>v. 敲，击 </td>
</tr>
<tr>
<td>dump</td>
<td>v. (内存信息)转储</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-150"><a href="#list-150" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>occasionally</td>
<td>ad. 偶尔(地)，不时 </td>
</tr>
<tr>
<td>tension</td>
<td>n. 张力 </td>
</tr>
<tr>
<td>probable</td>
<td>a. 概率的，可能的 </td>
</tr>
<tr>
<td>talent</td>
<td>n. 才能，技能，人才 </td>
</tr>
<tr>
<td>financial</td>
<td>a. 财务的，金融的 </td>
</tr>
<tr>
<td>meter</td>
<td>n. 仪表，米 </td>
</tr>
<tr>
<td>logged</td>
<td>a. 记录的，浸透的 </td>
</tr>
<tr>
<td>ware</td>
<td>n. 仪器，商品 </td>
</tr>
<tr>
<td>disregard</td>
<td>vt. 轻视，把…忽略不计</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-151"><a href="#list-151" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>waiting</td>
<td>a. 等待的 </td>
</tr>
<tr>
<td>preceding</td>
<td>a. 先的，以前的 </td>
</tr>
<tr>
<td>comparison</td>
<td>n. 比较，对照 </td>
</tr>
<tr>
<td>advanced</td>
<td>a. 先进的，预先的 </td>
</tr>
<tr>
<td>rate</td>
<td>n. 比率，速率，费率 </td>
</tr>
<tr>
<td>fly</td>
<td>v. 飞，跳过 </td>
</tr>
<tr>
<td>programmable</td>
<td>a. 可编程的 </td>
</tr>
<tr>
<td>definable</td>
<td>a. 可定义的，可确定的</td>
</tr>
<tr>
<td>recoverable</td>
<td>a. 可恢复的，可回收的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-152"><a href="#list-152" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>possibility</td>
<td>n. 可能性 </td>
</tr>
<tr>
<td>finisher</td>
<td>n. 成品机 </td>
</tr>
<tr>
<td>applicable</td>
<td>a. 可适用的，合适的 </td>
</tr>
<tr>
<td>printable</td>
<td>a. 可印刷的 </td>
</tr>
<tr>
<td>executable</td>
<td>a. 可执行的 </td>
</tr>
<tr>
<td>essentially</td>
<td>ad. 实质上，本来 </td>
</tr>
<tr>
<td>confuse</td>
<td>vt. 使混乱，干扰 </td>
</tr>
<tr>
<td>familiarize</td>
<td>vt. 使熟悉，使通俗化 </td>
</tr>
<tr>
<td>employe</td>
<td>vt. 使用，花费</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-153"><a href="#list-153" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>suitable</td>
<td>a. 适合的，相适宜的 </td>
</tr>
<tr>
<td>generation</td>
<td>n. (世)代，(发展)阶段 </td>
</tr>
<tr>
<td>quality</td>
<td>n. 质量，性质，属性 </td>
</tr>
<tr>
<td>defective</td>
<td>a. 故障的，有毛病的 </td>
</tr>
<tr>
<td>interpretable</td>
<td>a. 彼此协作的 </td>
</tr>
<tr>
<td>interest</td>
<td>n. 兴趣，注意，影响 </td>
</tr>
<tr>
<td>fourscore</td>
<td>n. 八十 </td>
</tr>
<tr>
<td>teach</td>
<td>v. 教，讲授 </td>
</tr>
<tr>
<td>procedural</td>
<td>a. 程序上的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-154"><a href="#list-154" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>phrase</td>
<td>n. 短语，成语 </td>
</tr>
<tr>
<td>specifically</td>
<td>ad. 特别地，逐一地 </td>
</tr>
<tr>
<td>penalty</td>
<td>n. 惩罚，罚款，负担 </td>
</tr>
<tr>
<td>violate</td>
<td>vt. 违犯，妨碍，破坏 </td>
</tr>
<tr>
<td>indefinitely</td>
<td>ad. 无限地，无穷地 </td>
</tr>
<tr>
<td>major</td>
<td>a. 较大的，主要的 </td>
</tr>
<tr>
<td>higher</td>
<td>a. 较高的 </td>
</tr>
<tr>
<td>wise</td>
<td>a. 聪明的 </td>
</tr>
<tr>
<td>becoming</td>
<td>a. 合适的，相称的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-155"><a href="#list-155" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>equally</td>
<td>ad. 相等地，相同地 </td>
</tr>
<tr>
<td>enjoy</td>
<td>vt. 享受，欣赏，喜爱 </td>
</tr>
<tr>
<td>forth</td>
<td>ad. 向前 </td>
</tr>
<tr>
<td>disappear</td>
<td>vi. 消失 </td>
</tr>
<tr>
<td>crop</td>
<td>v. 切，剪切 </td>
</tr>
<tr>
<td>diagonally</td>
<td>ad. 斜(对) </td>
</tr>
<tr>
<td>labeled</td>
<td>a. 有标号的 </td>
</tr>
<tr>
<td>decision</td>
<td>n. 判定，决定，决策 </td>
</tr>
<tr>
<td>effective</td>
<td>a. 有效的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-156"><a href="#list-156" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>significant</td>
<td>a. 有效的，有意义的 </td>
</tr>
<tr>
<td>avail</td>
<td>v. &amp; n. 有益于；利益 </td>
</tr>
<tr>
<td>hang</td>
<td>v. 中止，暂停，挂起 </td>
</tr>
<tr>
<td>craze</td>
<td>n. &amp; v. 裂纹开裂 </td>
</tr>
<tr>
<td>consequently</td>
<td>ad. 因此，从而 </td>
</tr>
<tr>
<td>introduce</td>
<td>vt. 引进，引导 </td>
</tr>
<tr>
<td>team</td>
<td>n. 队，小组 </td>
</tr>
<tr>
<td>visual</td>
<td>a. 视觉的，直观的 </td>
</tr>
<tr>
<td>acknowledgment</td>
<td>n. 接收(收妥)，承认 </td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-157"><a href="#list-157" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>efficiently</td>
<td>ad. 有效地 </td>
</tr>
<tr>
<td>predict</td>
<td>vt. 预测，预言 </td>
</tr>
<tr>
<td>anticipate</td>
<td>vt. 预先考虑，抢…先 </td>
</tr>
<tr>
<td>bypass</td>
<td>n. 旁路 </td>
</tr>
<tr>
<td>nature</td>
<td>n. 自然，天然 </td>
</tr>
<tr>
<td>natural</td>
<td>a. 自然的 </td>
</tr>
<tr>
<td>grant</td>
<td>vt. 允许，授权 </td>
</tr>
<tr>
<td>logarithm</td>
<td>n. 对数 </td>
</tr>
<tr>
<td>reappears</td>
<td>vi. 再现，重现</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-158"><a href="#list-158" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>reload</td>
<td>vt. 再装入 </td>
</tr>
<tr>
<td>occupy</td>
<td>vt. 占有，充满 </td>
</tr>
<tr>
<td>photograph</td>
<td>n. 照片；v.照相</td>
</tr>
<tr>
<td>resolve</td>
<td>v. 分辨，解像 </td>
</tr>
<tr>
<td>unsafe</td>
<td>v. 恢复 </td>
</tr>
<tr>
<td>separator</td>
<td>n. 分隔符 </td>
</tr>
<tr>
<td>hierarchical</td>
<td>a. 分级的，分层的 </td>
</tr>
<tr>
<td>assortment</td>
<td>n. 种类，花色品种 </td>
</tr>
<tr>
<td>growing</td>
<td>n. 分类，分组，成群</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-159"><a href="#list-159" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>discussion</td>
<td>n. 讨论，商议，论述 </td>
</tr>
<tr>
<td>alphabet</td>
<td>n. 字母，字母表 </td>
</tr>
<tr>
<td>scattered</td>
<td>a. 分散的</td>
</tr>
<tr>
<td>superimpose</td>
<td>vt. 重叠，叠加 </td>
</tr>
<tr>
<td>reorganization</td>
<td>vt. 重排，改组</td>
</tr>
<tr>
<td>ready</td>
<td>a. 就绪，准备好的</td>
</tr>
<tr>
<td>already</td>
<td>ad. 已经，早已</td>
</tr>
<tr>
<td>readily</td>
<td>ad. 容易地，不勉强</td>
</tr>
<tr>
<td>read</td>
<td>v. 读，读阅</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-160"><a href="#list-160" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>reading</td>
<td>n. 读，读数</td>
</tr>
<tr>
<td>readable</td>
<td>a. 可读的</td>
</tr>
<tr>
<td>reread</td>
<td>vt. 重读</td>
</tr>
<tr>
<td>write</td>
<td>v. 写，存入 </td>
</tr>
<tr>
<td>rewrite</td>
<td>vt. 重写，再生</td>
</tr>
<tr>
<td>overwrite</td>
<td>v. 重写(覆盖)</td>
</tr>
<tr>
<td>university</td>
<td>n. (综合性)大学 </td>
</tr>
<tr>
<td>deter</td>
<td>vt. 阻止，拦住，妨碍 </td>
</tr>
<tr>
<td>pool</td>
<td>n. &amp; v. 池，坑；共享</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-161"><a href="#list-161" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>moment</td>
<td>n. 矩，力矩，磁矩</td>
</tr>
<tr>
<td>shut</td>
<td>v. 关闭 </td>
</tr>
<tr>
<td>closed</td>
<td>a. 关闭的，闭迹 </td>
</tr>
<tr>
<td>respond</td>
<td>v. 回答，响应</td>
</tr>
<tr>
<td>repeating</td>
<td>n. 重复，循环 </td>
</tr>
<tr>
<td>repetitive</td>
<td>a. 重复的 </td>
</tr>
<tr>
<td>reenter</td>
<td>v. 重新进入 </td>
</tr>
<tr>
<td>rearrange</td>
<td>v. 重新整理，重新排序 </td>
</tr>
<tr>
<td>rectangular</td>
<td>a. 矩形的，成直角的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-162"><a href="#list-162" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>tag</td>
<td>n. 特征，标记，标识符</td>
</tr>
<tr>
<td>price</td>
<td>n. 价格</td>
</tr>
<tr>
<td>suppose</td>
<td>v. 假定，推测 </td>
</tr>
<tr>
<td>supposed</td>
<td>a. 假定的，推测的 </td>
</tr>
<tr>
<td>manipulating</td>
<td>v. 操纵，操作</td>
</tr>
<tr>
<td>operator</td>
<td>n. 操作员，运算符 </td>
</tr>
<tr>
<td>masking</td>
<td>n. 掩蔽，屏蔽</td>
</tr>
<tr>
<td>demonstrate</td>
<td>v. 论证，证明，证实 </td>
</tr>
<tr>
<td>importance</td>
<td>n. 价值，重要</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-163"><a href="#list-163" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>pipe</td>
<td>n. 管，导管 </td>
</tr>
<tr>
<td>overall</td>
<td>a. 总共的，全部的 </td>
</tr>
<tr>
<td>turnkey</td>
<td>n. 总控钥匙 </td>
</tr>
<tr>
<td>restricted</td>
<td>a. 受限制的，受约束的 </td>
</tr>
<tr>
<td>suspension</td>
<td>n. 暂停，中止，挂起 </td>
</tr>
<tr>
<td>seamless</td>
<td>a. 无缝的</td>
</tr>
<tr>
<td>unsigned</td>
<td>a. 无符号的 </td>
</tr>
<tr>
<td>unformatted</td>
<td>a. 无格式的 </td>
</tr>
<tr>
<td>infinite</td>
<td>a. 无限的，无穷的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-164"><a href="#list-164" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>useless</td>
<td>a. 无用的</td>
</tr>
<tr>
<td>limiter</td>
<td>n. 限制(幅)器 </td>
</tr>
<tr>
<td>mountain</td>
<td>n. 高山，山脉</td>
</tr>
<tr>
<td>redundant</td>
<td>a. 冗余的 </td>
</tr>
<tr>
<td>dependent</td>
<td>a. 相关的 </td>
</tr>
<tr>
<td>contiguous</td>
<td>a. 相连的，邻接的 </td>
</tr>
<tr>
<td>consistent</td>
<td>a. 相容的，一致的</td>
</tr>
<tr>
<td>multiprocessing</td>
<td>n. 多重处理，多道处理 </td>
</tr>
<tr>
<td>architecture</td>
<td>n. 结构，构造</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-165"><a href="#list-165" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>structural</td>
<td>a. 结构的，结构上的</td>
</tr>
<tr>
<td>outcome</td>
<td>n. 结果，成果，输出</td>
</tr>
<tr>
<td>opinion</td>
<td>n. 意见，见解，判断 </td>
</tr>
<tr>
<td>association</td>
<td>n. 结合，协会，联想</td>
</tr>
<tr>
<td>interpret</td>
<td>v. 解释</td>
</tr>
<tr>
<td>explanatory</td>
<td>a. 解释(性)的 </td>
</tr>
<tr>
<td>assemble</td>
<td>v. 汇编，装配 </td>
</tr>
<tr>
<td>assembler</td>
<td>n. 汇编程序</td>
</tr>
<tr>
<td>cad</td>
<td>计算机辅助设计</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-166"><a href="#list-166" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>arithmetic</td>
<td>n. 算术，运算 </td>
</tr>
<tr>
<td>varying</td>
<td>a. 变化的，可变的</td>
</tr>
<tr>
<td>typical</td>
<td>a. 典型的，标准的</td>
</tr>
<tr>
<td>representative</td>
<td>a. 典型的，表示的</td>
</tr>
<tr>
<td>sufficient</td>
<td>a. 充足的，足够的 </td>
</tr>
<tr>
<td>blast</td>
<td>v. &amp; n. 清除；爆炸 </td>
</tr>
<tr>
<td>clean</td>
<td>a. 清洁的，干净的 </td>
</tr>
<tr>
<td>caret</td>
<td>n. 插入符号</td>
</tr>
<tr>
<td>socket</td>
<td>n. 插座，插孔，插口</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-167"><a href="#list-167" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>stated</td>
<td>a. 规定的</td>
</tr>
<tr>
<td>protocol</td>
<td>n. 规约，协议，规程 </td>
</tr>
<tr>
<td>presence</td>
<td>n. 存在，有 </td>
</tr>
<tr>
<td>telephone</td>
<td>n. 电话</td>
</tr>
<tr>
<td>lending</td>
<td>n. &amp; a. 借给，出租；借出的 </td>
</tr>
<tr>
<td>mixture</td>
<td>n. 混合物</td>
</tr>
<tr>
<td>situation</td>
<td>n. 情况，状况，势态</td>
</tr>
<tr>
<td>circumstances</td>
<td>n. 情况，环境，细节 </td>
</tr>
<tr>
<td>representation</td>
<td>n. 表示</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-168"><a href="#list-168" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>esoteric</td>
<td>a. 深奥的，奥秘的 </td>
</tr>
<tr>
<td>depth</td>
<td>n. 深度，浓度(颜色的)</td>
</tr>
<tr>
<td>final</td>
<td>a. 最终的</td>
</tr>
<tr>
<td>eventually</td>
<td>ad. 终于，最后 </td>
</tr>
<tr>
<td>finally</td>
<td>ad. 终于，最后</td>
</tr>
<tr>
<td>physically</td>
<td>a. 物理上，实际上</td>
</tr>
<tr>
<td>please</td>
<td>v. 请</td>
</tr>
<tr>
<td>aid</td>
<td>n. 帮助，辅助程序</td>
</tr>
<tr>
<td>successive</td>
<td>a. 逐次的，相继的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-169"><a href="#list-169" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>succession</td>
<td>n. 逐次性，连续性</td>
</tr>
<tr>
<td>alignment</td>
<td>n. 序列，成直线 </td>
</tr>
<tr>
<td>chunk</td>
<td>n. 厚块，大部分</td>
</tr>
<tr>
<td>big</td>
<td>a. 大的，重要的</td>
</tr>
<tr>
<td>unpack</td>
<td>v. 拆开，卸，分开</td>
</tr>
<tr>
<td>book</td>
<td>n. 书，手册，源程序块</td>
</tr>
<tr>
<td>desk</td>
<td>n. 书桌，控制台，面板 </td>
</tr>
<tr>
<td>equipment</td>
<td>n. 设备，装备，仪器 </td>
</tr>
<tr>
<td>typewriter</td>
<td>n. 打字机</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-170"><a href="#list-170" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>clipper</td>
<td>n. 限幅器，钳位器</td>
</tr>
<tr>
<td>sensitive</td>
<td>a. 敏感的，灵敏的 </td>
</tr>
<tr>
<td>reduction</td>
<td>n. 减化，还原，减少 </td>
</tr>
<tr>
<td>indentation</td>
<td>n. 缩进，缩排</td>
</tr>
<tr>
<td>term</td>
<td>n. 项，条款，术语</td>
</tr>
<tr>
<td>terminology</td>
<td>n. 术语</td>
</tr>
<tr>
<td>terminating</td>
<td>n. 终止，终结，收信</td>
</tr>
<tr>
<td>terminal</td>
<td>n. 终端，端子</td>
</tr>
<tr>
<td>terminate</td>
<td>v. 端接，终止</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-171"><a href="#list-171" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>determine</td>
<td>v. 确定</td>
</tr>
<tr>
<td>determined</td>
<td>a. 坚决的，毅然的 </td>
</tr>
<tr>
<td>accommodate</td>
<td>v. 调节，适应   </td>
</tr>
<tr>
<td>gain</td>
<td>n. 增益(系数) </td>
</tr>
<tr>
<td>ascending</td>
<td>a. 增长的，向上的 </td>
</tr>
<tr>
<td>augment</td>
<td>v. 增加，添加，扩充 </td>
</tr>
<tr>
<td>increment</td>
<td>n. 增量，加１，递增 </td>
</tr>
<tr>
<td>obsolete</td>
<td>a. 作废的，过时的 </td>
</tr>
<tr>
<td>motif</td>
<td>n. 主题，要点，特色 </td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-172"><a href="#list-172" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>subject</td>
<td>n. 主题，源</td>
</tr>
<tr>
<td>job</td>
<td>n. 作业</td>
</tr>
<tr>
<td>stream</td>
<td>n. 流</td>
</tr>
<tr>
<td>locking</td>
<td>n. 锁定，加锁</td>
</tr>
<tr>
<td>progress</td>
<td>n. 进度，进展</td>
</tr>
<tr>
<td>differentiate</td>
<td>v. 区别，分辨 </td>
</tr>
<tr>
<td>distinction</td>
<td>n. 区别，相异，特性 </td>
</tr>
<tr>
<td>distinguish</td>
<td>v. 区别，辨识</td>
</tr>
<tr>
<td>basis</td>
<td>n. 基础，座</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-173"><a href="#list-173" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>underlying</td>
<td>a. 基础的，根本的</td>
</tr>
<tr>
<td>fundamental</td>
<td>a. 基本的，根本的 </td>
</tr>
<tr>
<td>sound</td>
<td>n. 声音，音响</td>
</tr>
<tr>
<td>tone</td>
<td>n. 音调，音色，色调</td>
</tr>
<tr>
<td>vital</td>
<td>a. 生动的，不可缺少的</td>
</tr>
<tr>
<td>social</td>
<td>a. 社会的 </td>
</tr>
<tr>
<td>national</td>
<td>a. 国家的</td>
</tr>
<tr>
<td>sale</td>
<td>n. 销售，销路 </td>
</tr>
<tr>
<td>agree</td>
<td>v. 符合，相同</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-174"><a href="#list-174" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>course</td>
<td>n. 过程，航向，课程</td>
</tr>
<tr>
<td>exceeded</td>
<td>a. 过度的，非常的</td>
</tr>
<tr>
<td>iterative</td>
<td>a. 迭代的 </td>
</tr>
<tr>
<td>inclusive</td>
<td>a. 包括的，内含的 </td>
</tr>
<tr>
<td>charm</td>
<td>n. 吸引力</td>
</tr>
<tr>
<td>hit</td>
<td>v. 命中，瞬时干扰</td>
</tr>
<tr>
<td>numeral</td>
<td>n. &amp; n. 数字的，数码</td>
</tr>
<tr>
<td>numeric</td>
<td>n. &amp; a. 数字的，分数</td>
</tr>
<tr>
<td>numerous</td>
<td>a. 为数众多的，无数的</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-175"><a href="#list-175" class="headerlink" title="list"></a>list</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>numerical</td>
<td>a. 数量的，数字的</td>
</tr>
<tr>
<td>digital</td>
<td>a. 数字的</td>
</tr>
<tr>
<td>digit</td>
<td>n. 数字，位数，位</td>
</tr>
<tr>
<td>combo</td>
<td>n. 二进位组合码</td>
</tr>
<tr>
<td>combine</td>
<td>v. 组合，联合</td>
</tr>
<tr>
<td>combination</td>
<td>n. 结合，组合</td>
</tr>
<tr>
<td>cord</td>
<td>n. 绳子，电线</td>
</tr>
<tr>
<td>record</td>
<td>n. 记录</td>
</tr>
<tr>
<td>according to</td>
<td>a. 按照，根据</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
  </entry>
  <entry>
    <title>数学大观</title>
    <url>/2020/05/%E6%95%B0%E5%AD%A6%E5%A4%A7%E8%A7%82/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h2><h3 id="代数"><a href="#代数" class="headerlink" title="代数"></a>代数</h3><h4 id="线性代数的本质"><a href="#线性代数的本质" class="headerlink" title="线性代数的本质"></a>线性代数的本质</h4><p><a href="https://www.bilibili.com/video/BV1s4411S78P?p=3" target="_blank" rel="noopener">线性代数的本质</a></p>
<blockquote>
<p>数学需要的不是天赋，而是少量的自由想象，但想象太过自由又会陷入疯狂。</p>
<p>—安古斯.罗杰斯</p>
</blockquote>
<h4 id="向量的概念"><a href="#向量的概念" class="headerlink" title="向量的概念"></a>向量的概念</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">向量</span><br><span class="line">	物理学专业视角看向量（决定向量是它的长度和所指的方向）</span><br><span class="line">	计算机专业视角看向量（向量是有序数字列表）比如：房屋的价格和房屋的面积。</span><br><span class="line">	数学专业视角看向量（具有概括性）</span><br><span class="line">	</span><br><span class="line">向量的运算</span><br><span class="line">	加(向量延长)</span><br><span class="line">	数乘（向量缩放）</span><br><span class="line">	</span><br><span class="line">基向量</span><br><span class="line">	基向量决定向量张成的形态，在数据分析中向量的基是不同的类别</span><br><span class="line">	向量共线，两个向量叠加了。</span><br><span class="line">	零向量待在原点</span><br><span class="line"></span><br><span class="line">线性组合</span><br><span class="line">	两个数乘向量的和被称为这两个向量的线性组合。</span><br><span class="line">	</span><br><span class="line">给定向量张成的空间</span><br><span class="line">	给定所有向量线性组合的向量的集合</span><br><span class="line">	两个三维向量张成的空间是个平面</span><br><span class="line">	</span><br><span class="line">线性相关</span><br><span class="line">	对于张成的空间没有贡献的向量</span><br><span class="line">	一个向量可以表示为其他向量的线性组合，因为这个向量已经落在其他向量张成的空间上</span><br><span class="line">	</span><br><span class="line">线性无关</span><br><span class="line">	所有向量给张成的空间增加了维度就叫线性无关的</span><br><span class="line">	</span><br><span class="line">线性变换(变换其实是函数)</span><br><span class="line">	<span class="number">1</span>、直线再变换后仍保持为直线，不能有所弯曲</span><br><span class="line">	<span class="number">2</span>、原点必须保持固定</span><br><span class="line">	</span><br><span class="line">复合变换</span><br><span class="line">	矩阵乘法</span><br></pre></td></tr></table></figure>
<p><a href="https://www.bilibili.com/video/BV1uQ4y1M7yG?from=search&amp;seid=8311637673933044236" target="_blank" rel="noopener">中国科学院 席南华院士-代数</a></p>
<ul>
<li>代数运算 +，-，* ，/</li>
<li>多项式</li>
</ul>
<h4 id="集合与映射"><a href="#集合与映射" class="headerlink" title="集合与映射"></a>集合与映射</h4><figure class="highlight gml"><table><tr><td class="code"><pre><span class="line">集合</span><br><span class="line"># 集合没法定义，可以解释</span><br><span class="line"># 现代数学的重要基础</span><br><span class="line">集合的记法</span><br><span class="line">    枚举法 &#123;<span class="number">1</span>,<span class="number">2</span>,...,n&#125;</span><br><span class="line">    通过性质描述 S =&#123;(<span class="symbol">x</span>,<span class="symbol">y</span>)|<span class="symbol">x</span>^<span class="number">2</span>+<span class="symbol">y</span>^<span class="number">2</span>=<span class="number">1</span>,<span class="symbol">x</span>,<span class="symbol">y</span> 实数&#125;</span><br><span class="line">    固定的记号</span><br><span class="line">        Z 整数级 (德文)</span><br><span class="line">        N 自然数 &#123;<span class="number">1</span>,<span class="number">2</span>,...,n&#125;</span><br><span class="line">        Q 有理数集</span><br><span class="line">        R 实数集</span><br><span class="line">        C 复数集</span><br><span class="line">        空集</span><br><span class="line">        一切</span><br><span class="line">    集合的关系</span><br><span class="line">        元素与集合的关系</span><br><span class="line">            属于</span><br><span class="line">            不属于</span><br><span class="line">        集合与集合的关系</span><br><span class="line">            子集</span><br><span class="line">                包含</span><br><span class="line">                相等</span><br><span class="line">                # 很多时候集合形态不一 &#123;<span class="number">0</span>，<span class="number">1</span>，<span class="number">2</span>，...n&#125; &#123;<span class="symbol">x</span>|<span class="symbol">x</span>,<span class="symbol">x</span> 是自然数&#125;</span><br><span class="line">            # 约定 空集是任何集合的子集</span><br><span class="line">    集合之间的运算</span><br><span class="line">        并</span><br><span class="line">        交</span><br><span class="line">        差</span><br><span class="line">        补</span><br><span class="line">        笛卡尔积 AxB = &#123;(<span class="symbol">x</span>,<span class="symbol">y</span>)|<span class="symbol">x</span>,<span class="symbol">y</span>属于A&#125; (<span class="symbol">x</span>,<span class="symbol">y</span>) 是有序对</span><br><span class="line">    集合运算定律</span><br><span class="line"></span><br><span class="line">有限集 |<span class="symbol">x</span>|</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">映射</span><br><span class="line">    X,Y 集合</span><br><span class="line">    X 到 Y 的映射指按照一定规则把X中每个元素都有Y中一个元素与之对应。</span><br><span class="line">    记号 F：X -&gt; Y</span><br><span class="line">重要的映射</span><br><span class="line">    单射：</span><br><span class="line">    满射：全部映射</span><br><span class="line">    双射：即使单射，又是满射。</span><br><span class="line">    # 双射有逆映射</span><br><span class="line">    # 重要的两个概念，恒等映射，映射合成。</span><br><span class="line">恒等映射:</span><br><span class="line"></span><br><span class="line">映射合成gf: 类似复函数,（gf 是乘法）</span><br><span class="line">    g(f(<span class="symbol">x</span>))</span><br><span class="line">    左逆</span><br><span class="line">    右逆</span><br><span class="line">    双边逆</span><br><span class="line">映射相等</span><br><span class="line">    </span><br><span class="line">映射运算定律</span><br><span class="line">    结合性</span><br><span class="line">    </span><br><span class="line">像</span><br><span class="line">    原像 X -&gt;自变量集合</span><br><span class="line">    <span class="symbol">y</span> 的纤维（几何里用）</span><br><span class="line"></span><br><span class="line">置换</span><br><span class="line">    从X的自身的双射称为<span class="symbol">x</span>的一个置换，S</span><br><span class="line">简单置换 恒等置换</span><br><span class="line">一般置换</span><br><span class="line">循环（置换）</span><br><span class="line">	k 称 长度</span><br><span class="line">	约定：长度为<span class="number">1</span>，恒等置换 eT=Te=T</span><br><span class="line">	两个不相交的循环</span><br><span class="line">	定理：每一个置换都可以写成不相交的循环的乘积</span><br><span class="line">	</span><br><span class="line">对换</span><br><span class="line">	改变两个元素的置换称为对换</span><br></pre></td></tr></table></figure>
<h4 id="方程"><a href="#方程" class="headerlink" title="方程"></a>方程</h4> <figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"># **变元在方程中意义**：<span class="number">10</span>个苹果<span class="number">2</span>人分 <span class="keyword">or</span> <span class="number">50</span>个苹果<span class="number">2</span>人分，x 都没有变化？ </span><br><span class="line"># 方程：<span class="number">2</span>x=<span class="number">10</span>；<span class="number">2</span>x=<span class="number">50</span></span><br><span class="line">高次方程</span><br><span class="line">    高次方程求解引出代数系统</span><br><span class="line">    代数系统</span><br><span class="line">        群</span><br><span class="line">        环</span><br><span class="line">        域</span><br><span class="line"></span><br><span class="line">多元方程一次</span><br><span class="line"># <span class="number">20</span>个苹果分给 <span class="number">3</span>个大和尚，<span class="number">2</span>个小和尚，各分多少个？。<span class="number">3</span>x+<span class="number">2</span>y=<span class="number">20</span>；x,y 表示类别；<span class="number">3</span>，<span class="number">2</span> 表示分量(系数)；<span class="number">20</span> 表示(总量)常数项</span><br><span class="line"># 扩展到高次</span><br><span class="line"></span><br><span class="line">多元方程高次</span><br><span class="line"># <span class="number">3</span>x^<span class="number">2</span>+<span class="number">2</span>y=<span class="number">20</span> x^<span class="number">2</span>表示意义重复次数</span><br><span class="line"># y=<span class="number">4</span> 则两个小和尚分到<span class="number">8</span>个，<span class="number">3</span>个大和尚分到<span class="number">12</span>个，每个人分<span class="number">4</span>个。大和尚们上午分一次，下午分一次。哈哈</span><br><span class="line"># 可计算的方程，线性方程(多元一次)</span><br><span class="line"></span><br><span class="line">线性方程组</span><br><span class="line"># n个多元一次方程组成</span><br><span class="line">    系数</span><br><span class="line">    常数</span><br><span class="line">    记号: m1 </span><br><span class="line">        # 注意记号混淆导致求解过程出错</span><br><span class="line">        m 表示第几个方程</span><br><span class="line">        <span class="number">1</span> 表示位置量</span><br><span class="line"></span><br><span class="line">线性方程组求解</span><br><span class="line">    无解(等式矛盾)</span><br><span class="line">        有时需要逼近</span><br><span class="line">    有解（一定能够推导出恒等式 如：<span class="number">0</span>=b1）</span><br><span class="line">        有多少解</span><br><span class="line">        唯一解</span><br><span class="line"> # 线性方程组是有结构的，相互之间可以做运算</span><br><span class="line"></span><br><span class="line">求解的方法</span><br><span class="line">    高斯消元法</span><br><span class="line">        交换两个方程 （<span class="number">1</span>型初等变换）</span><br><span class="line">        某个方程加上另一个方程的倍数 （<span class="number">2</span>型初等变换）</span><br><span class="line">    等价关系 有共同解的方程组。表示意义:事物间的联系。 无解方程等价。</span><br><span class="line">    &gt; 理论指导实践。直接可以求解，就不需要理论。</span><br><span class="line"></span><br><span class="line">矩阵</span><br><span class="line">   系数矩阵：方程系数列式</span><br><span class="line">   增广矩阵：方程的系数+方程的常数项</span><br><span class="line">   阶梯型矩阵（消元的结果）</span><br><span class="line">   齐次方程组 常数项都为零的方程组（一定有解）</span><br><span class="line">        当一般线性方程组 m=n 有唯一解，齐次方程组有 <span class="number">0</span> 解</span><br><span class="line"></span><br><span class="line">行列式（矩阵的一个从属的数）</span><br><span class="line">    二元二次方程</span><br><span class="line">        消元法（进行推导）</span><br><span class="line">            乘倍数</span><br><span class="line">            再相减</span><br><span class="line">        猜测（利用消元法验证）</span><br><span class="line">            分子 把未知量系数换成常数项</span><br><span class="line">            分母 方程的矩阵</span><br><span class="line"></span><br><span class="line">笛卡尔积： 线性方程组，每个数组看着元素</span><br><span class="line">	 加法</span><br><span class="line">	 乘法</span><br><span class="line">	 	纯量乘法</span><br><span class="line">向量空间（长度为n的行向量空间）</span><br><span class="line"></span><br><span class="line">运算的性质</span><br><span class="line">	加法</span><br><span class="line">		交换律</span><br><span class="line">		结合律</span><br><span class="line">		零元</span><br><span class="line">		负元</span><br><span class="line">	纯量乘法</span><br><span class="line">		X*<span class="number">1</span>=X</span><br><span class="line">		(a+b)X = aX+bX</span><br><span class="line"> 		(ab)x = a(bx)</span><br><span class="line"> 		</span><br><span class="line"> 线性组合（数列 + 向量，结果仍然落在向量空间中）</span><br><span class="line"> 	线性相关 （线性组合k系数有一个不为等于<span class="number">0</span>）</span><br><span class="line"> 	线性无关 （线性组合k系数全为<span class="number">0</span>）</span><br><span class="line"></span><br><span class="line">线性子空间(线性子空间)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>线性方程</tag>
        <tag>矩阵</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机英语</title>
    <url>/2020/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%8B%B1%E8%AF%AD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="计算机专业-（Computer-Science-计算机科学）"><a href="#计算机专业-（Computer-Science-计算机科学）" class="headerlink" title="计算机专业 （Computer Science 计算机科学）"></a>计算机专业 （Computer Science 计算机科学）</h2><h3 id="美国计算机专业院校排名前十-University-Rankings"><a href="#美国计算机专业院校排名前十-University-Rankings" class="headerlink" title="美国计算机专业院校排名前十 University Rankings"></a>美国计算机专业院校排名前十 University Rankings</h3><ul>
<li><a href="https://www.cmu.edu/" target="_blank" rel="noopener">卡耐基梅隆大学</a>    Carnegie Mellon University    5    Pittsburgh, PA</li>
<li><a href="https://www.mit.edu/" target="_blank" rel="noopener">麻省理工学院</a>    Massachusetts Institute of Technology    5    Cambridge, MA</li>
<li><a href="https://www.stanford.edu/" target="_blank" rel="noopener">斯坦福大学</a>    Stanford University    5    Stanford, CA</li>
<li><a href="https://www.berkeley.edu/" target="_blank" rel="noopener">加州大学伯克利分校</a>    University of California—Berkeley    5    Berkeley, CA</li>
<li>伊利诺伊大学厄本那-香槟分校    University of Illinois—Urbana-Champaign    4.6    Urbana, IL</li>
<li>康奈尔大学    Cornell University    4.5    Ithaca, NY</li>
<li>华盛顿大学    University of Washington    4.5    Seattle, WA</li>
<li>佐治亚理工学院    Georgia Institute of Technology    4.4    Atlanta, GA</li>
<li>普林斯顿大学    Princeton University    4.4    Princeton, NJ</li>
<li>德克萨斯大学奥斯汀分校    University of Texas—Austin    4.3    Austin, TX</li>
</ul>
<h3 id="国内计算机专业院校排名"><a href="#国内计算机专业院校排名" class="headerlink" title="国内计算机专业院校排名"></a>国内计算机专业院校排名</h3><ul>
<li><a href="https://www.tsinghua.edu.cn/" target="_blank" rel="noopener">清华大学</a></li>
<li><a href="https://www.nudt.edu.cn/" target="_blank" rel="noopener">国防科学技术大学</a></li>
<li><a href="https://www.pku.edu.cn/" target="_blank" rel="noopener">北京大学</a></li>
<li><a href="https://www.buaa.edu.cn/" target="_blank" rel="noopener">北京航空航天大学</a></li>
<li>哈尔滨工业大学</li>
<li>上海交通大学</li>
<li>浙江大学</li>
<li>南京大学</li>
<li>中国科学技术大学</li>
<li>东北大学</li>
</ul>
<h3 id="第一类，研究理论层面"><a href="#第一类，研究理论层面" class="headerlink" title="第一类，研究理论层面"></a>第一类，研究理论层面</h3><figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line">计算理论 Theory <span class="keyword">of</span> computation</span><br><span class="line">计算几何学 Computational Geometry</span><br><span class="line">并行计算 <span class="keyword">Parallel</span> Computation</span><br><span class="line">形式化方法 Formal <span class="function"><span class="keyword">Method</span></span></span><br><span class="line"><span class="function">程序设计语言理论 <span class="title">Theory</span> <span class="title">of</span> <span class="title">programming</span> <span class="title">language</span></span></span><br><span class="line"><span class="function">人工智能 <span class="title">Artificial</span> <span class="title">Intelligence</span></span></span><br></pre></td></tr></table></figure>
<h3 id="第二类，系统软件层面"><a href="#第二类，系统软件层面" class="headerlink" title="第二类，系统软件层面"></a>第二类，系统软件层面</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">体系结构<span class="built_in"> System </span>Architecture</span><br><span class="line">网络与通讯 Networkand Communication</span><br><span class="line">面向对象 Object-oriented</span><br><span class="line">约束程序设计 Programming Design</span><br><span class="line">软件工程 Software Engineering</span><br><span class="line">软件质量控制 Software Quality Control</span><br><span class="line">实时系统与嵌入式系统 Real-timeand Imbedded System</span><br><span class="line">数据库系统 Database System</span><br><span class="line">大规模计算中的 I/O</span><br></pre></td></tr></table></figure>
<h3 id="第三类，计算机应用层面"><a href="#第三类，计算机应用层面" class="headerlink" title="第三类，计算机应用层面"></a>第三类，计算机应用层面</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">科学与工程计算</span><br><span class="line">电子商务与数字化图书馆</span><br><span class="line">人机交互</span><br><span class="line">计算机教育</span><br></pre></td></tr></table></figure>
<p><a href="https://www.mit.edu/education/schools-and-departments/" target="_blank" rel="noopener">MIT 院系</a><br><a href="https://www.eecs.mit.edu/" target="_blank" rel="noopener">MIT EECS</a><br><a href="https://cs.stanford.edu/" target="_blank" rel="noopener">Stanford CS</a></p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
  </entry>
  <entry>
    <title>全文索引原理</title>
    <url>/2020/05/%E5%85%A8%E6%96%87%E7%B4%A2%E5%BC%95%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html" target="_blank" rel="noopener">Elasticsearch: 权威指南</a></p>
<h3 id="概念-Concepts"><a href="#概念-Concepts" class="headerlink" title="概念 Concepts"></a>概念 Concepts</h3><ul>
<li>全文搜索<ul>
<li>倒排索引<ul>
<li>分词</li>
<li>建立索引</li>
</ul>
</li>
<li>相关性评分<ul>
<li>布尔模型</li>
<li>评分函数<ul>
<li>单词评分<ul>
<li>词频</li>
<li>逆向词频</li>
<li>字段长度归一值</li>
</ul>
</li>
<li>多词评分<ul>
<li>向量空间模型<ul>
<li>维数</li>
<li>TF/IDF算法</li>
<li>余弦近似度</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="倒排索引"><a href="#倒排索引" class="headerlink" title="倒排索引"></a>倒排索引</h3><blockquote>
<p>一个倒排索引由文档中所有不重复词的列表构成。</p>
<p>中文的词是词语（我们）中文词语间没有空格需要先分词。<br>英文的词是单词(example)</p>
</blockquote>
<p>在倒排索引中，词叫做 tokens。每个文档都被拆分成由不同词组成。</p>
<h3 id="相关性评分"><a href="#相关性评分" class="headerlink" title="相关性评分"></a>相关性评分</h3><p>布尔模型用来找出匹配的文档。</p>
<p>评分函数用来对文档相关性排序。</p>
<ul>
<li>词频 tf</li>
</ul>
<p>词在文档中出现的频度是多少？频度越高，权重 越高 。</p>
<blockquote>
<p>tf(t in d) = √frequency</p>
<p>词 t 在文档 d 的词频（ tf ）是该词在文档中出现次数的平方根。</p>
</blockquote>
<ul>
<li>逆向文档频率</li>
</ul>
<p>词在集合所有文档里出现的频率是多少？频次越高，权重 越低 。</p>
<blockquote>
<p>idf(t) = 1 + log ( numDocs / (docFreq + 1))</p>
<p>词 t 的逆向文档频率（ idf ）是：索引中文档数量除以所有包含该词的文档数，然后求其对数。</p>
</blockquote>
<ul>
<li>字段的长度归一值</li>
</ul>
<p>字段的长度是多少？字段越短，字段的权重 越高 。</p>
<blockquote>
<p>norm(d) = 1 / √numTerms</p>
<p>字段长度归一值（ norm ）是字段中词数平方根的倒数。</p>
<p>以下三个因素是在索引时计算并存储的。</p>
</blockquote>
<ul>
<li>向量空间模型</li>
</ul>
<p>进行多查询时，根据每个词的权重组成一个向量。然后和文档的向量比较。角度越相似，评分越高。</p>
<p><a href="https://www.ruanyifeng.com/blog/2013/03/cosine_similarity.html" target="_blank" rel="noopener">余弦近似度</a></p>
<h3 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h3><p><a href="https://blog.csdn.net/Kevin_cc98/article/details/73742037" target="_blank" rel="noopener">欧式距离、标准化欧式距离、马氏距离、余弦距离</a></p>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>lucene</tag>
        <tag>elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>Ansible使用</title>
    <url>/2020/05/Ansible%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p><a href="https://docs.ansible.com/" target="_blank" rel="noopener"> Ansible </a></p>
<p><a href="http://www.ansible.com.cn/" target="_blank" rel="noopener"> Ansible 中文  </a></p>
<p><a href="https://github.com/ansible/ansible.git" target="_blank" rel="noopener"> Ansible 源码</a></p>
</blockquote>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">yum install ansible</span><br><span class="line"></span><br><span class="line"><span class="comment"># git 源码</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/ansible/ansible.git</span><br><span class="line"><span class="built_in">cd</span> ./ansible</span><br><span class="line">make rpm</span><br><span class="line">sudo rpm -Uvh ./rpm-build/ansible-*.noarch.rpm</span><br></pre></td></tr></table></figure>
<h2 id="主配置文件-INI-格式"><a href="#主配置文件-INI-格式" class="headerlink" title="主配置文件 INI 格式"></a>主配置文件 INI 格式</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 、; 为注释</span></span><br><span class="line">key = value 格式</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下面指定的这几种方式顺序访问，配置遵循先到先得，后面的全部忽略。</span></span><br><span class="line">ANSIBLE_CONFIG (environment variable <span class="keyword">if</span> <span class="built_in">set</span>)</span><br><span class="line">ansible.cfg (<span class="keyword">in</span> the current directory)</span><br><span class="line">~/.ansible.cfg (<span class="keyword">in</span> the home directory)</span><br><span class="line">/etc/ansible/ansible.cfg</span><br></pre></td></tr></table></figure>
<p><a href="https://docs.ansible.com/ansible/latest/reference_appendices/config.html#ansible-configuration-settings" target="_blank" rel="noopener"> ansible 配置变量查询</a></p>
<h2 id="相关概念-Concepts"><a href="#相关概念-Concepts" class="headerlink" title="相关概念 Concepts"></a>相关概念 Concepts</h2><ul>
<li>控制节点 control node</li>
<li>被管节点 managed nodes</li>
<li>主机列表 Inventory</li>
<li>模块 modules</li>
<li>任务 tasks</li>
<li><p>剧本 Playbooks</p>
</li>
<li><p>工作流程 workflow</p>
<ul>
<li>选择主机 selecting hosts</li>
<li>连接远程节点 connecting to remote nodes</li>
<li>执行模块 executing modules</li>
<li>下一步 next steps</li>
</ul>
</li>
</ul>
<h2 id="常见-ad-command-使用方法"><a href="#常见-ad-command-使用方法" class="headerlink" title="常见 ad-command 使用方法"></a>常见 ad-command 使用方法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/ansible/hosts  <span class="comment"># 默认的 inventory (-i 指定 inventory)</span></span><br><span class="line">ansible all -m ping <span class="comment"># 尝试连通</span></span><br><span class="line">ansible all -a <span class="string">"/bin/echo hello"</span> <span class="comment"># 执行 command </span></span><br><span class="line">ansible all -m ping -u bruce <span class="comment"># 使用 bruce 用户 </span></span><br><span class="line">ansible all -m ping -u bruce --become <span class="comment"># sudo</span></span><br></pre></td></tr></table></figure>
<h2 id="主机列表-Inventory"><a href="#主机列表-Inventory" class="headerlink" title="主机列表 Inventory"></a>主机列表 Inventory</h2><ul>
<li>Inventory<ul>
<li>主机与组</li>
<li>主机变量</li>
<li>组的变量</li>
<li>子组</li>
</ul>
</li>
</ul>
<h3 id="INI-格式"><a href="#INI-格式" class="headerlink" title="INI 格式"></a>INI 格式</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">192.168.0.2</span><br><span class="line">www.example.com</span><br><span class="line">[group1]</span><br><span class="line">192.168.0.5</span><br><span class="line">192.168.0.6</span><br></pre></td></tr></table></figure>
<h3 id="YAML-格式"><a href="#YAML-格式" class="headerlink" title="YAML 格式"></a>YAML 格式</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">all:</span></span><br><span class="line">    <span class="attr">hosts:</span></span><br><span class="line">        <span class="attr">192.168.0.2:</span></span><br><span class="line">    <span class="attr">children:</span></span><br><span class="line">        <span class="attr">group1:</span></span><br><span class="line">            <span class="attr">hosts:</span></span><br><span class="line">              <span class="attr">192.168.0.5:</span></span><br><span class="line">              <span class="attr">192.168.0.6:</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>默认的组是all</p>
</blockquote>
<h3 id="添加一堆主机（模式匹配）"><a href="#添加一堆主机（模式匹配）" class="headerlink" title="添加一堆主机（模式匹配）"></a>添加一堆主机（模式匹配）</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-attr">[group1]</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-attr">[01:50]</span><span class="selector-class">.blyanqi</span><span class="selector-class">.com</span></span><br><span class="line"><span class="selector-attr">[databases]</span></span><br><span class="line"><span class="selector-tag">db-</span><span class="selector-attr">[a:f]</span><span class="selector-class">.example</span><span class="selector-class">.com</span></span><br></pre></td></tr></table></figure>
<h3 id="在-Inventory-使用变量"><a href="#在-Inventory-使用变量" class="headerlink" title="在 Inventory 使用变量"></a>在 Inventory 使用变量</h3><ul>
<li>主机变量<ul>
<li>ansible_connection=ssh</li>
<li>ansible_user=ansible</li>
</ul>
</li>
<li>连接变量<ul>
<li>ansible_port</li>
<li>ansible_host</li>
</ul>
</li>
<li>别名</li>
</ul>
<h4 id="主机变量"><a href="#主机变量" class="headerlink" title="主机变量"></a>主机变量</h4><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">[group1]</span><br><span class="line">host1 <span class="attribute">http_port</span>=80 <span class="attribute">maxRequestPerChild</span>=808</span><br><span class="line">host1 <span class="attribute">http_port</span>=303 <span class="attribute">maxRequestPerChild</span>=909</span><br></pre></td></tr></table></figure>
<h4 id="连接变量"><a href="#连接变量" class="headerlink" title="连接变量"></a>连接变量</h4><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="section">[group2]</span></span><br><span class="line">other1.example.com ansible_connection=ssh ansible_user=myuser</span><br><span class="line"></span><br><span class="line"><span class="comment"># 别名</span></span><br><span class="line">jumper ansible_port=5555 ansible_host=192.168.0.50</span><br></pre></td></tr></table></figure>
<h4 id="共享变量-vars"><a href="#共享变量-vars" class="headerlink" title="共享变量 vars"></a>共享变量 vars</h4><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[webserver]</span></span><br><span class="line">host1</span><br><span class="line">host2</span><br><span class="line"><span class="section">[webserver:vars]</span> <span class="comment"># 此处是共享的变量 </span></span><br><span class="line"><span class="attr">ntp_server</span>=ntp.blyanqi.com</span><br></pre></td></tr></table></figure>
<h3 id="分多组"><a href="#分多组" class="headerlink" title="分多组"></a>分多组</h3><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[web1]</span></span><br><span class="line">host1</span><br><span class="line">host2</span><br><span class="line"><span class="section">[web2]</span></span><br><span class="line">host3</span><br><span class="line">host4</span><br><span class="line"></span><br><span class="line"><span class="section">[web:children]</span> <span class="comment"># 包含多个组</span></span><br><span class="line">web1</span><br><span class="line">web2</span><br><span class="line"></span><br><span class="line"><span class="section">[web:vars]</span> <span class="comment"># 组共享变量</span></span><br><span class="line"><span class="attr">halon_system_timeout</span>=<span class="number">30</span></span><br></pre></td></tr></table></figure>
<h4 id="合并多个变量"><a href="#合并多个变量" class="headerlink" title="合并多个变量"></a>合并多个变量</h4><blockquote>
<p>all group -&gt; parent group -&gt;child group -&gt;host<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 默认合并按照字母表顺序，</span></span><br><span class="line"><span class="comment"># 或者 最近节点优先原则覆盖之前的</span></span><br><span class="line"><span class="string">for</span> <span class="string">example：</span> <span class="comment"># b_group 覆盖 a_group</span></span><br><span class="line"><span class="attr">a_group:</span></span><br><span class="line">    <span class="attr">testvar:</span> <span class="string">a</span></span><br><span class="line">    <span class="attr">ansible_group_priority:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">b_group:</span></span><br><span class="line">    <span class="attr">testvar:</span> <span class="string">b</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<h4 id="指定多个-Inventory-源"><a href="#指定多个-Inventory-源" class="headerlink" title="指定多个 Inventory 源"></a>指定多个 Inventory 源</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用 -i 选项</span></span><br><span class="line">ansible-playbook get_logs.yml -i staging -i production</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定目录 动态的 Inventory</span></span><br><span class="line">inventory/</span><br><span class="line">  openstack.yml          <span class="comment"># configure inventory plugin to get hosts from Openstack cloud</span></span><br><span class="line">  dynamic-inventory.py   <span class="comment"># add additional hosts with dynamic inventory script</span></span><br><span class="line">  static-inventory       <span class="comment"># add static hosts and groups</span></span><br><span class="line">  group_vars/</span><br><span class="line">    all.yml              <span class="comment"># assign variables to all hosts</span></span><br><span class="line"></span><br><span class="line">ansible-playbook example.yml -i inventory</span><br></pre></td></tr></table></figure>
<h4 id="ansible-Inventory-变量"><a href="#ansible-Inventory-变量" class="headerlink" title="ansible Inventory 变量"></a><a href="https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html#connecting-to-hosts-behavioral-inventory-parameters" target="_blank" rel="noopener">ansible Inventory 变量</a></h4><ul>
<li>connection 变量</li>
<li>ssh connection 变量</li>
<li>远程主机环境参数</li>
<li>非 ssh 连接类型</li>
</ul>
<h2 id="ansible-Inventory-插件"><a href="#ansible-Inventory-插件" class="headerlink" title="ansible Inventory 插件"></a><a href="https://docs.ansible.com/ansible/latest/plugins/inventory.html#inventory-plugins" target="_blank" rel="noopener">ansible Inventory 插件</a></h2><h2 id="动态的-Inventory"><a href="#动态的-Inventory" class="headerlink" title=" 动态的 Inventory "></a><a href="https://docs.ansible.com/ansible/latest/user_guide/intro_dynamic_inventory.html#intro-dynamic-inventory" target="_blank" rel="noopener"> 动态的 Inventory </a></h2><h2 id="ad-hoc-Command"><a href="#ad-hoc-Command" class="headerlink" title="ad-hoc Command"></a>ad-hoc Command</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># pattern 匹配主机</span></span><br><span class="line">$ ansible [pattern] -m [module] -a <span class="string">"[module options]"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对 atlanta 主机组 进行reboot</span></span><br><span class="line"><span class="comment"># -f 10 并发10个 process</span></span><br><span class="line"><span class="comment"># -u 使用的用户</span></span><br><span class="line"><span class="comment"># --become sudo 方式执行</span></span><br><span class="line"><span class="comment"># --ask-become-pass 提示方式执行</span></span><br><span class="line">ansible atlanta -a <span class="string">"/sbin/reboot"</span> -f 10 -u username --become [--ask-become-pass]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 shell 模块</span></span><br><span class="line">ansible raleigh -m shell -a <span class="string">'echo $TERM'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 copy 模块</span></span><br><span class="line"><span class="comment"># src 是源文件</span></span><br><span class="line"><span class="comment"># dest 目的文件</span></span><br><span class="line">ansible atlanta -m copy -a <span class="string">"src=/etc/hosts dest=/tmp/hosts"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># file 模块 设置权限，所有者，属组</span></span><br><span class="line">ansible webservers -m file -a <span class="string">"dest=/srv/foo/b.txt mode=600 owner=mdehaan group=mdehaan"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line">ansible webservers -m file -a <span class="string">"dest=/path/to/c mode=755 owner=mdehaan group=mdehaan state=directory"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除目录或文件</span></span><br><span class="line">ansible webservers -m file -a <span class="string">"dest=/path/to/c state=absent"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 包管理 使用 yum 模块</span></span><br><span class="line"><span class="comment"># name 是包名</span></span><br><span class="line"><span class="comment"># state 是状态：present，latest，absent</span></span><br><span class="line">ansible webservers -m yum -a <span class="string">"name=acme state=present"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 管理用户和组 user 模块</span></span><br><span class="line">ansible all -m user -a <span class="string">"name=foo password=&lt;crypted password here&gt;"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 管理服务 service 模块</span></span><br><span class="line"><span class="comment"># state：started，restarted，stopped 启动，重启，停止</span></span><br><span class="line">ansible webservers -m service -a <span class="string">"name=httpd state=started"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看系统信息</span></span><br><span class="line">ansible all -m setup</span><br></pre></td></tr></table></figure>
<h2 id="Playbook"><a href="#Playbook" class="headerlink" title="Playbook"></a>Playbook</h2><h3 id="playbook-目录结构"><a href="#playbook-目录结构" class="headerlink" title="playbook 目录结构"></a>playbook 目录结构</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">├── deploy.yml <span class="comment"># 入口文件</span></span><br><span class="line">├── product <span class="comment"># 发布环境</span></span><br><span class="line">│   └── tasks</span><br><span class="line">│       └── main.yml</span><br><span class="line">└── testbox <span class="comment"># 测试环境</span></span><br><span class="line">    └── tasks</span><br><span class="line">        └── main.yml</span><br></pre></td></tr></table></figure>
<ul>
<li><p>Playbook</p>
<ul>
<li>主机 hosts:<ul>
<li>变量 vars:</li>
<li>排序 order: inventory | reverse_inventory |sorted |reverse_sorted |shuffle</li>
<li>用户 remote_user:</li>
<li>任务组 tasks:<ul>
<li>名称 name:</li>
<li>模块 module:<ul>
<li>name:</li>
<li>state:</li>
</ul>
</li>
<li>when:</li>
<li>become: yes</li>
<li>become_method: sudo</li>
</ul>
</li>
<li>操作 handlers:</li>
</ul>
</li>
</ul>
</li>
<li><p>变量</p>
</li>
<li>模板</li>
<li>条件</li>
<li>循环</li>
<li>块</li>
<li>高级用法</li>
<li>plays</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">order:</span> <span class="string">sorted</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">False</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">var:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">enable</span> <span class="string">selinux</span></span><br><span class="line">        <span class="attr">command:</span> <span class="string">/sbin/setenforce</span> <span class="number">1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">run</span> <span class="string">this</span> <span class="string">command</span> <span class="string">and</span> <span class="string">ignore</span> <span class="string">the</span> <span class="string">result</span></span><br><span class="line">        <span class="attr">shell:</span> <span class="string">/usr/bin/somecommand</span> <span class="string">||</span> <span class="string">/bin/true</span></span><br><span class="line">        <span class="attr">ignore_errors:</span> <span class="literal">True</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">create</span> <span class="string">a</span> <span class="string">virtual</span> <span class="string">host</span> <span class="string">file</span> <span class="string">for</span> <span class="string">&#123;&#123;</span> <span class="string">vhost</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">template:</span></span><br><span class="line">          <span class="attr">src:</span> <span class="string">somefile.j2</span></span><br><span class="line">          <span class="attr">dest:</span> <span class="string">/etc/httpd/conf.d/&#123;&#123;</span> <span class="string">vhost</span> <span class="string">&#125;&#125;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">template</span> <span class="string">configuration</span> <span class="string">file</span></span><br><span class="line">      <span class="attr">template:</span></span><br><span class="line">        <span class="attr">src:</span> <span class="string">template.j2</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/etc/foo.conf</span></span><br><span class="line">      <span class="attr">notify:</span></span><br><span class="line">         <span class="bullet">-</span> <span class="string">restart</span> <span class="string">memcached</span></span><br><span class="line">         <span class="bullet">-</span> <span class="string">restart</span> <span class="string">apache</span></span><br><span class="line">  <span class="attr">handlers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">restart</span> <span class="string">memcached</span></span><br><span class="line">        <span class="attr">service:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">memcached</span></span><br><span class="line">          <span class="attr">state:</span> <span class="string">restarted</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">restart</span> <span class="string">apache</span></span><br><span class="line">        <span class="attr">service:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">apache</span></span><br><span class="line">          <span class="attr">state:</span> <span class="string">restarted</span></span><br></pre></td></tr></table></figure>
<h3 id="检查-Playbooks"><a href="#检查-Playbooks" class="headerlink" title="检查 Playbooks"></a>检查 Playbooks</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ansible-lint verify-apache.yml</span><br><span class="line">ansible-playbook playbook.yml --list-hosts</span><br></pre></td></tr></table></figure>
<h3 id="执行-Playbooks"><a href="#执行-Playbooks" class="headerlink" title="执行 Playbooks"></a>执行 Playbooks</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ansible-playbook playbook.yml -f 10</span><br></pre></td></tr></table></figure>
<ul>
<li>Conventional Module<ul>
<li>Commands<ul>
<li>shell</li>
<li>command</li>
<li>script</li>
</ul>
</li>
<li>Files<ul>
<li>copy</li>
<li>file</li>
<li>find</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>运维自动化</category>
      </categories>
      <tags>
        <tag>inventory</tag>
        <tag>ad-hoc</tag>
      </tags>
  </entry>
  <entry>
    <title>ArchitectureDesign</title>
    <url>/2020/05/ArchitectureDesign/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="web-业务架构演变"><a href="#web-业务架构演变" class="headerlink" title="web 业务架构演变"></a>web 业务架构演变</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">webserver</span> <span class="string">-&gt;</span> <span class="string">db</span></span><br><span class="line"></span><br><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">LB</span> <span class="string">-&gt;</span> <span class="string">webserver</span> <span class="string">-&gt;</span> <span class="string">redis</span> <span class="string">-&gt;</span> <span class="string">db</span></span><br><span class="line"></span><br><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">LB</span> <span class="string">-&gt;</span> <span class="string">webserver</span> <span class="string">-&gt;</span> <span class="string">app(type1)</span> <span class="string">-&gt;</span> <span class="string">redis</span> <span class="string">-&gt;</span> <span class="string">db</span></span><br><span class="line">                          <span class="string">-&gt;</span> <span class="string">app(type2)</span> </span><br><span class="line"></span><br><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">LB(pool)</span> <span class="string">-&gt;</span> <span class="string">webserver(pool)</span> <span class="string">-&gt;</span> <span class="string">app(pool)</span> <span class="string">-&gt;</span> <span class="string">redis(pool)</span> <span class="string">-&gt;</span> <span class="string">db(read,write)</span></span><br><span class="line"></span><br><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">LB(pool)</span> <span class="string">-&gt;</span> <span class="string">webserver(pool)</span> <span class="string">-&gt;</span> <span class="string">app(pool)</span> <span class="string">-&gt;</span> <span class="string">redis(pool)</span> <span class="string">-&gt;</span> <span class="string">db(read,write)</span></span><br><span class="line">                                                                  <span class="string">-&gt;</span> <span class="string">mongodb</span> <span class="string">(read,write)</span></span><br></pre></td></tr></table></figure>
<h2 id="微服务架构"><a href="#微服务架构" class="headerlink" title="微服务架构"></a>微服务架构</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">LB(pool)</span> <span class="string">-&gt;</span> <span class="string">API</span> <span class="string">网关</span> <span class="string">-&gt;</span> <span class="string">服务注册/发现</span></span><br><span class="line">                              <span class="string">-&gt;</span> <span class="string">配置中心</span></span><br><span class="line">                              <span class="string">-&gt;</span> <span class="string">业务服务</span></span><br></pre></td></tr></table></figure>
<h2 id="容器化-web-业务架构"><a href="#容器化-web-业务架构" class="headerlink" title="容器化 web 业务架构"></a>容器化 web 业务架构</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">LB(pool)</span> <span class="string">-&gt;</span> <span class="string">Ingress</span> <span class="string">pod</span> <span class="string">-&gt;</span> <span class="string">service</span> <span class="string">-&gt;</span> <span class="string">app</span> <span class="string">pod(label)</span> <span class="string">-&gt;</span> <span class="string">db</span> <span class="string">pod</span></span><br><span class="line">                                             <span class="string">-&gt;</span> <span class="string">sidecar</span> <span class="string">pod(proxy)</span></span><br><span class="line"><span class="string">--------------------------------</span> <span class="string">storage</span> <span class="string">-------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">App pod:</span></span><br><span class="line">    <span class="string">nginx</span> <span class="string">container</span></span><br><span class="line">    <span class="string">tomcat</span> <span class="string">container</span></span><br><span class="line">        <span class="string">springboot</span></span><br><span class="line">    <span class="string">sidecar</span> <span class="string">container</span></span><br><span class="line">    <span class="string">redis</span> <span class="string">container</span></span><br><span class="line">    <span class="string">db</span> <span class="string">container</span></span><br></pre></td></tr></table></figure>
<h2 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">githup</span> <span class="string">-&gt;</span> <span class="string">hook</span> <span class="string">-&gt;</span> <span class="string">jenkins</span> <span class="string">-&gt;</span> <span class="string">开发环境</span></span><br><span class="line"><span class="string">gitlab</span>                    <span class="string">-&gt;</span> <span class="string">测试环境</span></span><br><span class="line"><span class="string">svn</span>                       <span class="string">-&gt;</span> <span class="string">生产环境</span> <span class="string">-&gt;</span> <span class="string">ansible</span></span><br><span class="line">                                     <span class="string">-&gt;</span> <span class="string">saltstack</span></span><br></pre></td></tr></table></figure>
<h2 id="EX-F-L-K日志分析"><a href="#EX-F-L-K日志分析" class="headerlink" title="EX(F,L)K日志分析"></a>EX(F,L)K日志分析</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">metric</span> <span class="string">-&gt;</span> <span class="string">kafka</span> <span class="string">-&gt;</span> <span class="string">Elasticsearch</span> <span class="string">-&gt;</span> <span class="string">kibana</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>架构设计</category>
      </categories>
      <tags>
        <tag>architect</tag>
        <tag>web架构</tag>
      </tags>
  </entry>
  <entry>
    <title>flutter跨终端开发</title>
    <url>/2020/05/flutter%E8%B7%A8%E7%BB%88%E7%AB%AF%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://flutter.dev/docs/get-started/install/macos" target="_blank" rel="noopener">Flutter Install</a></p>
<p><a href="https://flutter.dev/docs" target="_blank" rel="noopener">Flutter doc</a></p>
<p><a href="https://github.com/nisrulz/flutter-examples" target="_blank" rel="noopener">Flutter conps samples</a></p>
<p><a href="https://flutter.github.io/samples/#" target="_blank" rel="noopener">Flutter All Samples</a></p>
<p><a href="https://material.io/design" target="_blank" rel="noopener">Material Design </a></p>
<p><a href="https://book.flutterchina.club/" target="_blank" rel="noopener">Flutter 中文</a></p>
<h3 id="Concepts"><a href="#Concepts" class="headerlink" title="Concepts"></a>Concepts</h3><ul>
<li><p>开发环境配置</p>
<ul>
<li>配置 JDK</li>
<li>Android studio</li>
<li>Flutter SDK</li>
<li>配置国内镜像</li>
<li>flutter doctor</li>
<li>安装 flutter 插件</li>
<li>创建 flutter 项目</li>
<li>开启手机调试模式<ul>
<li>连接数据线</li>
<li>手机开启调试模式</li>
<li>安装手机对应的 sdk 版本<ul>
<li>安装常用的 sdk 版本</li>
</ul>
</li>
<li>使用模拟器<ul>
<li>夜神模拟器</li>
<li>run app</li>
</ul>
</li>
<li>使用 vscode 开发<ul>
<li>install flutter 插件</li>
<li>install dart</li>
<li>选择项目</li>
<li>flutter run</li>
<li>连接夜神模拟器 nox<em>adb.exe connect 127.0.0.1:9-9-</em><ul>
<li>热加载</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>mac 使用<ul>
<li>mac 最新的系统</li>
<li>xcode</li>
<li>brew</li>
<li>配置 Flutter SDK<ul>
<li>配置环境变量</li>
<li>配置国内源</li>
</ul>
</li>
<li>验证 flutter -h</li>
<li>flutter doctor</li>
<li>创建 sudo flutter create flutterdemo</li>
<li>运行 flutter run</li>
<li>chmod -R 777 flutterdemo</li>
<li>使用 xcode 编译</li>
<li>使用 vscode 连接模拟器<blockquote>
<p>使用 Gradle 包管理</p>
</blockquote>
</li>
</ul>
</li>
</ul>
</li>
<li><p>Flutter 目录结构</p>
<ul>
<li>android</li>
<li>ios</li>
<li>build</li>
<li>lib</li>
<li>pubspec.yaml #配置文件</li>
<li>入口文件 main.dart<ul>
<li>runApp(app);</li>
</ul>
</li>
<li>组件(类)</li>
<li>Flutter 可以省略 new 关键字</li>
<li>自定义组件 class MyApp extends StatelessWidget{}<blockquote>
<p>Material 即可视化设计语言，标准化设计</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<h3 id="First-app"><a href="#First-app" class="headerlink" title="First app"></a>First app</h3><ul>
<li>入口编写<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="comment">// 入口,实例化省略了new</span></span><br><span class="line">void main() =&gt; runApp(<span class="type">MyApp</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 应用定义，继承自无状态 Widget</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="comment">// 返回一个 Material APP</span></span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">        <span class="comment">// app title</span></span><br><span class="line">      title: <span class="symbol">'Welcome</span> to <span class="type">Flutter</span>',</span><br><span class="line">        <span class="comment">// 主页，Scaffold 主题</span></span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        <span class="comment">// 头部</span></span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'Welcome</span> to <span class="type">Flutter</span>'),</span><br><span class="line">        ),</span><br><span class="line">        <span class="comment">// 主体</span></span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">            <span class="comment">// 内部组件</span></span><br><span class="line">          child: <span class="type">Text</span>(<span class="symbol">'Hello</span> <span class="type">World</span>'),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>使用第三方插件<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、配置 pubspec.yaml</span><br><span class="line">    english_words: ^<span class="number">3.1</span><span class="number">.0</span></span><br><span class="line"><span class="number">2</span>、pub <span class="keyword">get</span> 获取 （自动获取）</span><br><span class="line">    $  flutter pub <span class="keyword">get</span></span><br><span class="line"><span class="number">3</span>、引入</span><br><span class="line">    <span class="keyword">import</span> <span class="string">'package:english_words/english_words.dart'</span>;</span><br></pre></td></tr></table></figure></li>
<li>添加一个有状态的 Widget<ul>
<li>添加一个 state class</li>
<li>添加一个有状态 Widget</li>
<li>在 build 方法中加入<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>添加一个无限的滚动条<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>APP -&gt; Theme -&gt; Container -&gt; Text</p>
</blockquote>
<ul>
<li><p>Widget</p>
<ul>
<li>StatelessWidget</li>
<li>StatefulWidget setState</li>
</ul>
</li>
<li><p>资源</p>
<ul>
<li>APP</li>
<li>容器 Container</li>
<li>文本 Text</li>
<li>图标 Icon</li>
<li>颜色 Colors</li>
<li>图片 Image,DecorationImage<ul>
<li>本地图片 Image.asset<ul>
<li>配置文件定义 asset</li>
<li>images<ul>
<li>2.0x</li>
<li>3.0x</li>
<li>4.0x</li>
</ul>
</li>
</ul>
</li>
<li>远程图片 Image.network</li>
</ul>
</li>
<li>表单 TextField</li>
<li>视频</li>
<li>音频</li>
</ul>
</li>
<li><p>组合资源</p>
<ul>
<li>列表 ListView，ListTile<ul>
<li>垂直列表</li>
<li>水平列表</li>
<li>动态列表 builder</li>
<li>网格列表 GridView</li>
</ul>
</li>
<li>Card</li>
<li>Tabs</li>
<li>侧边栏</li>
</ul>
</li>
<li><p>用户资源</p>
<ul>
<li>图文列表(新闻)</li>
<li>商品列表(商品)</li>
<li></li>
</ul>
</li>
</ul>
<ul>
<li><p>样式</p>
<ul>
<li>文本样式</li>
<li><p>图片样式</p>
<ul>
<li>大小</li>
<li>圆角，圆形 borderRadius ClipOval</li>
<li>颜色<ul>
<li>颜色模式</li>
</ul>
</li>
<li>适应 fit</li>
<li>平铺 repeat</li>
</ul>
</li>
<li><p>视频样式</p>
</li>
<li>音频样式</li>
</ul>
</li>
<li><p>布局</p>
<ul>
<li>Container</li>
<li>SizeBox</li>
<li>Column，Row</li>
<li>Expand</li>
<li>margin</li>
<li>padding</li>
<li>border</li>
<li>Stack<ul>
<li>position positioned</li>
<li>alignment Align</li>
</ul>
</li>
<li>AspectRatio 宽高比</li>
<li>Wrap 流布局</li>
</ul>
</li>
<li><p>数据</p>
<ul>
<li></li>
</ul>
</li>
</ul>
<h3 id="Flutter-组件"><a href="#Flutter-组件" class="headerlink" title="Flutter 组件"></a>Flutter 组件</h3><pre><code>* Theme
    Home:
* Container 组件
* Widget
    * 有状态 Widget
    * 无状态 Widgets
* 文本编辑
* 本地图片
* 本地json
* HTTP GET
* 告警对话框
* Stepper
* Tabs
* Bottom
* Navigation Bar
* Fonts
* Gradient
* Splash Screen
* Listview
* SnackBar
* Layout
* DropDown botton
* 网络图片
* 无限列表
* Google 登录
* 
</code></pre><h3 id="Flutter-布局"><a href="#Flutter-布局" class="headerlink" title="Flutter 布局"></a>Flutter 布局</h3><h3 id="Flutter-路由"><a href="#Flutter-路由" class="headerlink" title="Flutter 路由"></a>Flutter 路由</h3><h3 id="Flutter-对话框"><a href="#Flutter-对话框" class="headerlink" title="Flutter 对话框"></a>Flutter 对话框</h3><ul>
<li>数据请求</li>
<li>数据渲染</li>
</ul>
]]></content>
      <categories>
        <category>终端开发</category>
      </categories>
      <tags>
        <tag>flutter</tag>
        <tag>Dart</tag>
        <tag>android</tag>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>Dart语言开发</title>
    <url>/2020/05/Dart%E8%AF%AD%E8%A8%80%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>Dart是谷歌开发的计算机编程语言，后来被Ecma (ECMA-408)认定为标准  。它被用于web、服务器、移动应用和物联网等领域的开发。它是宽松开源许可证（修改的BSD证书）下的开源软件。</p>
<p>Dart是面向对象的、类定义的、单继承的语言。它的语法类似C语言，可以转译为JavaScript，支持接口(interfaces)、混入(mixins)、抽象类(abstract classes)、具体化泛型(reified generics)、可选类型(optional typing)和sound type system 。</p>
</blockquote>
<p><a href="https://dart.dev/guides" target="_blank" rel="noopener">Dart docs</a></p>
<h2 id="Install-Dart-for-mac"><a href="#Install-Dart-for-mac" class="headerlink" title="Install Dart for mac"></a>Install Dart for mac</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">brew</span> <span class="string">tap dart-lang/dart</span></span><br><span class="line"><span class="attr">brew</span> <span class="string">install dart</span></span><br><span class="line"></span><br><span class="line"><span class="attr">dart</span> <span class="string">--version</span></span><br><span class="line"><span class="comment"># google 源，需要翻墙</span></span><br></pre></td></tr></table></figure>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"># Hello World</span><br><span class="line"># 入口函数</span><br><span class="line">main()&#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"hello world"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># <span class="keyword">const</span> (常量定义)</span><br><span class="line"><span class="keyword">const</span> 编译时常量</span><br><span class="line"><span class="keyword">final</span> 运行时常量</span><br><span class="line"></span><br><span class="line"># Variables( 强类型，类型推断 <span class="keyword">var</span> )</span><br><span class="line"><span class="keyword">var</span> name = <span class="string">'Voyager I'</span>;</span><br><span class="line"><span class="keyword">var</span> year = <span class="number">1977</span>;</span><br><span class="line"><span class="keyword">var</span> antennaDiameter = <span class="number">3.7</span>;</span><br><span class="line"><span class="keyword">var</span> flybyObjects = [<span class="string">'Jupiter'</span>, <span class="string">'Saturn'</span>, <span class="string">'Uranus'</span>, <span class="string">'Neptune'</span>];</span><br><span class="line"><span class="keyword">var</span> image = &#123;</span><br><span class="line">  <span class="string">'tags'</span>: [<span class="string">'saturn'</span>],</span><br><span class="line">  <span class="string">'url'</span>: <span class="string">'//path/to/saturn.jpg'</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"># 字符串</span><br><span class="line"><span class="string">',",'</span><span class="string">''</span></span><br><span class="line"></span><br><span class="line"># 字符串拼接</span><br><span class="line">+,<span class="string">""</span></span><br><span class="line"></span><br><span class="line"># 类型 </span><br><span class="line"><span class="built_in">int</span></span><br><span class="line"><span class="built_in">double</span></span><br><span class="line">string</span><br><span class="line"><span class="built_in">bool</span></span><br><span class="line"><span class="keyword">null</span></span><br><span class="line"></span><br><span class="line"># <span class="keyword">is</span> 类型判断</span><br><span class="line">variable <span class="keyword">is</span> <span class="built_in">String</span> # 判断类型</span><br><span class="line"></span><br><span class="line"># 类型定义 <span class="keyword">typedef</span></span><br><span class="line"></span><br><span class="line"># container</span><br><span class="line">list [] # 列表</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">List</span>()</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">List</span>&lt;Sting&gt;() #类型限定</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> &#123;&#125; # 集合</span><br><span class="line">map &#123;&#125; # 映射</span><br><span class="line"></span><br><span class="line"># 方法遍历</span><br><span class="line">s1.forEach((v) &#123;</span><br><span class="line">    <span class="built_in">print</span>(v);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"># 运算符</span><br><span class="line">~/ 取整</span><br><span class="line">?? 为空赋值</span><br><span class="line">toString() </span><br><span class="line">parse() 类型转换</span><br><span class="line"></span><br><span class="line"># Control flow statements</span><br><span class="line"><span class="keyword">if</span></span><br><span class="line"><span class="keyword">for</span></span><br><span class="line"><span class="keyword">for</span> <span class="keyword">in</span></span><br><span class="line"><span class="keyword">while</span></span><br><span class="line"></span><br><span class="line"># Functions</span><br><span class="line"># 支持匿名函数 fn=()&#123;&#125;</span><br><span class="line"></span><br><span class="line"># 箭头函数（函数体一行）</span><br><span class="line">flybyObjects.where((name) =&gt; name.contains(<span class="string">'turn'</span>)).forEach(<span class="built_in">print</span>);</span><br><span class="line"></span><br><span class="line"># 自运行函数</span><br><span class="line">(()&#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"hello"</span>);</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"># 支持闭包</span><br><span class="line">a 会变成全局变量</span><br><span class="line">func1() &#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">  <span class="built_in">int</span> innerfunc() &#123;</span><br><span class="line">    <span class="keyword">return</span> a++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerfunc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 可选参数 [<span class="built_in">int</span> age] &#123;&#125;</span><br><span class="line"># 默认参数 [<span class="built_in">int</span> age=<span class="number">30</span>]</span><br><span class="line"># 命名参数 age:<span class="number">30</span></span><br><span class="line"># 参数</span><br><span class="line"></span><br><span class="line"># Comments</span><br><span class="line"><span class="comment">//,/**/</span></span><br><span class="line"></span><br><span class="line"># Imports</span><br><span class="line"><span class="comment">// Importing core libraries</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'dart:math'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Importing libraries from external packages</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:test/test.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Importing files</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'path/to/my_other_file.dart'</span>;</span><br><span class="line"></span><br><span class="line"># Classes</span><br><span class="line"># <span class="built_in">Object</span> 根类</span><br><span class="line"># 类中获取属性 $name $&#123;<span class="keyword">this</span>.age&#125;</span><br><span class="line"># 命名构造函数 类名.name()&#123;&#125;</span><br><span class="line"># 保护属性 _name</span><br><span class="line"># 动态属性 <span class="keyword">set</span> <span class="keyword">get</span></span><br><span class="line"># 静态属性，静态方法 <span class="keyword">static</span>，对象方法中可以调用静态属性</span><br><span class="line">?   条件运算符 p?.<span class="keyword">new</span>()</span><br><span class="line"><span class="keyword">as</span>  类型转换 (p1 <span class="keyword">as</span> Person)</span><br><span class="line"><span class="keyword">is</span>  类型判断</span><br><span class="line">..  级联操作</span><br><span class="line">p1..name=<span class="string">"value"</span></span><br><span class="line">  ..age=<span class="number">30</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 定义类</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Spacecraft</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 属性</span></span><br><span class="line">  <span class="built_in">String</span> name;</span><br><span class="line">  <span class="built_in">DateTime</span> launchDate;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 构造函数</span></span><br><span class="line">  Spacecraft(<span class="keyword">this</span>.name, <span class="keyword">this</span>.launchDate) &#123;</span><br><span class="line">    <span class="comment">// Initialization code goes here.</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 析构</span></span><br><span class="line">  Spacecraft.unlaunched(<span class="built_in">String</span> name) : <span class="keyword">this</span>(name, <span class="keyword">null</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 动态属性</span></span><br><span class="line">  <span class="built_in">int</span> <span class="keyword">get</span> launchYear =&gt;</span><br><span class="line">      launchDate?.year; <span class="comment">// read-only non-final property</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 方法</span></span><br><span class="line">  <span class="keyword">void</span> describe() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'Spacecraft: <span class="subst">$name</span>'</span>);</span><br><span class="line">    <span class="keyword">if</span> (launchDate != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="built_in">int</span> years =</span><br><span class="line">          <span class="built_in">DateTime</span>.now().difference(launchDate).inDays ~/</span><br><span class="line">              <span class="number">365</span>;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">'Launched: <span class="subst">$launchYear</span> (<span class="subst">$years</span> years ago)'</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">'Unlaunched'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># use Class</span><br><span class="line"><span class="keyword">var</span> voyager = Spacecraft(<span class="string">'Voyager I'</span>, <span class="built_in">DateTime</span>(<span class="number">1977</span>, <span class="number">9</span>, <span class="number">5</span>));</span><br><span class="line">voyager.describe();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> voyager3 = Spacecraft.unlaunched(<span class="string">'Voyager III'</span>);</span><br><span class="line">voyager3.describe();</span><br><span class="line"></span><br><span class="line"># Inheritance(单继承)</span><br><span class="line"># 抽象类不能直接被实例化</span><br><span class="line"># 继承 <span class="keyword">extends</span> (单继承) <span class="keyword">super</span>() 调用父类，<span class="meta">@override</span> 覆写</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Orbiter</span> <span class="keyword">extends</span> <span class="title">Spacecraft</span> </span>&#123;</span><br><span class="line">  <span class="built_in">num</span> altitude;</span><br><span class="line">  Orbiter(<span class="built_in">String</span> name, <span class="built_in">DateTime</span> launchDate, <span class="keyword">this</span>.altitude)</span><br><span class="line">      : <span class="keyword">super</span>(name, launchDate);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># Mixins （代码复用）</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Piloted</span> </span>&#123;</span><br><span class="line">  <span class="built_in">int</span> astronauts = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">void</span> describeCrew() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'Number of astronauts: <span class="subst">$astronauts</span>'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PilotedCraft</span> <span class="keyword">extends</span> <span class="title">Spacecraft</span> <span class="title">with</span> <span class="title">Piloted</span> </span>&#123;</span><br><span class="line">  <span class="comment">// ···</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># Interfaces and <span class="keyword">abstract</span> classes(没有接口关键字，实现抽象类)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MockSpaceship</span> <span class="keyword">implements</span> <span class="title">Spacecraft</span> </span>&#123;</span><br><span class="line">  <span class="comment">// ···</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Describable</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> describe();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> describeWithEmphasis() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'========='</span>);</span><br><span class="line">    describe();</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'========='</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 泛型 T 传入类型 getData&lt;<span class="built_in">String</span>&gt;(<span class="string">"abc"</span>)</span><br><span class="line"></span><br><span class="line"># Async（异步支持，显示声明）</span><br><span class="line"><span class="keyword">async</span> 定义为异步方法</span><br><span class="line"><span class="keyword">await</span> 等待异步完成</span><br><span class="line"></span><br><span class="line"># Exceptions</span><br><span class="line"><span class="keyword">throw</span></span><br><span class="line"><span class="keyword">try</span>&#123;&#125;<span class="keyword">on</span>&#123;&#125;<span class="keyword">finally</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"># 系统库，第三方库（pub），自定义库</span><br><span class="line"><span class="keyword">import</span> <span class="string">'dart:math'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'lib/Http.dart'</span>；</span><br><span class="line"></span><br><span class="line">https:<span class="comment">//pub.dev/packages</span></span><br><span class="line">pubspec.yaml</span><br><span class="line">pub <span class="keyword">get</span></span><br><span class="line"></span><br><span class="line"># 包重命名</span><br><span class="line"><span class="keyword">import</span> <span class="string">"lib/http.dart"</span> <span class="keyword">as</span> httpv1</span><br><span class="line"></span><br><span class="line"># 包的过滤</span><br><span class="line"><span class="keyword">import</span> <span class="string">"lib/http.dart"</span> <span class="keyword">show</span> httpv1;</span><br><span class="line"><span class="keyword">import</span> <span class="string">"lib/http.dart"</span> <span class="keyword">hide</span> httpv1;</span><br><span class="line"></span><br><span class="line"># 库分片 <span class="keyword">part</span></span><br><span class="line"># 库到处 <span class="keyword">export</span></span><br><span class="line"># 库延迟加载 deffered</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>终端开发</category>
      </categories>
      <tags>
        <tag>flutter</tag>
        <tag>Dart</tag>
      </tags>
  </entry>
  <entry>
    <title>golang-mod使用</title>
    <url>/2020/05/golang-mod%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Goloang"><a href="#Goloang" class="headerlink" title="Goloang"></a>Goloang</h2><blockquote>
<p><a href="https://golang.org/" target="_blank" rel="noopener"> Golang </a></p>
<p><a href="https://www.runoob.com/go/go-tutorial.html" target="_blank" rel="noopener"> 菜鸟教程 golang  </a></p>
</blockquote>
<h2 id="go-mod-使用"><a href="#go-mod-使用" class="headerlink" title="go mod 使用"></a>go mod 使用</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">go.mod 提供了module, require、<span class="keyword">replace</span>和<span class="keyword">exclude</span> 四个命令</span><br><span class="line"><span class="keyword">module</span> 语句指定包的名字（路径）</span><br><span class="line">require 语句指定的依赖项模块</span><br><span class="line"><span class="keyword">replace</span> 语句可以替换依赖项模块</span><br><span class="line"><span class="keyword">exclude</span> 语句可以忽略依赖项模块</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="keyword">list</span> -m -u <span class="keyword">all</span> 来检查可以升级的<span class="keyword">package</span></span><br><span class="line"><span class="keyword">go</span> <span class="keyword">get</span> -u need-<span class="keyword">upgrade</span>-<span class="keyword">package</span> 升级后会将新的依赖版本更新到</span><br><span class="line"><span class="keyword">go</span> <span class="keyword">get</span> <span class="keyword">package</span>@<span class="keyword">version</span> 将会升级到指定的版本号<span class="keyword">version</span></span><br><span class="line"><span class="keyword">go</span> <span class="keyword">get</span> -u 升级所有依赖</span><br></pre></td></tr></table></figure>
<p>创建一个 go mod 项目<br><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">mkdir project</span><br><span class="line"></span><br><span class="line">export GOPATH=<span class="string">"/Users/alert/go"</span></span><br><span class="line">export GOROOT=<span class="string">"/usr/local/go"</span></span><br><span class="line">export GO111MODULE=on</span><br><span class="line">export GOPROXY=https:<span class="comment">//goproxy.io</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> env GOPATH</span><br><span class="line"><span class="keyword">go</span> mod init</span><br><span class="line">touch main.<span class="keyword">go</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 编译运行，不生成可执行文件</span></span><br><span class="line"><span class="keyword">go</span> run main.<span class="keyword">go</span></span><br><span class="line"><span class="comment">// 项目编译</span></span><br><span class="line"><span class="keyword">go</span> build</span><br><span class="line"><span class="comment">// 编译后安装到 bin 目录</span></span><br><span class="line"><span class="keyword">go</span> install</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>develop</category>
      </categories>
      <tags>
        <tag>golang</tag>
      </tags>
  </entry>
  <entry>
    <title>kubernetes安装</title>
    <url>/2020/05/kubernetes%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="Hey, password is required here." /><label>Hey, password is required here.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="2a976894aeb45da4280bc182df0afe05e2cba2feba088c3d86a1af2c33573174"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>container</tag>
        <tag>集群</tag>
      </tags>
  </entry>
</search>
