<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Ansible使用</title>
    <url>/blog.githup.io/2020/05/Ansible%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<blockquote>
<p><a href="https://docs.ansible.com/" target="_blank" rel="noopener"> Ansible </a></p>
<p><a href="http://www.ansible.com.cn/" target="_blank" rel="noopener"> Ansible 中文  </a></p>
<p><a href="https://github.com/ansible/ansible.git" target="_blank" rel="noopener"> Ansible 源码</a></p>
</blockquote>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">yum install ansible</span><br><span class="line"></span><br><span class="line"><span class="comment"># git 源码</span></span><br><span class="line">git clone https:<span class="string">//github.com/ansible/ansible.git</span></span><br><span class="line"><span class="keyword">cd</span> <span class="string">./ansible</span></span><br><span class="line">make rpm</span><br><span class="line">sudo rpm -Uvh <span class="string">./rpm-build/ansible-</span>*<span class="string">.noarch.rpm</span></span><br></pre></td></tr></table></figure>
<h2 id="主配置文件-INI-格式"><a href="#主配置文件-INI-格式" class="headerlink" title="主配置文件 INI 格式"></a>主配置文件 INI 格式</h2><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 、; 为注释</span></span><br><span class="line">key = <span class="built_in">value</span> 格式</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下面指定的这几种方式顺序访问，配置遵循先到先得，后面的全部忽略。</span></span><br><span class="line">ANSIBLE_CONFIG (environment <span class="built_in">variable</span> <span class="keyword">if</span> <span class="built_in">set</span>)</span><br><span class="line">ansible.cfg (<span class="keyword">in</span> <span class="keyword">the</span> current <span class="built_in">directory</span>)</span><br><span class="line">~/.ansible.cfg (<span class="keyword">in</span> <span class="keyword">the</span> home <span class="built_in">directory</span>)</span><br><span class="line">/etc/ansible/ansible.cfg</span><br></pre></td></tr></table></figure>

<p><a href="https://docs.ansible.com/ansible/latest/reference_appendices/config.html#ansible-configuration-settings" target="_blank" rel="noopener"> ansible 配置变量查询</a></p>
<h2 id="相关概念-Concepts"><a href="#相关概念-Concepts" class="headerlink" title="相关概念 Concepts"></a>相关概念 Concepts</h2><ul>
<li><p>控制节点 control node</p>
</li>
<li><p>被管节点 managed nodes</p>
</li>
<li><p>主机列表 Inventory</p>
</li>
<li><p>模块 modules</p>
</li>
<li><p>任务 tasks</p>
</li>
<li><p>剧本 Playbooks</p>
</li>
<li><p>工作流程 workflow</p>
<ul>
<li>选择主机 selecting hosts</li>
<li>连接远程节点 connecting to remote nodes</li>
<li>执行模块 executing modules</li>
<li>下一步 next steps</li>
</ul>
</li>
</ul>
<p>使用方法  </p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">/etc/ansible/hosts  # 默认的 inventory (-i 指定 inventory)</span><br><span class="line">ansible all -m<span class="built_in"> ping </span># 尝试连通</span><br><span class="line">ansible all -a <span class="string">"/bin/echo hello"</span> # 执行 command </span><br><span class="line">ansible all -m<span class="built_in"> ping </span>-u bruce # 使用 bruce 用户 </span><br><span class="line">ansible all -m<span class="built_in"> ping </span>-u bruce --become # sudo</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line"><span class="comment">## 主机列表 Inventory</span></span><br><span class="line">* Inventory</span><br><span class="line">    * 主机与组</span><br><span class="line">    * 主机变量</span><br><span class="line">    * 组的变量</span><br><span class="line">    * 子组</span><br><span class="line"></span><br><span class="line">* INI 格式</span><br></pre></td></tr></table></figure>
<p>192.168.0.2<br><a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a><br>[group1]<br>192.168.0.5<br>192.168.0.6</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="bullet">* </span>YAML 格式</span><br></pre></td></tr></table></figure>
<p>all:<br>    hosts:<br>        192.168.0.2:<br>    children:<br>        group1:<br>            hosts:<br>              192.168.0.5:<br>              192.168.0.6:</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">&gt; 默认的组是<span class="keyword">all</span></span><br><span class="line"></span><br><span class="line">添加一堆主机（模式匹配）</span><br></pre></td></tr></table></figure>
<p>[group1]<br>www[01:50].blyanqi.com<br>[databases]<br>db-[a:f].example.com</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">在 Inventory 使用变量</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>主机变量</span><br><span class="line"><span class="bullet">    * </span>ansible_connection=ssh</span><br><span class="line"><span class="bullet">    * </span>ansible_user=ansible</span><br><span class="line"><span class="bullet">* </span>连接变量</span><br><span class="line"><span class="bullet">    * </span>ansible_port</span><br><span class="line"><span class="bullet">    * </span>ansible_host</span><br><span class="line"><span class="bullet">* </span>别名</span><br></pre></td></tr></table></figure>
<h1 id="主机变量"><a href="#主机变量" class="headerlink" title="主机变量"></a>主机变量</h1><p>[group1]<br>host1 http_port=80 maxRequestPerChild=808<br>host1 http_port=303 maxRequestPerChild=909</p>
<h1 id="连接变量"><a href="#连接变量" class="headerlink" title="连接变量"></a>连接变量</h1><p>[group2]<br>other1.example.com ansible_connection=ssh ansible_user=myuser</p>
<h1 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h1><p>jumper ansible_port=5555 ansible_host=192.168.0.50</p>
<h1 id="共享变量"><a href="#共享变量" class="headerlink" title="共享变量"></a>共享变量</h1><p>[webserver]<br>host1<br>host2<br>[webserver:vars] # 此处是共享的变量<br>ntp_server=ntp.blyanqi.com</p>
<h1 id="多组"><a href="#多组" class="headerlink" title="多组"></a>多组</h1><p>[web1]<br>host1<br>host2<br>[web2]<br>host3<br>host4</p>
<p>[web:children] # 包含多个组<br>web1<br>web2</p>
<p>[web:vars] # 组共享变量<br>halon_system_timeout=30</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">合并多个变量</span><br><span class="line"></span><br><span class="line">&gt; all<span class="built_in"> group </span>-&gt; parent<span class="built_in"> group </span>-&gt;child<span class="built_in"> group </span>-&gt;host</span><br></pre></td></tr></table></figure>
<h1 id="默认合并按照字母表顺序，"><a href="#默认合并按照字母表顺序，" class="headerlink" title="默认合并按照字母表顺序，"></a>默认合并按照字母表顺序，</h1><h1 id="或者-最近节点优先原则覆盖之前的"><a href="#或者-最近节点优先原则覆盖之前的" class="headerlink" title="或者 最近节点优先原则覆盖之前的"></a>或者 最近节点优先原则覆盖之前的</h1><p>for example： # b_group 覆盖 a_group<br>a_group:<br>    testvar: a<br>    ansible_group_priority: 10<br>b_group:<br>    testvar: b</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">指定多个 Inventory 源</span><br></pre></td></tr></table></figure>
<h1 id="使用-i-选项"><a href="#使用-i-选项" class="headerlink" title="使用 -i 选项"></a>使用 -i 选项</h1><p>ansible-playbook get_logs.yml -i staging -i production</p>
<h1 id="指定目录-动态的-Inventory"><a href="#指定目录-动态的-Inventory" class="headerlink" title="指定目录 动态的 Inventory"></a>指定目录 动态的 Inventory</h1><p>inventory/<br>  openstack.yml          # configure inventory plugin to get hosts from Openstack cloud<br>  dynamic-inventory.py   # add additional hosts with dynamic inventory script<br>  static-inventory       # add static hosts and groups<br>  group_vars/<br>    all.yml              # assign variables to all hosts</p>
<p>ansible-playbook example.yml -i inventory</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">### [ansible Inventory 变量](https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html#connecting-to-hosts-behavioral-inventory-parameters)</span></span><br><span class="line"></span><br><span class="line">*<span class="built_in"> connection </span>变量</span><br><span class="line">* ssh<span class="built_in"> connection </span>变量</span><br><span class="line">* 远程主机环境参数</span><br><span class="line">* 非 ssh 连接类型</span><br><span class="line"></span><br><span class="line"><span class="comment">### [ansible Inventory 插件](https://docs.ansible.com/ansible/latest/plugins/inventory.html#inventory-plugins)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### [ 动态的 Inventory ](https://docs.ansible.com/ansible/latest/user_guide/intro_dynamic_inventory.html#intro-dynamic-inventory)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### ad-hoc Command</span></span><br></pre></td></tr></table></figure>
<h1 id="pattern-匹配主机"><a href="#pattern-匹配主机" class="headerlink" title="pattern 匹配主机"></a>pattern 匹配主机</h1><p>$ ansible [pattern] -m [module] -a “[module options]”</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line"><span class="comment"># 对 atlanta 主机组 进行reboot</span></span><br><span class="line"><span class="comment"># -f 10 并发10个 process</span></span><br><span class="line"><span class="comment"># -u 使用的用户</span></span><br><span class="line"><span class="comment"># --become sudo 方式执行</span></span><br><span class="line"><span class="comment"># --ask-become-pass 提示方式执行</span></span><br><span class="line">ansible atlanta -a <span class="string">"/sbin/reboot"</span> -f 10 -u username --become [--ask-become-pass]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 shell 模块</span></span><br><span class="line">ansible raleigh -m shell -a <span class="string">'echo $TERM'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 copy 模块</span></span><br><span class="line"><span class="comment"># src 是源文件</span></span><br><span class="line"><span class="comment"># dest 目的文件</span></span><br><span class="line">ansible atlanta -m copy -a <span class="string">"src=/etc/hosts dest=/tmp/hosts"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># file 模块 设置权限，所有者，属组</span></span><br><span class="line">ansible webservers -m file -a <span class="string">"dest=/srv/foo/b.txt mode=600 owner=mdehaan group=mdehaan"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line">ansible webservers -m file -a <span class="string">"dest=/path/to/c mode=755 owner=mdehaan group=mdehaan state=directory"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除目录或文件</span></span><br><span class="line">ansible webservers -m file -a <span class="string">"dest=/path/to/c state=absent"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 包管理 使用 yum 模块</span></span><br><span class="line"><span class="comment"># name 是包名</span></span><br><span class="line"><span class="comment"># state 是状态：present，latest，absent</span></span><br><span class="line">ansible webservers -m yum -a <span class="string">"name=acme state=present"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 管理用户和组 user 模块</span></span><br><span class="line">ansible all -m<span class="built_in"> user </span>-a <span class="string">"name=foo password=&lt;crypted password here&gt;"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 管理服务 service 模块</span></span><br><span class="line"><span class="comment"># state：started，restarted，stopped 启动，重启，停止</span></span><br><span class="line">ansible webservers -m<span class="built_in"> service </span>-a <span class="string">"name=httpd state=started"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看系统信息</span></span><br><span class="line">ansible all -m setup</span><br></pre></td></tr></table></figure>

<ul>
<li><p>Playbook</p>
<ul>
<li>主机 hosts:<ul>
<li>变量 vars:</li>
<li>排序 order: inventory | reverse_inventory |sorted |reverse_sorted |shuffle</li>
<li>用户 remote_user:</li>
<li>任务组 tasks:<ul>
<li>名称 name:</li>
<li>模块 module:<ul>
<li>name:</li>
<li>state:</li>
</ul>
</li>
<li>when:</li>
<li>become: yes</li>
<li>become_method: sudo</li>
</ul>
</li>
<li>操作 handlers:</li>
</ul>
</li>
</ul>
</li>
<li><p>变量</p>
</li>
<li><p>模板</p>
</li>
<li><p>条件</p>
</li>
<li><p>循环</p>
</li>
<li><p>块</p>
</li>
<li><p>高级用法</p>
</li>
<li><p>plays</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">order:</span> <span class="string">sorted</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">False</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">var:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">enable</span> <span class="string">selinux</span></span><br><span class="line">        <span class="attr">command:</span> <span class="string">/sbin/setenforce</span> <span class="number">1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">run</span> <span class="string">this</span> <span class="string">command</span> <span class="string">and</span> <span class="string">ignore</span> <span class="string">the</span> <span class="string">result</span></span><br><span class="line">        <span class="attr">shell:</span> <span class="string">/usr/bin/somecommand</span> <span class="string">||</span> <span class="string">/bin/true</span></span><br><span class="line">        <span class="attr">ignore_errors:</span> <span class="literal">True</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">create</span> <span class="string">a</span> <span class="string">virtual</span> <span class="string">host</span> <span class="string">file</span> <span class="string">for</span> <span class="string">&#123;&#123;</span> <span class="string">vhost</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">template:</span></span><br><span class="line">          <span class="attr">src:</span> <span class="string">somefile.j2</span></span><br><span class="line">          <span class="attr">dest:</span> <span class="string">/etc/httpd/conf.d/&#123;&#123;</span> <span class="string">vhost</span> <span class="string">&#125;&#125;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">template</span> <span class="string">configuration</span> <span class="string">file</span></span><br><span class="line">      <span class="attr">template:</span></span><br><span class="line">        <span class="attr">src:</span> <span class="string">template.j2</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/etc/foo.conf</span></span><br><span class="line">      <span class="attr">notify:</span></span><br><span class="line">         <span class="bullet">-</span> <span class="string">restart</span> <span class="string">memcached</span></span><br><span class="line">         <span class="bullet">-</span> <span class="string">restart</span> <span class="string">apache</span></span><br><span class="line">  <span class="attr">handlers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">restart</span> <span class="string">memcached</span></span><br><span class="line">        <span class="attr">service:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">memcached</span></span><br><span class="line">          <span class="attr">state:</span> <span class="string">restarted</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">restart</span> <span class="string">apache</span></span><br><span class="line">        <span class="attr">service:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">apache</span></span><br><span class="line">          <span class="attr">state:</span> <span class="string">restarted</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>检查 Playbooks</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">ansible-lint</span> <span class="selector-tag">verify-apache</span><span class="selector-class">.yml</span></span><br><span class="line"><span class="selector-tag">ansible-playbook</span> <span class="selector-tag">playbook</span><span class="selector-class">.yml</span> <span class="selector-tag">--list-hosts</span></span><br></pre></td></tr></table></figure>

<p>执行 Playbooks</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">ansible-playbook playbook.yml -f <span class="number">10</span></span><br></pre></td></tr></table></figure>


<ul>
<li>Conventional Module<ul>
<li>Commands<ul>
<li>shell</li>
<li>command</li>
<li>script</li>
</ul>
</li>
<li>Files<ul>
<li>copy</li>
<li>file</li>
<li>find</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>运维自动化</category>
      </categories>
      <tags>
        <tag>inventory</tag>
        <tag>ad-hoc</tag>
      </tags>
  </entry>
  <entry>
    <title>ArchitectureDesign</title>
    <url>/blog.githup.io/2020/05/ArchitectureDesign/</url>
    <content><![CDATA[<h2 id="web-业务架构"><a href="#web-业务架构" class="headerlink" title="web 业务架构"></a>web 业务架构</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">webserver</span> <span class="string">-&gt;</span> <span class="string">db</span></span><br><span class="line"></span><br><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">LB</span> <span class="string">-&gt;</span> <span class="string">webserver</span> <span class="string">-&gt;</span> <span class="string">redis</span> <span class="string">-&gt;</span> <span class="string">db</span></span><br><span class="line"></span><br><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">LB</span> <span class="string">-&gt;</span> <span class="string">webserver</span> <span class="string">-&gt;</span> <span class="string">app(type1)</span> <span class="string">-&gt;</span> <span class="string">redis</span> <span class="string">-&gt;</span> <span class="string">db</span></span><br><span class="line">                          <span class="string">-&gt;</span> <span class="string">app(type2)</span> </span><br><span class="line"></span><br><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">LB(pool)</span> <span class="string">-&gt;</span> <span class="string">webserver(pool)</span> <span class="string">-&gt;</span> <span class="string">app(pool)</span> <span class="string">-&gt;</span> <span class="string">redis(pool)</span> <span class="string">-&gt;</span> <span class="string">db(read,write)</span></span><br><span class="line"></span><br><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">LB(pool)</span> <span class="string">-&gt;</span> <span class="string">webserver(pool)</span> <span class="string">-&gt;</span> <span class="string">app(pool)</span> <span class="string">-&gt;</span> <span class="string">redis(pool)</span> <span class="string">-&gt;</span> <span class="string">db(read,write)</span></span><br><span class="line">                                                                  <span class="string">-&gt;</span> <span class="string">mongodb</span> <span class="string">(read,write)</span></span><br></pre></td></tr></table></figure>
<h2 id="微服务架构"><a href="#微服务架构" class="headerlink" title="微服务架构"></a>微服务架构</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">LB(pool)</span> <span class="string">-&gt;</span> <span class="string">API</span> <span class="string">网关</span> <span class="string">-&gt;</span> <span class="string">服务注册/发现</span></span><br><span class="line">                              <span class="string">-&gt;</span> <span class="string">配置中心</span></span><br><span class="line">                              <span class="string">-&gt;</span> <span class="string">业务服务</span></span><br></pre></td></tr></table></figure>

<h2 id="容器化-web-业务架构"><a href="#容器化-web-业务架构" class="headerlink" title="容器化 web 业务架构"></a>容器化 web 业务架构</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">LB(pool)</span> <span class="string">-&gt;</span> <span class="string">Ingress</span> <span class="string">pod</span> <span class="string">-&gt;</span> <span class="string">service</span> <span class="string">-&gt;</span> <span class="string">app</span> <span class="string">pod(label)</span> <span class="string">-&gt;</span> <span class="string">db</span> <span class="string">pod</span></span><br><span class="line">                                             <span class="string">-&gt;</span> <span class="string">sidecar</span> <span class="string">pod(proxy)</span></span><br><span class="line"><span class="string">--------------------------------</span> <span class="string">storage</span> <span class="string">-------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">App pod:</span></span><br><span class="line">    <span class="string">nginx</span> <span class="string">container</span></span><br><span class="line">    <span class="string">tomcat</span> <span class="string">container</span></span><br><span class="line">        <span class="string">springboot</span></span><br><span class="line">    <span class="string">sidecar</span> <span class="string">container</span></span><br><span class="line">    <span class="string">redis</span> <span class="string">container</span></span><br><span class="line">    <span class="string">db</span> <span class="string">container</span></span><br></pre></td></tr></table></figure>

<h2 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">githup</span> <span class="string">-&gt;</span> <span class="string">hook</span> <span class="string">-&gt;</span> <span class="string">jenkins</span> <span class="string">-&gt;</span> <span class="string">开发环境</span></span><br><span class="line"><span class="string">gitlab</span>                    <span class="string">-&gt;</span> <span class="string">测试环境</span></span><br><span class="line"><span class="string">svn</span>                       <span class="string">-&gt;</span> <span class="string">生产环境</span> <span class="string">-&gt;</span> <span class="string">ansible</span></span><br><span class="line">                                     <span class="string">-&gt;</span> <span class="string">saltstack</span></span><br></pre></td></tr></table></figure>

<h2 id="EX-F-L-K日志分析"><a href="#EX-F-L-K日志分析" class="headerlink" title="EX(F,L)K日志分析"></a>EX(F,L)K日志分析</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">metric</span> <span class="string">-&gt;</span> <span class="string">kafka</span> <span class="string">-&gt;</span> <span class="string">Elasticsearch</span> <span class="string">-&gt;</span> <span class="string">kibana</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>架构设计</category>
      </categories>
      <tags>
        <tag>architect</tag>
        <tag>web架构</tag>
      </tags>
  </entry>
  <entry>
    <title>AwesomeNavigation</title>
    <url>/blog.githup.io/2020/05/AwesomeNavigation/</url>
    <content><![CDATA[<h2 id="运维站点"><a href="#运维站点" class="headerlink" title="运维站点"></a>运维站点</h2><ul>
<li><a href="https://www.infoq.cn/topic/operation" target="_blank" rel="noopener">InfoQ</a></li>
<li><a href="http://www.ttlsa.com/" target="_blank" rel="noopener">运维时间</a></li>
<li><a href="https://tech.youzan.com/" target="_blank" rel="noopener">有赞技术团队</a></li>
<li><a href="https://www.hi-linux.com/" target="_blank" rel="noopener">运维之美</a></li>
<li><a href="http://www.178linux.com/" target="_blank" rel="noopener">Linux 运维部落</a></li>
</ul>
<h2 id="网站资源"><a href="#网站资源" class="headerlink" title="网站资源"></a>网站资源</h2><ul>
<li><a href="https://access.redhat.com/documentation/en-us/" target="_blank" rel="noopener"> Red Hat Container Development  </a></li>
<li><a href="https://edu.aliyun.com/developer" target="_blank" rel="noopener">ali online courses</a></li>
<li><a href="https://e.huawei.com/cn/material/MaterialList" target="_blank" rel="noopener">HUAWEI</a></li>
</ul>
<h2 id="Awesome"><a href="#Awesome" class="headerlink" title="Awesome"></a>Awesome</h2><ul>
<li><p><a href="https://www.kcsou.com/s_kubesphere/" target="_blank" rel="noopener">课程搜</a></p>
</li>
<li><p><a href="https://github.com/prakhar1989/awesome-courses#algorithms" target="_blank" rel="noopener">CS Courses</a></p>
</li>
<li><p><a href="https://github.com/xingshaocheng/architect-awesome" target="_blank" rel="noopener">architect</a></p>
</li>
<li><p><a href="https://github.com/awesome-selfhosted/awesome-selfhosted" target="_blank" rel="noopener">selfhosted</a></p>
</li>
<li><p><a href="https://github.com/fffaraz/awesome-cpp" target="_blank" rel="noopener">cpp</a></p>
</li>
<li><p><a href="https://github.com/akullpp/awesome-java" target="_blank" rel="noopener">java</a></p>
</li>
<li><p><a href="https://github.com/vinta/awesome-python" target="_blank" rel="noopener">python </a></p>
</li>
<li><p><a href="https://github.com/jobbole/awesome-python-cn" target="_blank" rel="noopener">python-cn</a></p>
</li>
<li><p><a href="https://github.com/avelino/awesome-go" target="_blank" rel="noopener">go</a></p>
</li>
<li><p><a href="https://github.com/sindresorhus/awesome-nodejs" target="_blank" rel="noopener">nodejs</a></p>
</li>
<li><p><a href="https://github.com/sorrycc/awesome-javascript" target="_blank" rel="noopener">javascript</a></p>
</li>
<li><p><a href="https://github.com/alebcay/awesome-shell" target="_blank" rel="noopener">shell</a></p>
</li>
<li><p><a href="https://github.com/vuejs/awesome-vue" target="_blank" rel="noopener">vue</a></p>
</li>
<li><p><a href="http://c.biancheng.net/c/" target="_blank" rel="noopener">C语言入门</a></p>
</li>
<li><p><a href="https://github.com/josephmisiti/awesome-machine-learning" target="_blank" rel="noopener">machine-learning</a></p>
</li>
<li><p><a href="https://github.com/MaximAbramchuck/awesome-interview-questions" target="_blank" rel="noopener">interview-questions</a></p>
</li>
<li><p><a href="https://github.com/Hack-with-Github/Awesome-Hacking" target="_blank" rel="noopener">Hacking</a></p>
</li>
<li><p><a href="https://github.com/kahun/awesome-sysadmin" target="_blank" rel="noopener">sysadmin</a></p>
</li>
<li><p><a href="https://github.com/veggiemonk/awesome-docker" target="_blank" rel="noopener">docker</a></p>
</li>
<li><p><a href="https://github.com/jaywcjlove/awesome-mac" target="_blank" rel="noopener">mac</a></p>
</li>
<li><p><a href="https://github.com/herrbischoff/awesome-macos-command-line" target="_blank" rel="noopener">macos-command-line</a></p>
</li>
<li><p><a href="https://github.com/viatsko/awesome-vscode" target="_blank" rel="noopener">vscode</a></p>
</li>
<li><p><a href="https://github.com/fighting41love/funNLP" target="_blank" rel="noopener">funNLP</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>分类导航</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>awesome</tag>
      </tags>
  </entry>
  <entry>
    <title>Dart语言开发</title>
    <url>/blog.githup.io/2020/05/Dart%E8%AF%AD%E8%A8%80%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<blockquote>
<p>Dart是谷歌开发的计算机编程语言，后来被Ecma (ECMA-408)认定为标准  。它被用于web、服务器、移动应用和物联网等领域的开发。它是宽松开源许可证（修改的BSD证书）下的开源软件。</p>
<p>Dart是面向对象的、类定义的、单继承的语言。它的语法类似C语言，可以转译为JavaScript，支持接口(interfaces)、混入(mixins)、抽象类(abstract classes)、具体化泛型(reified generics)、可选类型(optional typing)和sound type system 。</p>
</blockquote>
<p><a href="https://dart.dev/guides" target="_blank" rel="noopener">Dart docs</a></p>
<h2 id="Install-Dart-for-mac"><a href="#Install-Dart-for-mac" class="headerlink" title="Install Dart for mac"></a>Install Dart for mac</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">brew</span> <span class="string">tap dart-lang/dart</span></span><br><span class="line"><span class="attr">brew</span> <span class="string">install dart</span></span><br><span class="line"></span><br><span class="line"><span class="attr">dart</span> <span class="string">--version</span></span><br><span class="line"><span class="comment"># google 源，需要翻墙</span></span><br></pre></td></tr></table></figure>

<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"># Hello World</span><br><span class="line"># 入口函数</span><br><span class="line">main()&#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"hello world"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># <span class="keyword">const</span> (常量定义)</span><br><span class="line"><span class="keyword">const</span> 编译时常量</span><br><span class="line"><span class="keyword">final</span> 运行时常量</span><br><span class="line"></span><br><span class="line"># Variables( 强类型，类型推断 <span class="keyword">var</span> )</span><br><span class="line"><span class="keyword">var</span> name = <span class="string">'Voyager I'</span>;</span><br><span class="line"><span class="keyword">var</span> year = <span class="number">1977</span>;</span><br><span class="line"><span class="keyword">var</span> antennaDiameter = <span class="number">3.7</span>;</span><br><span class="line"><span class="keyword">var</span> flybyObjects = [<span class="string">'Jupiter'</span>, <span class="string">'Saturn'</span>, <span class="string">'Uranus'</span>, <span class="string">'Neptune'</span>];</span><br><span class="line"><span class="keyword">var</span> image = &#123;</span><br><span class="line">  <span class="string">'tags'</span>: [<span class="string">'saturn'</span>],</span><br><span class="line">  <span class="string">'url'</span>: <span class="string">'//path/to/saturn.jpg'</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"># 字符串</span><br><span class="line"><span class="string">',",'</span><span class="string">''</span></span><br><span class="line"></span><br><span class="line"># 字符串拼接</span><br><span class="line">+,<span class="string">""</span></span><br><span class="line"></span><br><span class="line"># 类型 </span><br><span class="line"><span class="built_in">int</span></span><br><span class="line"><span class="built_in">double</span></span><br><span class="line">string</span><br><span class="line"><span class="built_in">bool</span></span><br><span class="line"><span class="keyword">null</span></span><br><span class="line"></span><br><span class="line"># <span class="keyword">is</span> 类型判断</span><br><span class="line">variable <span class="keyword">is</span> <span class="built_in">String</span> # 判断类型</span><br><span class="line"></span><br><span class="line"># 类型定义 <span class="keyword">typedef</span></span><br><span class="line"></span><br><span class="line"># container</span><br><span class="line">list [] # 列表</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">List</span>()</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">List</span>&lt;Sting&gt;() #类型限定</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> &#123;&#125; # 集合</span><br><span class="line">map &#123;&#125; # 映射</span><br><span class="line"></span><br><span class="line"># 方法遍历</span><br><span class="line">s1.forEach((v) &#123;</span><br><span class="line">    <span class="built_in">print</span>(v);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"># 运算符</span><br><span class="line">~/ 取整</span><br><span class="line">?? 为空赋值</span><br><span class="line">toString() </span><br><span class="line">parse() 类型转换</span><br><span class="line"></span><br><span class="line"># Control flow statements</span><br><span class="line"><span class="keyword">if</span></span><br><span class="line"><span class="keyword">for</span></span><br><span class="line"><span class="keyword">for</span> <span class="keyword">in</span></span><br><span class="line"><span class="keyword">while</span></span><br><span class="line"></span><br><span class="line"># Functions</span><br><span class="line"># 支持匿名函数 fn=()&#123;&#125;</span><br><span class="line"></span><br><span class="line"># 箭头函数（函数体一行）</span><br><span class="line">flybyObjects.where((name) =&gt; name.contains(<span class="string">'turn'</span>)).forEach(<span class="built_in">print</span>);</span><br><span class="line"></span><br><span class="line"># 自运行函数</span><br><span class="line">(()&#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"hello"</span>);</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"># 支持闭包</span><br><span class="line">a 会变成全局变量</span><br><span class="line">func1() &#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">  <span class="built_in">int</span> innerfunc() &#123;</span><br><span class="line">    <span class="keyword">return</span> a++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerfunc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 可选参数 [<span class="built_in">int</span> age] &#123;&#125;</span><br><span class="line"># 默认参数 [<span class="built_in">int</span> age=<span class="number">30</span>]</span><br><span class="line"># 命名参数 age:<span class="number">30</span></span><br><span class="line"># 参数</span><br><span class="line"></span><br><span class="line"># Comments</span><br><span class="line"><span class="comment">//,/**/</span></span><br><span class="line"></span><br><span class="line"># Imports</span><br><span class="line"><span class="comment">// Importing core libraries</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'dart:math'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Importing libraries from external packages</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:test/test.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Importing files</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'path/to/my_other_file.dart'</span>;</span><br><span class="line"></span><br><span class="line"># Classes</span><br><span class="line"># <span class="built_in">Object</span> 根类</span><br><span class="line"># 类中获取属性 $name $&#123;<span class="keyword">this</span>.age&#125;</span><br><span class="line"># 命名构造函数 类名.name()&#123;&#125;</span><br><span class="line"># 保护属性 _name</span><br><span class="line"># 动态属性 <span class="keyword">set</span> <span class="keyword">get</span></span><br><span class="line"># 静态属性，静态方法 <span class="keyword">static</span>，对象方法中可以调用静态属性</span><br><span class="line">?   条件运算符 p?.<span class="keyword">new</span>()</span><br><span class="line"><span class="keyword">as</span>  类型转换 (p1 <span class="keyword">as</span> Person)</span><br><span class="line"><span class="keyword">is</span>  类型判断</span><br><span class="line">..  级联操作</span><br><span class="line">p1..name=<span class="string">"value"</span></span><br><span class="line">  ..age=<span class="number">30</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 定义类</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Spacecraft</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 属性</span></span><br><span class="line">  <span class="built_in">String</span> name;</span><br><span class="line">  <span class="built_in">DateTime</span> launchDate;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 构造函数</span></span><br><span class="line">  Spacecraft(<span class="keyword">this</span>.name, <span class="keyword">this</span>.launchDate) &#123;</span><br><span class="line">    <span class="comment">// Initialization code goes here.</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 析构</span></span><br><span class="line">  Spacecraft.unlaunched(<span class="built_in">String</span> name) : <span class="keyword">this</span>(name, <span class="keyword">null</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 动态属性</span></span><br><span class="line">  <span class="built_in">int</span> <span class="keyword">get</span> launchYear =&gt;</span><br><span class="line">      launchDate?.year; <span class="comment">// read-only non-final property</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 方法</span></span><br><span class="line">  <span class="keyword">void</span> describe() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'Spacecraft: <span class="subst">$name</span>'</span>);</span><br><span class="line">    <span class="keyword">if</span> (launchDate != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="built_in">int</span> years =</span><br><span class="line">          <span class="built_in">DateTime</span>.now().difference(launchDate).inDays ~/</span><br><span class="line">              <span class="number">365</span>;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">'Launched: <span class="subst">$launchYear</span> (<span class="subst">$years</span> years ago)'</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">'Unlaunched'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># use Class</span><br><span class="line"><span class="keyword">var</span> voyager = Spacecraft(<span class="string">'Voyager I'</span>, <span class="built_in">DateTime</span>(<span class="number">1977</span>, <span class="number">9</span>, <span class="number">5</span>));</span><br><span class="line">voyager.describe();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> voyager3 = Spacecraft.unlaunched(<span class="string">'Voyager III'</span>);</span><br><span class="line">voyager3.describe();</span><br><span class="line"></span><br><span class="line"># Inheritance(单继承)</span><br><span class="line"># 抽象类不能直接被实例化</span><br><span class="line"># 继承 <span class="keyword">extends</span> (单继承) <span class="keyword">super</span>() 调用父类，<span class="meta">@override</span> 覆写</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Orbiter</span> <span class="keyword">extends</span> <span class="title">Spacecraft</span> </span>&#123;</span><br><span class="line">  <span class="built_in">num</span> altitude;</span><br><span class="line">  Orbiter(<span class="built_in">String</span> name, <span class="built_in">DateTime</span> launchDate, <span class="keyword">this</span>.altitude)</span><br><span class="line">      : <span class="keyword">super</span>(name, launchDate);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># Mixins （代码复用）</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Piloted</span> </span>&#123;</span><br><span class="line">  <span class="built_in">int</span> astronauts = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">void</span> describeCrew() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'Number of astronauts: <span class="subst">$astronauts</span>'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PilotedCraft</span> <span class="keyword">extends</span> <span class="title">Spacecraft</span> <span class="title">with</span> <span class="title">Piloted</span> </span>&#123;</span><br><span class="line">  <span class="comment">// ···</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># Interfaces and <span class="keyword">abstract</span> classes(没有接口关键字，实现抽象类)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MockSpaceship</span> <span class="keyword">implements</span> <span class="title">Spacecraft</span> </span>&#123;</span><br><span class="line">  <span class="comment">// ···</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Describable</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> describe();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> describeWithEmphasis() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'========='</span>);</span><br><span class="line">    describe();</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'========='</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 泛型 T 传入类型 getData&lt;<span class="built_in">String</span>&gt;(<span class="string">"abc"</span>)</span><br><span class="line"></span><br><span class="line"># Async（异步支持，显示声明）</span><br><span class="line"><span class="keyword">async</span> 定义为异步方法</span><br><span class="line"><span class="keyword">await</span> 等待异步完成</span><br><span class="line"></span><br><span class="line"># Exceptions</span><br><span class="line"><span class="keyword">throw</span></span><br><span class="line"><span class="keyword">try</span>&#123;&#125;<span class="keyword">on</span>&#123;&#125;<span class="keyword">finally</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"># 系统库，第三方库（pub），自定义库</span><br><span class="line"><span class="keyword">import</span> <span class="string">'dart:math'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'lib/Http.dart'</span>；</span><br><span class="line"></span><br><span class="line">https:<span class="comment">//pub.dev/packages</span></span><br><span class="line">pubspec.yaml</span><br><span class="line">pub <span class="keyword">get</span></span><br><span class="line"></span><br><span class="line"># 包重命名</span><br><span class="line"><span class="keyword">import</span> <span class="string">"lib/http.dart"</span> <span class="keyword">as</span> httpv1</span><br><span class="line"></span><br><span class="line"># 包的过滤</span><br><span class="line"><span class="keyword">import</span> <span class="string">"lib/http.dart"</span> <span class="keyword">show</span> httpv1;</span><br><span class="line"><span class="keyword">import</span> <span class="string">"lib/http.dart"</span> <span class="keyword">hide</span> httpv1;</span><br><span class="line"></span><br><span class="line"># 库分片 <span class="keyword">part</span></span><br><span class="line"># 库到处 <span class="keyword">export</span></span><br><span class="line"># 库延迟加载 deffered</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>终端开发</category>
      </categories>
      <tags>
        <tag>flutter</tag>
        <tag>Dart</tag>
      </tags>
  </entry>
  <entry>
    <title>Django框架使用</title>
    <url>/blog.githup.io/2020/05/Django%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h2><ul>
<li><a href="https://docs.djangoproject.com/zh-hans/3.0/" target="_blank" rel="noopener"> Django </a></li>
</ul>
<h2 id="概念-Concepts"><a href="#概念-Concepts" class="headerlink" title="概念 Concepts"></a>概念 Concepts</h2><ul>
<li>项目 project</li>
<li>模板 template</li>
<li>模型 modules</li>
<li>表单 form</li>
<li>视图 view</li>
<li>管理工具<ul>
<li>django-admin</li>
</ul>
</li>
</ul>
<p>brower -&gt; view -&gt; controller -&gt; models</p>
<h3 id="python3-install"><a href="#python3-install" class="headerlink" title="python3 install"></a>python3 install</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.8.2/Python-3.8.2.tgz</span><br><span class="line">tar -zxf Python-3.8.2.tgz </span><br><span class="line">cd Python-3.8.2</span><br><span class="line">./configure  <span class="comment">--prefix /usr/local/python</span></span><br><span class="line">make -j $(/proc/cpuinfo |grep cores|wc -l)</span><br><span class="line">make <span class="keyword">install</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置国内镜像源</span></span><br><span class="line">mkdir ~/.pip</span><br><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;~/.pip/pip.conf </span><br><span class="line">[<span class="keyword">global</span>]</span><br><span class="line"><span class="keyword">index</span>-<span class="keyword">url</span> = <span class="keyword">http</span>://pypi.douban.com/simple</span><br><span class="line">extra-<span class="keyword">index</span>-<span class="keyword">url</span>=https://mirrors.aliyun.com/pypi/simple</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置虚拟环境</span></span><br><span class="line">/usr/<span class="keyword">local</span>/python/<span class="keyword">bin</span>/pip3 <span class="keyword">install</span> <span class="comment">--upgrade pip</span></span><br><span class="line">/usr/<span class="keyword">local</span>/python/<span class="keyword">bin</span>/pip3 <span class="keyword">install</span> virtualenv</span><br><span class="line">/usr/<span class="keyword">local</span>/python/<span class="keyword">bin</span>/virtualenv djangodemo</span><br><span class="line"></span><br><span class="line">echo <span class="string">". djangodemo/bin/activate"</span> &gt;&gt;~/.bash_profile</span><br><span class="line">. djangodemo/<span class="keyword">bin</span>/<span class="keyword">activate</span></span><br><span class="line">pip <span class="keyword">install</span> django</span><br><span class="line">django-<span class="keyword">admin</span> <span class="comment">--version</span></span><br></pre></td></tr></table></figure>

<h3 id="创建了一个项目"><a href="#创建了一个项目" class="headerlink" title="创建了一个项目"></a>创建了一个项目</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">django-admin startproject -h</span><br><span class="line">django-admin startproject web1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置数据库</span></span><br><span class="line">yum -y install mariadb mariadb-devel</span><br><span class="line">systemctl start mariadb</span><br><span class="line">pip install mysqlclient</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据库</span></span><br><span class="line">mysql -uroot -p <span class="string">"create database web1"</span></span><br><span class="line">CREATE DATABASE `web1`<span class="built_in"> DEFAULT </span>CHARACTER <span class="builtin-name">SET</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment"># vim web1/setting.py</span></span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">"HOST"</span>: <span class="string">'localhost'</span>,</span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'web1'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'PORT'</span>: 3306,</span><br><span class="line">    <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">        <span class="string">'init_command'</span>: <span class="string">'SET default_storage_engine=INNODB'</span>,</span><br><span class="line">        <span class="string">'autocommit'</span>: <span class="literal">True</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许所有主机访问，默认为空，返回 400</span></span><br><span class="line">ALLOWED_HOSTS=[<span class="string">"*"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 同步数据库</span></span><br><span class="line">python manage.py migrate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建管理员账号</span></span><br><span class="line">python manage.py createsuperuser</span><br><span class="line"></span><br><span class="line"><span class="comment"># admin 模块位置</span></span><br><span class="line">lib/python3.8/site-packages/django/contrib/admin/</span><br><span class="line"><span class="attribute">DEBUG</span>=<span class="literal">True</span></span><br><span class="line">导致 admin 模块的静态文件加载不到</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">python manage.py runserver 0:8000</span><br></pre></td></tr></table></figure>

<h3 id="Django-目录结构"><a href="#Django-目录结构" class="headerlink" title="Django 目录结构"></a>Django 目录结构</h3><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">web1  <span class="meta"># 项目目录</span></span><br><span class="line">web1/manage.py <span class="meta"># 项目管理工具</span></span><br><span class="line">web1/web1  <span class="meta"># </span></span><br><span class="line">web1<span class="meta-keyword">/web1/</span>__init__.py <span class="meta"># 告诉 Python 这个目录应该被认为是一个 Python 包。</span></span><br><span class="line">web1<span class="meta-keyword">/web1/</span>asgi.py     <span class="meta"># ASGI 兼容的Web服务器上的入口</span></span><br><span class="line">web1<span class="meta-keyword">/web1/</span>settings.py <span class="meta"># Django 项目的配置文件</span></span><br><span class="line">web1<span class="meta-keyword">/web1/</span>urls.py     <span class="meta"># Django 项目的 URL 声明 ，路由</span></span><br><span class="line">web1<span class="meta-keyword">/web1/</span>wsgi.py     <span class="meta"># WSGI 兼容的Web服务器上的入口</span></span><br></pre></td></tr></table></figure>

<h3 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h3><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> web1</span><br><span class="line"><span class="keyword">python</span> manage.<span class="keyword">py</span> startapp polls</span><br><span class="line"></span><br><span class="line">polls/</span><br><span class="line">├── admin.<span class="keyword">py</span></span><br><span class="line">├── apps.<span class="keyword">py</span></span><br><span class="line">├── __init__.<span class="keyword">py</span></span><br><span class="line">├── migrations</span><br><span class="line">│   └── __init__.<span class="keyword">py</span></span><br><span class="line">├── models.<span class="keyword">py</span></span><br><span class="line">├── tests.<span class="keyword">py</span> </span><br><span class="line">├── urls.<span class="keyword">py</span>  # 路由</span><br><span class="line">└── views.<span class="keyword">py</span> # 视图</span><br></pre></td></tr></table></figure>

<ul>
<li><p>创建项目</p>
<ul>
<li>创建应用<ul>
<li>编写视图</li>
<li>配置路由</li>
<li>配置模型</li>
<li>生成迁移文件<ul>
<li>查看迁移文件</li>
</ul>
</li>
<li>执行迁移</li>
<li>通过 shell 调试</li>
</ul>
</li>
</ul>
</li>
<li><p>后台创建</p>
<ul>
<li>创建后台用户</li>
<li>通过 admin 文件向后台注册表</li>
</ul>
</li>
<li><p>编写多视图</p>
</li>
<li><p>使用模板来渲染视图</p>
</li>
<li><p>404 页面处理</p>
</li>
<li><p>为 url 添加命名空间</p>
</li>
</ul>
]]></content>
      <categories>
        <category>python开发</category>
      </categories>
  </entry>
  <entry>
    <title>Docker</title>
    <url>/blog.githup.io/2020/05/Docker/</url>
    <content><![CDATA[<h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><p><a href="https://docs.docker.com/engine/" target="_blank" rel="noopener">docker doc </a><br><a href="https://docs.docker.com/reference/" target="_blank" rel="noopener">docker 参考文档</a></p>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>Homebrew使用</title>
    <url>/blog.githup.io/2020/05/Homebrew%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p><a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener">Homebrew</a></p>
<h3 id="Install-Homebrew"><a href="#Install-Homebrew" class="headerlink" title="Install Homebrew"></a>Install Homebrew</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ruby 写的管理包管理工具</span></span><br><span class="line">/bin/bash -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)</span>"</span></span><br></pre></td></tr></table></figure>

<h3 id="using"><a href="#using" class="headerlink" title="using"></a>using</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install wget</span><br><span class="line">把软件包安装到 /usr/<span class="built_in">local</span>/Cellar</span><br><span class="line">将可执行文件链接到 /usr/<span class="built_in">local</span>/bin/ 下</span><br><span class="line"></span><br><span class="line">brew edit wget</span><br><span class="line"></span><br><span class="line">brew cask create foo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 包管理</span></span><br><span class="line">brew install node</span><br><span class="line">brew uninstall &lt;packageName&gt;</span><br><span class="line">brew search &lt;packageName&gt;</span><br><span class="line">brew list</span><br><span class="line">brew info &lt;packageName&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line">xcode-select --install</span><br><span class="line">brew upgrade</span><br></pre></td></tr></table></figure>

<h3 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mac使用brew update无反应,更新慢解决办法</span><br><span class="line"></span><br><span class="line">使用中科大的镜像</span><br><span class="line">替换默认源</span><br><span class="line">第一步，替换brew.git</span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>"</span> || <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/Homebrew</span><br><span class="line">git remote <span class="built_in">set</span>-url origin https://mirrors.ustc.edu.cn/brew.git</span><br><span class="line"></span><br><span class="line">第二步：替换homebrew-core.git</span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>/Library/Taps/homebrew/homebrew-core"</span></span><br><span class="line">git remote <span class="built_in">set</span>-url origin https://mirrors.ustc.edu.cn/homebrew-core.git</span><br><span class="line"></span><br><span class="line">最后使用</span><br><span class="line">brew update</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>mactools</category>
      </categories>
  </entry>
  <entry>
    <title>KVM</title>
    <url>/blog.githup.io/2020/05/KVM/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Kubesphere</title>
    <url>/blog.githup.io/2020/05/Kubesphere/</url>
    <content><![CDATA[<p><a href="https://kubesphere.io/" target="_blank" rel="noopener"> Kubesphere 官网 </a></p>
<ul>
<li>微服务 ks-apiserver ks-apigateway<ul>
<li>服务治理</li>
<li>灰度发布</li>
<li>熔断 Istio</li>
<li>限流</li>
<li>智能路由 Ingress</li>
</ul>
</li>
<li>CI/CD Jenkins<ul>
<li>代码仓库<ul>
<li>git</li>
<li>SVN</li>
<li>BitBucket</li>
</ul>
</li>
<li>镜像仓库管理<ul>
<li>Harbor</li>
</ul>
</li>
<li>镜像迁移</li>
<li>源码到镜像 Source-to-Image</li>
<li>安全扫描</li>
<li>流水线 Pipeline<ul>
<li>checkout</li>
<li>UT test SonarQube</li>
<li>Publish</li>
</ul>
</li>
<li>部署<ul>
<li>蓝绿部署（将两个版本同时在线）</li>
<li>金丝雀发布（将一部分真实流量引入一个新版本进行测试）</li>
<li>流量镜像（将生产流量镜像拷贝到测试集群或者新的版本中）</li>
</ul>
</li>
</ul>
</li>
<li>应用管理 OpenPitrix<ul>
<li>应用发布</li>
<li>应用部署</li>
<li>版本控制</li>
<li>应用仓库管理<ul>
<li>OpenPitrix</li>
</ul>
</li>
</ul>
</li>
<li>监控&amp;日志&amp;告警 Prometheus<ul>
<li>系统及服务监控 Metrics-server</li>
<li>系统及服务日志 Elasticsearch Fluent Bit</li>
<li>告警管理 Alert Notification</li>
</ul>
</li>
<li>安全<ul>
<li>用户管理 ks-account</li>
<li>角色管理</li>
<li>第三方登录认证</li>
<li>密钥管理</li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><p>网络插件</p>
<ul>
<li>Istio</li>
<li>Calico</li>
<li>Flannel</li>
</ul>
</li>
<li><p>kubernetes 集群<br>  Namespace 项目<br>  pod 容器组<br>  deployments 部署<br>  StatefulSets 有状态副本集<br>  DaemonSet 守护进程集<br>  Jobs 任务<br>  CronJob 定时任务<br>  service 服务(网络)<br>  Ingress 应用路由<br>  Image Registries 镜像仓库<br>  PersistentVolumeClaim（PVC) 存储卷<br>  StorageClass 存储类型</p>
</li>
<li><p>多租户 ks-controller-manager</p>
<ul>
<li>跨集群</li>
<li>多级组织机构管理<ul>
<li>三层级权限管理<ul>
<li>集群<ul>
<li>主机 Node</li>
</ul>
</li>
<li>企业空间 Workspace</li>
<li>项目 Namespace</li>
</ul>
</li>
<li>统一认证<ul>
<li>LDAP</li>
<li>AD</li>
<li>单点登录 (SSO) </li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><p>openstack</p>
</li>
<li><p>存储服务</p>
<ul>
<li>GlusterFS</li>
<li>CephRBD</li>
<li>NFS  </li>
</ul>
</li>
<li><p>Web 控制台</p>
<ul>
<li>向导式</li>
<li>可视化</li>
</ul>
</li>
<li><p>控制台 ks-console</p>
</li>
</ul>
<hr>
<ul>
<li>依赖服务<ul>
<li>redis</li>
<li>MySQL</li>
<li>PostgreSQL</li>
<li>OpenLDAP</li>
</ul>
</li>
</ul>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul>
<li><p>在线安装</p>
<ul>
<li>单节点安装</li>
<li>多节点安装</li>
</ul>
</li>
<li><p>离线安装</p>
</li>
<li><p>安装前置条件</p>
<ul>
<li>集群环境</li>
<li>创建 StorageClass</li>
</ul>
</li>
<li><p>对 common.yaml 进行配置</p>
<ul>
<li>kubernetes 配置</li>
<li>kubersphere 配置</li>
<li>GPU 节点配置示例</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>NFS安装配置</title>
    <url>/blog.githup.io/2020/05/NFS%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">配置文件 <span class="regexp">/etc/</span>exports</span><br><span class="line">NFS 进程</span><br><span class="line">rpc.portmap <span class="comment"># portmap进程的主要功能是把RPC程序号转化为Internet的端口号。</span></span><br><span class="line"></span><br><span class="line">rpc.mountd</span><br><span class="line">rpc.nfsd</span><br><span class="line">rpc.statd</span><br><span class="line">rpc.lockd</span><br><span class="line">rpc.rquotad</span><br></pre></td></tr></table></figure>

<h2 id="安装-NFS-server"><a href="#安装-NFS-server" class="headerlink" title="安装 NFS server"></a>安装 NFS server</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">yum</span> <span class="string">-y install nfs-utils</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">restart nfs</span></span><br><span class="line"><span class="comment"># 重新载入配置</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">reload nfs</span></span><br></pre></td></tr></table></figure>

<h2 id="配置-NFS-server"><a href="#配置-NFS-server" class="headerlink" title="配置 NFS server"></a>配置 NFS server</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">1. </span><br><span class="line">mkdir /data</span><br><span class="line"><span class="comment"># 默认登录进来使用 nfsnobody 用户</span></span><br><span class="line">chmod 777 /data/nfs</span><br><span class="line"></span><br><span class="line">2. <span class="builtin-name">set</span><span class="built_in"> config </span></span><br><span class="line"><span class="comment"># directory machine1(option11,option12)</span></span><br><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;/etc/exports</span><br><span class="line">/data/nfs 192.168.0.0/255.255.255.0(rw,sync)</span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># optinos</span></span><br><span class="line">ro : read only</span><br><span class="line">rw : read <span class="keyword">and</span> write</span><br><span class="line">no_root_squash : 使用 nobody 作为客户端用户</span><br><span class="line">no_subtree_check : </span><br><span class="line">sync : write is complete</span><br></pre></td></tr></table></figure>

<h2 id="通过-host-deny-限制访问"><a href="#通过-host-deny-限制访问" class="headerlink" title="通过 host deny 限制访问"></a>通过 host deny 限制访问</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">/etc/hosts.deny</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># service: host [or network/netmask] , host [or network/netmask]</span></span><br><span class="line"><span class="string">/etc/hosts.allow</span></span><br><span class="line"><span class="attr">portmap:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.1</span> <span class="string">,</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.2</span></span><br></pre></td></tr></table></figure>

<h2 id="检查-nfs-是否启动"><a href="#检查-nfs-是否启动" class="headerlink" title="检查 nfs 是否启动"></a>检查 nfs 是否启动</h2><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>exportfs -v</span><br><span class="line"><span class="variable">$ </span>rpcinfo -p</span><br></pre></td></tr></table></figure>

<h2 id="client-配置"><a href="#client-配置" class="headerlink" title="client 配置"></a>client 配置</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 nfs client</span></span><br><span class="line"><span class="string">yum</span> <span class="string">-y</span> <span class="string">install</span> <span class="string">nfs-utils</span></span><br><span class="line"><span class="comment"># 查看可以挂载的目录</span></span><br><span class="line"><span class="string">showmount</span> <span class="string">-e</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.105</span></span><br><span class="line"><span class="comment"># 挂载</span></span><br><span class="line"><span class="comment"># 只读挂载</span></span><br><span class="line"><span class="string">mount</span> <span class="string">-r</span> <span class="string">-t</span> <span class="string">nfs</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.105</span><span class="string">:/data/nfs</span> <span class="string">/mnt</span> </span><br><span class="line"><span class="comment"># 可写挂载</span></span><br><span class="line"><span class="string">mount</span> <span class="string">-w</span> <span class="string">-t</span> <span class="string">nfs</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.105</span><span class="string">:/data/nfs</span> <span class="string">/mnt</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入 /etc/fstab（指定端口）</span></span><br><span class="line"><span class="string">localhost:/home</span>  <span class="string">/mnt/home</span>  <span class="string">nfs</span>  <span class="string">rw,hard,intr,port=250,mountport=251</span>  <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="string">cat</span> <span class="string">&lt;&lt;'EOF'</span> <span class="string">&gt;&gt;/etc/fstab</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.0</span><span class="number">.105</span><span class="string">:/data/nfs</span>  <span class="string">/mnt</span>    <span class="string">nfs</span>          <span class="string">rw</span>            <span class="number">0</span>    <span class="number">0</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<h2 id="NFS-优化"><a href="#NFS-优化" class="headerlink" title="NFS 优化"></a>NFS 优化</h2><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置块大小提供传输速度</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 网络数据包大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 输入队列大小</span></span><br><span class="line">echo <span class="number">262144</span> &gt; <span class="regexp">/proc/sys</span><span class="regexp">/net/core</span><span class="regexp">/rmem_default</span></span><br><span class="line"><span class="regexp">echo 262144 &gt; /proc</span><span class="regexp">/sys/net</span><span class="regexp">/core/rmem</span>_max</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Storages</category>
      </categories>
  </entry>
  <entry>
    <title>OpenStack</title>
    <url>/blog.githup.io/2020/05/OpenStack/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>OpenStack安装</title>
    <url>/blog.githup.io/2020/05/OpenStack%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<ul>
<li><a href="https://www.openstack.org/" target="_blank" rel="noopener"> Openstack 官网 </a></li>
<li><a href="https://docs.openstack.org/install-guide/" target="_blank" rel="noopener">Install 指南</a></li>
<li><a href="https://docs.openstack.org/install-guide/get-started-conceptual-architecture.html" target="_blank" rel="noopener">openstack 架构图</a></li>
<li><a href="https://docs.openstack.org/train/user/" target="_blank" rel="noopener">组件介绍</a></li>
</ul>
<h2 id="组件介绍"><a href="#组件介绍" class="headerlink" title="组件介绍"></a>组件介绍</h2><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">Keystone 认证组件</span><br><span class="line">Glance 镜像组件</span><br><span class="line">placement 资源管理组件(是从Nova中剥离出来的)</span><br><span class="line">------------------------</span><br><span class="line">其他组件</span><br><span class="line"></span><br><span class="line">Nova 计算组件</span><br><span class="line">Netron 网络组件</span><br><span class="line">------------------------</span><br><span class="line">Master Node</span><br><span class="line"></span><br><span class="line">Nova 计算组件</span><br><span class="line">Netron 网络组件</span><br><span class="line">------------------------</span><br><span class="line">Worker Node</span><br></pre></td></tr></table></figure>

<h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><p>提供5台 linux 系统(Centos 7) 主机</p>
<p>主机IP如下：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">master:<span class="number">192.168</span><span class="number">.0</span><span class="number">.51</span></span><br><span class="line">work1:<span class="number">192.168</span><span class="number">.0</span><span class="number">.52</span></span><br><span class="line">work2:<span class="number">192.168</span><span class="number">.0</span><span class="number">.53</span></span><br></pre></td></tr></table></figure>

<h3 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h3><h4 id="设置主机名"><a href="#设置主机名" class="headerlink" title="设置主机名"></a>设置主机名</h4><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">ssh <span class="number">192.168</span><span class="number">.0</span><span class="number">.51</span> <span class="string">" hostnamectl set-hostname controller"</span></span><br><span class="line">ssh <span class="number">192.168</span><span class="number">.0</span><span class="number">.52</span> <span class="string">" hostnamectl set-hostname work1"</span></span><br><span class="line">ssh <span class="number">192.168</span><span class="number">.0</span><span class="number">.53</span> <span class="string">" hostnamectl set-hostname work2"</span></span><br></pre></td></tr></table></figure>
<h4 id="设置主机名解析"><a href="#设置主机名解析" class="headerlink" title="设置主机名解析"></a>设置主机名解析</h4><figure class="highlight dns"><table><tr><td class="code"><pre><span class="line">echo "<span class="number">192.168.0.51</span> controller</span><br><span class="line"><span class="number">192.168.0.52</span> work1</span><br><span class="line"><span class="number">192.168.0.53</span> work2"&gt;&gt;/etc/hosts</span><br></pre></td></tr></table></figure>
<h4 id="生成ssh-key"><a href="#生成ssh-key" class="headerlink" title="生成ssh key"></a>生成ssh key</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">ssh-keygen</span><br><span class="line">ssh-copy-id <span class="number">192.168</span><span class="number">.0</span><span class="number">.51</span></span><br><span class="line">ssh-copy-id <span class="number">192.168</span><span class="number">.0</span><span class="number">.52</span></span><br><span class="line">ssh-copy-id <span class="number">192.168</span><span class="number">.0</span><span class="number">.53</span></span><br><span class="line"></span><br><span class="line">SSHVerify</span><br></pre></td></tr></table></figure>
<blockquote>
<p>for x in <code>grep -o -.* /etc/hosts</code>;do echo $x; ssh-copy-id $x ;done</p>
</blockquote>
<h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h4><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">systemctl</span> <span class="string">stop firewalld</span></span><br><span class="line"><span class="attr">iptables</span> <span class="string">-L -n</span></span><br></pre></td></tr></table></figure>

<h4 id="关闭-selinux"><a href="#关闭-selinux" class="headerlink" title="关闭 selinux"></a>关闭 selinux</h4><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">setenforce <span class="number">0</span></span><br><span class="line">sed -i <span class="string">"s/^SELINUX=enforcing/SELINUX=disabled/g"</span> /etc/selinux/<span class="built_in">config</span></span><br></pre></td></tr></table></figure>

<h4 id="关闭-swap"><a href="#关闭-swap" class="headerlink" title="关闭 swap"></a>关闭 swap</h4><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">swapoff -a</span><br><span class="line">swapoff -<span class="selector-tag">a</span> sed -<span class="selector-tag">i</span> <span class="string">'s/.*swap.*/#&amp;/'</span> /etc/fstab</span><br></pre></td></tr></table></figure>
<h3 id="NTP-配置"><a href="#NTP-配置" class="headerlink" title="NTP 配置"></a>NTP 配置</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">yum install chrony -y</span><br><span class="line"><span class="comment"># vim /etc/chrony.conf</span></span><br><span class="line">sed -i <span class="string">"/^server/d"</span> <span class="regexp">/etc/</span>chrony.conf</span><br><span class="line">sed -i <span class="string">"2a server ntp1.cloud.aliyuncs.com iburst"</span> <span class="regexp">/etc/</span>chrony.conf</span><br><span class="line">sed -i <span class="string">"2a server ntp2.cloud.aliyuncs.com iburst"</span> <span class="regexp">/etc/</span>chrony.conf </span><br><span class="line">sed -i <span class="string">"/#allow/s/#//"</span> <span class="regexp">/etc/</span>chrony.conf</span><br><span class="line">systemctl enable chronyd.service;systemctl start chronyd.service</span><br></pre></td></tr></table></figure>
<h3 id="生成随机密码（安装时使用统一密码）"><a href="#生成随机密码（安装时使用统一密码）" class="headerlink" title="生成随机密码（安装时使用统一密码）"></a>生成随机密码（安装时使用统一密码）</h3><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">openssl <span class="keyword">rand</span> -<span class="keyword">hex</span> <span class="number">10</span></span><br></pre></td></tr></table></figure>

<h3 id="设置-train-版本的源"><a href="#设置-train-版本的源" class="headerlink" title="设置 train 版本的源"></a>设置 train 版本的源</h3><figure class="highlight gml"><table><tr><td class="code"><pre><span class="line">yum install https:<span class="comment">//rdoproject.org/repos/rdo-release.rpm</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 安装所需的yum 库</span></span><br><span class="line">yum -<span class="symbol">y</span> install centos-release-openstack-train</span><br><span class="line">yum repolist</span><br><span class="line">yum upgrade -<span class="symbol">y</span></span><br><span class="line">yum install python-openstackclient -<span class="symbol">y</span></span><br><span class="line">yum install openstack-selinux -<span class="symbol">y</span></span><br></pre></td></tr></table></figure>

<h3 id="数据库安装"><a href="#数据库安装" class="headerlink" title="数据库安装"></a>数据库安装</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">yum <span class="keyword">install</span> mariadb mariadb-<span class="keyword">server</span> python2-PyMySQL -y</span><br><span class="line"> </span><br><span class="line">vim /etc/my.cnf.d/openstack.cnf</span><br><span class="line"> </span><br><span class="line">[mysqld]</span><br><span class="line">bind-address = <span class="number">192.168</span><span class="number">.0</span><span class="number">.51</span></span><br><span class="line"><span class="keyword">default</span>-<span class="keyword">storage</span>-<span class="keyword">engine</span> = <span class="keyword">innodb</span></span><br><span class="line">innodb_file_per_table</span><br><span class="line">max_connections = <span class="number">4096</span></span><br><span class="line"><span class="keyword">collation</span>-<span class="keyword">server</span> = utf8_general_ci</span><br><span class="line"><span class="built_in">character</span>-<span class="keyword">set</span>-<span class="keyword">server</span> = utf8</span><br><span class="line"> </span><br><span class="line">systemctl <span class="keyword">enable</span> mariadb.service</span><br><span class="line">systemctl <span class="keyword">start</span> mariadb.service</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 数据库安装</span></span><br><span class="line"><span class="comment">#validate</span></span><br><span class="line">netstat -ntlp |grep <span class="number">3306</span></span><br><span class="line"> </span><br><span class="line">mysql_secure_installation</span><br><span class="line">n y....</span><br></pre></td></tr></table></figure>

<h3 id="消息队列安装"><a href="#消息队列安装" class="headerlink" title="消息队列安装"></a>消息队列安装</h3><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">安装 rabbitmq</span><br><span class="line">yum install rabbitmq-<span class="keyword">server</span> -y</span><br><span class="line"> </span><br><span class="line">systemctl <span class="keyword">enable</span> rabbitmq-<span class="keyword">server</span>.service</span><br><span class="line">systemctl <span class="keyword">start</span> rabbitmq-<span class="keyword">server</span>.service</span><br><span class="line"> </span><br><span class="line"><span class="meta">#validate</span></span><br><span class="line">netstat -ntlp|grep <span class="number">25672</span></span><br><span class="line"></span><br><span class="line"># 添加用户，设置权限</span><br><span class="line">rabbitmqctl add_user openstack RABBIT_PASS</span><br><span class="line">rabbitmqctl set_permissions openstack ".*" ".*" ".*"</span><br></pre></td></tr></table></figure>
<h3 id="Memcached-安装"><a href="#Memcached-安装" class="headerlink" title="Memcached 安装"></a>Memcached 安装</h3><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">yum</span> <span class="string">install memcached python-memcached -y</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">vim</span> <span class="string">/etc/sysconfig/memcached</span></span><br><span class="line"><span class="attr">OPTIONS</span>=<span class="string">"-l 127.0.0.1,::1,controller"</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">systemctl</span> <span class="string">enable memcached.service</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">start memcached.service</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># validate</span></span><br><span class="line"><span class="attr">netstat</span> <span class="string">-ntlp |grep 11211</span></span><br></pre></td></tr></table></figure>
<h3 id="Etcd-安装"><a href="#Etcd-安装" class="headerlink" title="Etcd 安装"></a>Etcd 安装</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">yum install etcd -y</span><br><span class="line"> </span><br><span class="line">vim /etc/etcd/etcd.conf</span><br><span class="line"> </span><br><span class="line"><span class="comment">#[Member]</span></span><br><span class="line"><span class="attribute">ETCD_DATA_DIR</span>=<span class="string">"/var/lib/etcd/default.etcd"</span></span><br><span class="line"><span class="attribute">ETCD_LISTEN_PEER_URLS</span>=<span class="string">"http://10.0.0.11:2380"</span></span><br><span class="line"><span class="attribute">ETCD_LISTEN_CLIENT_URLS</span>=<span class="string">"http://10.0.0.11:2379"</span></span><br><span class="line"><span class="attribute">ETCD_NAME</span>=<span class="string">"controller"</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#[Clustering]</span></span><br><span class="line"><span class="attribute">ETCD_INITIAL_ADVERTISE_PEER_URLS</span>=<span class="string">"http://10.0.0.11:2380"</span></span><br><span class="line"><span class="attribute">ETCD_ADVERTISE_CLIENT_URLS</span>=<span class="string">"http://10.0.0.11:2379"</span></span><br><span class="line"><span class="attribute">ETCD_INITIAL_CLUSTER</span>=<span class="string">"controller=http://10.0.0.11:2380"</span></span><br><span class="line"><span class="attribute">ETCD_INITIAL_CLUSTER_TOKEN</span>=<span class="string">"etcd-cluster-01"</span></span><br><span class="line"><span class="attribute">ETCD_INITIAL_CLUSTER_STATE</span>=<span class="string">"new"</span></span><br><span class="line"> </span><br><span class="line">systemctl <span class="builtin-name">enable</span> etcd</span><br><span class="line">systemctl start etcd</span><br><span class="line"> </span><br><span class="line">netstat -ntlp|grep etcd</span><br></pre></td></tr></table></figure>
<h2 id="Openstack-组件安装"><a href="#Openstack-组件安装" class="headerlink" title="Openstack 组件安装"></a>Openstack 组件安装</h2><h3 id="KEYSTONE"><a href="#KEYSTONE" class="headerlink" title="KEYSTONE"></a>KEYSTONE</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建数据库</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> keystone;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> keystone.* <span class="keyword">TO</span> <span class="string">'keystone'</span>@<span class="string">'localhost'</span> \</span><br><span class="line"><span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'KEYSTONE_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> keystone.* <span class="keyword">TO</span> <span class="string">'keystone'</span>@<span class="string">'%'</span> \</span><br><span class="line"><span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'KEYSTONE_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装包</span></span><br><span class="line">yum <span class="keyword">install</span> openstack-keystone httpd mod_wsgi -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置</span></span><br><span class="line">cp /etc/keystone/keystone.conf /etc/keystone/keystone.conf.bak</span><br><span class="line">grep -v -e <span class="string">"^$"</span> -e <span class="string">"#"</span> /etc/keystone/keystone.conf.bak &gt;/etc/keystone/keystone.conf</span><br><span class="line"> </span><br><span class="line">/etc/keystone/keystone.conf</span><br><span class="line">[<span class="keyword">database</span>]</span><br><span class="line"><span class="comment"># 连接数据库</span></span><br><span class="line"><span class="keyword">connection</span> = mysql+pymysql://keystone:KEYSTONE_DBPASS@controller/keystone</span><br><span class="line">[token]</span><br><span class="line"><span class="comment"># token 使用的方式</span></span><br><span class="line">provider = fernet</span><br><span class="line"></span><br><span class="line">初始化身份认证服务的数据库</span><br><span class="line">su -s /<span class="keyword">bin</span>/sh -c <span class="string">"keystone-manage db_sync"</span> keystone</span><br><span class="line"> </span><br><span class="line">查看创建的表</span><br><span class="line"><span class="comment">#validate</span></span><br><span class="line">mysql keystone -e <span class="string">"show tables;"</span></span><br><span class="line"> </span><br><span class="line">// 初始化Fernet <span class="keyword">keys</span></span><br><span class="line">keystone-manage fernet_setup <span class="comment">--keystone-user keystone --keystone-group keystone</span></span><br><span class="line"> </span><br><span class="line">ls /etc/keystone/fernet-<span class="keyword">keys</span>/</span><br><span class="line"> </span><br><span class="line">// 认证设置使用的系统用户，组</span><br><span class="line">keystone-manage credential_setup <span class="comment">--keystone-user keystone --keystone-group keystone</span></span><br><span class="line"> </span><br><span class="line">// 建立身份服务</span><br><span class="line">keystone-manage bootstrap <span class="comment">--bootstrap-password ADMIN_PASS \</span></span><br><span class="line">  <span class="comment">--bootstrap-admin-url http://controller:5000/v3/ \</span></span><br><span class="line">  <span class="comment">--bootstrap-internal-url http://controller:5000/v3/ \</span></span><br><span class="line">  <span class="comment">--bootstrap-public-url http://controller:5000/v3/ \</span></span><br><span class="line">  <span class="comment">--bootstrap-region-id RegionOne</span></span><br><span class="line"> </span><br><span class="line">// Apache 服务配置</span><br><span class="line">vim +<span class="number">95</span> /etc/httpd/conf/httpd.conf</span><br><span class="line">ServerName controller</span><br><span class="line"> </span><br><span class="line"><span class="keyword">ln</span> -s /usr/<span class="keyword">share</span>/keystone/wsgi-keystone.conf /etc/httpd/conf.d/</span><br><span class="line"> </span><br><span class="line"><span class="comment"># systemctl enable httpd.service</span></span><br><span class="line"><span class="comment"># systemctl start httpd.service</span></span><br><span class="line"> </span><br><span class="line">// 设置管理员环境变量</span><br><span class="line"><span class="keyword">export</span> OS_USERNAME=<span class="keyword">admin</span></span><br><span class="line"><span class="keyword">export</span> OS_PASSWORD=ADMIN_PASS</span><br><span class="line"><span class="keyword">export</span> OS_PROJECT_NAME=<span class="keyword">admin</span></span><br><span class="line"><span class="keyword">export</span> OS_USER_DOMAIN_NAME=<span class="keyword">Default</span></span><br><span class="line"><span class="keyword">export</span> OS_PROJECT_DOMAIN_NAME=<span class="keyword">Default</span></span><br><span class="line"><span class="keyword">export</span> OS_AUTH_URL=<span class="keyword">http</span>://controller:<span class="number">5000</span>/v3</span><br><span class="line"><span class="keyword">export</span> OS_IDENTITY_API_VERSION=<span class="number">3</span></span><br><span class="line"> </span><br><span class="line">// 创建服务实体和API端点</span><br><span class="line">创建一个域(<span class="keyword">default</span> 域 默认存在)</span><br><span class="line">openstack <span class="keyword">domain</span> <span class="keyword">create</span> <span class="comment">--description "An Example Domain" example</span></span><br><span class="line"> </span><br><span class="line">创建一个服务， 隶属于 <span class="keyword">default</span> 域</span><br><span class="line">openstack <span class="keyword">project</span> <span class="keyword">create</span> <span class="comment">--domain default --description "Service Project" service</span></span><br><span class="line"> </span><br><span class="line">创建一个项目，隶属于 <span class="keyword">default</span> 域</span><br><span class="line">openstack <span class="keyword">project</span> <span class="keyword">create</span> <span class="comment">--domain default --description "Demo Project" myproject</span></span><br><span class="line"> </span><br><span class="line">创建一个用户，隶属于 <span class="keyword">default</span> 域</span><br><span class="line">openstack <span class="keyword">user</span> <span class="keyword">create</span> <span class="comment">--domain default --password-prompt myuser</span></span><br><span class="line"><span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">// 创建一个角色</span><br><span class="line">openstack <span class="keyword">role</span> <span class="keyword">create</span> myrole</span><br><span class="line"> </span><br><span class="line">// 关联项目，用户，角色</span><br><span class="line">openstack <span class="keyword">role</span> <span class="keyword">add</span> <span class="comment">--project myproject --user myuser myrole</span></span><br><span class="line"> </span><br><span class="line">// 删除环境变量</span><br><span class="line">unset OS_AUTH_URL OS_PASSWORD</span><br><span class="line"> </span><br><span class="line">// 获取一个token</span><br><span class="line">// api</span><br><span class="line">openstack <span class="comment">--os-auth-url http://controller:5000/v3 \</span></span><br><span class="line">// 项目域 <span class="comment">--os-project-domain-name Default</span></span><br><span class="line">// 用户域</span><br><span class="line"><span class="comment">--os-user-domain-name Default</span></span><br><span class="line">// 项目名 <span class="comment">--os-project-name admin</span></span><br><span class="line">// 用户名</span><br><span class="line"><span class="comment">--os-username admin token issue</span></span><br><span class="line">// 密码</span><br><span class="line">ADMIN_PASS</span><br><span class="line"> </span><br><span class="line">// 获取<span class="keyword">admin</span> 管理员的token</span><br><span class="line">openstack <span class="comment">--os-auth-url http://controller:5000/v3 \</span></span><br><span class="line">  <span class="comment">--os-project-domain-name Default --os-user-domain-name Default \</span></span><br><span class="line">  <span class="comment">--os-project-name admin --os-username admin token issue</span></span><br><span class="line"> </span><br><span class="line">ADMIN_PASS</span><br><span class="line"> </span><br><span class="line">// 获取一个 myproject 的 token</span><br><span class="line">openstack <span class="comment">--os-auth-url http://controller:5000/v3 \</span></span><br><span class="line">  <span class="comment">--os-project-domain-name Default --os-user-domain-name Default \</span></span><br><span class="line">  <span class="comment">--os-project-name myproject --os-username myuser token issue</span></span><br><span class="line"> </span><br><span class="line"><span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">设置一个管理员的环境变量 <span class="keyword">admin</span>-openrc</span><br><span class="line">echo <span class="string">"export OS_PROJECT_DOMAIN_NAME=Default</span></span><br><span class="line"><span class="string">export OS_USER_DOMAIN_NAME=Default</span></span><br><span class="line"><span class="string">export OS_PROJECT_NAME=admin</span></span><br><span class="line"><span class="string">export OS_USERNAME=admin</span></span><br><span class="line"><span class="string">export OS_PASSWORD=ADMIN_PASS</span></span><br><span class="line"><span class="string">export OS_AUTH_URL=http://controller:5000/v3</span></span><br><span class="line"><span class="string">export OS_IDENTITY_API_VERSION=3</span></span><br><span class="line"><span class="string">export OS_IMAGE_API_VERSION=2"</span> &gt;<span class="keyword">admin</span>-openrc</span><br><span class="line"> </span><br><span class="line">设置一个demo的环境变量 demo-openrc</span><br><span class="line">echo <span class="string">"export OS_PROJECT_DOMAIN_NAME=Default</span></span><br><span class="line"><span class="string">export OS_USER_DOMAIN_NAME=Default</span></span><br><span class="line"><span class="string">export OS_PROJECT_NAME=myproject</span></span><br><span class="line"><span class="string">export OS_USERNAME=myuser</span></span><br><span class="line"><span class="string">export OS_PASSWORD=123456</span></span><br><span class="line"><span class="string">export OS_AUTH_URL=http://controller:5000/v3</span></span><br><span class="line"><span class="string">export OS_IDENTITY_API_VERSION=3</span></span><br><span class="line"><span class="string">export OS_IMAGE_API_VERSION=2"</span>&gt;demo-openrc</span><br><span class="line"> </span><br><span class="line">// 获得一个token</span><br><span class="line">. <span class="keyword">admin</span>-openrc</span><br><span class="line">openstack token issue</span><br><span class="line"> </span><br><span class="line">. demo-openrc</span><br><span class="line">openstack token issue</span><br></pre></td></tr></table></figure>
<h3 id="Glance-安装"><a href="#Glance-安装" class="headerlink" title="Glance 安装"></a>Glance 安装</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> glance;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> glance.* <span class="keyword">TO</span> <span class="string">'glance'</span>@<span class="string">'localhost'</span> \</span><br><span class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'GLANCE_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> glance.* <span class="keyword">TO</span> <span class="string">'glance'</span>@<span class="string">'%'</span> \</span><br><span class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'GLANCE_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line">// 注册 glance</span><br><span class="line">. admin-openrc</span><br><span class="line">openstack user <span class="keyword">create</span> <span class="comment">--domain default --password-prompt glance</span></span><br><span class="line"><span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">openstack <span class="keyword">role</span> <span class="keyword">add</span> <span class="comment">--project service --user glance admin</span></span><br><span class="line"> </span><br><span class="line">// 创建服务</span><br><span class="line">openstack service <span class="keyword">create</span> <span class="comment">--name glance \</span></span><br><span class="line">  <span class="comment">--description "OpenStack Image" image</span></span><br><span class="line"> </span><br><span class="line">// 创建 <span class="keyword">public</span> 网络 image</span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne image public http://controller:9292</span></span><br><span class="line"> </span><br><span class="line">// 创建 internal 网络 image</span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne image internal http://controller:9292</span></span><br><span class="line"> </span><br><span class="line">// 创建 <span class="keyword">admin</span> 网络 image</span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne image admin http://controller:9292</span></span><br><span class="line"> </span><br><span class="line">yum <span class="keyword">install</span> openstack-glance -y</span><br><span class="line"> </span><br><span class="line">cp /etc/glance/glance-api.conf /etc/glance/glance-api.conf.bak</span><br><span class="line">grep -Ev <span class="string">"^$|#"</span> /etc/glance/glance-api.conf.bak &gt; /etc/glance/glance-api.conf</span><br><span class="line"> </span><br><span class="line">vim /etc/glance/glance-api.conf</span><br><span class="line">[<span class="keyword">database</span>]</span><br><span class="line"><span class="keyword">connection</span> = mysql+pymysql://glance:GLANCE_DBPASS@controller/glance</span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri  = <span class="keyword">http</span>://controller:<span class="number">5000</span></span><br><span class="line">auth_url = <span class="keyword">http</span>://controller:<span class="number">5000</span></span><br><span class="line">memcached_servers = controller:<span class="number">11211</span></span><br><span class="line">auth_type = <span class="keyword">password</span></span><br><span class="line">project_domain_name = <span class="keyword">Default</span></span><br><span class="line">user_domain_name = <span class="keyword">Default</span></span><br><span class="line">project_name = service</span><br><span class="line">username = glance</span><br><span class="line"><span class="keyword">password</span> = <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">[paste_deploy]</span><br><span class="line">flavor = keystone</span><br><span class="line"> </span><br><span class="line">[glance_store]</span><br><span class="line">stores = <span class="keyword">file</span>,<span class="keyword">http</span></span><br><span class="line">default_store = <span class="keyword">file</span></span><br><span class="line">filesystem_store_datadir = /<span class="keyword">var</span>/lib/glance/images/</span><br><span class="line"> </span><br><span class="line">su -s /<span class="keyword">bin</span>/sh -c <span class="string">"glance-manage db_sync"</span> glance</span><br><span class="line"> </span><br><span class="line"><span class="comment">#validate</span></span><br><span class="line">mysql glance -e <span class="string">"show tables;"</span></span><br><span class="line"> </span><br><span class="line">systemctl <span class="keyword">enable</span> openstack-glance-api.service</span><br><span class="line">systemctl <span class="keyword">start</span> openstack-glance-api.service</span><br><span class="line"> </span><br><span class="line">netstat -nltp |grep <span class="number">9292</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">// 创建一个镜像</span><br><span class="line"> </span><br><span class="line">. <span class="keyword">admin</span>-openrc</span><br><span class="line"> </span><br><span class="line"> wget <span class="keyword">http</span>://download.cirros-cloud.net/<span class="number">0.4</span><span class="number">.0</span>/cirros<span class="number">-0.4</span><span class="number">.0</span>-x86_64-disk.img</span><br><span class="line"> </span><br><span class="line">glance image-<span class="keyword">create</span> <span class="comment">--name "cirros" \</span></span><br><span class="line">  <span class="comment">--file cirros-0.4.0-x86_64-disk.img \</span></span><br><span class="line">  <span class="comment">--disk-format qcow2 --container-format bare \</span></span><br><span class="line">  <span class="comment">--visibility public</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#Invalid OpenStack Identity credentials.</span></span><br><span class="line">配置文件密码错误，修改后重启服务</span><br><span class="line"> </span><br><span class="line">glance image-<span class="keyword">list</span></span><br></pre></td></tr></table></figure>
<h3 id="Placement-安装"><a href="#Placement-安装" class="headerlink" title="Placement 安装"></a>Placement 安装</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> placement;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> placement.* <span class="keyword">TO</span> <span class="string">'placement'</span>@<span class="string">'localhost'</span>  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'PLACEMENT_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> placement.* <span class="keyword">TO</span> <span class="string">'placement'</span>@<span class="string">'%'</span>  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'PLACEMENT_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line">. admin-openrc</span><br><span class="line">openstack user <span class="keyword">create</span> <span class="comment">--domain default --password-prompt placement</span></span><br><span class="line"><span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">openstack <span class="keyword">role</span> <span class="keyword">add</span> <span class="comment">--project service --user placement admin</span></span><br><span class="line"> </span><br><span class="line">openstack service <span class="keyword">create</span> <span class="comment">--name placement \</span></span><br><span class="line">  <span class="comment">--description "Placement API" placement</span></span><br><span class="line"> </span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne placement public http://controller:8778</span></span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne placement internal http://controller:8778</span></span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne placement admin http://controller:8778</span></span><br><span class="line"> </span><br><span class="line">yum <span class="keyword">install</span> openstack-placement-api -y</span><br><span class="line">cp /etc/placement/placement.conf /etc/placement/placement.conf.bak</span><br><span class="line">grep -Ev <span class="string">"#|^$"</span> /etc/placement/placement.conf.bak &gt;/etc/placement/placement.conf</span><br><span class="line"> </span><br><span class="line">vim /etc/placement/placement.conf</span><br><span class="line"> </span><br><span class="line">[placement_database]</span><br><span class="line"><span class="keyword">connection</span> = mysql+pymysql://placement:PLACEMENT_DBPASS@controller/placement</span><br><span class="line"> </span><br><span class="line">[api]</span><br><span class="line">auth_strategy = keystone</span><br><span class="line"> </span><br><span class="line">[keystone_authtoken]</span><br><span class="line">auth_url = <span class="keyword">http</span>://controller:<span class="number">5000</span>/v3</span><br><span class="line">memcached_servers = controller:<span class="number">11211</span></span><br><span class="line">auth_type = <span class="keyword">password</span></span><br><span class="line">project_domain_name = <span class="keyword">Default</span></span><br><span class="line">user_domain_name = <span class="keyword">Default</span></span><br><span class="line">project_name = service</span><br><span class="line">username = placement</span><br><span class="line"><span class="keyword">password</span> = <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">su -s /<span class="keyword">bin</span>/sh -c <span class="string">"placement-manage db sync"</span> placement</span><br><span class="line"> </span><br><span class="line">/usr/lib/python2<span class="number">.7</span>/site-packages/pymysql/cursors.py:<span class="number">170</span>: <span class="keyword">Warning</span>: (<span class="number">1280</span>, u<span class="string">"Name 'alembic_version_pkc' ignored for PRIMARY key."</span>)</span><br><span class="line">  <span class="keyword">result</span> = self._query(<span class="keyword">query</span>)</span><br><span class="line"> </span><br><span class="line">mysql placement -e <span class="string">"show tables;"</span></span><br><span class="line"> </span><br><span class="line">systemctl restart httpd</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># httpd 报 403 拒绝访问，可以使用 uwsgi 试试</span></span><br><span class="line"><span class="comment">#pip install -i https://pypi.tuna.tsinghua.edu.cn/simple uwsgi</span></span><br><span class="line"><span class="comment">#uwsgi -d -M --http :8778 --wsgi-file /usr/bin/placement-api --processes 2 --threads 10</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">curl -v <span class="keyword">http</span>://controller:<span class="number">8778</span></span><br><span class="line"><span class="comment">#httpd 报 403 拒绝访问</span></span><br><span class="line">AH01630: <span class="keyword">client</span> denied <span class="keyword">by</span> <span class="keyword">server</span> configuration: /usr/<span class="keyword">bin</span>/placement-api</span><br><span class="line"> </span><br><span class="line"> vim /etc/httpd/conf.d/<span class="number">00</span>-placement-api.conf</span><br><span class="line"> </span><br><span class="line">&lt;<span class="keyword">Directory</span> /usr/<span class="keyword">bin</span>&gt;</span><br><span class="line">    &lt;IfVersion &gt;= <span class="number">2.4</span>&gt;</span><br><span class="line">        Require <span class="keyword">all</span> granted</span><br><span class="line">    &lt;/IfVersion&gt;</span><br><span class="line">    &lt;IfVersion &lt; <span class="number">2.4</span>&gt;</span><br><span class="line">        <span class="keyword">Order</span> <span class="keyword">allow</span>,deny</span><br><span class="line">        <span class="keyword">Allow</span> <span class="keyword">from</span> <span class="keyword">all</span></span><br><span class="line">    &lt;/IfVersion&gt;</span><br><span class="line">&lt;/<span class="keyword">Directory</span>&gt;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">. <span class="keyword">admin</span>-openrc</span><br><span class="line"> </span><br><span class="line">placement-<span class="keyword">status</span> <span class="keyword">upgrade</span> <span class="keyword">check</span></span><br><span class="line"> </span><br><span class="line">pip <span class="keyword">install</span> osc-placement</span><br><span class="line"> </span><br><span class="line">openstack <span class="comment">--os-placement-api-version 1.2 resource class list --sort-column name</span></span><br><span class="line"> </span><br><span class="line">openstack <span class="comment">--os-placement-api-version 1.6 trait list --sort-column name</span></span><br></pre></td></tr></table></figure>
<h3 id="Nova-控制节点安装"><a href="#Nova-控制节点安装" class="headerlink" title="Nova 控制节点安装"></a>Nova 控制节点安装</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> nova_api;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> nova;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> nova_cell0;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova_api.* <span class="keyword">TO</span> <span class="string">'nova'</span>@<span class="string">'localhost'</span> \</span><br><span class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'NOVA_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova_api.* <span class="keyword">TO</span> <span class="string">'nova'</span>@<span class="string">'%'</span> \</span><br><span class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'NOVA_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova.* <span class="keyword">TO</span> <span class="string">'nova'</span>@<span class="string">'localhost'</span> \</span><br><span class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'NOVA_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova.* <span class="keyword">TO</span> <span class="string">'nova'</span>@<span class="string">'%'</span> \</span><br><span class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'NOVA_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova_cell0.* <span class="keyword">TO</span> <span class="string">'nova'</span>@<span class="string">'localhost'</span> \</span><br><span class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'NOVA_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova_cell0.* <span class="keyword">TO</span> <span class="string">'nova'</span>@<span class="string">'%'</span> \</span><br><span class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'NOVA_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">. admin-openrc</span><br><span class="line">// 创建一个nova 用户</span><br><span class="line">openstack user <span class="keyword">create</span> <span class="comment">--domain default --password-prompt nova</span></span><br><span class="line"><span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">// 创建一个nova 到 <span class="keyword">admin</span> 角色</span><br><span class="line">openstack <span class="keyword">role</span> <span class="keyword">add</span> <span class="comment">--project service --user nova admin</span></span><br><span class="line"> </span><br><span class="line">// <span class="keyword">Create</span> the nova service entity</span><br><span class="line">openstack service <span class="keyword">create</span> <span class="comment">--name nova \</span></span><br><span class="line">  <span class="comment">--description "OpenStack Compute" compute</span></span><br><span class="line"> </span><br><span class="line">// <span class="keyword">Create</span> the <span class="keyword">Compute</span> API service endpoints</span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne compute public http://controller:8774/v2.1</span></span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne compute internal http://controller:8774/v2.1</span></span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne compute admin http://controller:8774/v2.1</span></span><br><span class="line"> </span><br><span class="line">yum <span class="keyword">install</span> openstack-nova-api openstack-nova-conductor \</span><br><span class="line">  openstack-nova-novncproxy openstack-nova-scheduler -y</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">cp /etc/nova/nova.conf /etc/nova/nova.conf.bak</span><br><span class="line">grep -Ev <span class="string">"^$|#"</span> /etc/nova/nova.conf.bak &gt; /etc/nova/nova.conf</span><br><span class="line"> </span><br><span class="line">vim /etc/nova/nova.conf</span><br><span class="line">[<span class="keyword">DEFAULT</span>]</span><br><span class="line">enabled_apis = osapi_compute,metadata</span><br><span class="line">transport_url = rabbit://openstack:RABBIT_PASS@controller:<span class="number">5672</span>/</span><br><span class="line">my_ip = <span class="number">192.168</span><span class="number">.0</span><span class="number">.51</span></span><br><span class="line">use_neutron = <span class="literal">true</span></span><br><span class="line">firewall_driver = nova.virt.firewall.NoopFirewallDriver</span><br><span class="line"> </span><br><span class="line">[api]</span><br><span class="line">auth_strategy = keystone</span><br><span class="line"> </span><br><span class="line">[api_database]</span><br><span class="line"><span class="keyword">connection</span> = mysql+pymysql://nova:NOVA_DBPASS@controller/nova_api</span><br><span class="line"> </span><br><span class="line">[barbican]</span><br><span class="line">[<span class="keyword">cache</span>]</span><br><span class="line">[cinder]</span><br><span class="line">[<span class="keyword">compute</span>]</span><br><span class="line">[conductor]</span><br><span class="line">[console]</span><br><span class="line">[consoleauth]</span><br><span class="line">[cors]</span><br><span class="line">[<span class="keyword">database</span>]</span><br><span class="line"><span class="keyword">connection</span> = mysql+pymysql://nova:NOVA_DBPASS@controller/nova</span><br><span class="line"> </span><br><span class="line">[devices]</span><br><span class="line">[ephemeral_storage_encryption]</span><br><span class="line">[filter_scheduler]</span><br><span class="line">[glance]</span><br><span class="line">api_servers = <span class="keyword">http</span>://controller:<span class="number">9292</span></span><br><span class="line"> </span><br><span class="line">[guestfs]</span><br><span class="line">[healthcheck]</span><br><span class="line">[hyperv]</span><br><span class="line">[ironic]</span><br><span class="line">[key_manager]</span><br><span class="line">[keystone]</span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri = <span class="keyword">http</span>://controller:<span class="number">5000</span>/</span><br><span class="line">auth_url = <span class="keyword">http</span>://controller:<span class="number">5000</span>/</span><br><span class="line">memcached_servers = controller:<span class="number">11211</span></span><br><span class="line">auth_type = <span class="keyword">password</span></span><br><span class="line">project_domain_name = <span class="keyword">Default</span></span><br><span class="line">user_domain_name = <span class="keyword">Default</span></span><br><span class="line">project_name = service</span><br><span class="line">username = nova</span><br><span class="line"><span class="keyword">password</span> = <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">[libvirt]</span><br><span class="line">[metrics]</span><br><span class="line">[mks]</span><br><span class="line">[neutron]</span><br><span class="line">[notifications]</span><br><span class="line">[osapi_v21]</span><br><span class="line">[oslo_concurrency]</span><br><span class="line">lock_path = /<span class="keyword">var</span>/lib/nova/tmp</span><br><span class="line"> </span><br><span class="line">[oslo_messaging_amqp]</span><br><span class="line">[oslo_messaging_kafka]</span><br><span class="line">[oslo_messaging_notifications]</span><br><span class="line">[oslo_messaging_rabbit]</span><br><span class="line">[oslo_middleware]</span><br><span class="line">[oslo_policy]</span><br><span class="line">[pci]</span><br><span class="line">[placement]</span><br><span class="line">region_name = RegionOne</span><br><span class="line">project_domain_name = <span class="keyword">Default</span></span><br><span class="line">project_name = service</span><br><span class="line">auth_type = <span class="keyword">password</span></span><br><span class="line">user_domain_name = <span class="keyword">Default</span></span><br><span class="line">auth_url = <span class="keyword">http</span>://controller:<span class="number">5000</span>/v3</span><br><span class="line">username = placement</span><br><span class="line"><span class="keyword">password</span> = <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">[powervm]</span><br><span class="line">[privsep]</span><br><span class="line">[profiler]</span><br><span class="line">[<span class="keyword">quota</span>]</span><br><span class="line">[rdp]</span><br><span class="line">[remote_debug]</span><br><span class="line">[scheduler]</span><br><span class="line">[serial_console]</span><br><span class="line">[service_user]</span><br><span class="line">[spice]</span><br><span class="line">[upgrade_levels]</span><br><span class="line">[vault]</span><br><span class="line">[vendordata_dynamic_auth]</span><br><span class="line">[vmware]</span><br><span class="line">[vnc]</span><br><span class="line">enabled = <span class="literal">true</span></span><br><span class="line">server_listen = $my_ip</span><br><span class="line">server_proxyclient_address = $my_ip</span><br><span class="line"> </span><br><span class="line">[workarounds]</span><br><span class="line">[wsgi]</span><br><span class="line">[xenserver]</span><br><span class="line">[xvp]</span><br><span class="line">[zvm]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">su -s /<span class="keyword">bin</span>/sh -c <span class="string">"nova-manage api_db sync"</span> nova</span><br><span class="line"> </span><br><span class="line">mysql nova_api -e <span class="string">"show tables;"</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">Register</span> the cell0 <span class="keyword">database</span></span><br><span class="line">su -s /<span class="keyword">bin</span>/sh -c <span class="string">"nova-manage cell_v2 map_cell0"</span> nova</span><br><span class="line"> </span><br><span class="line"><span class="keyword">Create</span> the cell1 cell</span><br><span class="line">su -s /<span class="keyword">bin</span>/sh -c <span class="string">"nova-manage cell_v2 create_cell --name=cell1 --verbose"</span> nova</span><br><span class="line"> </span><br><span class="line">Populate the nova <span class="keyword">database</span></span><br><span class="line">su -s /<span class="keyword">bin</span>/sh -c <span class="string">"nova-manage db sync"</span> nova<span class="string">'</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">Verify nova cell0 and cell1 are registered correctly</span></span><br><span class="line"><span class="string">su -s /bin/sh -c "nova-manage cell_v2 list_cells" nova</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">#validate</span></span><br><span class="line"><span class="string">mysql nova -e "show tables;"</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">systemctl enable \</span></span><br><span class="line"><span class="string">    openstack-nova-api.service \</span></span><br><span class="line"><span class="string">    openstack-nova-scheduler.service \</span></span><br><span class="line"><span class="string">    openstack-nova-conductor.service \</span></span><br><span class="line"><span class="string">    openstack-nova-novncproxy.service</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">systemctl start \</span></span><br><span class="line"><span class="string">    openstack-nova-api.service \</span></span><br><span class="line"><span class="string">    openstack-nova-scheduler.service \</span></span><br><span class="line"><span class="string">    openstack-nova-conductor.service \</span></span><br><span class="line"><span class="string">    openstack-nova-novncproxy.service</span></span><br></pre></td></tr></table></figure>

<h3 id="Neutron-控制节点安装"><a href="#Neutron-控制节点安装" class="headerlink" title="Neutron 控制节点安装"></a>Neutron 控制节点安装</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line"> </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> neutron;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> neutron.* <span class="keyword">TO</span> <span class="string">'neutron'</span>@<span class="string">'localhost'</span> \</span><br><span class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'NEUTRON_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> neutron.* <span class="keyword">TO</span> <span class="string">'neutron'</span>@<span class="string">'%'</span> \</span><br><span class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'NEUTRON_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line">. admin-openrc</span><br><span class="line">// <span class="keyword">Create</span> the neutron <span class="keyword">user</span></span><br><span class="line">openstack <span class="keyword">user</span> <span class="keyword">create</span> <span class="comment">--domain default --password-prompt neutron</span></span><br><span class="line"><span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">// <span class="keyword">Add</span> the <span class="keyword">admin</span> <span class="keyword">role</span> <span class="keyword">to</span> the neutron <span class="keyword">user</span></span><br><span class="line">openstack <span class="keyword">role</span> <span class="keyword">add</span> <span class="comment">--project service --user neutron admin</span></span><br><span class="line"> </span><br><span class="line">// <span class="keyword">Create</span> the neutron service entity</span><br><span class="line">openstack service <span class="keyword">create</span> <span class="comment">--name neutron \</span></span><br><span class="line">  <span class="comment">--description "OpenStack Networking" network</span></span><br><span class="line"> </span><br><span class="line">// <span class="keyword">Create</span> the Networking service API endpoints</span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne network public http://controller:9696</span></span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne network internal http://controller:9696</span></span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne network admin http://controller:9696</span></span><br><span class="line"> </span><br><span class="line">// linux bridge 支持</span><br><span class="line">lsmod |grep br_netfilter</span><br><span class="line">modprobe br_netfilter</span><br><span class="line"> </span><br><span class="line">sysctl -a |grep <span class="string">"net.bridge.bridge"</span></span><br><span class="line">echo <span class="string">"modprobe br_netfilter"</span> &gt;/etc/sysconfig/modules/br_netfilter.modules</span><br><span class="line"> </span><br><span class="line">sysctl -a |grep net.bridge.bridge-nf-<span class="keyword">call</span>-iptables</span><br><span class="line">sysctl -a |grep net.bridge.bridge-nf-<span class="keyword">call</span>-ip6tables</span><br><span class="line"> </span><br><span class="line">// 选择其中一个网络类型安装</span><br><span class="line">//  非路由模式</span><br><span class="line">Networking <span class="keyword">Option</span> <span class="number">1</span>: Provider networks</span><br><span class="line">// 路由模式</span><br><span class="line">Networking <span class="keyword">Option</span> <span class="number">2</span>: <span class="keyword">Self</span>-service networks</span><br><span class="line"> </span><br><span class="line">// 配置元数据代理</span><br><span class="line">vim /etc/neutron/metadata_agent.ini</span><br><span class="line">[<span class="keyword">DEFAULT</span>]</span><br><span class="line">nova_metadata_host = controller</span><br><span class="line">metadata_proxy_shared_secret = METADATA_SECRET</span><br><span class="line"> </span><br><span class="line">vim /etc/nova/nova.conf</span><br><span class="line">[neutron]</span><br><span class="line">auth_url = <span class="keyword">http</span>://controller:<span class="number">5000</span></span><br><span class="line">auth_type = <span class="keyword">password</span></span><br><span class="line">project_domain_name = <span class="keyword">default</span></span><br><span class="line">user_domain_name = <span class="keyword">default</span></span><br><span class="line">region_name = RegionOne</span><br><span class="line">project_name = service</span><br><span class="line">username = neutron</span><br><span class="line"><span class="keyword">password</span> = NEUTRON_PASS</span><br><span class="line">service_metadata_proxy = <span class="literal">true</span></span><br><span class="line">metadata_proxy_shared_secret = METADATA_SECRET</span><br><span class="line"> </span><br><span class="line"><span class="comment"># ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf \</span></span><br><span class="line">  <span class="comment">--config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># systemctl restart openstack-nova-api.service</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># systemctl enable neutron-server.service \</span></span><br><span class="line">  neutron-linuxbridge-agent.service \</span><br><span class="line">    neutron-dhcp-agent.service \</span><br><span class="line">  neutron-metadata-agent.service</span><br><span class="line"> </span><br><span class="line"><span class="comment"># systemctl start neutron-server.service \</span></span><br><span class="line">  neutron-linuxbridge-agent.service \</span><br><span class="line">    neutron-dhcp-agent.service \</span><br><span class="line">  neutron-metadata-agent.service</span><br><span class="line"> </span><br><span class="line">// 选择路由模式后执行</span><br><span class="line"><span class="comment"># systemctl enable neutron-l3-agent.service</span></span><br><span class="line"><span class="comment"># systemctl start neutron-l3-agent.service</span></span><br><span class="line"> </span><br><span class="line">neutron <span class="keyword">agent</span>-<span class="keyword">list</span></span><br></pre></td></tr></table></figure>
<h3 id="网络类型分为：桥接型，路由型两种，安装方式也不同。"><a href="#网络类型分为：桥接型，路由型两种，安装方式也不同。" class="headerlink" title="网络类型分为：桥接型，路由型两种，安装方式也不同。"></a>网络类型分为：桥接型，路由型两种，安装方式也不同。</h3><h4 id="桥接型"><a href="#桥接型" class="headerlink" title="桥接型"></a>桥接型</h4><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">yum install openstack-neutron openstack-neutron-ml2 \</span><br><span class="line">  openstack-neutron-linuxbridge ebtables -y</span><br><span class="line"> </span><br><span class="line">cp  <span class="regexp">/etc/</span>neutron<span class="regexp">/neutron.conf  /</span>etc<span class="regexp">/neutron/</span>neutron.conf.bak</span><br><span class="line">grep -Ev <span class="string">"#|^$"</span> <span class="regexp">/etc/</span>neutron<span class="regexp">/neutron.conf.bak &gt;/</span>etc<span class="regexp">/neutron/</span>neutron.conf</span><br><span class="line"> </span><br><span class="line">vim <span class="regexp">/etc/</span>neutron/neutron.conf</span><br><span class="line">[DEFAULT]</span><br><span class="line">core_plugin = ml2</span><br><span class="line">service_plugins =</span><br><span class="line">auth_strategy = keystone</span><br><span class="line">notify_nova_on_port_status_changes = <span class="literal">true</span></span><br><span class="line">notify_nova_on_port_data_changes = <span class="literal">true</span></span><br><span class="line"> </span><br><span class="line">[database]</span><br><span class="line">connection = mysql+<span class="string">pymysql:</span><span class="comment">//neutron:NEUTRON_DBPASS@controller/neutron</span></span><br><span class="line"> </span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri = <span class="string">http:</span><span class="comment">//controller:5000</span></span><br><span class="line">auth_url = <span class="string">http:</span><span class="comment">//controller:5000</span></span><br><span class="line">memcached_servers = <span class="string">controller:</span><span class="number">11211</span></span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = <span class="keyword">default</span></span><br><span class="line">user_domain_name = <span class="keyword">default</span></span><br><span class="line">project_name = service</span><br><span class="line">username = neutron</span><br><span class="line">password = <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">[nova]</span><br><span class="line">auth_url = <span class="string">http:</span><span class="comment">//controller:5000</span></span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = <span class="keyword">default</span></span><br><span class="line">user_domain_name = <span class="keyword">default</span></span><br><span class="line">region_name = RegionOne</span><br><span class="line">project_name = service</span><br><span class="line">username = nova</span><br><span class="line">password = <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">cp <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/</span>ml2<span class="regexp">/ml2_conf.ini /</span>etc<span class="regexp">/neutron/</span>plugins<span class="regexp">/ml2/</span>ml2_conf.ini.bak</span><br><span class="line">grep -Ev <span class="string">"#|^$"</span> <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/</span>ml2<span class="regexp">/ml2_conf.ini.bak &gt;/</span>etc<span class="regexp">/neutron/</span>plugins<span class="regexp">/ml2/</span>ml2_conf.ini</span><br><span class="line"> </span><br><span class="line">vim <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/</span>ml2/ml2_conf.ini</span><br><span class="line">[ml2]</span><br><span class="line">type_drivers = flat,vlan</span><br><span class="line">tenant_network_types =</span><br><span class="line">mechanism_drivers = linuxbridge</span><br><span class="line">extension_drivers = port_security</span><br><span class="line">[ml2_type_flat]</span><br><span class="line">flat_networks = provider</span><br><span class="line">[securitygroup]</span><br><span class="line">enable_ipset = <span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">cp <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/</span>ml2<span class="regexp">/linuxbridge_agent.ini /</span>etc<span class="regexp">/neutron/</span>plugins<span class="regexp">/ml2/</span>linuxbridge_agent.ini.bak</span><br><span class="line">grep -Ev <span class="string">"#|^$"</span> <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/</span>ml2<span class="regexp">/linuxbridge_agent.ini.bak &gt;/</span>etc<span class="regexp">/neutron/</span>plugins<span class="regexp">/ml2/</span>linuxbridge_agent.ini</span><br><span class="line"> </span><br><span class="line">vim <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/</span>ml2/linuxbridge_agent.ini</span><br><span class="line">[linux_bridge]</span><br><span class="line">physical_interface_mappings = <span class="string">provider:</span>eth0</span><br><span class="line">[vxlan]</span><br><span class="line">enable_vxlan = <span class="literal">false</span></span><br><span class="line">[securitygroup]</span><br><span class="line">enable_security_group = <span class="literal">true</span></span><br><span class="line">firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver</span><br><span class="line"> </span><br><span class="line">cp <span class="regexp">/etc/</span>neutron<span class="regexp">/dhcp_agent.ini /</span>etc<span class="regexp">/neutron/</span>dhcp_agent.ini.bak</span><br><span class="line">grep -Ev <span class="string">"#|^$"</span> <span class="regexp">/etc/</span>neutron<span class="regexp">/dhcp_agent.ini.bak &gt;/</span>etc<span class="regexp">/neutron/</span>dhcp_agent.ini</span><br><span class="line">vim <span class="regexp">/etc/</span>neutron/dhcp_agent.ini</span><br><span class="line"> </span><br><span class="line">[DEFAULT]</span><br><span class="line">interface_driver = linuxbridge</span><br><span class="line">dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq</span><br><span class="line">enable_isolated_metadata = <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h4 id="路由型"><a href="#路由型" class="headerlink" title="路由型"></a>路由型</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="Worker-节点安装"><a href="#Worker-节点安装" class="headerlink" title="Worker 节点安装"></a>Worker 节点安装</h2><h3 id="Nova-组件"><a href="#Nova-组件" class="headerlink" title="Nova 组件"></a>Nova 组件</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line">yum -y install centos-release-openstack-train</span><br><span class="line"> </span><br><span class="line">yum install openstack-nova-compute -y</span><br><span class="line"> </span><br><span class="line">cp /etc/nova/nova.conf /etc/nova/nova.conf.bak</span><br><span class="line">grep -Ev <span class="string">"#|^$"</span> /etc/nova/nova.conf.bak &gt;/etc/nova/nova.conf</span><br><span class="line"> </span><br><span class="line">vim /etc/nova/nova.conf</span><br><span class="line">[<span class="meta">DEFAULT</span>]</span><br><span class="line">enabled_apis = osapi_compute,metadata</span><br><span class="line">transport_url = rabbit:<span class="comment">//openstack:RABBIT_PASS@controller</span></span><br><span class="line">my_ip = <span class="number">192.168</span><span class="number">.0</span><span class="number">.104</span></span><br><span class="line">use_neutron = <span class="literal">true</span></span><br><span class="line">firewall_driver = nova.virt.firewall.NoopFirewallDriver</span><br><span class="line"> </span><br><span class="line">[<span class="meta">api</span>]</span><br><span class="line">auth_strategy = keystone</span><br><span class="line"> </span><br><span class="line">[<span class="meta">api_database</span>]</span><br><span class="line">[<span class="meta">barbican</span>]</span><br><span class="line">[<span class="meta">cache</span>]</span><br><span class="line">[<span class="meta">cinder</span>]</span><br><span class="line">[<span class="meta">compute</span>]</span><br><span class="line">[<span class="meta">conductor</span>]</span><br><span class="line">[<span class="meta">console</span>]</span><br><span class="line">[<span class="meta">consoleauth</span>]</span><br><span class="line">[<span class="meta">cors</span>]</span><br><span class="line">[<span class="meta">database</span>]</span><br><span class="line">[<span class="meta">devices</span>]</span><br><span class="line">[<span class="meta">ephemeral_storage_encryption</span>]</span><br><span class="line">[<span class="meta">filter_scheduler</span>]</span><br><span class="line">[<span class="meta">glance</span>]</span><br><span class="line">api_servers = http:<span class="comment">//controller:9292</span></span><br><span class="line"> </span><br><span class="line">[<span class="meta">guestfs</span>]</span><br><span class="line">[<span class="meta">healthcheck</span>]</span><br><span class="line">[<span class="meta">hyperv</span>]</span><br><span class="line">[<span class="meta">ironic</span>]</span><br><span class="line">[<span class="meta">key_manager</span>]</span><br><span class="line">[<span class="meta">keystone</span>]</span><br><span class="line">[<span class="meta">keystone_authtoken</span>]</span><br><span class="line">www_authenticate_uri = http:<span class="comment">//controller:5000/</span></span><br><span class="line">auth_url = http:<span class="comment">//controller:5000/</span></span><br><span class="line">memcached_servers = controller:<span class="number">11211</span></span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = Default</span><br><span class="line">user_domain_name = Default</span><br><span class="line">project_name = service</span><br><span class="line">username = nova</span><br><span class="line">password = <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">[<span class="meta">libvirt</span>]</span><br><span class="line">virt_type = qemu</span><br><span class="line">[<span class="meta">metrics</span>]</span><br><span class="line">[<span class="meta">mks</span>]</span><br><span class="line">[<span class="meta">neutron</span>]</span><br><span class="line">[<span class="meta">notifications</span>]</span><br><span class="line">[<span class="meta">osapi_v21</span>]</span><br><span class="line">[<span class="meta">oslo_concurrency</span>]</span><br><span class="line">lock_path = /<span class="keyword">var</span>/lib/nova/tmp</span><br><span class="line"> </span><br><span class="line">[<span class="meta">oslo_messaging_amqp</span>]</span><br><span class="line">[<span class="meta">oslo_messaging_kafka</span>]</span><br><span class="line">[<span class="meta">oslo_messaging_notifications</span>]</span><br><span class="line">[<span class="meta">oslo_messaging_rabbit</span>]</span><br><span class="line">[<span class="meta">oslo_middleware</span>]</span><br><span class="line">[<span class="meta">oslo_policy</span>]</span><br><span class="line">[<span class="meta">pci</span>]</span><br><span class="line">[<span class="meta">placement</span>]</span><br><span class="line">region_name = RegionOne</span><br><span class="line">project_domain_name = Default</span><br><span class="line">project_name = service</span><br><span class="line">auth_type = password</span><br><span class="line">user_domain_name = Default</span><br><span class="line">auth_url = http:<span class="comment">//controller:5000/v3</span></span><br><span class="line">username = placement</span><br><span class="line">password = <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">[<span class="meta">powervm</span>]</span><br><span class="line">[<span class="meta">privsep</span>]</span><br><span class="line">[<span class="meta">profiler</span>]</span><br><span class="line">[<span class="meta">quota</span>]</span><br><span class="line">[<span class="meta">rdp</span>]</span><br><span class="line">[<span class="meta">remote_debug</span>]</span><br><span class="line">[<span class="meta">scheduler</span>]</span><br><span class="line">[<span class="meta">serial_console</span>]</span><br><span class="line">[<span class="meta">service_user</span>]</span><br><span class="line">[<span class="meta">spice</span>]</span><br><span class="line">[<span class="meta">upgrade_levels</span>]</span><br><span class="line">[<span class="meta">vault</span>]</span><br><span class="line">[<span class="meta">vendordata_dynamic_auth</span>]</span><br><span class="line">[<span class="meta">vmware</span>]</span><br><span class="line">[<span class="meta">vnc</span>]</span><br><span class="line">enabled = <span class="literal">true</span></span><br><span class="line">server_listen = <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">server_proxyclient_address = $my_ip</span><br><span class="line">novncproxy_base_url = http:<span class="comment">//controller:6080/vnc_auto.html</span></span><br><span class="line"> </span><br><span class="line">[<span class="meta">workarounds</span>]</span><br><span class="line">[<span class="meta">wsgi</span>]</span><br><span class="line">[<span class="meta">xenserver</span>]</span><br><span class="line">[<span class="meta">xvp</span>]</span><br><span class="line">[<span class="meta">zvm</span>]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">egrep -c <span class="string">'(vmx|svm)'</span> /proc/cpuinfo</span><br><span class="line">systemctl enable libvirtd.service openstack-nova-compute.service</span><br><span class="line">systemctl start libvirtd.service openstack-nova-compute.service</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">Failed to connect socket to <span class="string">'/var/run/libvirt/libvirt-sock'</span>: Permission denied: libvirtError: Failed to connect socket to <span class="string">'/var/run/libvirt/libvirt-sock'</span>: Permission denied</span><br><span class="line"> </span><br><span class="line">chmod <span class="number">777</span> /<span class="keyword">var</span>/run/libvirt/libvirt-sock</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">Run the following commands <span class="keyword">on</span> the controller node.</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 查看主机</span></span><br><span class="line">. admin-openrc</span><br><span class="line">openstack compute service list --service nova-compute</span><br><span class="line"> </span><br><span class="line">Discover compute hosts</span><br><span class="line">su -s /bin/sh -c <span class="string">"nova-manage cell_v2 discover_hosts --verbose"</span> nova</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 自动发现 controller 配置</span></span><br><span class="line">vim /etc/nova/nova.conf</span><br><span class="line">[<span class="meta">scheduler</span>]</span><br><span class="line">discover_hosts_in_cells_interval = <span class="number">120</span></span><br><span class="line"> </span><br><span class="line">openstack user list</span><br><span class="line">openstack service list</span><br><span class="line">openstack role list</span><br><span class="line"> </span><br><span class="line">openstack service list</span><br><span class="line">openstack compute service list</span><br><span class="line">openstack catalog list</span><br><span class="line">openstack image list</span><br><span class="line">nova-status upgrade check</span><br></pre></td></tr></table></figure>
<h3 id="Neutron-组件"><a href="#Neutron-组件" class="headerlink" title="Neutron 组件"></a>Neutron 组件</h3><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">yum install openstack-neutron-linuxbridge ebtables ipset -y</span><br><span class="line"> </span><br><span class="line">cp <span class="regexp">/etc/</span>neutron<span class="regexp">/neutron.conf /</span>etc<span class="regexp">/neutron/</span>neutron.conf.bak</span><br><span class="line">grep -Ev <span class="string">"#|^$"</span> <span class="regexp">/etc/</span>neutron<span class="regexp">/neutron.conf.bak &gt;/</span>etc<span class="regexp">/neutron/</span>neutron.conf</span><br><span class="line"> </span><br><span class="line">vim <span class="regexp">/etc/</span>neutron/neutron.conf</span><br><span class="line">[DEFAULT]</span><br><span class="line">transport_url = <span class="string">rabbit:</span><span class="comment">//openstack:RABBIT_PASS@controller</span></span><br><span class="line">auth_strategy = keystone</span><br><span class="line"> </span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri = <span class="string">http:</span><span class="comment">//controller:5000</span></span><br><span class="line">auth_url = <span class="string">http:</span><span class="comment">//controller:5000</span></span><br><span class="line">memcached_servers = <span class="string">controller:</span><span class="number">11211</span></span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = <span class="keyword">default</span></span><br><span class="line">user_domain_name = <span class="keyword">default</span></span><br><span class="line">project_name = service</span><br><span class="line">username = neutron</span><br><span class="line">password = <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">[oslo_concurrency]</span><br><span class="line">lock_path = <span class="regexp">/var/</span>lib<span class="regexp">/neutron/</span>tmp</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">cp <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/</span>ml2<span class="regexp">/linuxbridge_agent.ini /</span>etc<span class="regexp">/neutron/</span>plugins<span class="regexp">/ml2/</span>linuxbridge_agent.ini.bak</span><br><span class="line">grep -Ev <span class="string">"#|^$"</span> <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/</span>ml2<span class="regexp">/linuxbridge_agent.ini.bak &gt;/</span>etc<span class="regexp">/neutron/</span>plugins<span class="regexp">/ml2/</span>linuxbridge_agent.ini</span><br><span class="line"> </span><br><span class="line">vim <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/</span>ml2/linuxbridge_agent.ini</span><br><span class="line">[linux_bridge]</span><br><span class="line">physical_interface_mappings = <span class="string">provider:</span>em1</span><br><span class="line"> </span><br><span class="line">[vxlan]</span><br><span class="line">enable_vxlan = <span class="literal">false</span></span><br><span class="line"> </span><br><span class="line">[securitygroup]</span><br><span class="line">enable_security_group = <span class="literal">true</span></span><br><span class="line">firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">vim <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">[neutron]</span><br><span class="line">auth_url = <span class="string">http:</span><span class="comment">//controller:5000</span></span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = <span class="keyword">default</span></span><br><span class="line">user_domain_name = <span class="keyword">default</span></span><br><span class="line">region_name = RegionOne</span><br><span class="line">project_name = service</span><br><span class="line">username = neutron</span><br><span class="line">password = <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">systemctl restart openstack-nova-compute.service</span><br><span class="line"> </span><br><span class="line">systemctl enable neutron-linuxbridge-agent.service</span><br><span class="line">systemctl start neutron-linuxbridge-agent.service</span><br></pre></td></tr></table></figure>

<p>至此，已经可以把 Openstack 跑起来了。接下来要安装一些额外的组件，提供更多的功能。</p>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>openstack</tag>
        <tag>nova</tag>
        <tag>netron</tag>
        <tag>编排工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis使用</title>
    <url>/blog.githup.io/2020/05/Redis%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p><a href="https://redis.io/documentation" target="_blank" rel="noopener"> Redis </a></p>
]]></content>
      <categories>
        <category>Service</category>
      </categories>
  </entry>
  <entry>
    <title>chrome-headless</title>
    <url>/blog.githup.io/2020/05/chrome-headless/</url>
    <content><![CDATA[<h3 id="MAC-系统中"><a href="#MAC-系统中" class="headerlink" title="MAC 系统中"></a>MAC 系统中</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/Applications/Google</span>\ Chrome.app/Contents/MacOS</span><br><span class="line">ln -s <span class="string">./Google</span>\ Chrome <span class="string">./chrome</span></span><br><span class="line"><span class="string">./chrome</span> <span class="params">--headless</span> <span class="params">--disable-gpu</span> <span class="params">--dump-dom</span> http:<span class="string">//www.baidu.com</span></span><br><span class="line"><span class="params">--headless</span> 不显示窗体</span><br><span class="line"><span class="params">--disable-gpu</span> 关闭GPU</span><br><span class="line"><span class="params">--dump-dom</span> 把 dom 元素输出来</span><br></pre></td></tr></table></figure>

<h3 id="chrome-相关"><a href="#chrome-相关" class="headerlink" title="chrome 相关"></a>chrome 相关</h3><ul>
<li><a href="https://www.chromium.org/" target="_blank" rel="noopener">Chromium</a><ul>
<li>Chromium是由Google主导开发的网页浏览器。</li>
</ul>
</li>
<li>CDB<ul>
<li>chrome debug protocol，简称cdp。一个让devtools和浏览器内核交换数据的通道</li>
</ul>
</li>
<li><a href="https://chromedevtools.github.io/devtools-protocol/" target="_blank" rel="noopener">devtools</a><ul>
<li>对chrome 进行调试的工具。</li>
</ul>
</li>
<li><a href="https://github.com/chromedp" target="_blank" rel="noopener">chromedb</a><ul>
<li>golang语言中利用CDB驱动浏览器包。</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>develop</category>
      </categories>
      <tags>
        <tag>chrome</tag>
        <tag>cdp</tag>
      </tags>
  </entry>
  <entry>
    <title>flutter跨终端开发</title>
    <url>/blog.githup.io/2020/05/flutter%E8%B7%A8%E7%BB%88%E7%AB%AF%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<p><a href="https://flutter.dev/docs/get-started/install/macos" target="_blank" rel="noopener">Flutter Install</a></p>
<p><a href="https://flutter.dev/docs" target="_blank" rel="noopener">Flutter doc</a></p>
<p><a href="https://github.com/nisrulz/flutter-examples" target="_blank" rel="noopener">Flutter conps samples</a></p>
<p><a href="https://flutter.github.io/samples/#" target="_blank" rel="noopener">Flutter All Samples</a></p>
<p><a href="https://material.io/design" target="_blank" rel="noopener">Material Design </a></p>
<p><a href="https://book.flutterchina.club/" target="_blank" rel="noopener">Flutter 中文</a></p>
<h3 id="Concepts"><a href="#Concepts" class="headerlink" title="Concepts"></a>Concepts</h3><ul>
<li><p>开发环境配置</p>
<ul>
<li>配置 JDK</li>
<li>Android studio</li>
<li>Flutter SDK</li>
<li>配置国内镜像</li>
<li>flutter doctor</li>
<li>安装 flutter 插件</li>
<li>创建 flutter 项目</li>
<li>开启手机调试模式<ul>
<li>连接数据线</li>
<li>手机开启调试模式</li>
<li>安装手机对应的 sdk 版本<ul>
<li>安装常用的 sdk 版本</li>
</ul>
</li>
<li>使用模拟器<ul>
<li>夜神模拟器</li>
<li>run app</li>
</ul>
</li>
<li>使用 vscode 开发<ul>
<li>install flutter 插件</li>
<li>install dart</li>
<li>选择项目</li>
<li>flutter run</li>
<li>连接夜神模拟器 nox_adb.exe connect 127.0.0.1:9-9-_<ul>
<li>热加载</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>mac 使用<ul>
<li>mac 最新的系统</li>
<li>xcode</li>
<li>brew</li>
<li>配置 Flutter SDK<ul>
<li>配置环境变量</li>
<li>配置国内源</li>
</ul>
</li>
<li>验证 flutter -h</li>
<li>flutter doctor</li>
<li>创建 sudo flutter create flutterdemo</li>
<li>运行 flutter run</li>
<li>chmod -R 777 flutterdemo</li>
<li>使用 xcode 编译</li>
<li>使用 vscode 连接模拟器<blockquote>
<p>使用 Gradle 包管理</p>
</blockquote>
</li>
</ul>
</li>
</ul>
</li>
<li><p>Flutter 目录结构</p>
<ul>
<li>android</li>
<li>ios</li>
<li>build</li>
<li>lib</li>
<li>pubspec.yaml #配置文件</li>
<li>入口文件 main.dart<ul>
<li>runApp(app);</li>
</ul>
</li>
<li>组件(类)</li>
<li>Flutter 可以省略 new 关键字</li>
<li>自定义组件 class MyApp extends StatelessWidget{}<blockquote>
<p>Material 即可视化设计语言，标准化设计</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<h3 id="First-app"><a href="#First-app" class="headerlink" title="First app"></a>First app</h3><ul>
<li>入口编写<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="comment">// 入口,实例化省略了new</span></span><br><span class="line">void main() =&gt; runApp(<span class="type">MyApp</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 应用定义，继承自无状态 Widget</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="comment">// 返回一个 Material APP</span></span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">        <span class="comment">// app title</span></span><br><span class="line">      title: <span class="symbol">'Welcome</span> to <span class="type">Flutter</span>',</span><br><span class="line">        <span class="comment">// 主页，Scaffold 主题</span></span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        <span class="comment">// 头部</span></span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'Welcome</span> to <span class="type">Flutter</span>'),</span><br><span class="line">        ),</span><br><span class="line">        <span class="comment">// 主体</span></span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">            <span class="comment">// 内部组件</span></span><br><span class="line">          child: <span class="type">Text</span>(<span class="symbol">'Hello</span> <span class="type">World</span>'),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>使用第三方插件<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、配置 pubspec.yaml</span><br><span class="line">    english_words: ^<span class="number">3.1</span><span class="number">.0</span></span><br><span class="line"><span class="number">2</span>、pub <span class="keyword">get</span> 获取 （自动获取）</span><br><span class="line">    $  flutter pub <span class="keyword">get</span></span><br><span class="line"><span class="number">3</span>、引入</span><br><span class="line">    <span class="keyword">import</span> <span class="string">'package:english_words/english_words.dart'</span>;</span><br></pre></td></tr></table></figure></li>
<li>添加一个有状态的 Widget<ul>
<li>添加一个 state class</li>
<li>添加一个有状态 Widget</li>
<li>在 build 方法中加入<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>添加一个无限的滚动条<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

</li>
</ul>
<blockquote>
<p>APP -&gt; Theme -&gt; Container -&gt; Text</p>
</blockquote>
<ul>
<li><p>Widget</p>
<ul>
<li>StatelessWidget</li>
<li>StatefulWidget setState</li>
</ul>
</li>
<li><p>资源</p>
<ul>
<li>APP</li>
<li>容器 Container</li>
<li>文本 Text</li>
<li>图标 Icon</li>
<li>颜色 Colors</li>
<li>图片 Image,DecorationImage<ul>
<li>本地图片 Image.asset<ul>
<li>配置文件定义 asset</li>
<li>images<ul>
<li>2.0x</li>
<li>3.0x</li>
<li>4.0x</li>
</ul>
</li>
</ul>
</li>
<li>远程图片 Image.network</li>
</ul>
</li>
<li>表单 TextField</li>
<li>视频</li>
<li>音频</li>
</ul>
</li>
<li><p>组合资源</p>
<ul>
<li>列表 ListView，ListTile<ul>
<li>垂直列表</li>
<li>水平列表</li>
<li>动态列表 builder</li>
<li>网格列表 GridView</li>
</ul>
</li>
<li>Card</li>
<li>Tabs</li>
<li>侧边栏</li>
</ul>
</li>
<li><p>用户资源</p>
<ul>
<li>图文列表(新闻)</li>
<li>商品列表(商品)</li>
<li></li>
</ul>
</li>
</ul>
<ul>
<li><p>样式</p>
<ul>
<li><p>文本样式</p>
</li>
<li><p>图片样式</p>
<ul>
<li>大小</li>
<li>圆角，圆形 borderRadius ClipOval</li>
<li>颜色<ul>
<li>颜色模式</li>
</ul>
</li>
<li>适应 fit</li>
<li>平铺 repeat</li>
</ul>
</li>
<li><p>视频样式</p>
</li>
<li><p>音频样式</p>
</li>
</ul>
</li>
<li><p>布局</p>
<ul>
<li>Container</li>
<li>SizeBox</li>
<li>Column，Row</li>
<li>Expand</li>
<li>margin</li>
<li>padding</li>
<li>border</li>
<li>Stack<ul>
<li>position positioned</li>
<li>alignment Align</li>
</ul>
</li>
<li>AspectRatio 宽高比</li>
<li>Wrap 流布局</li>
</ul>
</li>
<li><p>数据</p>
<ul>
<li></li>
</ul>
</li>
</ul>
<h3 id="Flutter-组件"><a href="#Flutter-组件" class="headerlink" title="Flutter 组件"></a>Flutter 组件</h3><pre><code>* Theme
    Home:
* Container 组件
* Widget
    * 有状态 Widget
    * 无状态 Widgets
* 文本编辑
* 本地图片
* 本地json
* HTTP GET
* 告警对话框
* Stepper
* Tabs
* Bottom
* Navigation Bar
* Fonts
* Gradient
* Splash Screen
* Listview
* SnackBar
* Layout
* DropDown botton
* 网络图片
* 无限列表
* Google 登录
* </code></pre><h3 id="Flutter-布局"><a href="#Flutter-布局" class="headerlink" title="Flutter 布局"></a>Flutter 布局</h3><h3 id="Flutter-路由"><a href="#Flutter-路由" class="headerlink" title="Flutter 路由"></a>Flutter 路由</h3><h3 id="Flutter-对话框"><a href="#Flutter-对话框" class="headerlink" title="Flutter 对话框"></a>Flutter 对话框</h3><ul>
<li>数据请求</li>
<li>数据渲染</li>
</ul>
]]></content>
      <categories>
        <category>终端开发</category>
      </categories>
      <tags>
        <tag>flutter</tag>
        <tag>Dart</tag>
        <tag>android</tag>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>golang-mod使用</title>
    <url>/blog.githup.io/2020/05/golang-mod%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="Goloang"><a href="#Goloang" class="headerlink" title="Goloang"></a>Goloang</h2><blockquote>
<p><a href="https://golang.org/" target="_blank" rel="noopener"> Golang </a></p>
<p><a href="https://www.runoob.com/go/go-tutorial.html" target="_blank" rel="noopener"> 菜鸟教程 golang  </a></p>
</blockquote>
<h2 id="go-mod-使用"><a href="#go-mod-使用" class="headerlink" title="go mod 使用"></a>go mod 使用</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">go.mod 提供了module, require、<span class="keyword">replace</span>和<span class="keyword">exclude</span> 四个命令</span><br><span class="line"><span class="keyword">module</span> 语句指定包的名字（路径）</span><br><span class="line">require 语句指定的依赖项模块</span><br><span class="line"><span class="keyword">replace</span> 语句可以替换依赖项模块</span><br><span class="line"><span class="keyword">exclude</span> 语句可以忽略依赖项模块</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="keyword">list</span> -m -u <span class="keyword">all</span> 来检查可以升级的<span class="keyword">package</span></span><br><span class="line"><span class="keyword">go</span> <span class="keyword">get</span> -u need-<span class="keyword">upgrade</span>-<span class="keyword">package</span> 升级后会将新的依赖版本更新到</span><br><span class="line"><span class="keyword">go</span> <span class="keyword">get</span> <span class="keyword">package</span>@<span class="keyword">version</span> 将会升级到指定的版本号<span class="keyword">version</span></span><br><span class="line"><span class="keyword">go</span> <span class="keyword">get</span> -u 升级所有依赖</span><br></pre></td></tr></table></figure>
<p>创建一个 go mod 项目</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">mkdir project</span><br><span class="line"></span><br><span class="line">export GOPATH=<span class="string">"/Users/alert/go"</span></span><br><span class="line">export GOROOT=<span class="string">"/usr/local/go"</span></span><br><span class="line">export GO111MODULE=on</span><br><span class="line">export GOPROXY=https:<span class="comment">//goproxy.io</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> env GOPATH</span><br><span class="line"><span class="keyword">go</span> mod init</span><br><span class="line">touch main.<span class="keyword">go</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 编译运行，不生成可执行文件</span></span><br><span class="line"><span class="keyword">go</span> run main.<span class="keyword">go</span></span><br><span class="line"><span class="comment">// 项目编译</span></span><br><span class="line"><span class="keyword">go</span> build</span><br><span class="line"><span class="comment">// 编译后安装到 bin 目录</span></span><br><span class="line"><span class="keyword">go</span> install</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>develop</category>
      </categories>
      <tags>
        <tag>golang</tag>
      </tags>
  </entry>
  <entry>
    <title>golang编程</title>
    <url>/blog.githup.io/2020/05/golang%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="Goloang"><a href="#Goloang" class="headerlink" title="Goloang"></a>Goloang</h2><ul>
<li><a href="https://golang.org/" target="_blank" rel="noopener"> Golang </a></li>
<li><a href="https://www.runoob.com/go/go-tutorial.html" target="_blank" rel="noopener"> 菜鸟教程 golang  </a></li>
<li><a href="https://github.com/golang/go" target="_blank" rel="noopener"> Golang 源码 </a></li>
<li><a href="https://github.com/avelino/awesome-go" target="_blank" rel="noopener"> awesome-go </a></li>
</ul>
<figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 包定义</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入模块</span></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	<span class="string">"strconv"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 变量定义</span></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">	i <span class="keyword">int</span></span><br><span class="line">	k <span class="keyword">int</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 常量定义</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">	city <span class="keyword">string</span> = <span class="string">"beijing"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 入口函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// 变量 := 变量 + 字面常量</span></span><br><span class="line">	sum := i + <span class="number">10</span></span><br><span class="line">	<span class="comment">// 输出</span></span><br><span class="line">	fmt.Println(sum)</span><br><span class="line">	<span class="comment">// 浮点计算</span></span><br><span class="line">	fdiv := <span class="number">10</span> / <span class="number">0.3</span></span><br><span class="line">	fmt.Println(fdiv)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 把数值转成字符串</span></span><br><span class="line">	<span class="comment">// 使用 strconv 库来转换</span></span><br><span class="line">	fmt.Println(strconv.FormatFloat(fdiv, <span class="string">'f'</span>, <span class="number">-1</span>, <span class="number">64</span>))</span><br><span class="line">	<span class="comment">// 打印到屏幕</span></span><br><span class="line">	fmt.Printf(<span class="string">"x = %.15f\n"</span>, fdiv)</span><br><span class="line">	<span class="comment">// 以返回值形式返回</span></span><br><span class="line">	fmt.Println(fmt.Sprintf(<span class="string">"%.15f"</span>, fdiv))</span><br><span class="line"></span><br><span class="line">	<span class="comment">//把字符串转成数值</span></span><br><span class="line">	fmt.Println(strconv.Atoi(<span class="string">"0.333333"</span>))</span><br><span class="line">	fmt.Println(strconv.Atoi(<span class="string">"12345"</span>))</span><br><span class="line">	fmt.Println(strconv.Atoi(<span class="string">"123ead"</span>))</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 取余运算</span></span><br><span class="line">	fmt.Println(<span class="number">1</span> % <span class="number">7</span>) <span class="comment">// 比余数小取本身</span></span><br><span class="line">	fmt.Println(<span class="number">16</span> % <span class="number">7</span>)</span><br><span class="line"></span><br><span class="line">	fmt.Println(<span class="string">"------------"</span>)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 使用按位与位(乘法运算)获得循环数，相与数必须是：1，3，7，31，2^n-1</span></span><br><span class="line">	<span class="comment">// 00001001  9</span></span><br><span class="line">	<span class="comment">// 00000111  7</span></span><br><span class="line">	<span class="comment">//         = 0</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">20</span>; i++ &#123;</span><br><span class="line">		fmt.Println(i, i&amp;<span class="number">3</span>)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 使用移位算乘法,因为字长为64，所以到第63次时变负值，64次溢出</span></span><br><span class="line">	<span class="keyword">var</span> i <span class="keyword">uint64</span></span><br><span class="line">	<span class="keyword">for</span> i = <span class="number">1</span>; i &lt; <span class="number">65</span>; i++ &#123;</span><br><span class="line">		fmt.Println(i, <span class="number">1</span>&lt;&lt;i)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 包定义</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	<span class="string">"strings"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 入口函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// 循环</span></span><br><span class="line">	<span class="comment">// 一重循环算法复杂度为 O(n)+1</span></span><br><span class="line">	<span class="keyword">var</span> i <span class="keyword">int</span></span><br><span class="line">	<span class="keyword">for</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">		fmt.Println(i)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 二重循环 算法复杂度为 O(n^2) +2</span></span><br><span class="line">	<span class="keyword">var</span> k, j <span class="keyword">int</span></span><br><span class="line">	<span class="keyword">for</span> k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++ &#123;</span><br><span class="line">		<span class="keyword">for</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++ &#123;</span><br><span class="line">			fmt.Println(k, j)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 二重循环</span></span><br><span class="line">	<span class="comment">// 逐步递减</span></span><br><span class="line">	<span class="keyword">var</span> m, n <span class="keyword">int</span></span><br><span class="line">	<span class="keyword">for</span> m = <span class="number">1</span>; m &lt; <span class="number">10</span>; m++ &#123;</span><br><span class="line">		<span class="keyword">for</span> n = <span class="number">0</span>; n &lt; <span class="number">10</span>/m; n++ &#123;</span><br><span class="line">			<span class="comment">// strings 库 提供对字符串的各种处理方法</span></span><br><span class="line">			fmt.Printf(<span class="string">"%d %s"</span>, n, strings.Repeat(<span class="string">"*"</span>, n))</span><br><span class="line">		&#125;</span><br><span class="line">		fmt.Println()</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 逐步递增</span></span><br><span class="line">	<span class="keyword">var</span> c, d <span class="keyword">int</span></span><br><span class="line">	<span class="keyword">for</span> c = <span class="number">0</span>; c &lt; <span class="number">10</span>; c++ &#123;</span><br><span class="line">		<span class="keyword">for</span> d = <span class="number">0</span>; d &lt; <span class="number">2</span>*c; d++ &#123;</span><br><span class="line">			fmt.Printf(<span class="string">"%d %s"</span>, d, strings.Repeat(<span class="string">"*"</span>, d))</span><br><span class="line">		&#125;</span><br><span class="line">		fmt.Println()</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 二分法猜数</span></span><br><span class="line">	<span class="keyword">var</span> num, g <span class="keyword">int</span></span><br><span class="line">	g = <span class="number">231</span></span><br><span class="line">	fmt.Println(<span class="string">"猜一个1000以内的数"</span>)</span><br><span class="line">	<span class="keyword">for</span> &#123;</span><br><span class="line">		fmt.Scan(&amp;num)</span><br><span class="line">		<span class="keyword">if</span> num &gt; g &#123;</span><br><span class="line">			fmt.Println(<span class="string">"猜的数大了"</span>)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> num == g &#123;</span><br><span class="line">			fmt.Println(<span class="string">"猜中了"</span>)</span><br><span class="line">			<span class="keyword">break</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			fmt.Println(<span class="string">"猜的数小了"</span>)</span><br><span class="line">		&#125;</span><br><span class="line">		fmt.Println(num)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight golang"><table><tr><td class="code"><pre><span class="line">   <span class="comment">// 数组</span></span><br><span class="line"><span class="keyword">var</span> arr [<span class="number">10</span>]<span class="keyword">int</span></span><br><span class="line"><span class="comment">// 切片</span></span><br><span class="line"><span class="keyword">var</span> slice []<span class="keyword">int</span></span><br><span class="line"><span class="comment">// map</span></span><br><span class="line"><span class="keyword">var</span> m <span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印 数组</span></span><br><span class="line"><span class="keyword">for</span> k, v := <span class="keyword">range</span> arr &#123;</span><br><span class="line">	fmt.Println(<span class="string">"array: "</span>, k, v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印 切片</span></span><br><span class="line"><span class="keyword">for</span> k1, v1 := <span class="keyword">range</span> slice &#123;</span><br><span class="line">	fmt.Println(<span class="string">"slice: "</span>, k1, v1)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印 map</span></span><br><span class="line"><span class="comment">//for k2, v2 := range m &#123;</span></span><br><span class="line"><span class="comment">//	fmt.Println("map: ", k2, v2)</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">slice = <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">10</span>)</span><br><span class="line"><span class="comment">// 打印 切片</span></span><br><span class="line"><span class="keyword">for</span> k3, v3 := <span class="keyword">range</span> slice &#123;</span><br><span class="line">	fmt.Println(<span class="string">"slice: "</span>, k3, v3)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 必须要初始化</span></span><br><span class="line">m = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span>)</span><br><span class="line">m[<span class="number">1</span>] = <span class="string">"beijing"</span></span><br><span class="line">m[<span class="number">3</span>] = <span class="string">"shanghai"</span></span><br><span class="line"><span class="comment">// 打印 map</span></span><br><span class="line"><span class="keyword">for</span> k2, v2 := <span class="keyword">range</span> m &#123;</span><br><span class="line">	fmt.Println(<span class="string">"map: "</span>, k2, v2)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 打印长度</span></span><br><span class="line">fmt.Println(<span class="built_in">len</span>(arr))</span><br><span class="line">fmt.Println(<span class="built_in">len</span>(slice))</span><br><span class="line">fmt.Println(<span class="built_in">len</span>(m))</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">fmt.Println(<span class="built_in">cap</span>(arr))</span><br><span class="line">fmt.Println(<span class="built_in">cap</span>(slice))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组，切片常用的方法</span></span><br><span class="line">fmt.Println(arr[:<span class="number">3</span>])</span><br><span class="line">fmt.Println(slice[<span class="number">2</span>:<span class="number">8</span>])</span><br><span class="line">fmt.Println(arr[:])</span><br><span class="line">sort.Ints(slice)</span><br><span class="line">s1 := []<span class="keyword">string</span>&#123;<span class="string">"abc"</span>, <span class="string">"zbc"</span>, <span class="string">"edf"</span>&#125;</span><br><span class="line">sort.Strings(s1)</span><br><span class="line">fmt.Println(<span class="string">"sort: "</span>, s1)</span><br><span class="line"><span class="built_in">copy</span>(slice, slice)</span><br><span class="line">slice = <span class="built_in">append</span>(slice, <span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line">fmt.Println(slice)</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">fmt.Println(m)</span><br><span class="line"><span class="built_in">delete</span>(m, <span class="number">3</span>)</span><br><span class="line">fmt.Println(m)</span><br><span class="line"><span class="built_in">println</span>(m[<span class="number">5</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">// 高级一点</span></span><br><span class="line"><span class="comment">// map key 是int 值是 切片</span></span><br><span class="line">mode1 := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]([]<span class="keyword">string</span>))</span><br><span class="line"><span class="comment">//定义一个map（key 是 string，值是个数组）</span></span><br><span class="line">mode2 := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]([<span class="number">10</span>]<span class="keyword">string</span>))</span><br><span class="line"><span class="comment">// 定义一个string 类型map，值是map类型（值的key 是string，值是string切片类型）</span></span><br><span class="line">mode3 := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>](<span class="keyword">map</span>[<span class="keyword">string</span>]([]<span class="keyword">string</span>)))</span><br><span class="line"><span class="comment">// 定义一个切片，值也是切片，类型string</span></span><br><span class="line">_ = <span class="built_in">make</span>([][]<span class="keyword">string</span>, <span class="number">10</span>)</span><br><span class="line"><span class="comment">// 定义一个切片，切片的值是二维切片，类型是string</span></span><br><span class="line">mode4 := <span class="built_in">make</span>([]([]([]<span class="keyword">string</span>)), <span class="number">10</span>)</span><br><span class="line"><span class="comment">// 定义一个三维数组</span></span><br><span class="line"><span class="keyword">var</span> arr1 [<span class="number">10</span>][<span class="number">10</span>][<span class="number">10</span>]<span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个结构体切片</span></span><br><span class="line"><span class="keyword">type</span> s <span class="keyword">struct</span> &#123;</span><br><span class="line">	id   <span class="keyword">int</span></span><br><span class="line">	name <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line">_ = <span class="built_in">make</span>([][]s, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个结构体指针类型的切片</span></span><br><span class="line">_ = <span class="built_in">make</span>([][]*s, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"map1: "</span>, mode1)</span><br><span class="line">fmt.Println(<span class="string">"map2: "</span>, mode2)</span><br><span class="line">fmt.Println(<span class="string">"map3: "</span>, mode3)</span><br><span class="line">fmt.Println(<span class="string">"slice4: "</span>, mode4)</span><br><span class="line">fmt.Println(<span class="string">"arr5: "</span>, arr1)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
  </entry>
  <entry>
    <title>hexo安装配置</title>
    <url>/blog.githup.io/2020/05/hexo%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="hexo-安装使用"><a href="#hexo-安装使用" class="headerlink" title="hexo 安装使用"></a>hexo 安装使用</h1><blockquote>
<p>hexo 功能很多很完善。样式比自己写的好的多。为了快速构建，还是选用了 hexo。<br>话不多说，直接上干货。</p>
</blockquote>
<h2 id="nodejs-安装"><a href="#nodejs-安装" class="headerlink" title="nodejs 安装"></a>nodejs 安装</h2><p><a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodejs 下载</a></p>
<p><a href="https://hexo.io/" target="_blank" rel="noopener">hexo 官网</a></p>
<p><a href="https://guides.github.com/features/pages/" target="_blank" rel="noopener">github pages</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用阿里云镜像下载比较快，xz 压缩率高。</span></span><br><span class="line"><span class="comment"># 在 mac 上安装直接选择 pkg 包安装</span></span><br><span class="line">https://cdn.npm.taobao.org/dist/node/v14.2.0/node-v14.2.0.pkg</span><br></pre></td></tr></table></figure>

<h2 id="hexo-安装"><a href="#hexo-安装" class="headerlink" title="hexo 安装"></a>hexo 安装</h2><blockquote>
<p>hexo 使用 nodejs 编写，使用 npm 包管理工具进行安装。</p>
<p>安装前要设置好国内镜像。否则会很慢。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># npm 帮助</span></span><br><span class="line">npm --<span class="built_in">help</span></span><br><span class="line"><span class="comment"># npm command 帮助</span></span><br><span class="line">npm config -h</span><br><span class="line"><span class="comment"># 列出配置</span></span><br><span class="line">npm config list</span><br><span class="line"><span class="comment"># 这样就配置好镜像了，阿里云是国内镜像大户</span></span><br><span class="line">npm config <span class="built_in">set</span> metrics-registry <span class="string">"https://registry.npm.taobao.org"</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>hexo 使用 nodejs 编写，使用 npm 包管理工具进行安装。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># nodejs 分全局模块库和项目模块库 </span></span><br><span class="line"><span class="comment"># 全局模块库位于 nodejs 安装目录下 /usr/local/lib/node_modules</span></span><br><span class="line"><span class="comment"># 项目模块库位于项目目录下 node_modules/</span></span><br><span class="line"><span class="comment"># 列出模块</span></span><br><span class="line">npm list</span><br></pre></td></tr></table></figure>
<blockquote>
<p>全局模块安装一些通用的模块，比如: cnpm、@vue、bower</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装到全局模块（重复安装加 --force）</span></span><br><span class="line">npm install hexo-cli -g --force</span><br><span class="line"><span class="comment"># 创建个目录</span></span><br><span class="line">mkdir blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">hexo init</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">hexo init blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># npm 包管理文件 package.json</span></span><br><span class="line">npm install</span><br><span class="line"><span class="comment"># 启动服务，在 http://localhost:4000 查看</span></span><br><span class="line">hexo server</span><br><span class="line"><span class="comment"># 支持简写。简写有好处，也有坏处。好处是输入少，坏处是不利于记忆。</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<h3 id="hexo-目录结构"><a href="#hexo-目录结构" class="headerlink" title="hexo 目录结构"></a>hexo 目录结构</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tree -L 1</span></span><br><span class="line"></span><br><span class="line"><span class="string">├──</span> <span class="string">_config.yml</span>         <span class="comment"># 站点配置文件</span></span><br><span class="line"><span class="string">├──</span> <span class="string">db.json</span></span><br><span class="line"><span class="string">├──</span> <span class="string">node_modules</span>        <span class="comment"># nodejs 模块库</span></span><br><span class="line"><span class="string">├──</span> <span class="string">package-lock.json</span></span><br><span class="line"><span class="string">├──</span> <span class="string">package.json</span>        <span class="comment"># npm 包管理文件</span></span><br><span class="line"><span class="string">├──</span> <span class="string">scaffolds</span>           <span class="comment"># hexo 模板</span></span><br><span class="line"><span class="string">├──</span> <span class="string">source</span>              <span class="comment"># 文章目录</span></span><br><span class="line"><span class="string">└──</span> <span class="string">themes</span>              <span class="comment"># 主题目录</span></span><br></pre></td></tr></table></figure>
<h3 id="配置-blog"><a href="#配置-blog" class="headerlink" title="配置 blog"></a>配置 blog</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看配置</span></span><br><span class="line">grep -v <span class="string">"#"</span> _config.yml |grep -v <span class="string">"^$"</span></span><br><span class="line">cp _config.yml _config.yml.bak</span><br><span class="line"></span><br><span class="line"><span class="comment"># 标题、描述、关键字</span></span><br><span class="line">title: blyanqi@163.com</span><br><span class="line">subtitle: <span class="string">''</span></span><br><span class="line">description: <span class="string">'君子学以聚之，问以辩之，宽以居之，仁以行之。'</span></span><br><span class="line">keywords: 运维、自动化、devops、容器架构</span><br><span class="line">author: yan qi</span><br><span class="line"><span class="comment"># 语言、时区、站点 url</span></span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: <span class="string">'Asia/Shanghai'</span></span><br><span class="line">url: http://yoursite.com</span><br><span class="line">root: /</span><br><span class="line"><span class="comment"># 文章按日期分类</span></span><br><span class="line">new_post_name: :year/:month/:title/</span><br><span class="line">permalink: :year/:month/:title.md</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line"><span class="comment"># 目录配置</span></span><br><span class="line">source_dir: <span class="built_in">source</span></span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line">default_layout: post</span><br><span class="line">external_link:</span><br><span class="line">  exclude: <span class="string">''</span></span><br><span class="line"><span class="comment"># 文件名大小写</span></span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: <span class="literal">false</span></span><br><span class="line"><span class="comment"># 生成文章资源文件夹</span></span><br><span class="line">post_asset_folder: <span class="literal">true</span></span><br><span class="line">relative_link: <span class="literal">false</span></span><br><span class="line">future: <span class="literal">true</span></span><br><span class="line"><span class="comment"># 代码框配置</span></span><br><span class="line">highlight:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  line_number: <span class="literal">true</span></span><br><span class="line">  auto_detect: <span class="literal">false</span></span><br><span class="line">  tab_replace: <span class="string">''</span></span><br><span class="line">  wrap: <span class="literal">true</span></span><br><span class="line">  hljs: <span class="literal">false</span></span><br><span class="line">index_generator:</span><br><span class="line">  path: <span class="string">''</span></span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line">meta_generator: <span class="literal">true</span></span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line">use_date_for_updated: <span class="literal">false</span></span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line">include:</span><br><span class="line">exclude:</span><br><span class="line">ignore:</span><br><span class="line">theme: next</span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: <span class="string">''</span></span><br></pre></td></tr></table></figure>
<h3 id="写文章、配置文章本地图片"><a href="#写文章、配置文章本地图片" class="headerlink" title="写文章、配置文章本地图片"></a>写文章、配置文章本地图片</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成 markdown 文件(source/_post 下)</span></span><br><span class="line">hexo n first</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置站点配置 _config.yml:</span></span><br><span class="line">post_asset_folder: <span class="literal">false</span>改为post_asset_folder: <span class="literal">true</span></span><br><span class="line"><span class="comment"># 安装插件</span></span><br><span class="line">npm install hexo-asset-image -- save</span><br><span class="line"><span class="comment"># 创建文章(同时生成和文章相同的目录)</span></span><br><span class="line">hexo n firstimg</span><br><span class="line"><span class="comment"># 在 markdown 添加图片</span></span><br><span class="line">在想添加的位置写入![](图片名字.图片格式),例如![](1.png)。</span><br></pre></td></tr></table></figure>


<h2 id="下载-next-主题"><a href="#下载-next-主题" class="headerlink" title="下载 next 主题"></a>下载 next 主题</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置加速，否则很慢</span></span><br><span class="line"><span class="comment"># 使用之前配置一下 github 进行加速。使用 https://www.ipaddress.com/ 进行地址查询</span></span><br><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;/etc/hosts</span><br><span class="line">140.82.113.3 github.com</span><br><span class="line">185.199.109.153 assets-cdn.github.com</span><br><span class="line">199.232.69.194 github.global.ssl.fastly.net</span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># 下载主题</span></span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<h3 id="next-主题目录"><a href="#next-主题目录" class="headerlink" title="next 主题目录"></a>next 主题目录</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">├──</span> <span class="string">LICENSE.md</span></span><br><span class="line"><span class="string">├──</span> <span class="string">README.md</span></span><br><span class="line"><span class="string">├──</span> <span class="string">_config.yml</span>     <span class="comment"># 主题配置文件</span></span><br><span class="line"><span class="string">├──</span> <span class="string">crowdin.yml</span></span><br><span class="line"><span class="string">├──</span> <span class="string">docs</span>            <span class="comment"># 帮助信息</span></span><br><span class="line"><span class="string">├──</span> <span class="string">gulpfile.js</span></span><br><span class="line"><span class="string">├──</span> <span class="string">languages</span>       <span class="comment">#语言包</span></span><br><span class="line"><span class="string">├──</span> <span class="string">layout</span></span><br><span class="line"><span class="string">├──</span> <span class="string">package.json</span>    <span class="comment"># npm 依赖</span></span><br><span class="line"><span class="string">├──</span> <span class="string">renovate.json</span></span><br><span class="line"><span class="string">├──</span> <span class="string">scripts</span>         <span class="comment"># js 文件</span></span><br><span class="line"><span class="string">└──</span> <span class="string">source</span>          <span class="comment"># 资源文件：css、字体、svg</span></span><br></pre></td></tr></table></figure>

<h3 id="配置-next-主题"><a href="#配置-next-主题" class="headerlink" title="配置 next 主题"></a>配置 next 主题</h3><blockquote>
<p>主题配置内容比较多 <a href="https://hexo-theme-next.netlify.app/docs/" target="_blank" rel="noopener">next 主题配置</a></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 此处纪录常用配置</span></span><br><span class="line"><span class="comment"># 使用主题 themes/next/_config.yml 查找 theme</span></span><br><span class="line"><span class="comment"># sed -i '/^theme/s/landscape/next/' _config.yml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看一下配置文件</span></span><br><span class="line">grep -v <span class="string">"#"</span> themes/next/_config.yml |grep -v <span class="string">"^$"</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改一下 scheme (hexo 主题有4种样式)，选用 Gemini</span></span><br><span class="line">scheme: Gemini</span><br><span class="line"></span><br><span class="line"><span class="comment"># 代码高亮 codeblock</span></span><br><span class="line">codeblock:</span><br><span class="line">  theme:</span><br><span class="line">    light: vs</span><br><span class="line">    dark: tomorrow-night</span><br><span class="line"></span><br><span class="line"><span class="comment"># footer 修改</span></span><br><span class="line">since: 2017</span><br><span class="line">animated: <span class="literal">true</span></span><br><span class="line">powered: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 post 模板</span></span><br><span class="line">vim scaffolds/post.md</span><br><span class="line"><span class="comment"># 添加：</span></span><br><span class="line">categories:</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加字数统计 （新创建 post 才会有数据）</span></span><br><span class="line">npm install hexo-symbols-count-time</span><br><span class="line"></span><br><span class="line"><span class="comment"># hexo config</span></span><br><span class="line"><span class="comment"># Post Wordcount</span></span><br><span class="line">symbols_count_time:</span><br><span class="line">  symbols: <span class="literal">true</span></span><br><span class="line">  time: <span class="literal">true</span></span><br><span class="line">  total_symbols: <span class="literal">true</span></span><br><span class="line">  total_time: <span class="literal">true</span></span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br><span class="line"></span><br><span class="line"><span class="comment"># hexo/theme/next/_config.yml</span></span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: <span class="literal">true</span></span><br><span class="line">  item_text_post: <span class="literal">true</span></span><br><span class="line">  item_text_total: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SEO 配置 next/_config.yml</span></span><br><span class="line">disable_baidu_transformation: <span class="literal">true</span></span><br><span class="line">index_with_subtitle: <span class="literal">true</span></span><br><span class="line">exturl: <span class="literal">true</span></span><br><span class="line">google_site_verification: XXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">bing_site_verification: XXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">baidu_site_verification: XXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">baidu_push: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># web Analytics</span></span><br><span class="line">google_analytics:</span><br><span class="line">  tracking_id: UA-XXXXXXXX-X</span><br><span class="line">  only_pageview: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Local Search 配置</span></span><br><span class="line">npm install hexo-generator-searchdb</span><br><span class="line"><span class="comment"># hexo/_config.yml</span></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  <span class="built_in">limit</span>: 10000</span><br><span class="line"></span><br><span class="line"><span class="comment"># next/_config.yml</span></span><br><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class="line">local_search:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  trigger: auto</span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  top_n_per_article: 1</span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  unescape: <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  preload: <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h2 id="设置文章分类"><a href="#设置文章分类" class="headerlink" title="设置文章分类"></a>设置文章分类</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建 page</span></span><br><span class="line">hexo new page categories</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取日期</span></span><br><span class="line">date <span class="string">"+%F %T"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 page</span></span><br><span class="line">cat &lt;&lt;<span class="string">"EOF"</span> &gt;<span class="built_in">source</span>/categories/index.md</span><br><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date: 2020-05-13 16:22:16 </span><br><span class="line"><span class="built_in">type</span>: <span class="string">"categories"</span></span><br><span class="line">---</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给文章添加“categories”属性</span></span><br><span class="line">categories: </span><br><span class="line">- develop</span><br></pre></td></tr></table></figure>

<h2 id="设置文章标签"><a href="#设置文章标签" class="headerlink" title="设置文章标签"></a>设置文章标签</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建 page</span></span><br><span class="line">hexo new page tags</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 page</span></span><br><span class="line">cat &lt;&lt;<span class="string">"EOF"</span> &gt;<span class="built_in">source</span>/tags/index.md</span><br><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2020-05-13 16:22:16 </span><br><span class="line"><span class="built_in">type</span>: <span class="string">"tags"</span></span><br><span class="line">---</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给文章添加“tags”属性</span></span><br><span class="line">tags:</span><br><span class="line">- jQuery</span><br><span class="line">- 表格</span><br></pre></td></tr></table></figure>

<h2 id="设置文章置顶"><a href="#设置文章置顶" class="headerlink" title="设置文章置顶"></a>设置文章置顶</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在post中添加标签</span></span><br><span class="line">top: 10</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以修改模板添加标识，不添加也不影响</span></span><br><span class="line">vim /themes/*/layout/_macro/post.ejs</span><br><span class="line">&lt;% <span class="keyword">if</span> (page.top) &#123; %&gt;</span><br><span class="line">  &lt;i class=<span class="string">"fa fa-thumb-tack"</span>&gt;&lt;/i&gt;</span><br><span class="line">  &lt;font color=7D26CD&gt;置顶&lt;/font&gt;</span><br><span class="line">  &lt;span class=<span class="string">"post-meta-divider"</span>&gt;|&lt;/span&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>

<h2 id="生成部署-hexo"><a href="#生成部署-hexo" class="headerlink" title="生成部署 hexo"></a>生成部署 hexo</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成静态文件 (用于githup page 部署)</span></span><br><span class="line">hexo generate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个 githup repository</span></span><br><span class="line">name: blog.githup.io</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 githup 库地址 _config.yaml</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/blyanqi/blog.githup.io.git</span><br><span class="line">  branch: master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为github设置SSH Keys</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"blyanqi@163.com"</span></span><br><span class="line"><span class="comment"># 测试 ssh key</span></span><br><span class="line">ssh -T git@github.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署到 githup page</span></span><br><span class="line">npm install --save hexo-deployer-git</span><br><span class="line">hexo deploy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一键部署</span></span><br><span class="line"><span class="comment"># 编辑 package.json</span></span><br><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"build"</span>: <span class="string">"hexo generate"</span>,</span><br><span class="line">    <span class="string">"clean"</span>: <span class="string">"hexo clean"</span>,</span><br><span class="line">    <span class="string">"deploy"</span>: <span class="string">"hexo deploy"</span>,</span><br><span class="line">    <span class="string">"server"</span>: <span class="string">"hexo server"</span>,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"># build</span></span><br><span class="line">npm run deploy</span><br></pre></td></tr></table></figure>

<h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">INFO  Copying files from public folder...</span><br><span class="line">FATAL Something<span class="string">'s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">TypeError [ERR_INVALID_ARG_TYPE]: The "mode" argument must be integer. Received an instance of Object</span></span><br><span class="line"><span class="string">    at copyFile (fs.js:1890:10)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 是因为 nodejs 版本问题，选用稳定版本 v12.16.3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">remote: Invalid username or password.</span></span><br><span class="line"><span class="string">fatal: Authentication failed for '</span>https://github.com/blyanqi/blog.githup.io.git/<span class="string">'</span></span><br><span class="line"><span class="string">FATAL Something'</span>s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br><span class="line">Error: Spawn failed</span><br><span class="line"></span><br><span class="line"><span class="comment"># git 验证失败</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># index.html 里面空白没有内容 (重新生成一遍，可能是node换版本导致)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 静态文件请求不到，修改 _config,yaml 里 root: / 改成  root: /blog.githup.io/</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>develop</category>
      </categories>
      <tags>
        <tag>github page</tag>
        <tag>hexo</tag>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>java编程</title>
    <url>/blog.githup.io/2020/05/java%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
  </entry>
  <entry>
    <title>jinkens</title>
    <url>/blog.githup.io/2020/05/jinkens/</url>
    <content><![CDATA[<p><a href="https://www.jenkins.io/" target="_blank" rel="noopener">jenkins</a></p>
]]></content>
      <categories>
        <category>devops</category>
      </categories>
  </entry>
  <entry>
    <title>kubernetes安装</title>
    <url>/blog.githup.io/2020/05/kubernetes%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="Kubernetes-Architecture"><a href="#Kubernetes-Architecture" class="headerlink" title="Kubernetes Architecture"></a>Kubernetes Architecture</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">api-server</span></span><br><span class="line"><span class="string">scheduler</span></span><br><span class="line"><span class="string">kebelet</span>       <span class="string">kubelet</span>   <span class="string">kube-proxy</span></span><br><span class="line"><span class="string">---Master---</span> <span class="string">--------Work</span> <span class="string">node-------</span></span><br><span class="line"><span class="string">---etcd---</span></span><br><span class="line"><span class="string">***********</span> <span class="string">DOCKER</span> <span class="string">Engine</span> <span class="string">***********</span></span><br><span class="line"><span class="string">Host</span> <span class="string">OS</span></span><br><span class="line"><span class="string">Infrastructure</span></span><br></pre></td></tr></table></figure>

<p><a href="https://kubernetes.io/zh/docs/home/" target="_blank" rel="noopener"> Kubernetes 官网 </a></p>
<h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><p>提供5台 linux 系统(Centos 7) 主机</p>
<p>主机IP如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">master1:192.168.0.55</span></span><br><span class="line"><span class="string">master2:192.168.0.56</span></span><br><span class="line"><span class="string">master3:192.168.0.57</span></span><br><span class="line"></span><br><span class="line"><span class="string">work1:192.168.0.59</span></span><br><span class="line"><span class="string">work2:192.168.0.60</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果同时检测到 docker 和 containerd，则优先选择 docker。</p>
<p>在集群中,所有计算机之间的完全网络连接。</p>
<p>每台设备对系统中所有节点的 SSH 访问。</p>
<p>在所有机器上安装 kubeadm 和 kubelet。</p>
</blockquote>
<h2 id="安装前基本配置"><a href="#安装前基本配置" class="headerlink" title="安装前基本配置"></a>安装前基本配置</h2><h3 id="设置主机名"><a href="#设置主机名" class="headerlink" title="设置主机名"></a>设置主机名</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">ssh</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.55</span> <span class="string">" hostnamectl set-hostname k8s-1"</span></span><br><span class="line"><span class="string">ssh</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.56</span> <span class="string">" hostnamectl set-hostname k8s-2"</span></span><br><span class="line"><span class="string">ssh</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.57</span> <span class="string">" hostnamectl set-hostname k8s-3"</span></span><br></pre></td></tr></table></figure>
<h3 id="设置主机名解析"><a href="#设置主机名解析" class="headerlink" title="设置主机名解析"></a>设置主机名解析</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"192.168.0.55 k8s-1</span></span><br><span class="line"><span class="string">192.168.0.56 k8s-2</span></span><br><span class="line"><span class="string">192.168.0.57 k8s-3"</span>&gt;&gt;/etc/hosts</span><br></pre></td></tr></table></figure>
<h3 id="生成ssh-key"><a href="#生成ssh-key" class="headerlink" title="生成ssh key"></a>生成ssh key</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">ssh-keygen</span></span><br><span class="line"><span class="string">ssh-copy-id</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.55</span></span><br><span class="line"><span class="string">ssh-copy-id</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.56</span></span><br><span class="line"><span class="string">ssh-copy-id</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.57</span></span><br><span class="line"></span><br><span class="line"><span class="string">SSHVerify</span></span><br><span class="line"><span class="string">for</span> <span class="string">x</span> <span class="string">in</span> <span class="string">`grep</span> <span class="string">-o</span> <span class="string">k8s-.*</span> <span class="string">/etc/hosts`;do</span> <span class="string">echo</span> <span class="string">$x;</span> <span class="string">ssh</span> <span class="string">$x</span> <span class="string">"free"</span><span class="string">;done</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>for x in <code>grep -o k8s-.* /etc/hosts</code>;do echo $x; ssh-copy-id $x ;done</p>
</blockquote>
<h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">iptables -L -n</span><br></pre></td></tr></table></figure>

<h3 id="关闭-selinux"><a href="#关闭-selinux" class="headerlink" title="关闭 selinux"></a>关闭 selinux</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">"s/^SELINUX=enforcing/SELINUX=disabled/g"</span> /etc/selinux/config</span><br></pre></td></tr></table></figure>

<h3 id="关闭-swap"><a href="#关闭-swap" class="headerlink" title="关闭 swap"></a>关闭 swap</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">swapoff -a</span><br><span class="line">swapoff -a sed -i <span class="string">'s/.*swap.*/#&amp;/'</span> /etc/fstab</span><br></pre></td></tr></table></figure>
<h2 id="NTP-配置"><a href="#NTP-配置" class="headerlink" title="NTP 配置"></a>NTP 配置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install chrony -y</span><br><span class="line"><span class="comment"># vim /etc/chrony.conf</span></span><br><span class="line">sed -i <span class="string">"/^server/d"</span> /etc/chrony.conf</span><br><span class="line">sed -i <span class="string">"2a server ntp1.cloud.aliyuncs.com iburst"</span> /etc/chrony.conf</span><br><span class="line">sed -i <span class="string">"2a server ntp2.cloud.aliyuncs.com iburst"</span> /etc/chrony.conf </span><br><span class="line">sed -i <span class="string">"/#allow/s/#//"</span> /etc/chrony.conf</span><br><span class="line">systemctl <span class="built_in">enable</span> chronyd.service;systemctl start chronyd.service</span><br></pre></td></tr></table></figure>
<h3 id="配置国内yum-源"><a href="#配置国内yum-源" class="headerlink" title="配置国内yum 源"></a>配置国内yum 源</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y wget;</span><br><span class="line">rm  /etc/yum.repos.d/* -rf</span><br><span class="line"></span><br><span class="line"><span class="comment"># Aliyun 源</span></span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 配置国内Kubernetes源</span></span><br><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 配置 docker 源</span></span><br><span class="line">wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 更新缓存</span></span><br><span class="line">yum clean all &amp;&amp; yum makecache</span><br></pre></td></tr></table></figure>

<h2 id="Docker-install"><a href="#Docker-install" class="headerlink" title="Docker install"></a>Docker install</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 Docker CE</span></span><br><span class="line"><span class="comment"># 安装所需包</span></span><br><span class="line">yum install yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增 Docker 仓库。</span></span><br><span class="line"><span class="comment">#yum-config-manager --add-repo \</span></span><br><span class="line"><span class="comment"># https://download.docker.com/linux/centos/docker-ce.repo</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 Docker CE.</span></span><br><span class="line">yum update &amp;&amp; yum install docker-ce-18.06.2.ce</span><br><span class="line"></span><br><span class="line"><span class="comment">## 创建 /etc/docker 目录。</span></span><br><span class="line">mkdir /etc/docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 daemon。</span></span><br><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"exec-opts"</span>: [<span class="string">"native.cgroupdriver=systemd"</span>],</span><br><span class="line">  <span class="string">"log-driver"</span>: <span class="string">"json-file"</span>,</span><br><span class="line">  <span class="string">"log-opts"</span>: &#123;</span><br><span class="line">    <span class="string">"max-size"</span>: <span class="string">"100m"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"storage-driver"</span>: <span class="string">"overlay2"</span>,</span><br><span class="line">  <span class="string">"storage-opts"</span>: [</span><br><span class="line">    <span class="string">"overlay2.override_kernel_check=true"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">mkdir -p /etc/systemd/system/docker.service.d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启 Docker</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>

<h3 id="配置-docker-镜像加速器"><a href="#配置-docker-镜像加速器" class="headerlink" title="配置 docker 镜像加速器"></a>配置 docker 镜像加速器</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://pe80e41t.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>

<h2 id="安装-kubeadm、kubelet-和-kubectl"><a href="#安装-kubeadm、kubelet-和-kubectl" class="headerlink" title="安装 kubeadm、kubelet 和 kubectl"></a>安装 kubeadm、kubelet 和 kubectl</h2><blockquote>
<p>kubeadm：用来初始化集群的指令。</p>
<p>kubelet：在集群中的每个节点上用来启动 pod 和容器等。</p>
<p>kubectl：用来与集群通信的命令行工具。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装指定版本</span></span><br><span class="line"><span class="comment"># yum install -y kubelet-&lt;version&gt; kubectl-&lt;version&gt; kubeadm-&lt;version&gt;</span></span><br><span class="line"><span class="comment"># example：yum install -y kubelet-1.17.2 kubeadm-1.17.2 kubectl-1.17.2 --disableexcludes=kubernetes</span></span><br><span class="line">yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes</span><br><span class="line">systemctl <span class="built_in">enable</span> --now kubelet</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt;  /etc/sysctl.d/k8s.conf</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl --system</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart kubelet</span><br></pre></td></tr></table></figure>

<h2 id="创建单主集群"><a href="#创建单主集群" class="headerlink" title="创建单主集群"></a>创建单主集群</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">服务重启</span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet docker</span><br><span class="line">systemctl restart  kubelet docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装出错，重置了再装</span></span><br><span class="line"><span class="comment"># kubeadm reset</span></span><br><span class="line"></span><br><span class="line">kubeadm version</span><br><span class="line"></span><br><span class="line">kubeadm init \</span><br><span class="line">--kubernetes-version=$(kubectl version |grep -P -o <span class="string">'GitVersion:"(.*?)"'</span>|grep -oP <span class="string">"[\d|\.]&#123;1,6&#125;"</span>)  \</span><br><span class="line">--apiserver-advertise-address=xxx.xxx.xxx.xxx \</span><br><span class="line">--control-plane-endpoint <span class="string">"xxx.xxx.xxx.xxx:6443"</span> \</span><br><span class="line">--image-repository registry.aliyuncs.com/google_containers \</span><br><span class="line">--service-cidr=10.10.0.0/16 --pod-network-cidr=10.20.0.0/16 \</span><br><span class="line">--upload-certs</span><br><span class="line"></span><br><span class="line"><span class="comment"># --upload-certs 上传证书</span></span><br><span class="line"><span class="comment"># --control-plane-endpoint "192.168.0.55:6443"</span></span><br><span class="line"><span class="comment"># --image-repository registry.aliyuncs.com/google_containers</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要等几分钟才能创建好</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 记录 token </span></span><br><span class="line"><span class="comment"># controller 节点加入</span></span><br><span class="line">kubeadm join 192.168.0.55:6443 --token 72jo7w.5yicrzyn8edcvpu0 \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:1e67abc92cf649e18941e24c2c18835f7b09d127fde632f3982d41e582346e65 \</span><br><span class="line">    --control-plane --certificate-key 712fcf5a2ffd9a0cd8bee3518475dca3ca3168fb49ee0c937686537141dff2ff</span><br><span class="line"></span><br><span class="line"><span class="comment"># worker 节点加入</span></span><br><span class="line">kubeadm join 192.168.0.55:6443 --token 72jo7w.5yicrzyn8edcvpu0 \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:1e67abc92cf649e18941e24c2c18835f7b09d127fde632f3982d41e582346e65</span><br></pre></td></tr></table></figure>
<h3 id="安装-Pod-网络插件"><a href="#安装-Pod-网络插件" class="headerlink" title="安装 Pod 网络插件"></a>安装 Pod 网络插件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">由于地址总变，把地址写死</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"206.189.89.118 docs.projectcalico.org"</span> &gt;&gt; /etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line">kubectl apply -f https://docs.projectcalico.org/v3.11/manifests/calico.yaml</span><br></pre></td></tr></table></figure>

<h3 id="操作集群"><a href="#操作集群" class="headerlink" title="操作集群"></a>操作集群</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubernetes 集群重置</span></span><br><span class="line"><span class="comment"># kubeadm reset</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line"><span class="comment"># 获取node</span></span><br><span class="line">kubectl get nodes</span><br><span class="line"><span class="comment"># 获取命名空间</span></span><br><span class="line">kubectl get namespace</span><br><span class="line"><span class="comment"># 获取pod</span></span><br><span class="line">kubectl get pod --all-namespaces</span><br><span class="line">kubectl get pod -A -o wide</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取 container</span></span><br><span class="line">docker ps</span><br><span class="line"><span class="comment"># 获取本地镜像</span></span><br><span class="line">docker images</span><br></pre></td></tr></table></figure>

<h2 id="配置多主集群"><a href="#配置多主集群" class="headerlink" title="配置多主集群"></a>配置多主集群</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 重新生成token</span></span><br><span class="line">kubeadm token create --<span class="built_in">print</span>-join-command|sed <span class="string">'s/$&#123;LOCAL_IP&#125;/$&#123;VIP&#125;/g'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 证书有效期延长为一年,所有的节点都执行一次</span></span><br><span class="line">kubeadm alpha certs renew all </span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用master token 加入master集群</span></span><br><span class="line">kubeadm join -h <span class="comment">#使用命令帮助</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在其他主节点执行</span></span><br><span class="line">kubeadm join 192.168.0.55:6443 --token 72jo7w.5yicrzyn8edcvpu0 \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:1e67abc92cf649e18941e24c2c18835f7b09d127fde632f3982d41e582346e65 \</span><br><span class="line">    --control-plane --certificate-key 712fcf5a2ffd9a0cd8bee3518475dca3ca3168fb49ee0c937686537141dff2ff</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使master 同时做 work 节点</span></span><br><span class="line"><span class="comment"># kubectl taint nodes --all node-role.kubernetes.io/master-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看节点</span></span><br><span class="line">kubectl get nodes</span><br><span class="line">kubectl get pods -o wide -A</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出集群</span></span><br><span class="line"><span class="comment"># 在 (master1）执行删除</span></span><br><span class="line">kubectl delete node k8s-2</span><br><span class="line"><span class="comment"># 在 master2 重置 kubernetes </span></span><br><span class="line">kubeadm reset</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 master 上申请join token</span></span><br><span class="line">kubeadm token list</span><br><span class="line">kubeadm token create --<span class="built_in">print</span>-join-command</span><br></pre></td></tr></table></figure>

<h3 id="安装-Dashboard"><a href="#安装-Dashboard" class="headerlink" title="安装 Dashboard"></a>安装 Dashboard</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># https://github.com/kubernetes/dashboard</span></span><br><span class="line"></span><br><span class="line">kubectl apply -f \</span><br><span class="line">https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta8/aio/deploy/recommended.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 service 配置 把 type: ClusterIP 改为 type: NodePort</span></span><br><span class="line">kubectl --namespace=kubernetes-dashboard edit service kubernetes-dashboard</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 service</span></span><br><span class="line">kubectl -n kubernetes-dashboard get service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建用户</span></span><br><span class="line">cat &lt;&lt;EOF &gt;dashboard-adminuser.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: admin-user</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">kubectl apply -f dashboard-adminuser.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create ClusterRole</span></span><br><span class="line">cat &lt;&lt;EOF &gt;dashboard-adminrole.yaml</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: admin-user</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: cluster-admin</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: admin-user</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">kubectl apply -f dashboard-adminrole.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看用户</span></span><br><span class="line">kubectl -n kubernetes-dashboard get secret | grep admin-user</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 user 的token</span></span><br><span class="line">kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk <span class="string">'&#123;print $1&#125;'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以使用 token 登录了</span></span><br></pre></td></tr></table></figure>

<h2 id="在work-node-上执行脚本安装"><a href="#在work-node-上执行脚本安装" class="headerlink" title="在work node 上执行脚本安装"></a>在work node 上执行脚本安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除没用的镜像</span></span><br><span class="line">docker image ls|awk <span class="string">'&#123;print $3&#125;'</span>|xargs docker rmi -f</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;<span class="string">'GEOF'</span> &gt;install.sh</span><br><span class="line">kubeadm reset  -f</span><br><span class="line">docker image ls|awk <span class="string">'&#123;print $3&#125;'</span>|xargs docker rmi -f</span><br><span class="line"></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">iptables -L -n</span><br><span class="line"></span><br><span class="line">swapoff -a</span><br><span class="line">swapoff -a</span><br><span class="line">sed -i <span class="string">'s/.*swap.*/#&amp;/'</span> /etc/fstab</span><br><span class="line"></span><br><span class="line">yum install chrony -y</span><br><span class="line"> </span><br><span class="line"><span class="comment">#vim /etc/chrony.conf</span></span><br><span class="line"></span><br><span class="line">sed -i <span class="string">"/^server/d"</span> /etc/chrony.conf</span><br><span class="line">sed -i <span class="string">"2a server ntp1.cloud.aliyuncs.com iburst"</span> /etc/chrony.conf</span><br><span class="line">sed -i <span class="string">"2a server ntp2.cloud.aliyuncs.com iburst"</span> /etc/chrony.conf </span><br><span class="line">sed -i <span class="string">"/#allow/s/#//"</span> /etc/chrony.conf</span><br><span class="line">systemctl <span class="built_in">enable</span> chronyd.service;</span><br><span class="line">systemctl start chronyd.service</span><br><span class="line"></span><br><span class="line">yum install -y wget curl;</span><br><span class="line">rm  /etc/yum.repos.d/* -rf</span><br><span class="line">centos=$(cat /etc/redhat-release |grep -oP <span class="string">"\d"</span>|sed -n <span class="string">"1p"</span>)</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-<span class="variable">$&#123;centos&#125;</span>.repo</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el<span class="variable">$&#123;centos&#125;</span>-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo</span><br><span class="line"></span><br><span class="line">yum clean all &amp;&amp; yum makecache</span><br><span class="line"></span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line">yum -y update &amp;&amp; yum install -y \</span><br><span class="line">  containerd.io-1.2.10 \</span><br><span class="line">  docker-ce-19.03.4 \</span><br><span class="line">  docker-ce-cli-19.03.4</span><br><span class="line"></span><br><span class="line">mkdir /etc/docker</span><br><span class="line"></span><br><span class="line">tee /etc/docker/daemon.json &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://pe80e41t.mirror.aliyuncs.com"</span>],</span><br><span class="line">  <span class="string">"exec-opts"</span>: [<span class="string">"native.cgroupdriver=systemd"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># "exec-opts": ["native.cgroupdriver=systemd"]</span></span><br><span class="line">mkdir -p /etc/systemd/system/docker.service.d</span><br><span class="line"></span><br><span class="line"><span class="comment"># Restart Docker</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">'s/^SELINUX=enforcing$/SELINUX=permissive/'</span> /etc/selinux/config</span><br><span class="line">yum remove -y kubelet kubeadm kubectl</span><br><span class="line"></span><br><span class="line">yum install -y kubelet-1.17.2 kubeadm-1.17.2 kubectl-1.17.2 --disableexcludes=kubernetes</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> --now kubelet</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt;  /etc/sysctl.d/k8s.conf</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl --system</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart kubelet</span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet docker</span><br><span class="line">GEOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行脚本</span></span><br><span class="line">sh -x install.sh</span><br></pre></td></tr></table></figure>

<h3 id="Work-ndoe-加入集群"><a href="#Work-ndoe-加入集群" class="headerlink" title="Work ndoe 加入集群"></a>Work ndoe 加入集群</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm join 192.168.0.55:6443 --token iq64nb.dq81b1vxczkkrx8i \</span><br><span class="line">--discovery-token-ca-cert-hash \</span><br><span class="line">sha256:1e67abc92cf649e18941e24c2c18835f7b09d127fde632f3982d41e582346e65</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>container</tag>
        <tag>集群</tag>
      </tags>
  </entry>
  <entry>
    <title>mac命令行操作</title>
    <url>/blog.githup.io/2020/05/mac%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p><a href="https://support.apple.com/zh-cn/guide/terminal/trmlshtcts/mac" target="_blank" rel="noopener">命令行快捷键</a></p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">新建窗口（new）:<span class="keyword">Command</span>-N</span><br><span class="line">使用相同命令新建窗口:Control-<span class="keyword">Command</span>-N</span><br><span class="line">新建标签页（tab）：<span class="keyword">Command</span>-T</span><br><span class="line">使用相同命令新建标签页（tab）：Control-<span class="keyword">Command</span>-T</span><br><span class="line">显示或隐藏标签页栏：Shift-<span class="keyword">Command</span>-T</span><br><span class="line">显示所有标签页或退出标签页概览：Shift-<span class="keyword">Command</span>-反斜杠 (\)</span><br><span class="line">新建命令：Shift-<span class="keyword">Command</span>-N</span><br><span class="line">新建远程连接：Shift-<span class="keyword">Command</span>-K</span><br><span class="line">显示或隐藏检查器(inspect)：<span class="keyword">Command</span>-I</span><br><span class="line"></span><br><span class="line">编辑标题：Shift-<span class="keyword">Command</span>-I</span><br><span class="line">编辑背景颜色：<span class="keyword">Option</span>-<span class="keyword">Command</span>-I</span><br><span class="line">放大字体：<span class="keyword">Command</span>-加号键 (+)</span><br><span class="line">缩小字体：<span class="keyword">Command</span>-减号键 (–)</span><br><span class="line">下一个窗口：<span class="keyword">Command</span>-重音符键 (`)</span><br><span class="line">上一个窗口：<span class="keyword">Command</span>-Shift-波浪符号 (~)</span><br><span class="line">下一个标签页：Control-Tab</span><br><span class="line">上一个标签页：Control-Shift-Tab</span><br><span class="line"></span><br><span class="line">将窗口拆分为两个面板：<span class="keyword">Command</span>-D</span><br><span class="line">关闭拆分面板：Shift-<span class="keyword">Command</span>-D</span><br><span class="line"></span><br><span class="line">关闭标签页：<span class="keyword">Command</span>-W</span><br><span class="line">关闭窗口：Shift-<span class="keyword">Command</span>-W</span><br><span class="line"></span><br><span class="line">关闭其他标签页：<span class="keyword">Option</span>-<span class="keyword">Command</span>-W</span><br><span class="line">全部关闭：<span class="keyword">Option</span>-Shift-<span class="keyword">Command</span>-W</span><br><span class="line"></span><br><span class="line">滚动到顶部：<span class="keyword">Command</span>-Home</span><br><span class="line">滚动到底部：<span class="keyword">Command</span>-End</span><br><span class="line"></span><br><span class="line">上一页：<span class="keyword">Command</span>-Page Up</span><br><span class="line">下一页：<span class="keyword">Command</span>-Page Down</span><br><span class="line">上一行：<span class="keyword">Option</span>-<span class="keyword">Command</span>-Page Up</span><br><span class="line">下一行：<span class="keyword">Option</span>-<span class="keyword">Command</span>-Page Down</span><br></pre></td></tr></table></figure>

<h3 id="MAC-命令行翻墙"><a href="#MAC-命令行翻墙" class="headerlink" title="MAC 命令行翻墙"></a>MAC 命令行翻墙</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">lsof -i :1086</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt;~/.bash_profile</span><br><span class="line">alias <span class="attribute">proxy</span>=<span class="string">'export all_proxy=socks5://127.0.0.1:1086'</span></span><br><span class="line">alias <span class="attribute">unproxy</span>=<span class="string">'unset all_proxy'</span></span><br><span class="line">EOF</span><br><span class="line">source ~/.bash_profile</span><br><span class="line"></span><br><span class="line">proxy</span><br><span class="line">curl ip.sb</span><br><span class="line"></span><br><span class="line">unproxy</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>mactools</category>
      </categories>
  </entry>
  <entry>
    <title>python编程</title>
    <url>/blog.githup.io/2020/05/python%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
  </entry>
  <entry>
    <title>shell编程</title>
    <url>/blog.githup.io/2020/05/shell%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
  </entry>
  <entry>
    <title>万台服务器运维</title>
    <url>/blog.githup.io/2020/05/%E4%B8%87%E5%8F%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/</url>
    <content><![CDATA[<h2 id="1万台服务器的计算量和成本核算"><a href="#1万台服务器的计算量和成本核算" class="headerlink" title="1万台服务器的计算量和成本核算"></a>1万台服务器的计算量和成本核算</h2><p>按照当前主流的机架两U服务器来配置(参考 Dell R740)</p>
<blockquote>
<p>需要单独 1000台 来做 Ceph 云存储</p>
</blockquote>
<pre><code>* 单 4210 CPU 10核 20线程
* 内存 320G
* 磁盘 SSD 500G</code></pre><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">整体计算量：</span><br><span class="line">CPU cores = <span class="number">10000</span> * <span class="number">40</span>核 = <span class="number">40</span>w 核心</span><br><span class="line">Memory    = <span class="number">10000</span> * <span class="number">320</span>G = <span class="number">3</span> PB</span><br><span class="line">本地 Disk  = <span class="number">10000</span> * <span class="number">500</span>G = <span class="number">4.7</span> PB</span><br><span class="line">云盘       = <span class="number">1000</span> * <span class="number">96</span>T = <span class="number">96</span> PB</span><br><span class="line"></span><br><span class="line">每台虚机按（ <span class="number">4</span>cores，<span class="number">32</span>G，<span class="number">200</span>GB ） 可以约开 <span class="number">10</span>w台虚拟机</span><br><span class="line"><span class="number">4</span>C * <span class="number">10</span>w = <span class="number">40</span>w 核心</span><br><span class="line"><span class="number">32</span>G * <span class="number">10</span>w = <span class="number">3</span> PB</span><br><span class="line">(系统盘)<span class="number">40</span>G * <span class="number">10</span>w = <span class="number">4</span> PB</span><br><span class="line">(云盘)<span class="number">200</span>G * <span class="number">10</span>w = <span class="number">19</span> PB * <span class="number">3</span> 两个副本 = <span class="number">57</span> PB &lt; 云盘 <span class="number">96</span> PB</span><br><span class="line"></span><br><span class="line">机房成本核算：</span><br><span class="line">一个<span class="number">42</span>U机柜大概可以放<span class="number">12</span>台设备。</span><br><span class="line"><span class="number">11000</span>台/<span class="number">12</span> = <span class="number">916</span> 机柜</span><br><span class="line">机柜托管费用大约<span class="number">5000</span>一年</span><br><span class="line"><span class="number">916</span> * <span class="number">5000</span> = <span class="number">458</span>w/年</span><br><span class="line"></span><br><span class="line"><span class="number">11000</span>台物理服务器成本：</span><br><span class="line"><span class="number">11000</span>台 * <span class="number">5</span>w = <span class="number">5.5</span> 亿</span><br><span class="line"></span><br><span class="line">网络设备计算：</span><br><span class="line">  业务端：万兆以太网交换机</span><br><span class="line">    <span class="number">11000</span>/<span class="number">46</span> * <span class="number">2</span> = <span class="number">480</span> 台 * <span class="number">3</span>w = <span class="number">1440</span>w</span><br><span class="line">  管理端：千兆以太网交换机</span><br><span class="line">    <span class="number">11000</span>/<span class="number">46</span>     = <span class="number">240</span> 台 * <span class="number">2</span>k = <span class="number">48</span>w</span><br><span class="line"></span><br><span class="line">按照阿里云的报价计算：</span><br><span class="line">按月计费：</span><br><span class="line">（ <span class="number">4</span>cores，<span class="number">32</span>G，<span class="number">200</span>GB ） ~= <span class="number">800</span> 元/月 </span><br><span class="line"><span class="number">800</span> * <span class="number">100000</span> * <span class="number">12</span>月 = <span class="number">9.6</span>亿/年</span><br><span class="line"></span><br><span class="line">按使用量(<span class="number">1.68</span>/时)计费：</span><br><span class="line">（ <span class="number">4</span>cores，<span class="number">32</span>G，<span class="number">200</span>GB ） ~= <span class="number">1200</span>元/月  </span><br><span class="line"><span class="number">1200</span> * <span class="number">100000</span> * <span class="number">12</span>月 = <span class="number">14.4</span> 亿/年</span><br><span class="line"></span><br><span class="line">带宽费用：略</span><br><span class="line"></span><br><span class="line">人力成本： 百台/人</span><br><span class="line"><span class="number">11000</span>/<span class="number">100</span> = <span class="number">110</span> 人 * <span class="number">20</span>w(平均年薪) = <span class="number">2200</span>w</span><br><span class="line"></span><br><span class="line">运维复杂度估算：</span><br><span class="line">AN: application类别数量</span><br><span class="line">LN: application层级</span><br><span class="line">SN: 服务器数量</span><br><span class="line">E: 调整因子</span><br><span class="line">OPCOMPLEX:运维复杂度</span><br></pre></td></tr></table></figure>
<p>承载的服务量</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">web 服务计算量：</span><br><span class="line">依照 <span class="number">163.</span>com首页 计算 <span class="number">128</span>kb静态页请求</span><br><span class="line"><span class="number">10</span>GB带宽跑满可以接受 <span class="number">9960</span>个/秒</span><br></pre></td></tr></table></figure>

<h2 id="备份和容灾设计"><a href="#备份和容灾设计" class="headerlink" title="备份和容灾设计"></a>备份和容灾设计</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">备份采用同城双节点，对数据进行实时备份。</span><br><span class="line">同城机房容灾需要使用专线来保证数据完整。进行热数据实时迁移减小数据量。</span><br><span class="line"></span><br><span class="line">异地节点进行容灾。异步数据同步，主要数据进行同步。</span><br></pre></td></tr></table></figure>
<h2 id="云计算设计"><a href="#云计算设计" class="headerlink" title="云计算设计"></a>云计算设计</h2><h3 id="5000台搭建-openstack-集群"><a href="#5000台搭建-openstack-集群" class="headerlink" title="5000台搭建 openstack 集群"></a>5000台搭建 openstack 集群</h3><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">openstack</span></span><br></pre></td></tr></table></figure>
<h3 id="4000台搭建-kubernetes-容器云"><a href="#4000台搭建-kubernetes-容器云" class="headerlink" title="4000台搭建 kubernetes 容器云"></a>4000台搭建 kubernetes 容器云</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="1000-台配置成裸金属"><a href="#1000-台配置成裸金属" class="headerlink" title="1000 台配置成裸金属"></a>1000 台配置成裸金属</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="技术人员组成-110-人"><a href="#技术人员组成-110-人" class="headerlink" title="技术人员组成(110 人)"></a>技术人员组成(110 人)</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="技术人员管理"><a href="#技术人员管理" class="headerlink" title="技术人员管理"></a>技术人员管理</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>计算量</tag>
        <tag>成本核算</tag>
      </tags>
  </entry>
  <entry>
    <title>仿hexo的golang实现</title>
    <url>/blog.githup.io/2020/05/%E4%BB%BFhexo%E7%9A%84golang%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<p>^^最近想写一下博客。顺便把自己的文档给整理一下。<br>gitee pages 提供静态页的空间。把这个过程也纪录一下。<br>选择 gitee 主要原因是国内访问比较快。<br>githup pages 需要的话导出一份放上去就可以很方便。</p>
<p>实现功能</p>
<pre><code>1、通过模板生成静态页
2、定义网站结构，一次性生成
3、把 markdown文件保存到 md 目录，用来生成文章
4、定义文章结构，把文章生成后加到list页面里。</code></pre><p>实现完之后三步搞定</p>
<pre><code>1、执行命令生成网站
2、对 md 目录下的文章自动生成
3、发布到 gitee</code></pre><p>最后写个 deply.sh 一键发布</p>
<h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><h4 id="发布的目录结构"><a href="#发布的目录结构" class="headerlink" title="发布的目录结构"></a>发布的目录结构</h4><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">blog #类似hexo public</span><br><span class="line">	|-&gt; artcles </span><br><span class="line">		|-&gt; modules #把文章分类</span><br><span class="line">			|-&gt; artcle</span><br><span class="line">	|-&gt; static # 静态文件</span><br><span class="line">		|-&gt; css</span><br><span class="line">		|-&gt; js</span><br><span class="line">		|-&gt; images</span><br></pre></td></tr></table></figure>
<h4 id="待发布的目录结构"><a href="#待发布的目录结构" class="headerlink" title="待发布的目录结构"></a>待发布的目录结构</h4><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">blog</span><br><span class="line">	|-&gt; templates</span><br><span class="line">		|-&gt; static       	<span class="comment">#存放静态文件</span></span><br><span class="line">            |-&gt; css</span><br><span class="line">            |-&gt; js</span><br><span class="line">            |-&gt; images</span><br><span class="line">		|-&gt; nav.tpl 		<span class="comment">#导航条</span></span><br><span class="line">		|-&gt; index.tpl 		<span class="comment">#首页</span></span><br><span class="line">		|-&gt; header.tpl 		<span class="comment">#page 头部</span></span><br><span class="line">		|-&gt; content.tpl 	<span class="comment">#page 内容部分</span></span><br><span class="line">		|-&gt; footer.tpl		<span class="comment">#page 尾部</span></span><br><span class="line">		|-&gt; md 				<span class="comment">#用来存放文章</span></span><br><span class="line">            |-&gt;cloud        <span class="comment">#支持文章分类，文章太多后容易查找</span></span><br><span class="line">		|-&gt; <span class="keyword">list</span>.tpl		<span class="comment">#列表页</span></span><br><span class="line">		|-&gt; listcontent.tpl <span class="comment">#列表内容部分 </span></span><br><span class="line">	|-&gt; main.go</span><br><span class="line">	|-&gt; go.mod</span><br></pre></td></tr></table></figure>


<h3 id="主程序-main-go"><a href="#主程序-main-go" class="headerlink" title="主程序 main.go"></a>主程序 main.go</h3><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	<span class="string">"github.com/PuerkitoBio/goquery"</span> <span class="comment">//用来处理dom</span></span><br><span class="line">	<span class="string">"os/exec"</span></span><br><span class="line">	<span class="string">"strconv"</span></span><br><span class="line"></span><br><span class="line">	<span class="string">"path/filepath"</span></span><br><span class="line">	<span class="string">"regexp"</span> <span class="comment">//正则主要是匹配 tab</span></span><br><span class="line">	<span class="string">"strings"</span></span><br><span class="line"></span><br><span class="line">	<span class="string">"html/template"</span> <span class="comment">// html 模板</span></span><br><span class="line">	<span class="string">"io/ioutil"</span> <span class="comment">// 文件操作</span></span><br><span class="line">	<span class="string">"log"</span></span><br><span class="line">	<span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义网站结构</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">	ROOT          = <span class="string">"blog"</span></span><br><span class="line">	TEMP          = <span class="string">"templates"</span></span><br><span class="line">	ARTCLEDIR     = ROOT + <span class="string">"/artcle"</span></span><br><span class="line">	STATICDIR     = ROOT + <span class="string">"/static"</span></span><br><span class="line">	TEMPMD        = TEMP + <span class="string">"/md"</span></span><br><span class="line">	TEMPSTATICDIR = TEMP + <span class="string">"/static"</span></span><br><span class="line">	INDEX         = ROOT + <span class="string">"/index.html"</span></span><br><span class="line">	LIST          = <span class="string">"/list.html"</span></span><br><span class="line">	TEMPLATES     = <span class="string">"templates"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 页面名称</span></span><br><span class="line"><span class="keyword">type</span> Page <span class="keyword">struct</span> &#123;</span><br><span class="line">	title <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 标签颜色 color</span></span><br><span class="line"><span class="keyword">type</span> tagColor <span class="keyword">struct</span> &#123;</span><br><span class="line">	colorn <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文章的属性</span></span><br><span class="line"><span class="keyword">type</span> Artcle <span class="keyword">struct</span> &#123;</span><br><span class="line">	name     <span class="keyword">string</span></span><br><span class="line">	date     <span class="keyword">string</span></span><br><span class="line">	catagory <span class="keyword">string</span></span><br><span class="line">	tag      <span class="keyword">string</span></span><br><span class="line">	tagColor</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文件列表--感觉这点golang不如python好操作</span></span><br><span class="line"><span class="keyword">var</span> fileList []<span class="keyword">string</span></span><br><span class="line"><span class="keyword">var</span> staticfileList []<span class="keyword">string</span></span><br><span class="line"><span class="keyword">var</span> mdfileList []<span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 程序入口</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// 生成blog</span></span><br><span class="line">	TpltoBlog()</span><br><span class="line">	<span class="comment">// 把 static 拷贝到blog</span></span><br><span class="line">	staticToBlog()</span><br><span class="line">	<span class="comment">// 把文章发表出去，对md进行处理</span></span><br><span class="line">	mdHandler2()</span><br><span class="line">	<span class="comment">//遍历 artcle 目录，把生成 html 文章 加到list.html中</span></span><br><span class="line">	htmlToList()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把html 加入list.html中</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">htmlToList</span><span class="params">()</span></span> &#123;</span><br><span class="line">	GetAllFile(ARTCLEDIR)</span><br><span class="line">	<span class="keyword">for</span> _, f := <span class="keyword">range</span> fileList &#123;</span><br><span class="line">		fmt.Println(f)</span><br><span class="line">		addList(f)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理 md 底下的文件（废弃）</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mdHandler</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// 遍历一下目录</span></span><br><span class="line">	files, _ := ioutil.ReadDir(TEMPMD)</span><br><span class="line">	<span class="keyword">for</span> _, file := <span class="keyword">range</span> files &#123;</span><br><span class="line">		filename := file.Name()</span><br><span class="line">		<span class="keyword">if</span> file.IsDir() &#123;</span><br><span class="line">			<span class="keyword">continue</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="comment">// 处理 md to html</span></span><br><span class="line">			<span class="keyword">if</span> strings.Contains(filename, <span class="string">".md"</span>) &#123;</span><br><span class="line">				<span class="comment">//fmt.Println(filename)</span></span><br><span class="line">				htmlfilename := strings.Replace(filename, <span class="string">".md"</span>, <span class="string">".html"</span>, <span class="number">-1</span>)</span><br><span class="line">				fmt.Println(TEMPMD+<span class="string">"/"</span>+filename, TEMPMD+<span class="string">"/"</span>+htmlfilename)</span><br><span class="line">                <span class="comment">// 通过外部命令实现</span></span><br><span class="line">				cmd := exec.Command(<span class="string">"./mdtohtml"</span>, <span class="string">"-css"</span>, <span class="string">"blog/static/css/base.css"</span>, TEMPMD+<span class="string">"/"</span>+filename, TEMPMD+<span class="string">"/"</span>+htmlfilename)</span><br><span class="line">				cmd.Run()</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理 md 底下的文件</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mdHandler2</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// 生成 md 文件列表</span></span><br><span class="line">	getMD(<span class="string">"templates/md"</span>)</span><br><span class="line">	<span class="keyword">for</span> _, file := <span class="keyword">range</span> mdfileList &#123;</span><br><span class="line">		<span class="keyword">if</span> strings.Contains(file, <span class="string">".md"</span>) &#123;</span><br><span class="line">			htmlfilename := strings.Replace(file, <span class="string">".md"</span>, <span class="string">".html"</span>, <span class="number">-1</span>)</span><br><span class="line">			fmt.Println(file, htmlfilename)</span><br><span class="line">			cmd := exec.Command(<span class="string">"./mdtohtml"</span>, <span class="string">"-css"</span>, <span class="string">"blog/static/css/base.css"</span>, file, htmlfilename)</span><br><span class="line">			cmd.Run()</span><br><span class="line">			_, err := os.Stat(htmlfilename)</span><br><span class="line">			<span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">				<span class="keyword">if</span> strings.Contains(htmlfilename, <span class="string">".html"</span>) &#123;</span><br><span class="line">					fmt.Println(htmlfilename)</span><br><span class="line">					HtmltoBlog(htmlfilename) <span class="comment">// 对 html 的进行处理</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历 md</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getMD</span><span class="params">(filename <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">	files, _ := ioutil.ReadDir(filename)</span><br><span class="line">	<span class="keyword">for</span> _, file := <span class="keyword">range</span> files &#123;</span><br><span class="line">		f := file.Name()</span><br><span class="line">		<span class="keyword">if</span> file.IsDir() &#123;</span><br><span class="line">			<span class="comment">//fmt.Println(filename + "/" + f)</span></span><br><span class="line">			getMD(filename + <span class="string">"/"</span> + f)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//fmt.Println(f)</span></span><br><span class="line">		mdfileList = <span class="built_in">append</span>(mdfileList, filename+<span class="string">"/"</span>+f)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理md底下html文件</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">htmlHandler</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// 遍历一下目录</span></span><br><span class="line">	files, _ := ioutil.ReadDir(TEMPMD)</span><br><span class="line">	<span class="keyword">for</span> _, file := <span class="keyword">range</span> files &#123;</span><br><span class="line">		filename := file.Name()</span><br><span class="line">		<span class="keyword">if</span> file.IsDir() &#123;</span><br><span class="line">			<span class="keyword">continue</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="comment">// html to modules(/blog/artcle/*)</span></span><br><span class="line">			<span class="keyword">if</span> strings.Contains(filename, <span class="string">".html"</span>) &#123;</span><br><span class="line">				fmt.Println(filename)</span><br><span class="line">				HtmltoBlog(filename) <span class="comment">// 对 html 的进行处理</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把 static 拷贝到blog</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">staticToBlog</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> tempfile <span class="keyword">string</span></span><br><span class="line">	staticToList(TEMPSTATICDIR)</span><br><span class="line">	<span class="keyword">for</span> _, f := <span class="keyword">range</span> staticfileList &#123;</span><br><span class="line">		tempfile = strings.Replace(f, <span class="string">"templates/"</span>, <span class="string">"blog/"</span>, <span class="number">-1</span>)</span><br><span class="line">		fmt.Println(f, tempfile)</span><br><span class="line">		t, _ := ioutil.ReadFile(f)</span><br><span class="line">		ioutil.WriteFile(tempfile, t, os.ModePerm)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 寻找静态文件</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">staticToList</span><span class="params">(pathname <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">	files, _ := ioutil.ReadDir(pathname)</span><br><span class="line">	<span class="keyword">for</span> _, file := <span class="keyword">range</span> files &#123;</span><br><span class="line">		filename := file.Name()</span><br><span class="line">		<span class="comment">//fmt.Println(filename)</span></span><br><span class="line">		<span class="keyword">if</span> file.IsDir() &#123;</span><br><span class="line">			staticToList(pathname + <span class="string">"/"</span> + filename)</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			staticfileList = <span class="built_in">append</span>(staticfileList, pathname+<span class="string">"/"</span>+filename)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归目录</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetAllFile</span><span class="params">(pathname <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	rd, err := ioutil.ReadDir(pathname)</span><br><span class="line">	<span class="keyword">for</span> _, fi := <span class="keyword">range</span> rd &#123;</span><br><span class="line">		<span class="keyword">if</span> fi.IsDir() &#123;</span><br><span class="line">			<span class="comment">//fmt.Printf("[%s]\n", pathname+"/"+fi.Name())</span></span><br><span class="line">			GetAllFile(pathname + <span class="string">"/"</span> + fi.Name())</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> fi.Name() != <span class="string">"list.html"</span> &#123;</span><br><span class="line">				<span class="comment">//fmt.Println(pathname + "/" + fi.Name())</span></span><br><span class="line">				fileList = <span class="built_in">append</span>(fileList, pathname+<span class="string">"/"</span>+fi.Name())</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据模板生成html</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TpltoBlog</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 创建目录和文件</span></span><br><span class="line">	os.MkdirAll(ARTCLEDIR+<span class="string">"/bigdata"</span>, os.ModePerm)</span><br><span class="line">	os.MkdirAll(ARTCLEDIR+<span class="string">"/cloud"</span>, os.ModePerm)</span><br><span class="line">	os.MkdirAll(STATICDIR+<span class="string">"/css"</span>, os.ModePerm)</span><br><span class="line">	os.Mkdir(STATICDIR+<span class="string">"/images"</span>, os.ModePerm)</span><br><span class="line">	os.Mkdir(STATICDIR+<span class="string">"/scripts"</span>, os.ModePerm)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 生成模块</span></span><br><span class="line">	ArtcleDir := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;</span><br><span class="line">		<span class="string">"bigdata"</span>: <span class="string">"大数据"</span>,</span><br><span class="line">		<span class="string">"cloud"</span>:   <span class="string">"云计算"</span>,</span><br><span class="line">		<span class="string">"devops"</span>:  <span class="string">"DevOps"</span>,</span><br><span class="line">		<span class="string">"develop"</span>: <span class="string">"开发技术"</span>,</span><br><span class="line">		<span class="string">"pmp"</span>:     <span class="string">"PMP"</span>,</span><br><span class="line">		<span class="string">"system"</span>:  <span class="string">"系统管理"</span>,</span><br><span class="line">		<span class="string">"lookfor"</span>: <span class="string">"速查表"</span>,</span><br><span class="line">	&#125;</span><br><span class="line">	ArtcleMap := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> dir, name := <span class="keyword">range</span> ArtcleDir &#123;</span><br><span class="line">		os.MkdirAll(ARTCLEDIR+<span class="string">"/"</span>+dir, os.ModePerm)</span><br><span class="line">		ArtcleMap[ARTCLEDIR+<span class="string">"/"</span>+dir+LIST] = name</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 生成主页</span></span><br><span class="line">	t1, _ := template.ParseFiles(<span class="string">"templates/index.tpl"</span>, <span class="string">"templates/header.tpl"</span>, <span class="string">"templates/nav.tpl"</span>, <span class="string">"templates/content.tpl"</span>, <span class="string">"templates/footer.tpl"</span>)</span><br><span class="line">	<span class="comment">// p := Page&#123;"主页"&#125;</span></span><br><span class="line">	indexFile1, _ := os.Create(INDEX)</span><br><span class="line">	t1.Execute(indexFile1, ArtcleMap)</span><br><span class="line">	indexFile1.Close()</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 生成列表页</span></span><br><span class="line">	t2, _ := template.ParseFiles(<span class="string">"templates/list.tpl"</span>, <span class="string">"templates/header.tpl"</span>, <span class="string">"templates/nav.tpl"</span>, <span class="string">"templates/listcontent.tpl"</span>, <span class="string">"templates/footer.tpl"</span>)</span><br><span class="line">	<span class="comment">// p1 := Page&#123;"列表"&#125;</span></span><br><span class="line">	<span class="keyword">for</span> dir, _ := <span class="keyword">range</span> ArtcleDir &#123;</span><br><span class="line">		fmt.Println(ARTCLEDIR + <span class="string">"/"</span> + dir + LIST)</span><br><span class="line">		listFile, err := os.Create(ARTCLEDIR + <span class="string">"/"</span> + dir + LIST)</span><br><span class="line">		<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">			fmt.Println(err)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 把对列表页进行html渲染</span></span><br><span class="line">		t2.Execute(listFile, ArtcleMap)</span><br><span class="line">		listFile.Close()</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 生成 404 页面</span></span><br><span class="line">	t404, _ := template.ParseFiles(<span class="string">"templates/404.tpl"</span>)</span><br><span class="line">	p := Page&#123;<span class="string">"404"</span>&#125;</span><br><span class="line">	indexFile404, _ := os.Create(ROOT + <span class="string">"/404.html"</span>)</span><br><span class="line">	t404.Execute(indexFile404, p)</span><br><span class="line">	indexFile404.Close()</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> k, v := <span class="keyword">range</span> ArtcleMap &#123;</span><br><span class="line">		fmt.Println(k, v)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把文章添加到列表</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addList</span><span class="params">(filename <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">	<span class="comment">// 获取目录</span></span><br><span class="line">	listDir := filepath.Dir(filename)</span><br><span class="line">	listFile := listDir + <span class="string">"/list.html"</span></span><br><span class="line">	fmt.Println(listDir, listFile, filename)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 判断有没有 list.html</span></span><br><span class="line">	_, err := os.Stat(listFile)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 获取文件</span></span><br><span class="line">	text, _ := ioutil.ReadFile(filename)</span><br><span class="line">	r := regexp.MustCompile(<span class="string">`&lt;!--(.*)--&gt;`</span>)</span><br><span class="line">	b := r.FindAllStringSubmatch(<span class="keyword">string</span>(text), <span class="number">-1</span>)</span><br><span class="line">	atl := Artcle&#123;&#125;</span><br><span class="line">    <span class="comment">// 定义文章分类的颜色</span></span><br><span class="line">	Color := <span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span>&#123;</span><br><span class="line">		<span class="number">1</span>: <span class="string">"rgba(0,0,255,0.8)"</span>,</span><br><span class="line">		<span class="number">2</span>: <span class="string">"rgba(255,0,0,0.8)"</span>,</span><br><span class="line">		<span class="number">3</span>: <span class="string">"rgba(0,255,0,0.8)"</span>,</span><br><span class="line">		<span class="number">4</span>: <span class="string">"rgba(100,100,100,0.8)"</span>,</span><br><span class="line">		<span class="number">5</span>: <span class="string">"rgba(125,200,120,0.8)"</span>,</span><br><span class="line">	&#125;</span><br><span class="line">	atl.colorn = <span class="number">5</span></span><br><span class="line">	atl.tag = <span class="string">"其他"</span></span><br><span class="line">	atl.date = <span class="string">"2010-02-08"</span></span><br><span class="line">	<span class="comment">// 查找 html 标签信息</span></span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> b &#123;</span><br><span class="line">		<span class="comment">//fmt.Println(v)</span></span><br><span class="line">		tmp := v[<span class="number">1</span>]</span><br><span class="line">		<span class="keyword">if</span> strings.Contains(tmp, <span class="string">"title:"</span>) &#123;</span><br><span class="line">			atl.name = purhcontent(<span class="string">"title:"</span>, tmp)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"tag:"</span>) &#123;</span><br><span class="line">			atl.tag = purhcontent(<span class="string">"tag:"</span>, tmp)</span><br><span class="line">			<span class="keyword">if</span> <span class="built_in">len</span>(atl.tag) &lt; <span class="number">1</span> &#123;</span><br><span class="line">				atl.tag = <span class="string">"其他"</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"date:"</span>) &#123;</span><br><span class="line">			atl.date = purhcontent(<span class="string">"date:"</span>, tmp)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"catagory:"</span>) &#123;</span><br><span class="line">			atl.catagory = purhcontent(<span class="string">"catagory:"</span>, tmp)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"color:"</span>) &#123;</span><br><span class="line">			atl.colorn, err = strconv.Atoi(purhcontent(<span class="string">"color:"</span>, tmp))</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 对列表页进行生成</span></span><br><span class="line">	domname := <span class="string">".list dl"</span></span><br><span class="line">	htmltag := <span class="string">`&lt;dd&gt;&lt;a href="`</span> + atl.name + <span class="string">`.html"&gt;`</span> + atl.name +</span><br><span class="line">		<span class="string">`&lt;/a&gt;&lt;span class="tag"&gt;&lt;span style="background-color: `</span> +</span><br><span class="line">		Color[atl.colorn] + <span class="string">` !important;"&gt;`</span> + atl.tag + <span class="string">`&lt;/span&gt;&lt;span&gt;`</span> +</span><br><span class="line">		atl.date + <span class="string">`&lt;/span&gt;&lt;/span&gt;&lt;/dd&gt;`</span></span><br><span class="line">	fmt.Println(domname, htmltag)</span><br><span class="line">	artcleTolist(listFile, domname, htmltag)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对md 标签进行操作</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HtmltoBlog</span><span class="params">(filename <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">	newDir := ARTCLEDIR + <span class="string">"/"</span></span><br><span class="line">	<span class="comment">// md 下的 html 进行处理，并分类保存到 blog 下</span></span><br><span class="line">	text, _ := ioutil.ReadFile(filename)</span><br><span class="line">	r := regexp.MustCompile(<span class="string">`&lt;!--(.*)--&gt;`</span>)</span><br><span class="line">	b := r.FindAllStringSubmatch(<span class="keyword">string</span>(text), <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">	atl := Artcle&#123;&#125;</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> b &#123;</span><br><span class="line">		<span class="comment">//fmt.Println(v)</span></span><br><span class="line">		tmp := v[<span class="number">1</span>]</span><br><span class="line">		<span class="keyword">if</span> strings.Contains(tmp, <span class="string">"title:"</span>) &#123;</span><br><span class="line">			atl.name = purhcontent(<span class="string">"title:"</span>, tmp)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"tag:"</span>) &#123;</span><br><span class="line">			atl.tag = purhcontent(<span class="string">"tag:"</span>, tmp)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"date:"</span>) &#123;</span><br><span class="line">			atl.date = purhcontent(<span class="string">"date:"</span>, tmp)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"catagory:"</span>) &#123;</span><br><span class="line">			atl.catagory = purhcontent(<span class="string">"catagory:"</span>, tmp)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	oldFile := filename</span><br><span class="line">	newFile := newDir + atl.catagory + <span class="string">"/"</span> + atl.name + <span class="string">".html"</span></span><br><span class="line">	fmt.Println(oldFile)</span><br><span class="line">	fmt.Println(newFile)</span><br><span class="line">	os.Rename(oldFile, newFile)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入key提取value</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">purhcontent</span><span class="params">(k <span class="keyword">string</span>, v <span class="keyword">string</span>)</span> <span class="params">(value <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">	tmp := v</span><br><span class="line">	<span class="keyword">if</span> strings.Contains(tmp, k) &#123;</span><br><span class="line">		v1 := strings.Split(tmp, <span class="string">":"</span>)</span><br><span class="line">		value = strings.TrimSpace(v1[<span class="number">1</span>])</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在 list.html 插入文章节点</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">artcleTolist</span><span class="params">(filename, domname, htmltag <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">	f, err := os.OpenFile(filename, os.O_RDONLY, os.ModePerm)</span><br><span class="line">	<span class="keyword">defer</span> f.Close()</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatal(err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 从文件中转doc</span></span><br><span class="line">	doc, err := goquery.NewDocumentFromReader(f)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatal(err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 查找 dom 节点</span></span><br><span class="line">	s := doc.Find(domname)</span><br><span class="line">	<span class="comment">// 文章已经存在就不添加</span></span><br><span class="line">	tmps, _ := s.Html()</span><br><span class="line">	<span class="keyword">if</span> strings.Contains(tmps, htmltag) &#123;</span><br><span class="line">		<span class="comment">//fmt.Println("匹配到了")</span></span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	s = s.AppendHtml(htmltag)</span><br><span class="line">	<span class="comment">// 将doc 转 html</span></span><br><span class="line">	html, _ := doc.Html()</span><br><span class="line">	f1, _ := os.OpenFile(filename, os.O_WRONLY, os.ModePerm)</span><br><span class="line">	<span class="keyword">defer</span> f1.Close()</span><br><span class="line">	f1.WriteString(html)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="需要使用-markdown-to-html-的模块"><a href="#需要使用-markdown-to-html-的模块" class="headerlink" title="需要使用 markdown to html 的模块"></a>需要使用 markdown to html 的模块</h3><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Blackfriday Markdown Processor</span></span><br><span class="line"><span class="comment">// Available at http://github.com/russross/blackfriday</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Copyright © 2011 Russ Ross &lt;russ@russross.com&gt;.</span></span><br><span class="line"><span class="comment">// Distributed under the Simplified BSD License.</span></span><br><span class="line"><span class="comment">// See README.md for details.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Example front-end for command-line use</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"flag"</span></span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	<span class="string">"github.com/russross/blackfriday"</span></span><br><span class="line">	<span class="string">"io/ioutil"</span></span><br><span class="line">	<span class="string">"os"</span></span><br><span class="line">	<span class="string">"runtime/pprof"</span></span><br><span class="line">	<span class="string">"strings"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> DEFAULT_TITLE = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// parse command-line options</span></span><br><span class="line">	<span class="keyword">var</span> page, toc, toconly, xhtml, latex, smartypants, latexdashes, fractions <span class="keyword">bool</span></span><br><span class="line">	<span class="keyword">var</span> css, cpuprofile <span class="keyword">string</span></span><br><span class="line">	<span class="keyword">var</span> repeat <span class="keyword">int</span></span><br><span class="line">	flag.BoolVar(&amp;page, <span class="string">"page"</span>, <span class="literal">false</span>,</span><br><span class="line">		<span class="string">"Generate a standalone HTML page (implies -latex=false)"</span>)</span><br><span class="line">	flag.BoolVar(&amp;toc, <span class="string">"toc"</span>, <span class="literal">false</span>,</span><br><span class="line">		<span class="string">"Generate a table of contents (implies -latex=false)"</span>)</span><br><span class="line">	flag.BoolVar(&amp;toconly, <span class="string">"toconly"</span>, <span class="literal">false</span>,</span><br><span class="line">		<span class="string">"Generate a table of contents only (implies -toc)"</span>)</span><br><span class="line">	flag.BoolVar(&amp;xhtml, <span class="string">"xhtml"</span>, <span class="literal">true</span>,</span><br><span class="line">		<span class="string">"Use XHTML-style tags in HTML output"</span>)</span><br><span class="line">	flag.BoolVar(&amp;latex, <span class="string">"latex"</span>, <span class="literal">false</span>,</span><br><span class="line">		<span class="string">"Generate LaTeX output instead of HTML"</span>)</span><br><span class="line">	flag.BoolVar(&amp;smartypants, <span class="string">"smartypants"</span>, <span class="literal">true</span>,</span><br><span class="line">		<span class="string">"Apply smartypants-style substitutions"</span>)</span><br><span class="line">	flag.BoolVar(&amp;latexdashes, <span class="string">"latexdashes"</span>, <span class="literal">true</span>,</span><br><span class="line">		<span class="string">"Use LaTeX-style dash rules for smartypants"</span>)</span><br><span class="line">	flag.BoolVar(&amp;fractions, <span class="string">"fractions"</span>, <span class="literal">true</span>,</span><br><span class="line">		<span class="string">"Use improved fraction rules for smartypants"</span>)</span><br><span class="line">	flag.StringVar(&amp;css, <span class="string">"css"</span>, <span class="string">""</span>,</span><br><span class="line">		<span class="string">"Link to a CSS stylesheet (implies -page)"</span>)</span><br><span class="line">	flag.StringVar(&amp;cpuprofile, <span class="string">"cpuprofile"</span>, <span class="string">""</span>,</span><br><span class="line">		<span class="string">"Write cpu profile to a file"</span>)</span><br><span class="line">	flag.IntVar(&amp;repeat, <span class="string">"repeat"</span>, <span class="number">1</span>,</span><br><span class="line">		<span class="string">"Process the input multiple times (for benchmarking)"</span>)</span><br><span class="line">	flag.Usage = <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">		fmt.Fprintf(os.Stderr, <span class="string">"Blackfriday Markdown Processor v"</span>+blackfriday.VERSION+</span><br><span class="line">			<span class="string">"\nAvailable at http://github.com/russross/blackfriday\n\n"</span>+</span><br><span class="line">			<span class="string">"Copyright © 2011 Russ Ross &lt;russ@russross.com&gt;\n"</span>+</span><br><span class="line">			<span class="string">"Distributed under the Simplified BSD License\n"</span>+</span><br><span class="line">			<span class="string">"See website for details\n\n"</span>+</span><br><span class="line">			<span class="string">"Usage:\n"</span>+</span><br><span class="line">			<span class="string">"  %s [options] [inputfile [outputfile]]\n\n"</span>+</span><br><span class="line">			<span class="string">"Options:\n"</span>,</span><br><span class="line">			os.Args[<span class="number">0</span>])</span><br><span class="line">		flag.PrintDefaults()</span><br><span class="line">	&#125;</span><br><span class="line">	flag.Parse()</span><br><span class="line"></span><br><span class="line">	<span class="comment">// enforce implied options</span></span><br><span class="line">	<span class="keyword">if</span> css != <span class="string">""</span> &#123;</span><br><span class="line">		css = <span class="string">"/"</span> + css</span><br><span class="line">		page = <span class="literal">true</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> page &#123;</span><br><span class="line">		latex = <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> toconly &#123;</span><br><span class="line">		toc = <span class="literal">true</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> toc &#123;</span><br><span class="line">		latex = <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// turn on profiling?</span></span><br><span class="line">	<span class="keyword">if</span> cpuprofile != <span class="string">""</span> &#123;</span><br><span class="line">		f, err := os.Create(cpuprofile)</span><br><span class="line">		<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">			fmt.Fprintln(os.Stderr, err)</span><br><span class="line">		&#125;</span><br><span class="line">		pprof.StartCPUProfile(f)</span><br><span class="line">		<span class="keyword">defer</span> pprof.StopCPUProfile()</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// read the input</span></span><br><span class="line">	<span class="keyword">var</span> input []<span class="keyword">byte</span></span><br><span class="line">	<span class="keyword">var</span> err error</span><br><span class="line">	args := flag.Args()</span><br><span class="line">	<span class="keyword">switch</span> <span class="built_in">len</span>(args) &#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">		<span class="comment">//if input, err = ioutil.ReadAll(os.Stdin); err != nil &#123;</span></span><br><span class="line">		<span class="comment">//	fmt.Fprintln(os.Stderr, "Error reading from Stdin:", err)</span></span><br><span class="line">		<span class="comment">//	os.Exit(-1)</span></span><br><span class="line">		<span class="comment">//&#125;</span></span><br><span class="line">		flag.Usage()</span><br><span class="line">	<span class="keyword">case</span> <span class="number">1</span>, <span class="number">2</span>:</span><br><span class="line">		<span class="keyword">if</span> input, err = ioutil.ReadFile(args[<span class="number">0</span>]); err != <span class="literal">nil</span> &#123;</span><br><span class="line">			fmt.Fprintln(os.Stderr, <span class="string">"Error reading from"</span>, args[<span class="number">0</span>], <span class="string">":"</span>, err)</span><br><span class="line">			os.Exit(<span class="number">-1</span>)</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">default</span>:</span><br><span class="line">		flag.Usage()</span><br><span class="line">		os.Exit(<span class="number">-1</span>)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// set up options</span></span><br><span class="line">	extensions := <span class="number">0</span></span><br><span class="line">	extensions |= blackfriday.EXTENSION_NO_INTRA_EMPHASIS</span><br><span class="line">	extensions |= blackfriday.EXTENSION_TABLES</span><br><span class="line">	extensions |= blackfriday.EXTENSION_FENCED_CODE</span><br><span class="line">	extensions |= blackfriday.EXTENSION_AUTOLINK</span><br><span class="line">	extensions |= blackfriday.EXTENSION_STRIKETHROUGH</span><br><span class="line">	extensions |= blackfriday.EXTENSION_SPACE_HEADERS</span><br><span class="line"></span><br><span class="line">	<span class="keyword">var</span> renderer blackfriday.Renderer</span><br><span class="line">	<span class="keyword">if</span> latex &#123;</span><br><span class="line">		<span class="comment">// render the data into LaTeX</span></span><br><span class="line">		renderer = blackfriday.LatexRenderer(<span class="number">0</span>)</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="comment">// render the data into HTML</span></span><br><span class="line">		htmlFlags := <span class="number">0</span></span><br><span class="line">		<span class="keyword">if</span> xhtml &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_USE_XHTML</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> smartypants &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_USE_SMARTYPANTS</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> fractions &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_SMARTYPANTS_FRACTIONS</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> latexdashes &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_SMARTYPANTS_LATEX_DASHES</span><br><span class="line">		&#125;</span><br><span class="line">		title := <span class="string">""</span></span><br><span class="line">		<span class="keyword">if</span> page &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_COMPLETE_PAGE</span><br><span class="line">			title = getTitle(input)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> toconly &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_OMIT_CONTENTS</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> toc &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_TOC</span><br><span class="line">		&#125;</span><br><span class="line">		renderer = blackfriday.HtmlRenderer(htmlFlags, title, css)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// parse and render</span></span><br><span class="line">	<span class="keyword">var</span> output []<span class="keyword">byte</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; repeat; i++ &#123;</span><br><span class="line">		output = blackfriday.Markdown(input, renderer, extensions)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// output the result</span></span><br><span class="line">	<span class="keyword">var</span> out *os.File</span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">len</span>(args) == <span class="number">2</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> out, err = os.Create(args[<span class="number">1</span>]); err != <span class="literal">nil</span> &#123;</span><br><span class="line">			fmt.Fprintf(os.Stderr, <span class="string">"Error creating %s: %v"</span>, args[<span class="number">1</span>], err)</span><br><span class="line">			os.Exit(<span class="number">-1</span>)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">defer</span> out.Close()</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		out = os.Stdout</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> _, err = out.Write(output); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Fprintln(os.Stderr, <span class="string">"Error writing output:"</span>, err)</span><br><span class="line">		os.Exit(<span class="number">-1</span>)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// try to guess the title from the input buffer</span></span><br><span class="line"><span class="comment">// just check if it starts with an &lt;h1&gt; element and use that</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getTitle</span><span class="params">(input []<span class="keyword">byte</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">	i := <span class="number">0</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// skip blank lines</span></span><br><span class="line">	<span class="keyword">for</span> i &lt; <span class="built_in">len</span>(input) &amp;&amp; (input[i] == <span class="string">'\n'</span> || input[i] == <span class="string">'\r'</span>) &#123;</span><br><span class="line">		i++</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> i &gt;= <span class="built_in">len</span>(input) &#123;</span><br><span class="line">		<span class="keyword">return</span> DEFAULT_TITLE</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> input[i] == <span class="string">'\r'</span> &amp;&amp; i+<span class="number">1</span> &lt; <span class="built_in">len</span>(input) &amp;&amp; input[i+<span class="number">1</span>] == <span class="string">'\n'</span> &#123;</span><br><span class="line">		i++</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// find the first line</span></span><br><span class="line">	start := i</span><br><span class="line">	<span class="keyword">for</span> i &lt; <span class="built_in">len</span>(input) &amp;&amp; input[i] != <span class="string">'\n'</span> &amp;&amp; input[i] != <span class="string">'\r'</span> &#123;</span><br><span class="line">		i++</span><br><span class="line">	&#125;</span><br><span class="line">	line1 := input[start:i]</span><br><span class="line">	<span class="keyword">if</span> input[i] == <span class="string">'\r'</span> &amp;&amp; i+<span class="number">1</span> &lt; <span class="built_in">len</span>(input) &amp;&amp; input[i+<span class="number">1</span>] == <span class="string">'\n'</span> &#123;</span><br><span class="line">		i++</span><br><span class="line">	&#125;</span><br><span class="line">	i++</span><br><span class="line"></span><br><span class="line">	<span class="comment">// check for a prefix header</span></span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">len</span>(line1) &gt;= <span class="number">3</span> &amp;&amp; line1[<span class="number">0</span>] == <span class="string">'#'</span> &amp;&amp; (line1[<span class="number">1</span>] == <span class="string">' '</span> || line1[<span class="number">1</span>] == <span class="string">'\t'</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> strings.TrimSpace(<span class="keyword">string</span>(line1[<span class="number">2</span>:]))</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// check for an underlined header</span></span><br><span class="line">	<span class="keyword">if</span> i &gt;= <span class="built_in">len</span>(input) || input[i] != <span class="string">'='</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> DEFAULT_TITLE</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i &lt; <span class="built_in">len</span>(input) &amp;&amp; input[i] == <span class="string">'='</span> &#123;</span><br><span class="line">		i++</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i &lt; <span class="built_in">len</span>(input) &amp;&amp; (input[i] == <span class="string">' '</span> || input[i] == <span class="string">'\t'</span>) &#123;</span><br><span class="line">		i++</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> i &gt;= <span class="built_in">len</span>(input) || (input[i] != <span class="string">'\n'</span> &amp;&amp; input[i] != <span class="string">'\r'</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> DEFAULT_TITLE</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> strings.TrimSpace(<span class="keyword">string</span>(line1))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="部署脚本-deploy-sh"><a href="#部署脚本-deploy-sh" class="headerlink" title="部署脚本 deploy.sh"></a>部署脚本 deploy.sh</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go run main.go</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">git add ./*</span><br><span class="line">git commit -m <span class="string">"file update"</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>develop</category>
      </categories>
      <tags>
        <tag>goquery</tag>
        <tag>markdown转html</tag>
      </tags>
  </entry>
  <entry>
    <title>全文索引原理</title>
    <url>/blog.githup.io/2020/05/%E5%85%A8%E6%96%87%E7%B4%A2%E5%BC%95%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<p><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html" target="_blank" rel="noopener">Elasticsearch: 权威指南</a></p>
<h3 id="概念-Concepts"><a href="#概念-Concepts" class="headerlink" title="概念 Concepts"></a>概念 Concepts</h3><ul>
<li>全文搜索<ul>
<li>倒排索引<ul>
<li>分词</li>
<li>建立索引</li>
</ul>
</li>
<li>相关性评分<ul>
<li>布尔模型</li>
<li>评分函数<ul>
<li>单词评分<ul>
<li>词频</li>
<li>逆向词频</li>
<li>字段长度归一值</li>
</ul>
</li>
<li>多词评分<ul>
<li>向量空间模型<ul>
<li>维数</li>
<li>TF/IDF算法</li>
<li>余弦近似度</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="倒排索引"><a href="#倒排索引" class="headerlink" title="倒排索引"></a>倒排索引</h3><blockquote>
<p>一个倒排索引由文档中所有不重复词的列表构成。</p>
<p>中文的词是词语（我们）中文词语间没有空格需要先分词。<br>英文的词是单词(example)</p>
</blockquote>
<p>在倒排索引中，词叫做 tokens。每个文档都被拆分成由不同词组成。</p>
<h3 id="相关性评分"><a href="#相关性评分" class="headerlink" title="相关性评分"></a>相关性评分</h3><p>布尔模型用来找出匹配的文档。</p>
<p>评分函数用来对文档相关性排序。</p>
<ul>
<li>词频 tf</li>
</ul>
<p>词在文档中出现的频度是多少？频度越高，权重 越高 。</p>
<blockquote>
<p>tf(t in d) = √frequency</p>
<p>词 t 在文档 d 的词频（ tf ）是该词在文档中出现次数的平方根。</p>
</blockquote>
<ul>
<li>逆向文档频率</li>
</ul>
<p>词在集合所有文档里出现的频率是多少？频次越高，权重 越低 。</p>
<blockquote>
<p>idf(t) = 1 + log ( numDocs / (docFreq + 1))</p>
<p>词 t 的逆向文档频率（ idf ）是：索引中文档数量除以所有包含该词的文档数，然后求其对数。</p>
</blockquote>
<ul>
<li>字段的长度归一值</li>
</ul>
<p>字段的长度是多少？字段越短，字段的权重 越高 。</p>
<blockquote>
<p>norm(d) = 1 / √numTerms</p>
<p>字段长度归一值（ norm ）是字段中词数平方根的倒数。</p>
</blockquote>
<blockquote>
<p>以下三个因素是在索引时计算并存储的。</p>
</blockquote>
<ul>
<li>向量空间模型</li>
</ul>
<p>进行多查询时，根据每个词的权重组成一个向量。然后和文档的向量比较。角度越相似，评分越高。</p>
<p><a href="https://www.ruanyifeng.com/blog/2013/03/cosine_similarity.html" target="_blank" rel="noopener">余弦近似度</a></p>
<h3 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h3><p><a href="https://blog.csdn.net/Kevin_cc98/article/details/73742037" target="_blank" rel="noopener">欧式距离、标准化欧式距离、马氏距离、余弦距离</a></p>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>lucene</tag>
        <tag>elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>出境旅游常用英语</title>
    <url>/blog.githup.io/2020/05/%E5%87%BA%E5%A2%83%E6%97%85%E6%B8%B8%E5%B8%B8%E7%94%A8%E8%8B%B1%E8%AF%AD/</url>
    <content><![CDATA[<p>出入境填表常用词汇</p>
<p>姓：Family name，Surname</p>
<p>名：First Name，Given name</p>
<p>性别：sex，gender</p>
<p>男：male；女：female</p>
<p>国籍：nationality，country of citizenship</p>
<p>护照号：passport number</p>
<p>原住地：country of origin</p>
<p>前往国：destination country</p>
<p>登机城市：city where you boarded</p>
<p>签证签发地：city where visa was issued</p>
<p>签发日期：date of issue</p>
<p>出生日期：date of birth，birth date</p>
<p>年：year；月：month；日：day</p>
<p>偕行人数：accompanying number</p>
<p>签名：signature</p>
<p>官方填写：official use only</p>
<p>职业：occupation</p>
<p>护照：Passport；签证：Visa</p>
<p>登机、启程：Embarkation</p>
<p>登岸：Disembarkation</p>
<p>商务签证：Business Visa</p>
<p>观光签证：Tourist Visa</p>
<p>乘机常用词汇</p>
<p>航站、终点站：Terminal</p>
<p>入境大厅：Arrival Lobby</p>
<p>出境大厅：Departure Lobby</p>
<p>登机门号码：Gate Number</p>
<p>登机证：Boarding Card，Boarding Pass</p>
<p>机场税：Airport Tax</p>
<p>登机手续办理处：Check in Counter</p>
<p>海关申报处：Customs Service Area</p>
<p>货币申报：Currency Declaration</p>
<p>免税商品：Duty-Free Items</p>
<p>大号：large；中号：medium；小号：small</p>
<p>纪念品：Souvenir</p>
<p>行李：Baggage，Luggage</p>
<p>~ 1 / 11 ~</p>
<p>托运的行李：Checked baggage</p>
<p>行李领取处：Baggage claim area</p>
<p>随身行李：Carry-on baggage</p>
<p>行李牌：Baggage Tag</p>
<p>行李推车：Luggage Cart</p>
<p>退税处：Tax-free refund</p>
<p>盥洗室（厕所）：Lavatory，washroom，toilet</p>
<p>W.C.＝water closet，rest room</p>
<p>男厕：Men’s，Gent’s，Gentlemen’s</p>
<p>女厕：Women’s，Lady’s</p>
<p>使用中：Occupied</p>
<p>空闲：Vacant</p>
<p>男（女）空服员：Steward（Stewardess）</p>
<p>机内免税贩卖：In-Flight Sales</p>
<p>钱币兑换常用词汇</p>
<p>外币兑换店：Currency Exchange Shop</p>
<p>汇率：Exchange rate</p>
<p>旅行支票：Traveler’s check</p>
<p>手续费：Commission</p>
<p>银行买入价：We buy（Bid）</p>
<p>银行卖出价：We sell（Ask）</p>
<p>酒店常用词汇</p>
<p>入住登记手续：Check-in</p>
<p>客房服务：Room Service</p>
<p>退房（时间）：Check Out（Time）</p>
<p>前台：Front Desk，Reception</p>
<p>酒店大堂：Lobby</p>
<p>咖啡馆：Coffee shop</p>
<p>服务员，侍者：waiter（餐厅、旅馆的服务生、行李员）</p>
<p>电话叫醒服务：Wake Up Call，Morning Call</p>
<p>日常用语</p>
<p>你好，很高兴认识你：How do you do，I’m glad to meet you.（It’s nice meeting you.）</p>
<p>请问你叫什么名字：May I have your name, please?</p>
<p>我可以试穿一下吗：May I try it on?</p>
<p>多少钱：How much?</p>
<p>请把菜单给我：Please show me the menu.</p>
<p>干杯：Cheers! Bottoms up!</p>
<p>~ 2 / 11 ~</p>
<p>我迷路了，您能告诉我怎么回饭店吗：I’m lost．Could you do me a favor to find my hotel?</p>
<p>你能帮我拍照吗：Could you take a picture for me?</p>
<p>非常感谢：Thank you very much.</p>
<p>不客气：You’re welcome．</p>
<p>我就是忍不住：I just couldn’t help it.</p>
<p>让我们保持联系：Let’s keep in touch.</p>
<p>我怎样能跟你联络上：How can I get in touch with you?</p>
<p>我将会尽我最大努力：I’ll do my best.</p>
<p>请稍等一下：Wait a moment please.</p>
<p>你先请：After you</p>
<p>我们该走了：We’d better be off.</p>
<p>我真要累死了：I’m really dead.</p>
<p>真是那样吗：Is that so?</p>
<p>我不确切知道：I don’t know for sure.</p>
<p>太好了，太棒了：That’s something.</p>
<p>这主意真棒：Brilliant idea!</p>
<p>此话当真：Do you really mean it?</p>
<p>你帮了大忙：You are a great help.</p>
<p>我身无分文：I’m broke.</p>
<p>我一直不太喜欢这东西：I never liked it anyway.</p>
<p>别跟我耍花招：Don’t play games with me!</p>
<p>看情况再说：That depends.</p>
<p>最全食物的英文翻译</p>
<p>水果类（fruits）：</p>
<p>火龙果 pitaya</p>
<p>西红柿 tomato</p>
<p>菠萝 pineapple</p>
<p>西瓜watermelon</p>
<p>香蕉banana</p>
<p>柚子 shaddock （pomelo）</p>
<p>橙子orange</p>
<p>苹果apple</p>
<p>柠檬lemon</p>
<p>樱桃 cherry</p>
<p>桃子peach</p>
<p>梨 pear</p>
<p>枣Chinese date （去核枣 pitted date ）</p>
<p>~ 3 / 11 ~</p>
<p>椰子coconut</p>
<p>草莓 strawberry</p>
<p>树莓 raspberry</p>
<p>蓝莓 blueberry</p>
<p>黑莓 blackberry</p>
<p>葡萄 grape</p>
<p>甘蔗 sugar cane</p>
<p>芒果 mango</p>
<p>木瓜 pawpaw或者papaya</p>
<p>杏子 apricot 　</p>
<p>油桃 nectarine</p>
<p>柿子persimmon</p>
<p>石榴pomegranate</p>
<p>榴莲 jackfruit</p>
<p>槟榔果 areca nut</p>
<p>（西班牙产苦橙）bitter orange</p>
<p>猕猴桃 kiwi fruit or Chinese gooseberry</p>
<p>金橘cumquat</p>
<p>蟠桃 flat peach</p>
<p>荔枝 litchi</p>
<p>青梅greengage</p>
<p>山楂果 haw</p>
<p>水蜜桃honey peach</p>
<p>香瓜，甜瓜 musk melon</p>
<p>李子plum</p>
<p>杨梅 waxberry red bayberry</p>
<p>桂圆 longan</p>
<p>沙果 crab apple</p>
<p>杨桃starfruit</p>
<p>枇杷 loquat</p>
<p>柑橘 tangerine</p>
<p>莲雾wax-apple</p>
<p>番石榴 guava</p>
<p>肉、蔬菜类：</p>
<p>南瓜（倭瓜） pumpkin cushaw</p>
<p>甜玉米 Sweet corn</p>
<p>牛肉beef</p>
<p>猪肉pork</p>
<p>羊肉 mutton</p>
<p>羔羊肉lamb</p>
<p>鸡肉chicken</p>
<p>生菜 莴苣lettuce</p>
<p>白菜 Chinese cabbage （celery cabbage）（甘蓝）</p>
<p>卷心菜 cabbage</p>
<p>萝卜 radish</p>
<p>胡萝卜 carrot</p>
<p>韭菜leek</p>
<p>木耳 agarics</p>
<p>豌豆 pea</p>
<p>马铃薯（土豆） potato</p>
<p>黄瓜 cucumber</p>
<p>苦瓜 balsam pear</p>
<p>秋葵 okra</p>
<p>洋葱 onion</p>
<p>芹菜 celery</p>
<p>芹菜杆 celery sticks</p>
<p>地瓜 sweet potato</p>
<p>蘑菇 mushroom</p>
<p>橄榄 olive</p>
<p>菠菜spinach</p>
<p>冬瓜 （Chinese）wax gourd</p>
<p>~ 4 / 11 ~</p>
<p>莲藕 lotus root</p>
<p>紫菜 laver</p>
<p>油菜 cole rape</p>
<p>茄子 eggplant</p>
<p>香菜 caraway</p>
<p>枇杷loquat</p>
<p>青椒 green pepper</p>
<p>四季豆 青刀豆 garden bean</p>
<p>银耳 silvery fungi</p>
<p>腱子肉tendon</p>
<p>肘子 pork joint</p>
<p>茴香fennel（茴香油fennel oil 药用）</p>
<p>鲤鱼carp</p>
<p>咸猪肉bacon</p>
<p>金针蘑 needle mushroom</p>
<p>扁豆 lentil</p>
<p>槟榔 areca</p>
<p>牛蒡great burdock</p>
<p>水萝卜 summer radish</p>
<p>竹笋 bamboo shoot</p>
<p>艾蒿Chinese mugwort</p>
<p>绿豆mung bean</p>
<p>毛豆green soy bean</p>
<p>瘦肉 lean meat</p>
<p>肥肉speck</p>
<p>黄花菜 day lily （day lily bud）</p>
<p>豆芽菜 bean sprout</p>
<p>丝瓜 towel gourd</p>
<p>(注：在美国丝瓜或用来做丝瓜茎loofah洗澡的，不是食用的)</p>
<p>海鲜类（sea food）：</p>
<p>虾仁 Peeled Prawns</p>
<p>龙虾 lobster</p>
<p>小龙虾 crayfish（退缩者）</p>
<p>蟹 crab</p>
<p>蟹足crab claws</p>
<p>小虾（虾米） shrimp</p>
<p>对虾、大虾 prawn</p>
<p>（烤）鱿鱼（toast）squid</p>
<p>海参 sea cucumber</p>
<p>扇贝 scallop</p>
<p>鲍鱼 sea-ear abalone</p>
<p>小贝肉cockles</p>
<p>牡蛎oyster</p>
<p>鱼鳞scale</p>
<p>海蜇jellyfish</p>
<p>鳖 海龟turtle</p>
<p>蚬 蛤 clam</p>
<p>鲅鱼 culter</p>
<p>鲳鱼 butterfish</p>
<p>虾籽 shrimp egg</p>
<p>鲢鱼 银鲤鱼chub silver carp</p>
<p>黄花鱼 yellow croaker</p>
<p>调料类（seasonings）：</p>
<p>醋 vinegar</p>
<p>酱油 soy</p>
<p>盐 salt</p>
<p>加碘盐 iodized salt</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
  </entry>
  <entry>
    <title>数学大观</title>
    <url>/blog.githup.io/2020/05/%E6%95%B0%E5%AD%A6%E5%A4%A7%E8%A7%82/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>编程方法</title>
    <url>/blog.githup.io/2020/05/%E7%BC%96%E7%A8%8B%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<ul>
<li>表达式<ul>
<li>常量</li>
<li>变量</li>
<li>运算符</li>
</ul>
</li>
<li>控制流程<ul>
<li>分支</li>
<li>循环</li>
</ul>
</li>
<li>容器<ul>
<li>数组</li>
<li>切片</li>
<li>Map</li>
</ul>
</li>
<li>函数<ul>
<li>参数</li>
<li>返回值</li>
<li>闭包</li>
<li>递归函数</li>
</ul>
</li>
<li>面向对象<ul>
<li>接口</li>
<li>结构体</li>
<li>指针</li>
</ul>
</li>
<li>设计模式<ul>
<li>单例模式</li>
<li>工厂模式</li>
</ul>
</li>
<li>Golang 并发<ul>
<li>Channel</li>
<li>sync</li>
</ul>
</li>
<li>错误处理</li>
<li>日志记录</li>
<li>常用包</li>
<li>包管理</li>
<li>基本库</li>
</ul>
]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
  </entry>
  <entry>
    <title>计算机英语</title>
    <url>/blog.githup.io/2020/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%8B%B1%E8%AF%AD/</url>
    <content><![CDATA[<h2 id="计算机专业-（Computer-Science-计算机科学）"><a href="#计算机专业-（Computer-Science-计算机科学）" class="headerlink" title="计算机专业 （Computer Science 计算机科学）"></a>计算机专业 （Computer Science 计算机科学）</h2><h3 id="美国计算机专业院校排名前十-University-Rankings"><a href="#美国计算机专业院校排名前十-University-Rankings" class="headerlink" title="美国计算机专业院校排名前十 University Rankings"></a>美国计算机专业院校排名前十 University Rankings</h3><ul>
<li><a href="https://www.cmu.edu/" target="_blank" rel="noopener">卡耐基梅隆大学</a>    Carnegie Mellon University    5    Pittsburgh, PA</li>
<li><a href="https://www.mit.edu/" target="_blank" rel="noopener">麻省理工学院</a>    Massachusetts Institute of Technology    5    Cambridge, MA</li>
<li><a href="https://www.stanford.edu/" target="_blank" rel="noopener">斯坦福大学</a>    Stanford University    5    Stanford, CA</li>
<li><a href="https://www.berkeley.edu/" target="_blank" rel="noopener">加州大学伯克利分校</a>    University of California–Berkeley    5    Berkeley, CA</li>
<li>伊利诺伊大学厄本那-香槟分校    University of Illinois–Urbana-Champaign    4.6    Urbana, IL</li>
<li>康奈尔大学    Cornell University    4.5    Ithaca, NY</li>
<li>华盛顿大学    University of Washington    4.5    Seattle, WA</li>
<li>佐治亚理工学院    Georgia Institute of Technology    4.4    Atlanta, GA</li>
<li>普林斯顿大学    Princeton University    4.4    Princeton, NJ</li>
<li>德克萨斯大学奥斯汀分校    University of Texas–Austin    4.3    Austin, TX</li>
</ul>
<h3 id="国内计算机专业院校排名"><a href="#国内计算机专业院校排名" class="headerlink" title="国内计算机专业院校排名"></a>国内计算机专业院校排名</h3><ul>
<li><a href="https://www.tsinghua.edu.cn/" target="_blank" rel="noopener">清华大学</a></li>
<li><a href="https://www.nudt.edu.cn/" target="_blank" rel="noopener">国防科学技术大学</a></li>
<li><a href="https://www.pku.edu.cn/" target="_blank" rel="noopener">北京大学</a></li>
<li><a href="https://www.buaa.edu.cn/" target="_blank" rel="noopener">北京航空航天大学</a></li>
<li>哈尔滨工业大学</li>
<li>上海交通大学</li>
<li>浙江大学</li>
<li>南京大学</li>
<li>中国科学技术大学</li>
<li>东北大学</li>
</ul>
<h3 id="第一类，研究理论层面"><a href="#第一类，研究理论层面" class="headerlink" title="第一类，研究理论层面"></a>第一类，研究理论层面</h3><figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line">计算理论 Theory <span class="keyword">of</span> computation</span><br><span class="line">计算几何学 Computational Geometry</span><br><span class="line">并行计算 <span class="keyword">Parallel</span> Computation</span><br><span class="line">形式化方法 Formal <span class="function"><span class="keyword">Method</span></span></span><br><span class="line"><span class="function">程序设计语言理论 <span class="title">Theory</span> <span class="title">of</span> <span class="title">programming</span> <span class="title">language</span></span></span><br><span class="line"><span class="function">人工智能 <span class="title">Artificial</span> <span class="title">Intelligence</span></span></span><br></pre></td></tr></table></figure>
<h3 id="第二类，系统软件层面"><a href="#第二类，系统软件层面" class="headerlink" title="第二类，系统软件层面"></a>第二类，系统软件层面</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">体系结构<span class="built_in"> System </span>Architecture</span><br><span class="line">网络与通讯 Networkand Communication</span><br><span class="line">面向对象 Object-oriented</span><br><span class="line">约束程序设计 Programming Design</span><br><span class="line">软件工程 Software Engineering</span><br><span class="line">软件质量控制 Software Quality Control</span><br><span class="line">实时系统与嵌入式系统 Real-timeand Imbedded System</span><br><span class="line">数据库系统 Database System</span><br><span class="line">大规模计算中的 I/O</span><br></pre></td></tr></table></figure>
<h3 id="第三类，计算机应用层面"><a href="#第三类，计算机应用层面" class="headerlink" title="第三类，计算机应用层面"></a>第三类，计算机应用层面</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">科学与工程计算</span><br><span class="line">电子商务与数字化图书馆</span><br><span class="line">人机交互</span><br><span class="line">计算机教育</span><br></pre></td></tr></table></figure>

<p><a href="https://www.mit.edu/education/schools-and-departments/" target="_blank" rel="noopener">MIT 院系</a><br><a href="https://www.eecs.mit.edu/" target="_blank" rel="noopener">MIT EECS</a><br><a href="https://cs.stanford.edu/" target="_blank" rel="noopener">Stanford CS</a></p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
  </entry>
  <entry>
    <title>编程英语</title>
    <url>/blog.githup.io/2020/05/%E7%BC%96%E7%A8%8B%E8%8B%B1%E8%AF%AD/</url>
    <content><![CDATA[<p>application [ˌæplɪ’keɪʃ(ə)n]应用程式 应用、应用程序</p>
<p>application framework[‘freɪmwɜːk] 应用程式框架、应用框架 应用程序框架</p>
<p>architecture[‘ɑːkɪtektʃə] 架构、系统架构 体系结构</p>
<p>argument [‘ɑːgjʊm(ə)nt]引数（传给函式的值）。叁见 parameter 叁数、实质叁数、实叁、自变量</p>
<p>array [ə’reɪ] 阵列 数组</p>
<p>arrow[‘ærəʊ]  operator[‘ɔpəreitə] arrow（箭头）运算子 箭头操作符</p>
<p>assembly [ə’semblɪ]装配件</p>
<p>assembly language [‘læŋgwɪdʒ]组合语言 汇编语言</p>
<p>assert(ion) [ə’sɜːt] [ə’sɜːʃ(ə)n]断言</p>
<p>assign [ə’saɪn]指派、指定、设值、赋值 赋值</p>
<p>assignment [ə’saɪnm(ə)nt]指派、指定 赋值、分配</p>
<p>assignment operator [‘ɒpəreɪtə]指派（赋值）运算子 = 赋值操作符</p>
<p>associated [ə’soʃɪetɪd]相应的、相关的 相关的、关联、相应的</p>
<p>associative [ə’səʊʃɪətɪv] container [kən’teɪnə]关联式容器（对应 sequential container） 关联式容器</p>
<p>atomic [ə’tɔmik]不可分割的 原子的</p>
<p>attribute [ə’trɪbjuːt]属性 属性、特性</p>
<p>audio [‘ɔːdɪəʊ]音讯 音频</p>
<p>A.I. 人工智慧 人工智能</p>
<p>（artificial[ɑ:ti’fiʃəl]</p>
<p>intelligence [ɪn’telɪdʒ(ə)ns]）</p>
<hr>
<p>background [‘bækgraʊnd]背景 背景（用於图形着色）</p>
<p>後台（用於行程）</p>
<p>backward [‘bækwəd] compatible [kəm’pætɪb(ə)l]回溯相容 向下兼容</p>
<p>//bandwidth [‘bændwidθ]频宽 带宽</p>
<p>base [beis] class [klɑːs]基础类别 基类</p>
<p>base type [taip]基础型别 (等同於 base class)</p>
<p>batch [bætʃ]批次（意思是整批作业） 批处理</p>
<p>//benefit [‘benɪfɪt]利益 收益</p>
<p>best [best] viable [‘vaiəbl] function [‘fʌŋ(k)ʃ(ə)n]最佳可行函式 最佳可行函式</p>
<p>（从 viable functions 中挑出的最佳吻合者）</p>
<p>binary [‘baɪnərɪ] search [sɜːtʃ]二分搜寻法 二分查找</p>
<p>binary tree [triː]二元树 二叉树</p>
<p>binary function 二元函式 双叁函数</p>
<p>binary operator [‘ɒpəreɪtə]二元运算子 二元操作符</p>
<p>binding [‘baɪndɪŋ]系结 绑定</p>
<p>bit <a href="发音为beit">bɪt</a>位元 位</p>
<p>bit field [fiːld]位元栏 位域</p>
<p>bitmap [‘bɪtmæp]位元图 位图</p>
<p>bitwise 以 bit 为单元逐一┅</p>
<p>bitwise copy 以 bit 为单元进行复制；位元逐一复制 位拷贝</p>
<p>block [英][blɔk] [美][blɑk] 区块,区段 块、区块、语句块</p>
<p>boolean [‘bu:li:ən]布林值（真假值，true 或 false） 布尔值</p>
<p>border [‘bɔ:də]边框、框线 边框</p>
<p>brace[breis] (curly [‘kə:li] brace) 大括弧、大括号 花括弧、花括号</p>
<p>bracket[‘brækit] (square [skwεə]brakcet) 中括弧、中括号 方括弧、方括号</p>
<p>breakpoint [‘breikpɔint]中断点 断点</p>
<p>build [bild]建造、构筑、建置（MS 用语）</p>
<p>build－in 内建 内置</p>
<p>bus 汇流排 总线</p>
<p>//business [‘bɪznɪs]商务,业务 业务</p>
<p>buttons [bʌtəns]按钮 按钮</p>
<p>byte [bait]位元组（由 8 bits 组成） 字节</p>
<hr>
<p>cache [kæʃ]快取 高速缓存</p>
<p>call [kɔ:l]呼叫、叫用 调用</p>
<p>callback [‘kɔ:lbæk]回呼 回调</p>
<p>call operator [‘ɔpəreitə] call（函式呼叫）运算子调用操作符</p>
<p>（同 function call operator）</p>
<p>candidate [‘kændidit] function 候选函式 候选函数</p>
<p>（在函式多载决议程序中出现的候选函式）</p>
<p>chain [tʃein]串链（例 chain of function calls） 链</p>
<p>character [‘kærəktə]字元 字符</p>
<p>check [tʃek] box 核取方块 (i.e. check button) 复选框</p>
<p>checked [tʃekt] exception [ik’sepʃən]可控式异常(Java)</p>
<p>check button [‘bʌtən]方钮 (i.e. check box) 复选按钮</p>
<p>child [tʃaild] class 子类别（或称为derived [di’raivd] class, subtype [‘sʌbtaip] 图表类型） 子类</p>
<p>class [klɑ:s]类别 类</p>
<p>class body 类别本体 类体</p>
<p>class declaration [,deklə’reiʃən]类别宣告、类别宣告式 类声明</p>
<p>class definition [,defi’niʃən]类别定义、类别定义式 类定义</p>
<p>class derivation [,deri’veiʃən] list 类别衍化列 类继承列表</p>
<p>class head [hed]类别表头 类头</p>
<p>class hierarchy [‘haiərɑ:ki]类别继承体系, 类别阶层 类层次体系</p>
<p>class library [‘laibrəri]类别程式库、类别库 类库</p>
<p>class template [‘templit]类别模板、类别范本 类模板</p>
<p>class template partial [‘pɑ:ʃəl] specializations [‘speʃəlaiz]</p>
<p>类别模板偏特化 类模板部分特化</p>
<p>class template specializations</p>
<p>类别模板特化 类模板特化</p>
<p>cleanup [‘kli:nʌp]清理、善後 清理、清除</p>
<p>client [‘klaiənt]客端、客户端、客户 客户</p>
<p>client－server [‘sə:və]主从架构 客户/服务器</p>
<p>clipboard [‘klipbɔ:d]剪贴簿 剪贴板</p>
<p>clone [kləun]复制 克隆</p>
<p>collection [kə’lekʃən]群集 集合</p>
<p>combo [‘kɔmbəu] box [bɔks]复合方块、复合框 组合框</p>
<p>command [kə’mɑ:nd] line [lain]命令列 命令行</p>
<p>(系统文字模式下的整行执行命令)</p>
<p>communication [kə,mju:ni’keiʃən]通讯 通讯</p>
<p>compatible [kəm’pætəbl]相容 兼容</p>
<p>compile [kəm’pail]time 编译期 编译期、编译时</p>
<p>compiler [kəm’pailə]编译器 编译器</p>
<p>component [kəm’pəunənt]组件 组件</p>
<p>composition[,kɔmpə’ziʃən]  复合、合成、组合 组合</p>
<p>computer [kəm’pju:tə]电脑、计算机 计算机、电脑</p>
<p>concept [‘kɔnsept]概念 概念</p>
<p>concrete [kən’kri:t]具象的 实在的</p>
<p>concurrent [kən’kʌrənt]并行 并发</p>
<p>configuration [kən,fiɡju’reiʃən]组态 配置</p>
<p>connection [kə’nekʃən]连接，连线（网络,资料库） 连接</p>
<p>constraint[kən’streint]  约束（条件）</p>
<p>construct [kən’strʌkt]构件 构件</p>
<p>container [kən’teinə]容器 容器</p>
<p>（存放资料的某种结构如 list, vector…）</p>
<p>containment [kən’teinmənt]内含 包容</p>
<p>context[‘kɔntekst] 背景关系、周遭环境、上下脉络 环境、上下文</p>
<p>control [kən’trəul]控制元件、控件 控件</p>
<p>console [kən’səul]主控台 控制台</p>
<p>const [‘kɔnstənt]常数（constant 的缩写，C++ 关键字）</p>
<p>constant[‘kɔnstənt]  常数（相对於 variable） 常量</p>
<p>constructor[kɔn’strʌktə]（ctor） 建构式 构造函数</p>
<p>（与class 同名的一种 member functions）</p>
<p>copy[‘kɔpi] (v) 复制、拷贝 拷贝</p>
<p>copy (n) 复件, 副本</p>
<p>cover [‘kʌvə] 涵盖 覆盖</p>
<p>create [kri’eit]创建、建立、产生、生成 创建</p>
<p>creation [kri:’eiʃən]产生、生成 创建</p>
<p>cursor [‘kə:sə]游标 光标</p>
<p>custom [‘kʌstəm] 订制、自定 定制</p>
<hr>
<p>data [‘deitə]资料 数据</p>
<p>database [‘deitəbeis]资料库 数据库</p>
<p>database schema [‘ski:mə] 数据库结构纲目</p>
<p>data member [‘membə] 资料成员、成员变数 数据成员、成员变量</p>
<p>data structure [‘strʌktʃə]资料结构 数据结构</p>
<p>datagram [‘deitəɡræm]资料元 数据报文</p>
<p>dead [ded] lock [lɔk]死结 死锁</p>
<p>debug [di:’bʌɡ]除错 调试</p>
<p>debugger [di:’bʌɡə]除错器 调试器</p>
<p>declaration [,deklə’reiʃən]宣告、宣告式 声明</p>
<p>deduction [di’dʌkʃən]推导（例：template argument deduction） 推导、推断</p>
<p>default [di’fɔ:lt]预设 缺省、默认</p>
<p>defer [di’fə:] 延缓 推迟</p>
<p>define [di’fain]定义 预定义</p>
<p>definition [,defi’niʃən]定义、定义区、定义式 定义</p>
<p>delegate [‘deliɡeit]委派、委托、委任 委托</p>
<p>delegation [,deli’ɡeiʃən] （同上）</p>
<p>demarshal 反编列 散集</p>
<p>dereference [di’refərəns]提领（取出指标所指物体的内容） 解叁考</p>
<p>dereference operator dereference（提领）运算子 * 解叁考操作符</p>
<p>derived [di’raivd] class 衍生类别 派生类</p>
<p>design [di’zain] by contract [kən’trækt]契约式设计</p>
<p>design [di’zain] pattern [‘pætən] 设计范式、设计样式 设计模式</p>
<p>※ 最近我比较喜欢「设计范式」一词</p>
<p>destroy [di’strɔi] 摧毁、销毁</p>
<p>destructor [di’strʌktə] 解构式 析构函数</p>
<p>device [di’vais] 装置、设备 设备</p>
<p>dialog [‘daiəlɔɡ]对话窗、对话盒 对话框</p>
<p>directive [di’rektiv] 指令（例：using directive） (编译)指示符</p>
<p>directory [di’rektəri] 目录 目录</p>
<p>disk [disk] 碟 盘</p>
<p>dispatch [dis’pætʃ] 分派 分派</p>
<p>distributed [di’stribjutid] computing [kəm’pju:tiŋ] 分布式计算 (分布式电算) 分布式计算</p>
<p>分散式计算 (分散式电算)</p>
<p>document [‘dɔkjumənt]文件 文档</p>
<p>dot [dɔt] operator [‘ɔpəreitə] dot（句点）运算子 . (圆)点操作符</p>
<p>driver [draivə]驱动程式 驱动（程序）</p>
<p>dynamic [dai’næmik] binding [‘baindiŋ] 动态系结 动态绑定</p>
<hr>
<p>efficiency [i’fiʃənsi] 效率 效率</p>
<p>efficient [i’fiʃənt]高效 高效</p>
<p>end [end] user [‘ju:zə]终端用户</p>
<p>entity [‘entəti] 物体 实体、物体</p>
<p>encapsulation [in,-kæpsə’leiʃən] 封装 封装</p>
<p>enclosing [in’kləuz] class 外围类别（与巢状类别 nested <a href="嵌套的">‘nestid</a> class 有关）外围类</p>
<p>enum (enumeration [i,nju:mə’reiʃən]) 列举（一种 C++ 资料型别） 枚举</p>
<p>enumerators [i’nju:məreitə]列举元（enum 型别中的成员） 枚举成员、枚举器</p>
<p>equal [‘i:kwəl] 相等 相等</p>
<p>equality [i:’kwɔləti]相等性 相等性</p>
<p>equality operator [‘ɔpəreitə] equality（等号）运算子 == 等号操作符</p>
<p>equivalence [i’kwivələns] 等价性、等同性、对等性 等价性</p>
<p>equivalent [i’kwivələnt]等价、等同、对等 等价</p>
<p>escape [i’skeip] code 转义码 转义码</p>
<p>evaluate [i’væljueit] 评估、求值、核定 评估</p>
<p>event [i’vent]事件 事件</p>
<p>event driven [drivən]事件驱动的 事件驱动的</p>
<p>exception 异常情况 异常</p>
<p>exception declaration [,deklə’reiʃən]异常宣告（ref. C++ Primer 3/e, 11.3） 异常声明</p>
<p>exception handling [‘hændliŋ]异常处理、异常处理机制 异常处理、异常处理机制</p>
<p>exception specification [,spesifi’keiʃən]异常规格（ref. C++ Primer 3/e, 11.4） 异常规范</p>
<p>exit [‘eksit]退离（指离开函式时的那一个执行点） 退出</p>
<p>explicit [iks’plisit]明白的、明显的、显式 显式</p>
<p>export [ik’spɔ:t]汇出 引出、导出</p>
<p>expression [ik’spreʃən]运算式、算式 表达式</p>
<hr>
<p>facility [fə’siliti]设施、设备 设施、设备</p>
<p>feature [‘fi:tʃə]特性</p>
<p>field [‘fi:ld]栏位,资料栏（Java） 字段, 值域（Java）</p>
<p>file [‘fail]档案 文件</p>
<p>firmware [‘fə:mwεə]韧体 固件</p>
<p>flag [flæɡ]旗标 标记</p>
<p>flash [flæʃ] memory [‘meməri]快闪记忆体 闪存</p>
<p>flexibility [,fleksi’biliti]弹性 灵活性</p>
<p>flush [flʌʃ]清理、扫清 刷新</p>
<p>font [fɔnt]字型 字体</p>
<p>form [fɔ:m]表单（programming [‘prəuɡræmiŋ] 用语） 窗体</p>
<p>formal [‘fɔ:məl] parameter [pə’ræmitə]形式叁数 形式叁数</p>
<p>forward [‘fɔ:wəd] declaration [,deklə’reiʃən]前置宣告 前置声明</p>
<p>forwarding [‘fɔ:wədiŋ]转呼叫,转发 转发</p>
<p>forwarding function [‘fʌŋkʃən]转呼叫函式,转发函式 转发函数</p>
<p>fractal [‘fræktəl]碎形 分形</p>
<p>framework [‘freimwə:k]框架 框架</p>
<p>full [ful] specialization [,speʃəlai’zeiʃən]全特化（ref. partial [‘pɑ:ʃəl] specialization）</p>
<p>function 函式、函数 函数</p>
<p>function call operator [‘ɔpəreitə]同 call operator</p>
<p>function object[‘ɔbdʒikt] 函式物件（ref. C++ Primer 3/e, 12.3） 函数对象</p>
<p>function overloaded [‘əuvə’ləudid] resolution [,rezə’lu:ʃən]</p>
<p>函式多载决议程序 函数重载解决（方案）</p>
<p>functionality [,fʌŋkʃə’næliti]功能、机能 功能</p>
<p>function template [‘templit]函式模板、函式范本 函数模板</p>
<p>functor [‘fʌŋktə]仿函式 仿函式、函子</p>
<hr>
<p>game [ɡeim]游戏 游戏</p>
<p>generate [‘dʒenəreit]生成</p>
<p>generic [dʒi’nerik]泛型、一般化的 一般化的、通用的、泛化</p>
<p>generic algorithm [‘ælɡəriðəm]泛型演算法 通用算法</p>
<p>getter [‘ɡetə] (相对於 setter) 取值函式</p>
<p>global [‘ɡləubəl]全域的（对应於 local） 全局的</p>
<p>global object [‘ɔbdʒikt]全域物件 全局对象</p>
<p>global scope [skəup] resolution [,rezə’lu:ʃən] operator [‘ɔpəreitə]</p>
<p>全域生存空间（范围决议）运算子 :: 全局范围解析操作符</p>
<p>group [ɡru:p]群组</p>
<p>group box 群组方块 分组框</p>
<p>guard [ɡɑ:d] clause [klɔ:z]卫述句 (Refactoring, p250) 卫语句</p>
<p>GUI 图形介面 图形界面（Graphical [‘ɡræfikəl] User Interface）</p>
<hr>
<p>hand shaking [‘ʃeikiŋ]握手协商</p>
<p>handle [‘hændl]识别码、识别号、号码牌、权柄 句柄</p>
<p>handler [‘hændlə]处理常式 处理函数</p>
<p>hard [hɑ:d]－coded [‘kəudid] 编死的 硬编码的</p>
<p>hard－copy [‘kɔpi]硬拷图 屏幕截图</p>
<p>hard disk [disk]硬碟 硬盘</p>
<p>hardware [‘hɑ:dwεə]硬体 硬件</p>
<p>hash [hæʃ] table [‘teibl] 杂凑表 哈希表、散列表</p>
<p>header [‘hedə] file [‘fail]表头档、标头档 头文件</p>
<p>heap [hi:p] 堆积 堆</p>
<p>hierarchy [‘haiə,rɑ:ki]阶层体系 层次结构（体系）</p>
<p>hook [huk]挂钩 钩子</p>
<p>hyperlink [‘haipəliŋk] 超链结 超链接</p>
<hr>
<p>icon [‘aikɔn]图示、图标 图标</p>
<p>IDE 整合开发环境 集成开发环境</p>
<p>（integrated [‘intiɡreitid] development [di’veləpmənt] environment [in’vaiərənmənt]）</p>
<p>identifier [ai’dentifaiə]识别字、识别符号 标识符</p>
<p>if and only if 若且唯若 当且仅当</p>
<p>Illinois [,ili’nɔi(z)]伊利诺 伊利诺斯</p>
<p>image [‘imidʒ]影像 图象</p>
<p>immediate [i’mi:diət] base [beis]直接的（紧临的）上层 base class。 直接上层基类</p>
<p>immediate derived [di’raivd]直接的（紧临的）下层 derived class。 直接下层派生类</p>
<p>immutability [i,mjuitə’biləti]不变性</p>
<p>immutable [i’mju:təbl] 不可变（的）</p>
<p>implement [‘implimənt] 实作、实现 实现</p>
<p>implementation [,implimen’teiʃən]实作品、实作体、实作码、实件 实现</p>
<p>implicit [im’plisit] 隐喻的、暗自的、隐式 隐式</p>
<p>import [im’pɔ:t]汇入 导入</p>
<p>increment [‘inkrimənt] operator [‘ɔpəreitə] 累加运算子 ++ 增加操作符</p>
<p>infinite [‘infinət] loop [lu:p]无穷回圈 无限循环</p>
<p>infinite recursive [ri’kə:siv] 无穷递回 无限递归</p>
<p>information [,infə’meiʃən]资讯 信息</p>
<p>infrastructure [‘infrə,strʌktʃə]公共基础建设</p>
<p>inheritance [in’heritəns]继承、继承机制 继承、继承机制</p>
<p>inline [‘in,lain]行内 内联</p>
<p>inline expansion [ik’spænʃən]行内展开 内联展开</p>
<p>initialization [i,niʃəlai’zeiʃən] 初始化（动作） 初始化</p>
<p>initialization list 初值列 初始值列表</p>
<p>initialize [i’niʃəlaiz] 初始化 初始化</p>
<p>inner [‘inə] class 内隐类别 内嵌类</p>
<p>instance [‘instəns]实体 实例</p>
<p>（根据某种表述而实际产生的「东西」）</p>
<p>instantiated 具现化、实体化（常应用於 template） 实例化</p>
<p>instantiation [in,stænʃieiʃən] 具现体、具现化实体（常应用於 template） 实例</p>
<p>integer [‘intidʒə] (integral [‘intiɡrəl]) 整数（的） 整型（的）</p>
<p>integrate [‘intiɡreit]整合 集成</p>
<p>interacts [ɪntər’ækt]交谈、互动 交互</p>
<p>interface [‘intəfeis]介面 接口</p>
<p>for GUI （Graphical [‘ɡræfikəl] User Interface）介面 界面</p>
<p>interpreter [in’tə:pritə]直译器 解释器</p>
<p>invariants [in’vɛəriənt]恒常性,约束条件 约束条件</p>
<p>invoke [in’vəuk]唤起 调用</p>
<p>iterate [‘itəreit]迭代（回圈一个轮回一个轮回地进行） 迭代</p>
<p>iterative [‘itərətiv] 反覆的，迭代的</p>
<p>iterator [ɪtə’reɪtə]迭代器（一种泛型指标） 迭代器</p>
<p>iteration [,itə’reiʃən]迭代（回圈每次轮回称为一个 iteration） 迭代</p>
<p>item [‘aitəm] 项目、条款 项、条款、项目</p>
<hr>
<p>laser [‘leizə]雷射 激光</p>
<p>level [‘levəl]阶 层 (级)</p>
<p>例 high level 高阶 高层</p>
<p>library [‘laibrəri] 程式库、函式库 库、函数库</p>
<p>lifetime [‘laiftaim]生命期、寿命 生命期、寿命</p>
<p>link [liŋk] 联结、连结 连接,链接</p>
<p>linker [‘liŋkə] 联结器、连结器 连接器</p>
<p>literal [‘litərəl] constant [‘kɔnstənt]字面常数（例 3.14 或 “hi” 这等常数值） 字面常数</p>
<p>list 串列（linked－list） 列表、表、链表</p>
<p>list box 列表方块、列表框 列表框</p>
<p>load [ləud] 载入 装载</p>
<p>loader [‘ləudə]载入器 装载器、载入器</p>
<p>local [‘ləukəl]区域的（对应於 global） 局部的</p>
<p>local object 区域物件 局部对象</p>
<p>lock [lɔk] 机锁</p>
<p>loop [lu:p] 回圈 循环</p>
<p>lvalue 左值 左值</p>
<hr>
<p>macro [‘mækrəu]巨集 宏</p>
<p>magic [‘mædʒik] number 魔术数字 魔法数</p>
<p>maintain [mein’tein]维护 维护</p>
<p>manipulator [mə’nipjuleitə] 操纵器（iostream [stri:m]预先定义的一种东西） 操纵器</p>
<p>marshal [‘mɑ:ʃəl]编列 列集</p>
<p>叁考 demarshal</p>
<p>mechanism [‘mekənizəm]机制 机制</p>
<p>member [‘membə]成员 成员</p>
<p>member access operator 成员取用运算子（有 dot 和 arrow 两种） 成员存取操作符</p>
<p>member function 成员函式 成员函数</p>
<p>member initialization [i,niʃəlai’zeiʃən] list</p>
<p>成员初值列 成员初始值列表</p>
<p>memberwise [waiz] 以 member 为单元┅、members 逐一┅ 以成员为单位</p>
<p>memberwise copy 以 members 为单元逐一复制</p>
<p>memory [‘meməri] 记忆体 内存</p>
<p>menu [‘menju]表单、选单 菜单</p>
<p>message [‘mesidʒ]讯息 消息</p>
<p>message based [beist] 以讯息为基础的 基於消息的</p>
<p>message loop [lu:p] 讯息回圈 消息环</p>
<p>method (java) 方法、行为、函式 方法</p>
<p>meta－ 超－ 元－</p>
<p>例 meta－programming 超编程 元编程</p>
<p>micro [‘maikrəu]微 微</p>
<p>middleware [‘midlweə]中介层 中间件</p>
<p>modeling [‘mɔdəliŋ] 模塑</p>
<p>modeling language [‘læŋɡwidʒ]塑模语言，建模语言</p>
<p>modem [‘məudem] 数据机 调制解调器</p>
<p>module [‘mɔdju:l]模组 模块</p>
<p>modifier [‘mɔdifaiə] 饰词 修饰符</p>
<p>most derived [di’raivd] class 最末层衍生类别 最底层的派生类</p>
<p>mouse [maus]滑鼠 鼠标</p>
<p>mutable [‘mju:təbl] 可变的 可变的</p>
<p>multi－tasking [‘mʌlti] [‘tɑ:skiŋ]多工 多任务</p>
<hr>
<p>namespace [‘neimspeis]命名空间 名字空间、命名空间</p>
<p>native [‘neitiv]原生的 本地的、固有的</p>
<p>nested [‘nestid] class 巢状类别 嵌套类</p>
<p>network [‘netwə:k]网路 网络</p>
<p>network card 网路卡 网卡</p>
<hr>
<p>object 物件 对象</p>
<p>object based[beist] 以物件为基础的 基於对象的</p>
<p>object file [‘fail]目的档 目标文件</p>
<p>object model [‘mɔdəl]物件模型 对象模型</p>
<p>object oriented [‘ɔ:rientid]物件导向的 面向对象的</p>
<p>online [‘ɔnlain]线上 在线</p>
<p>opaque [əu’peik]不透明的</p>
<p>operand [‘ɔpərænd] 运算元 操作数</p>
<p>operating [‘ɔpəreitiŋ] system [‘sistəm] (OS) 作业系统 操作系统</p>
<p>operation [,ɔpə’reiʃən] 操作、操作行为 操作</p>
<p>operator [‘ɔpəreitə]运算子 操作符、运算符</p>
<p>option [‘ɔpʃən]选项，可选方案 选项</p>
<p>ordinary [‘ɔ:dinəri]常规的 常规的</p>
<p>overflow 上限溢位（相对於 underflow） 溢出（underflow:下溢）</p>
<p>overhead 额外负担、额外开销 额外开销</p>
<p>overload [,əuvə’ləud] 多载化、多载化、重载 重载</p>
<p>overloaded [‘əuvə’ləudid] function 多载化函式 重载的函数</p>
<p>overloaded operator 多载化运算子 被重载的操作符</p>
<p>overloaded set 多载集合 重载集合</p>
<p>override [,əuvə’raid] 改写、覆写 重载、改写、重新定义</p>
<p>（在 derived class 中重新定义虚拟函式</p>
<hr>
<p>package [‘pækidʒ]套件 包</p>
<p>pair [pεə]对组</p>
<p>palette [‘pælit]调色盘、组件盘、工具箱</p>
<p>pane [pein]窗格 窗格</p>
<p>（有时为嵌板之意，例 Java Content Pane）</p>
<p>parallel [‘pærəlel]平行 并行</p>
<p>parameter [pə’ræmitə]叁数（函式叁数列上的变数） 叁数、形式叁数、形叁</p>
<p>parameter list 叁数列 叁数列表</p>
<p>parent [‘pεərənt] class 父类别（或称 base class） 父类</p>
<p>parentheses [pə’renθəsɪz]小括弧、小括号 圆括弧、圆括号</p>
<p>parse [pɑ:z]解析 解析</p>
<p>part 零件 部件</p>
<p>partial [‘pɑ:ʃəl] specialization [,speʃəlai’zeiʃən] 偏特化（ref. C++ Primer 3/e, 16.10） 局部特化</p>
<p>（ref. full specialization）</p>
<p>pass by address [ə’dres]传址（函式引数的传递方式）（非正式用语）传地址</p>
<p>pass by reference [‘refərəns]传址（函式引数的一种传递方式） 传地址, 按引用传递</p>
<p>pass by value 传值（函式引数的一种传递方式） 按值传递</p>
<p>pattern [‘pætən]范式、样式 模式</p>
<p>performance [pə’fɔ:məns]效率、性能兼而有之 性能</p>
<p>persistence [pə’sistəns]永续性 持久性</p>
<p>pixel [‘piksəl] 图素、像素 像素</p>
<p>placement delete ref [ref]. C++ Primer 3/e, 15.8.2</p>
<p>placement new ref. C++ Primer 3/e, 15.8.2</p>
<p>platform 平台 平台</p>
<p>pointer [‘pɔintə]指标 指针</p>
<p>址位器（和址叁器 reference 形成对映，满好）</p>
<p>poll [pəul]轮询 轮询</p>
<p>polymorphism [pɔli’mɔ:fizəm]多型 多态</p>
<p>pop[pɔp] up [ʌp]冒起式、弹出式 弹出式</p>
<p>port [pɔ:t]埠 端口</p>
<p>postfix[‘pəustfiks] 後置式、後序式 後置式</p>
<p>precedence [‘presidəns]优先序（通常用於运算子的优先执行次序）</p>
<p>prefix [,pri:’fiks]前置式、前序式 前置式</p>
<p>preprocessor [pri:’prəusesə]前处理器 预处理器</p>
<p>prime [praim]质数 素数</p>
<p>primitive[‘primitiv] type 基本型别 (不同於 base class,基础类别)</p>
<p>print[print] 列印 打印</p>
<p>printer [‘printə]印表机 打印机</p>
<p>priority [prai’ɔrəti]优先权 (通常用於执行绪获得 CPU 时间的优先次序）</p>
<p>procedure [prə’si:dʒə]程序 过程</p>
<p>procedural [prə’si:dʒərəl]程序性的、程序式的 过程式的、过程化的</p>
<p>process [‘prəuses]行程 进程</p>
<p>profile [‘prəufail]评测 评测</p>
<p>profiler [‘prəufailə]效能（效率）评测器 效能（性能）评测器</p>
<p>programmer [‘prəuɡræmə]程式员 程序员</p>
<p>programming [‘prəuɡræmiŋ]编程、程式设计、程式化 编程</p>
<p>progress [‘prəuɡres bar [bɑ:]进度指示器 进度指示器</p>
<p>project [‘prɔdʒekt]专案 项目、工程</p>
<p>property [‘prɔpəti]属性</p>
<p>protocol [‘prəutəkɔl]协定 协议</p>
<p>pseudo [‘psju:dəu] code [kəud]假码、虚拟码、伪码 伪码</p>
<hr>
<p>qualified [‘kwɔlifaid]经过资格修饰（例如加上 scope 运算子） 限定</p>
<p>qualifier [‘kwɔlifaiə]资格修饰词、饰词 限定修饰词</p>
<p>quality [‘kwɔləti]品质 质量</p>
<p>queue [kju:]伫列 队列</p>
<hr>
<p>radian [‘reidiən] 径度 弧度</p>
<p>radio [‘reidiəu] button 圆钮 单选按钮</p>
<p>raise [reiz]引发（常用来表示发出一个 exception） 引起、引发</p>
<p>random [‘rændəm] number [‘nʌmbə]随机数、乱数 随机数</p>
<p>range [reindʒ]范围、区间（用於 STL 时） 范围、区间</p>
<p>rank [ræŋk]等级、分等（ref. C++Primer 3/e 9,15章） 等级</p>
<p>raw [rɔ:]生鲜的、未经处理的 未经处理的</p>
<p>record [ri’kɔ:d] 记录 记录</p>
<p>recordset [‘rekɔdset]记录集 记录集</p>
<p>recursive [ri’kə:siv] 递回 递归</p>
<p>re－direction [di’rekʃən] 重导向 重定向</p>
<p>refactoring 重构、重整 重构</p>
<p>refer [ri’fə:]取用 叁考</p>
<p>refer to 指向、指涉、指代</p>
<p>reference [‘refərəns] （C++ 中类似指标的东西，相当於 “化身”） 引用、叁考</p>
<p>址叁器, see pointer</p>
<p>register [‘redʒistə]暂存器 寄存器</p>
<p>reflection [re’flekʃən] 反射 反射、映像</p>
<p>relational [ri’leiʃənəl] database 关联式资料库 关系数据库</p>
<p>represent [,repri’zent]表述，表现 表述，表现</p>
<p>resolve [ri’zɔlv]决议（为算式中的符号名称寻找 解析</p>
<p>对应之宣告式的过程）</p>
<p>resolution [,rezə’lu:ʃən]决议程序、决议过程 解析过程</p>
<p>resolution 解析度 分辨率</p>
<p>restriction [ri’strikʃən]局限</p>
<p>return 传回、回返 返回</p>
<p>return type 回返型别 返回类型</p>
<p>return value 回返值 返回值</p>
<p>robust [rəu’bʌst] 强固、稳健 健壮</p>
<p>robustness [rəʊ’bʌstnɪs]强固性、稳健性 健壮性</p>
<p>routine [ru:’ti:n] 常式 例程</p>
<p>runtime [rʌn’taim] 执行期 运行期、运行时</p>
<hr>
<p>common [‘kɔmən] language [‘læŋɡwidʒ] runtime (CLR) 译为「通用语言执行层」</p>
<hr>
<p>rvalue 右值 右值</p>
<hr>
<p>save 储存 存储</p>
<p>schedule [‘skedʒu:əl]排程 调度</p>
<p>scheduler 排程器 调度程序</p>
<p>scheme [ski:m] 结构纲目、组织纲目</p>
<p>scroll [skrəul] bar 卷轴 滚动条</p>
<p>scope [skəup] 生存空间、生存范围、范畴、作用域 生存空间</p>
<p>scope operator [‘ɔpəreitə] 生存空间（范围决议）运算子 :: 生存空间操作符</p>
<p>scope resolution [,rezə’lu:ʃən ]operator</p>
<p>生存空间决议运算子 生存空间解析操作符</p>
<p>（与scope operator同）</p>
<p>screen [skri:n] 萤幕 屏幕</p>
<p>search [sə:tʃ]搜寻 查找</p>
<p>semantics [si’mæntiks] 语意 语义</p>
<p>sequential [si’kwenʃəl] container [kən’teinə]序列式容器 顺序式容器</p>
<p>（对应於 associative [ə’səuʃjətiv] container）</p>
<p>server 伺服器、伺服端 服务器、服务端</p>
<p>serial [‘siəriəl] 串行</p>
<p>serialization [,siəriəlai’zeiʃən] 次第读写,序列化 序列化</p>
<p>(serialize) [‘siəriəlaiz]</p>
<p>setter (相对於 getter) 设值函式</p>
<p>signal [‘siɡnəl]信号</p>
<p>signature [‘signətʃə]标记式、签名式、署名式 签名</p>
<p>slider [‘slaidə] 滚轴 滑块</p>
<p>slot [slɔt]条孔、槽 槽</p>
<p>smart[smɑ:t] pointer 灵巧指标、精灵指标 智能指针</p>
<p>snapshot [‘snæpʃɔt] 萤幕快照（图） 屏幕截图</p>
<p>specialization [,speʃəlai’zeiʃən] 特殊化、特殊化定义、特殊化宣告 特化</p>
<p>specification [,spesifi’keiʃən]规格 规格、规范</p>
<p>splitter [‘splitə]分裂视窗 切分窗口</p>
<p>software 软体 软件</p>
<p>solution [sə’lju:ʃən] 解法,解决方案 方案</p>
<p>source 原始码 源码、源代码</p>
<p>stack <a href="d">stæk</a>堆叠 栈</p>
<p>stack unwinding [ʌn’waindiʃ]堆叠辗转开解（此词用於 exception 主题） 栈辗转开解 *</p>
<p>standard [‘stændəd library [‘laibrəri] 标准程式库</p>
<p>standard template library 标准模板程式库</p>
<p>statement [‘steitmənt]述句 语句、声明</p>
<p>status [‘steitəs ]bar 状态列、状态栏 状态条</p>
<p>STL 见 standard [‘stændəd] template [‘templit] library [‘laibrəri]</p>
<p>stream [stri:m]资料流、串流 流</p>
<p>string [stri:m]字串 字符串</p>
<p>subroutine [sʌbru:’ti:n] 子程序调用序列</p>
<p>subscript [‘sʌbskript] operator 下标运算子 [ ] 下标操作符</p>
<p>subtype [‘sʌbtaip]子型别 子类型</p>
<p>support [sə’pɔ:t]支援 支持</p>
<p>suspend [sə’spend]虚悬 挂起</p>
<p>symbol [‘simbəl]符号 记号</p>
<p>syntax [‘sintæks]语法 语法</p>
<hr>
<p>tag [tæɡ] 标签 标记</p>
<p>索引标签,页签</p>
<p>target [‘tɑ:ɡit]标的（例 target pointer [‘pɔintə]：标的指标） 目标</p>
<p>task [tɑ:sk] switch [switʃ]工作切换 任务切换</p>
<p>template [‘templit]模板、范本 模板</p>
<p>template argument deduction [di’dʌkʃən]</p>
<p>模板引数推导 模板叁数推导</p>
<p>template explicit [ik’splisit] specialization [,speʃəlai’zeiʃən]</p>
<p>模板显式特化（版本） 模板显式特化</p>
<p>template parameter [pə’ræmitə] 模板叁数 模板叁数</p>
<p>temporary [‘tempərəri] object 暂时物件 临时对象</p>
<p>text[tekst] 文字 文本</p>
<p>text file [‘fail]程式本文档（放置程式原始码的档案） 文本文件</p>
<p>thread [θred] 执行绪 线程</p>
<p>thread safe [seif]多绪安全 多线程安全</p>
<p>throw [θrəu] 丢掷（常指发出一个 exception） 丢掷、引发</p>
<p>token [‘təukən]语汇单元 符号、标记</p>
<p>transaction [træn’zækʃən]交易 事务</p>
<p>transparent(ly) [træns’pærənt] 透通的(地)</p>
<p>traverse [‘trævəs]巡访（来回走动） 遍历</p>
<p>trigger [‘triɡə]触发 触发</p>
<p>type [taip]型别 类型</p>
<hr>
<p>UML unified [‘ju:nifaid] modeling [‘mɒdəlɪŋ] language [‘læŋgwɪdʒ] 统一建模语言</p>
<p>unary [‘ju:nəri] function 一元函式 单叁函数</p>
<p>unary operator [‘ɔpəreitə] 一元运算子 一元操作符</p>
<p>underflow [‘ʌndəfləu] 下限溢位（相对於 overflow） 下溢</p>
<p>unchecked [ʌn’tʃekt] exception 不可控异常(Java)</p>
<p>unqualified [,ʌn’kwɔlifaid]未经资格修饰（而直接取用）</p>
<p>unwinding [ʌn’waindiʃ] ref [ref]. stack [stæk] unwinding [ʌn’waindiʃ]</p>
<p>user 使用者、用户 用户</p>
<p>user interface 使用者介面、用户介面、人机介面 用户界面</p>
<hr>
<p>variable [‘vεəriəbl] 变数（相对於常数 const） 变量</p>
<p>vector [‘vektə]向量（一种容器，有点类似 array） 向量、矢量</p>
<p>viable [‘vaiəbl]可实行的、可行的 可行的</p>
<p>viable function 可行函式 可行函数</p>
<p>（从 candidate [‘kændideit] functions 中挑出者）</p>
<p>video [‘vidiəu]视讯 视频</p>
<p>view [vjuː] (1) 视图</p>
<p>(document/view) 文档/视图</p>
<p>view (2) 映件</p>
<p>virtual [‘və:tʃuəl] function 虚拟函式 虚函数</p>
<p>virtual machine [mə’ʃi:n] 虚拟机器 虚拟机</p>
<p>virtual memory [‘meməri]虚拟记忆体 虚内存, 虚存</p>
<p>volatile [‘vɔlətail]易挥发的、易变的</p>
<p>vowel [‘vauəl]母音 元音字母</p>
<hr>
<p>window [‘windəu] 视窗 窗口</p>
<p>window function 视窗函式 窗口函数</p>
<p>window procedure [prə’si:dʒə] 视窗函式 窗口过程</p>
<p>word [wə:d]字 单词</p>
<p>word processor [‘prəusesə] 文书处理器 字处理器</p>
<p>wrapper [‘ræpə] 外覆、外包 包装absence 缺席</p>
<hr>
<p>access [‘ækses]访问存取通路进入</p>
<p>achieve [ə’tʃi:v]实现完成</p>
<p>acquire [ə’kwaiə]获得</p>
<p>adjacency[ə’dʒeisənsi] list method [‘meθəd]邻接表表示法</p>
<p>adjacency matrix [‘meitriks] method 邻接矩阵表示法</p>
<p>algorithm [‘ælɡəriðəm] 算法</p>
<p>allocate [‘æləukeit] 留下分配</p>
<p>analog [‘ænəlɔɡ]推论</p>
<p>append [ə’pend] 添加</p>
<p>archive [‘ɑ:kaiv] 档案归档</p>
<p>array [ə’rei] 数组</p>
<p>assign [ə’sain]分配</p>
<p>assume [ə’sju:m] 假设</p>
<p>assurance [ə’ʃuərəns]确信信任</p>
<p>ATM(asynchronous [ei’siŋkrənəs] transfer [træns’fə:] mode [məud]) 异步传输模式</p>
<hr>
<p>b.. real [‘riəl] programs kernels [‘kə:nəlz] 实程序核心程序</p>
<p>b.. toy [tɔi] benchmark [‘bentʃmɑ:k] synthetic [sin’θetik] benchmark 简单基准程序复合基准程序</p>
<p>balance [‘bæləns] 平衡</p>
<p>bandwidth [‘bændwidθ]带宽</p>
<p>batch [bætʃ]一批一组</p>
<p>benchmark [‘bentʃmɑ:k]基准测试程序</p>
<p>best-fit algorithm [‘ælɡəriðəm] 最佳适应算法</p>
<p>BFS(breadth [bredθ] first search [sə:tʃ]) 广度优先搜索法</p>
<p>binary [‘bainəri]二进制</p>
<p>binary relation [ri’leiʃən]二元关系</p>
<p>binary tree 二叉树</p>
<p>bit series [‘siəri:z] 比特序列</p>
<p>black [blæk] -box white [hwait] -box 黑盒白盒</p>
<p>block miss [mis] 块失效</p>
<p>blocked [blɔkt] 阻塞(等待状态也称阻塞或封锁状态)</p>
<p>boundary [‘baundəri]界线分界</p>
<p>bridge [bridʒ]网桥</p>
<p>bubble [‘bʌbl] sort [sɔ:t]冒泡排序</p>
<hr>
<p>calculation [,kælkju:leiʃən] 计算</p>
<p>candidate [‘kændideit] key 候选键(辅键)</p>
<p>capability [,keipə’biləti] 能力才能</p>
<p>capacity [kə’pæsəti] 容量</p>
<p>cartesian [kɑ:’tiziən] product [‘prɔdəkt] 笛卡尔积</p>
<p>CASE(com.. aided sof.. engineering) 计算机辅助软件工程</p>
<p>CCP(communication [kə,mju:ni’keiʃən] control [kən’trəul] processor [‘prəusesə]) 通信控制处理机</p>
<p>cell [sel]信元</p>
<p>characteristic [,kærəktə’ristik]特征特性</p>
<p>circuit [‘sə:kit] switching [‘switʃiŋ] 线路交换</p>
<p>circular [‘sə:kjulə] wait [weit] 循环等待</p>
<p>CISC(complex [‘kɔmpleks] instruction [in’strʌkʃən] set computer [kəm’pju:tə]) 复杂指令集计算机</p>
<p>class 类</p>
<p>Client/Server 客户机/服务器</p>
<p>clock [klɔk] cycle [‘saikl] clock rate [reit] 时钟周期时钟频率</p>
<p>coaxial [‘kəu’æksəl] cable [‘keibl] 同轴电缆</p>
<p>cohesion [kəu’hi:ʒən] coupling [‘kʌpliŋ] 内聚耦合</p>
<p>coincidental [kəu,insi’dentəl] logical [‘lɔdʒikəl] procedural [prə’si:dʒərəl] functional [‘fʌŋkʃənl]偶然内聚逻辑内聚过程内聚功能内聚</p>
<p>combination [,kɔmbi’neiʃən]联合配合</p>
<p>common [‘kɔmən]公用的共同的</p>
<p>communication [kə,mju:ni’keiʃən] 通信</p>
<p>complement [‘kɔmplimənt] number 补码</p>
<p>component [kəm’pəunənt] 成分</p>
<p>concept [‘kɔnsept]概念观念</p>
<p>condition [kən’diʃən]情况状况</p>
<p>conform [kən’fɔ:m]符合</p>
<p>consist [kən’sist] 组成存在</p>
<p>constrain [kən’strein]约束</p>
<p>contain [kən’tein]包含</p>
<p>correspond [,kɔ:ri’spɔnd] (corresponding) 相符合(相应的一致的)</p>
<p>CPETT 计算机性能评价工具与技术</p>
<p>CPI 每条指令需要的周期数</p>
<p>CSMA/CD 带冲突检测的载波监听多路访问</p>
<p>cursor [‘kə:sə] 游标</p>
<p>cyclic [‘saiklik] redundancy [rɪ’dʌnd(ə)nsɪ] check [tʃek] 循环冗余校验</p>
<hr>
<p>database: integrity [in’teɡrəti] consistency [kən’sistənsi] restory 完整性一致性可恢复性</p>
<p>database: security [si’kjuəriti] efficiency [i’fiʃənsi] 数据库设计的目标: 安全性效率</p>
<p>deadlock [‘dedlɔk]: mutual [‘mju:tʃuəl] exclusion [ik’sklu:ʒən]死锁条件: 互斥</p>
<p>deadlock: circular [‘sə:kjulə] wait no preemption [pri’empʃən]死锁条件: 循环等待狗熊先权</p>
<p>decimal [‘desiməl] 十进位的</p>
<p>decision 决定判断</p>
<p>decomposition [,di:kɔmpə’ziʃən]双重的混合的</p>
<p>decrease [di’kri:s] 减少</p>
<p>definition [,defi’niʃən] 定义</p>
<p>definition phase [feiz] 定义阶段</p>
<p>demonstrate [‘demənstreit]证明</p>
<p>design[di’zain] phase [feiz] 设计阶段</p>
<p>determine [di’tə:min]限定</p>
<p>development phase 开发阶段</p>
<p>DFS(depth[depθ] first[fə:st]search[sə:tʃ]) 深度优先搜索法</p>
<p>diagram[‘daiəɡræm] 图表</p>
<p>Difference[‘difərəns] Manchester[‘mæntʃistə] 差分曼彻斯特</p>
<p>directed[di’rektid] graph[ɡræf] undirected[,ʌndi’rektid] graph 有向图无向图</p>
<p>distinguish[dis’tiŋɡwiʃ] 辩认区别</p>
<p>distributed[di’stribjutid] system 分布式系统</p>
<p>divide [di’vaid] division[di’viʒən] 分开除除法</p>
<p>divide union[‘ju:niən] intersection[,intə’sekʃən] difference 除并交差</p>
<p>document[‘dɔkjumənt] 文件文档</p>
<p>DQDB(distributed[di’stribjutid] queue[kju:] dual[‘dju:əl] bus) 分布队列双总线</p>
<p>draw [drɔ:]绘制</p>
<p>dual [‘dju:əl]二元的双的</p>
<p>dynamic[dai’næmik] design[di’zain] process[‘prəuses] 动态定义过程</p>
<hr>
<p>element [‘elimənt]元素要素</p>
<p>elevator[‘eliveitə] (scan[skæn]) algorithm [‘ælɡəriðəm]电梯算法又称扫描算法</p>
<p>encapsulation [in,-kæpsə’leiʃən] inheritance[in’heritəns]  封装(压缩) 继承(遗传)</p>
<p>encode [en’kəud]译成密码</p>
<p>entity [‘entəti] 实体</p>
<p>entity integrity [in’teɡrəti] rule [ru:l] 实体完整性规则</p>
<p>equal [‘i:kwəl]相等的</p>
<p>equation [i’kweiʒən] 方程式等式</p>
<p>estimate [‘estimeit] 估计判断</p>
<p>Ethernet [‘i:θə,net] 以太网</p>
<p>evolution [,i:və’lu:ʃən] 发展演化</p>
<p>exceed [ik’si:d]超过</p>
<p>exchange [iks’tʃeindʒ] sort 交换排序</p>
<p>exclusive [ik’sklu:siv] locks 排它锁(简记为X 锁)</p>
<p>execute [‘eksikju:t] 实现执行</p>
<p>exhibit [iɡ’zibit]表现展示陈列</p>
<p>existence [iɡ’zistəns]存在发生</p>
<p>expertise [,ekspə:’ti:z]专门技术</p>
<p>external [ik’stə:nəl] (internal [in’tə:nəl]) fragmentation [,fræɡmen’teiʃən] 外(内)碎片</p>
<hr>
<p>fault [fɔ:lt] page fault 中断过错页中断</p>
<p>FDDI(fiber [‘faibə]  distributed [di’stribjutid]  data interface) 光纤分布式数据接口</p>
<p>FDM(frequency [‘frikwənsi]division [di’viʒən] multiplexing [‘mʌltipleksiŋ]频分多路复用</p>
<p>fiber [‘faibə] optic [‘ɔptik] cable [‘keibl] 光缆</p>
<p>FIFO replacement [ri’pleismənt]policy [‘pɔlisi] 先进先出替换算法</p>
<p>figure [‘fiɡə]数字图形</p>
<p>final [‘fainl]最后的最终的</p>
<p>first normal form 第一范式</p>
<p>floppy [‘flɔpi] 活动盘片(软盘)</p>
<p>foreign key domain [dəu’mein] tuple [‘tʌpl] 外来键值域元组</p>
<p>form [fɔ:m]形状形式</p>
<p>formula [‘fɔ:mjulə]公式表达式</p>
<p>foundation [faun’deiʃən]基础根据基金</p>
<p>frame page frame 帧结构页结构</p>
<p>frequency [‘frikwənsi]频率</p>
<p>FTP 文件传送服务</p>
<p>function 函数</p>
<p>functionally dependent [di’pendənt]函数依赖</p>
<hr>
<p>gateway [‘ɡeitwei] 网间连接器</p>
<p>gather [‘ɡæðə] 聚集采集推测</p>
<p>general [‘dʒenərəl]-purose registers 通用寄存器</p>
<p>generate [‘dʒenəreit] 产生</p>
<p>grade [ɡreid]等级标准</p>
<p>graph [ɡrɑ:f, ɡræf] (graphic [‘ɡræfik]) 图</p>
<p>Gopher [‘gəʊfə]将用户的请求自动转换成</p>
<hr>
<p>FTP(File Transfer[træns’fə:] Protocol [‘prəʊtəkɒl])</p>
<hr>
<p>guarantee [,ɡærən’ti:]保证确定</p>
<hr>
<p>hash [hæʃ] table hash function collision [kə’liʒən] 哈希表哈希函数(散列函数) 碰撞</p>
<p>HDLC（High [haɪ] - level [‘lev(ə)l] Data Link Control）面向比特型数据链路层协议</p>
<p>hit rate 命中率</p>
<p>host [həust] 主计算机</p>
<p>host language statement [‘steitmənt]主语言语句</p>
<p>hypertext [‘haipətekst] 超级文本</p>
<hr>
<p>illustrate [‘iləstreit] 举例说明</p>
<p>independent [,indi’pendənt] 独立的</p>
<p>index [‘indeks]索引</p>
<p>indirect [,indi’rekt]间接的</p>
<p>influence [‘influəns]有影响的</p>
<p>initially [i’niʃəli] 最初开头</p>
<p>insertion [in’sə:ʃən] sort [sɔ:t] 插入排序</p>
<p>instruction [in’strʌkʃən] format [‘fɔ:mæt] 指令格式</p>
<p>instruction set 指令集</p>
<p>interface 接口分界面连接体</p>
<p>internal [in’tə:nəl] 内部的内在的</p>
<p>interrupt [,intə’rʌpt]中断</p>
<p>IPC 工业过程控制（Information Processing Center）；</p>
<p>ISAM VSAM 索引顺序存取方法虚拟存储存取方法</p>
<p>ISAM: （Index Sequential [sɪ’kwenʃ(ə)l] Access Mode [məʊd]）</p>
<p>VSAM: (Virtual [‘vɜːtjʊəl] Storage [‘stɔːrɪdʒ] Access Method)</p>
<hr>
<p>join natural [‘nætʃərəl] join semi [‘semɪ] join 连接自然连接半连接</p>
<p>judgment [‘dʒʌdʒmənt]判断</p>
<hr>
<p>kernel [‘kə:nəl] executive [iɡ’zekjutiv] supervisor [‘sju:pəvaizə] user 核心执行管理用户</p>
<p>kernels [‘kə:nəlz] 核心程序</p>
<p>key comparison [kəm’pærisən] 键(码)值比较</p>
<p>LAN(local area [‘εəriə] network) 局域网</p>
<hr>
<p>load 负载载入</p>
<p>logical [‘lɔdʒikəl] functional [‘fʌŋkʃənl]逻辑内聚功能内聚</p>
<p>longitudinal [lɔndʒi’tju:dinl]水平的</p>
<p>loop [lu:p] 圈环状</p>
<hr>
<p>maintain [mein’tein]维护保养供给</p>
<p>maintanence [meɪn’teɪnəns] phase [feiz] 维护(保养)阶段</p>
<p>MAN(metropolitan [ˌmetrə’pɒlɪtən] area network) 城域网</p>
<p>Manchester [‘mæntʃistə]曼彻斯特</p>
<p>map [mæp]地图映射图</p>
<p>matrix [‘meitriks]矩阵点阵</p>
<p>memory reference [‘refərəns] 存储器参量</p>
<p>message switching [‘switʃiŋ]报文交换</p>
<p>method 方法技巧</p>
<p>MFLOP(million [‘miljən] floating point operate [‘ɔpəreit] p s 每秒百万次浮点运算</p>
<p>minimum [‘miniməm] 最小的</p>
<p>MIPS(millions of instructions per second 每秒百万条指令</p>
<p>module [‘mɔdju:l]单位基准</p>
<p>monitor [‘mɔnitə] (model [‘mɔdəl] benchmark [‘bentʃmɑ:k] physcal[‘fɪzɪkl]) method 监视(模型基准物理)法</p>
<p>multilevel [,mʌlti’levəl] data flow [fləu] chart [tʃɑ:t] 分层数据流图</p>
<p>multiple [‘mʌltipl] 复合的多样的</p>
<p>multiple-term formula [‘fɔ:mjulə] 多项式</p>
<p>multiplexing [‘mʌltipleksiŋ] 多路复用技术</p>
<p>multiplication [,mʌltipli’keiʃən]乘法</p>
<p>mutual [‘mju:tʃuəl] exclusion [ik’sklu:ʒən] 互相排斥</p>
<p>non-key attributes [ə’tribju:t] 非码属性</p>
<p>null 零空</p>
<p>Nyquist 奈奎斯特</p>
<hr>
<p>object oriented [‘ɔ:rientid] 对象趋向的使适应的</p>
<p>object oriented analysis [ə’næləsis] 面向对象的分析</p>
<p>object oriented databases 面向对象数据库</p>
<p>object oriented design [di’zain] 面向对象的设计</p>
<p>object oriented implementation [,implimen’teiʃən]面向对象的实现</p>
<p>obtain [əb’tein] 获得</p>
<p>occupy [‘ɔkjupai] 占有居住于</p>
<p>occurrence [ə’kə:rəns] 事件</p>
<p>odd [ɔd] 奇数的 even[‘i:vən]偶数</p>
<p>one-dimensional [di’menʃənəl] array 一维数组</p>
<p>OODB(object oriented [‘ɔ:rientid] data base) 面向对象数据库</p>
<p>OOM(object oriented method) 面向对象的方法</p>
<p>oom: information object message class 信息对象消息类</p>
<p>oom: instance method message passing [‘pɑ:siŋ] 实例方法消息传递</p>
<p>open system 开放系统</p>
<p>operand [‘ɔpərænd] 操作数</p>
<p>optimized [‘ɔptimaizd] 尽量充分利用</p>
<p>optional [‘ɔpʃənəl]任选的非强制的</p>
<p>organize [‘ɔ:ɡənaiz]组织</p>
<p>overflow [,əuvə’fləu] 溢出</p>
<p>overlapping [,əuvə’læpiŋ] register [‘redʒistə] windows 重叠寄存器窗口</p>
<hr>
<p>packet [‘pækit] switching [‘switʃiŋ] 报文分组交换</p>
<p>page fault [fɔ:lt] 页面失效</p>
<p>page replacement [ri’pleismənt] algorithm [‘ælɡəriðəm] 页替换算法</p>
<p>paged segments[‘seɡmənt] 段页式管理</p>
<p>PCB(process control block) 进程控制块</p>
<p>peer entites 对等实体</p>
<p>perform 表演执行</p>
<p>period[‘piəriəd] 时期周期</p>
<p>permit [pə’mit] 许可准许</p>
<p>phase [feiz]阶段局面状态</p>
<p>physical [‘fizikəl] data link network layer 物理层数据链路层网络层</p>
<p>pipeline [‘paip,lain] 管道</p>
<p>platter [‘plætə] track [træk] cluster [‘klʌstə]面磁道簇</p>
<p>predicate [‘predikeit]谓语</p>
<p>preemption [pri’empʃən] 有优先权的</p>
<p>prefix [,pri:’fiks ](Polish [‘pɔliʃ] form) 前缀(波兰表达式)</p>
<p>preorder [pri:’ɔ:də] inorder postorder 前序中序后序</p>
<p>presentation [,prezən’teiʃən] application [,æpli’keiʃən] layer 表示层应用层</p>
<p>primary [‘praiməri] key attributes 主码属性</p>
<p>principle [‘prinsəpl] 原则方法</p>
<p>procedural [prə’si:dʒərəl] coincidental [kəu,insi’dentəl]过程内聚偶然内聚</p>
<p>process [‘prəuses] 过程加工处理</p>
<p>proficient [prəu’fiʃənt]精通</p>
<p>program debugging [di:’bʌɡiŋ] 程序排错</p>
<p>projection [prəu’dʒekʃən] selection [si’lekʃən] join [dʒɔin] 投影选择连接</p>
<p>proposition [,prɔpə’ziʃən]主张建议陈述</p>
<p>protocal [‘prəʊtəkɒl]协议</p>
<p>prototype [‘prəutətaip] 原型样板</p>
<p>prototyping method (model [‘mɔdəl]) 原型化周期(模型)</p>
<p>pseudo [‘psju:dəu] -code 伪码(又称程序设计语言PDL)</p>
<p>punctuation [,pʌŋktju’eiʃən] 标点</p>
<p>purpose [‘pə:pəs]目的意图</p>
<hr>
<p>quality [‘kwɔləti]质量品质</p>
<p>queue [kju:]队列</p>
<hr>
<p>ready blocked running 就绪阻塞(等待) 运行</p>
<p>real page number 实页数</p>
<p>real programs 实程序</p>
<p>redirected [ri:dɪ’rekt]重定向</p>
<p>redundency  [rɪ’dʌndənsi]冗余</p>
<p>reference [‘refərəns] integrity [in’teɡrəti] rule [ru:l]引用完整性规则</p>
<p>referred [ri’fəd] to as 把…..当作</p>
<p>regard [rɪ’ɡɑːd]关于</p>
<p>register [‘redʒistə] (registry [‘redʒistri]) 寄存器登记注册挂号</p>
<p>regularly [‘reɡjələli]定期的常规的</p>
<p>relation [ri’leiʃən] 关系</p>
<p>relay [‘ri:lei] 中继</p>
<p>reliability [ri,laiə’biləti] 可信赖的</p>
<p>repeater [ri’pi:tə] 中继器</p>
<p>replacement [ri’pleismənt] 替换</p>
<p>represent [,repri’zent]代表象征</p>
<p>request indication [,indi’keiʃən] response [ri’spɔns] confirm [kən’fə:m] 请求指示响应确认</p>
<p>resource [ri’sɔ:s] 资源</p>
<p>response [rɪ’spɒns]回答响应</p>
<p>RISC(reduced instruction set computer) 精简指令集计算机</p>
<p>robustness [rəʊ’bʌstnɪs] 健壮性</p>
<p>router [‘rautə] 路由器</p>
<hr>
<p>scheme [ski:m] 计划图表</p>
<p>sector [‘sektə] head cylinder [‘silində] 扇区磁头柱面</p>
<p>selection [si’lekʃən] sort [sɔ:t] 选择排序</p>
<p>semaphores[‘semə,fɔ:] 信号</p>
<p>sequence [‘si:kwəns] 序列顺序</p>
<p>Shanon 香农</p>
<p>share [ʃεə] locks 共享锁(简记为S 锁)</p>
<p>short [ʃɔ:t] path critical [‘kritikəl] path 最短路径关键路径</p>
<p>signal [‘siɡnəl] 信号</p>
<p>signal-to-noise ratio [‘reiʃiəu] 信噪比B/N</p>
<p>similar [‘similə] 相似的</p>
<p>SISD SIMD MISD MIMD * 指令流* 数据流</p>
<p>SMDS 交换多兆位数据服务</p>
<p>software development phase [feiz] 软件开发阶段</p>
<p>software engineering [,endʒi’niəriŋ] 软件工程</p>
<p>software portability [,pɔ:tə’biləti] 软件可移植性</p>
<p>software requirements [ri’kwaiəmənt] specification [,spesifi’keiʃən] 软件需求说明书</p>
<p>solve [sɔlv] 解决</p>
<p>sort [sɔ:t] 种类方式分类排序</p>
<p>spanning [‘spæniŋ] tree 跨越树(生成树)</p>
<p>specify [‘spesəfai] 指定说明</p>
<p>speedup [‘spi:dʌp] 加速比</p>
<p>SSTF(shortest [‘ʃɔ:tist] -seek [si:k] -time-first) 最短寻道时间优先(磁盘调度算法)</p>
<p>stack [stæk] strategy [‘strætidʒi] non-stack strategy 堆栈型非堆栈型</p>
<p>starvation [stɑ:’veiʃən] 饥饿匮乏</p>
<p>statement [‘steitmənt]陈述</p>
<p>storage [‘stɔridʒ] 贮藏库</p>
<p>store procedures [prə’si:dʒə] 存储过程</p>
<p>strategy [‘strætidʒi] 战略兵法计划</p>
<p>strict [strikt] 严密的</p>
<p>styles [stails] 文体风格</p>
<p>subgroup [‘sʌbɡru:p] 循环的</p>
<p>subset[‘sʌbset] 子集子设备</p>
<p>superclass subclass abstract class 超类子类抽象类</p>
<p>suppose [sə’pəuz] 假定</p>
<p>symbolic [sim’bɔlik] 象征的符号的</p>
<p>synthetic [sin’θetik] benchmark [‘bentʃmɑ:k]复合基准程序</p>
<p>system testing 系统测试</p>
<p>Systolic [si’stɔlik] 脉动阵列</p>
<hr>
<p>table 表表格桌子</p>
<p>TDM(time division [di’viʒən] multiplexing [‘mʌltipleksiŋ]) 时分多路复用</p>
<p>technology [tek’nɔlədʒi] 工艺技术</p>
<p>terminal [‘tə:minəl] 终端</p>
<p>testing phase [feiz] 测试阶段</p>
<p>theta[‘θi:tə] select [si’lekt] project theta join [dʒɔin] θ选择投影θ连接</p>
<p>time complexity [kəm’pleksiti] 时间复杂度</p>
<p>timestamping [‘taɪmstæmpɪŋ]时标技术</p>
<p>Token [‘təukən] Bus 令牌总线</p>
<p>Token Ring [riŋ] 令牌环</p>
<p>toy [tɔi] benchmark [‘bentʃmɑ:k] 简单基准程序</p>
<p>transaction [træn’zækʃən] 事务记录</p>
<p>transmit  [træns’mɪt]传送</p>
<p>transport [træns’pɔ:t] layer [‘leiə] session [‘seʃən] layer 传输层会话层</p>
<p>traversal [‘trævə:səl] method 遍历方法</p>
<p>triggers [‘trigəz] store [stɔ:] procedures[prə’si:dʒə] 触发器存储过程</p>
<p>(ORACLE 系统)</p>
<hr>
<p>underflow 下溢</p>
<p>unique [ju:’ni:k] 唯一的</p>
<p>unit [‘ju:nit] system acceptance [ək’septəns] testing 单元测试系统测试确认测试</p>
<p>universe [‘ju:nivə:s] 宇宙全世界</p>
<p>update [ʌp’deit] 更新</p>
<hr>
<p>value [‘vælju:] [数]值</p>
<p>variable [‘vεəriəbl] 变量</p>
<p>vertical [‘və:tikəl] 垂直的</p>
<p>vertice [‘və:tisi:z] edge [edʒ] 顶点(结点) 边</p>
<p>via [‘vaiə] 经过</p>
<p>virtual [‘və:tʃuəl] memory [‘meməri] system 虚拟存储系统</p>
<hr>
<p>WAN(wide area [‘εəriə] network) 广域网</p>
<p>waterfall [‘wɔ:təfɔ:l] model [‘mɔdəl] 瀑布模型</p>
<p>white [hwait] noise [nɔiz] 白噪声</p>
<p>write-back(copy-back) 写回法</p>
<p>write-through(store-through) [stɔ:] 写直达法</p>
<p>WWW(world [wə:ld] wide [waid] web [web]) 万维网</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
  </entry>
  <entry>
    <title>计算机英语1500词</title>
    <url>/blog.githup.io/2020/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%8B%B1%E8%AF%AD1500%E8%AF%8D/</url>
    <content><![CDATA[<ol>
<li>file n. 文件；v. 保存文件 </li>
<li>command n. 命令，指令 </li>
<li>use v. 使用，用途 </li>
<li>program n. 程序 </li>
<li>line n. (数据，程序)行，线路 </li>
<li>if conj. 如果 </li>
<li>display vt. 显示，显示器 </li>
<li>set v. 设置，n. 集合 </li>
<li>key n. 键，关键字，关键码 </li>
<li>list n. 列表，显示，v. 打印 </li>
<li>by prep. 凭，靠，沿 </li>
<li>press v. 按，压 </li>
<li>with prep. 用，与，随着 </li>
<li>format n. 格式 </li>
<li>change v. 更换，改变，变动 </li>
<li>cursor n. 光标 </li>
<li>directory n. 目录，索引簿 </li>
<li>from prep. 从，来自，以来 </li>
<li>menu n. 菜单，目录 </li>
<li>option n. 任选，选择，可选项 </li>
<li>character n. 字符，符号，特性 </li>
<li>current n. 电流 </li>
<li>type n. 型，类型；v. 打印 </li>
<li>screen n. 屏幕，屏；v. 屏蔽 </li>
<li>specify v. 指定，规定，确定 </li>
<li>move v. 移动 </li>
<li>disk n. 盘，磁盘 </li>
<li>text n. 正文，文本 </li>
<li>drive v. 驱动；n. 驱动器 </li>
<li>see v. 看，看出，查看 </li>
<li>name n. 名，名称；vt. 命名 </li>
<li>record n. 记录 </li>
<li>box n. 箱，匣，(逻辑)框 </li>
<li>database n. 数据库 </li>
<li>help v. &amp; n. 帮助 </li>
<li>memory n. 记忆存储，存储器 </li>
<li>which pron. 哪个，a. 那一个 </li>
<li>all a. 全，全部；ad. 完全 </li>
<li>on ad. 接通，导电，开 </li>
<li>copy n. 复制，v. 拷贝 </li>
<li>shell n. 壳，外壳 </li>
<li>delete vt. 删除，删去，作废 </li>
<li>enter v. 键入，送入 </li>
<li>margin n. 余量，边缘，边际 </li>
<li>mark n. 标记；vt. 加标记 </li>
<li>also ad. &amp; conj. 也，亦，还 </li>
<li>do v. 做，干；n. 循环 </li>
<li>information n. 信息，情报 </li>
<li>choose v. 挑选，选择，选定 </li>
<li>select vt. 选择 </li>
<li>group n. 组，群 </li>
<li>first a. &amp; ad. &amp; n. 第一，首先 </li>
<li>field n. 字段，域，栏，场 </li>
<li>procedure n. 过程，程序，工序 </li>
<li>print v. 打印，印刷 </li>
<li>return v. 返回，回送 </li>
<li>number n. 数字，号码；vt. 编号 </li>
<li>selected a. 精选的 </li>
<li>want v. 需要，应该，缺少 </li>
<li>window n. 窗口 </li>
<li>message n. 信息，消息，电文 </li>
<li>dialog n. &amp; vt. 对话 </li>
<li>example n. 例子，实例 </li>
<li>create vt. 创立，建立 </li>
<li>insert vt. 插入 </li>
<li>related a. 相关的 </li>
<li>item n. 项，项目，条款 </li>
<li>edit vt. 编辑，编排，编篡 </li>
<li>marked a. 有记号的 </li>
<li>area n. (区)域，面积，方面 </li>
<li>parameter n. 参数，参变量 </li>
<li>then ad. &amp; conj. 那时，则 </li>
<li>variable a. 可变的；n. 变量 </li>
<li>tab n. 制表键 </li>
<li>up ad. 上，向上，a. 高的 </li>
<li>string n. 行，字符串 </li>
<li>each a. &amp; ad. 各(自)，每个 </li>
<li>active a. 激活的，活动的 </li>
<li>topic n. 题目，论题 </li>
<li>start v. 起动，开始，启动 </li>
<li>mode n. 态，方式，模 </li>
<li>selection n. 选择 </li>
<li>function n. 函数，功能，操作 </li>
<li>word n. 字(词)，单词 </li>
<li>make vt. 制造，形成，接通 </li>
<li>right a. 右边的，正确的 </li>
<li>value n. 值 </li>
<li>button n. 按钮 </li>
<li>index n. 索引，变址，指数 </li>
<li>without prep. 没有，在…以外 </li>
<li>appear vi. 出现，显现，好像 </li>
<li>left a. &amp; n. 左边(的) </li>
<li>save v. 保存 </li>
<li>next n. 下一次，a. 其次 </li>
<li>off ad. (设备)关着，脱离 </li>
<li>following a. 下列的，以下的 </li>
<li>control v. 控制，支配，管理 </li>
<li>only a. 唯一的，ad. 仅仅 </li>
<li>user n. 用户 </li>
<li>end n. 结束，终点，端点 </li>
<li>system n. 系统 </li>
<li>contain vt. 包含，包括 </li>
<li>time n. 时间；vt. 计时 </li>
<li>letter n. 字母，信 </li>
<li>data n. 数据 </li>
<li>setting n. 设置，调整 </li>
<li>desire v. &amp; n. 期望 </li>
<li>position n. 位置；vt. 定位 </li>
<li>down ad. 落下，降低，减少 </li>
<li>task n. 任务；v. 派给…任务 </li>
<li>view n. &amp; v. 视图，景象 </li>
<li>switch n. &amp; v. 开关，转换，切换 </li>
<li>include vt. 包括，包含 </li>
<li>get v. 得到，获得，取 </li>
<li>default v. 缺省，预置，约定 </li>
<li>structure n. 结构，构造，构件 </li>
<li>into prep. 向内，进入 </li>
<li>path n. 路径，通路，轨道 </li>
<li>blank n. 空白，间隔 </li>
<li>open v. 打开，开启，断开 </li>
<li>add v. &amp; n. 加，增加，添 </li>
<li>enable vt. 启动，恢复正常操作 </li>
<li>operation n. 操作，运算，动作 </li>
<li>erase v. 擦除，取消，删除 </li>
<li>filename n. 文件名 </li>
<li>search v. 检索，查询，搜索 </li>
<li>another a. 另一个，别的 </li>
<li>last a. &amp; n. 最后(的) </li>
<li>column n. 列，柱，栏 </li>
<li>after prep. &amp; ad. 以后，后面 </li>
<li>prompt n. &amp; v. 提示 </li>
<li>two n. &amp; a. 二，两，双 </li>
<li>execute v. 实行，实施 </li>
<li>about ad. 关于，大约，附近 </li>
<li>escape v. 逃避，逸出，换码 </li>
<li>error n. 错误，误差，差错 </li>
<li>currently ad. 目前，现在 </li>
<li>extension n. 扩充，延伸 </li>
<li>same a. 同样的，相同的 </li>
<li>status n. 状态，态，状况 </li>
<li>run v. 运行，运转，操作 </li>
<li>argument n. 变元，自变量 </li>
<li>statement n. 语句，陈述，命题 </li>
<li>shift v. 转义，换档，移位 </li>
<li>store n. &amp; vt. 存储，存储器 </li>
<li>scroll vt. 上滚(卷)；n. 纸卷 </li>
<li>replace vt. 替换，置换，代换 </li>
<li>macro n. 宏，宏功能，宏指令 </li>
<li>page n. 页面，页，版面 </li>
<li>quit v. 退出，结束 </li>
<li>define vt. 定义，规定，分辨 </li>
<li>reference n. &amp; a. 参考；参考的 </li>
<li>other a. 别的，另外的 </li>
<li>while conj. 当…的时候 </li>
<li>pressing n. &amp; a. 压制；紧急的 </li>
<li>restore vt. 恢复，复原 </li>
<li>top n. 顶，尖端 </li>
<li>how ad. 如何，怎样，多么 </li>
<li>color n. 颜色，色彩，(彩)色 </li>
<li>allow v. 允许，容许 </li>
<li>block n. (字，信息，数据)块 </li>
<li>decimal n. &amp; a. 十进制；十进制的 </li>
<li>main a. 主要的 </li>
<li>definition n. 定义，确实，清晰度 </li>
<li>between prep. 在…之间，中间 </li>
<li>optional a. 任选的，可选的 </li>
<li>date n. 日期 </li>
<li>remove v. 除去，移动 </li>
<li>arrow n. 箭头，指针 </li>
<li>label n. 标签，标号，标识符 </li>
<li>within prep. 在…以内 </li>
<li>issue v. 发行，出版，流出 </li>
<li>different a. 不同的，各种各样的 </li>
<li>available a. 可用的 </li>
<li>returned a. 退回的 </li>
<li>associate v. 相联，联想，关联 </li>
<li>attribute n. 属性，标志，表征 </li>
<li>dos 磁盘操作系统 </li>
<li>before prep. 以前，前，先 </li>
<li>order n. &amp; vt. 指令，次序；排序 </li>
<li>modify vt. 修改，改变，变址 </li>
<li>array n. 数组，阵列 </li>
<li>mouse n. 鼠标器 </li>
<li>note n. 注解，注释 </li>
<li>locate vt. 定位 </li>
<li>video n. 视频，电视 </li>
<li>printer n. 打印机，印刷机 </li>
<li>bar n. 条，杆，棒 </li>
<li>bottom n. &amp; a. 底，基础；底下的 </li>
<li>carriage n. 滑架，托架 </li>
<li>content n. 含量，容量，内容 </li>
<li>either a. &amp; pron. 任何一个，各 </li>
<li>ok ad. &amp; a. 对，好；全对 </li>
<li>space n. 空格键，空间 </li>
<li>editor n. 编辑程序 </li>
<li>exist vi. 存在，生存，有 </li>
<li>scope n. 范围，显示器 </li>
<li>paragraph n. 段(落)，节，短讯 </li>
<li>multi (词头)多 </li>
<li>clear v. 清除，弄干净 </li>
<li>exit n. &amp; vi. 出口；退出 </li>
<li>report vt. &amp; n. 报告，报表 </li>
<li>execution n. 执行 </li>
<li>backup n. 备份，后备，后援 </li>
<li>version n. 版本 </li>
<li>find v. 寻找，发现 </li>
<li>pointer n. 指针，指示字 </li>
<li>subset n. 子集，子设备 </li>
<li>keyboard n. 键盘 </li>
<li>full a. &amp; ad. &amp; n. 全(的)，满 </li>
<li>check v. 校对，栓查，核算 </li>
<li>should v. &amp; aux. 应当，该 </li>
<li>single a. &amp; n. 单个的；一个，单 </li>
<li>positioning n. 定位 </li>
<li>provide v. 提供 </li>
<li>title n. 题目，标题 </li>
<li>expression n. 表达式 </li>
<li>through prep. &amp; ad. 通过，直通 </li>
<li>toggle n. &amp; v. 触发器；系紧 </li>
<li>code n. 码，代码，编码 </li>
<li>such a. &amp; pron. 这样的，如此 </li>
<li>beginning n. 起点，初 </li>
<li>guide n. 向导，指南，入门 </li>
<li>tree n. 树，语法树 </li>
<li>environment n. 环境 </li>
<li>but 但是，可是，除非，不过 </li>
<li>device n. 设备，器件，装置 </li>
<li>highlight n. 增强亮度，提示区 </li>
<li>call v. 调用，访问，呼叫 </li>
<li>continue v. 连续，继续 </li>
<li>indicate vt. 指示，表示 </li>
<li>until prep. 到…为止，直到 </li>
<li>begin v. 开始，着手，开端 </li>
<li>place vt. 放，位，地点 </li>
<li>rename vt. 更名，改名 </li>
<li>swap v. 交换，调动 </li>
<li>work n. 工作 </li>
<li>remain vi. 剩下，留下，仍然 </li>
<li>close v. &amp; a. 关闭，闭合；紧密的 </li>
<li>combination n. 结合，组合 </li>
<li>profile n. 简要，剖面，概貌 </li>
<li>unless conj. 除非 </li>
<li>so pron. &amp; conj. 如此，这样 </li>
<li>except prep. 除…之外，除非 </li>
<li>turn v. &amp; n. 转，转动；圈，匝 </li>
<li>back n. 背面，反向，底座 </li>
<li>sure a. &amp; ad. 确实的；的确 </li>
<li>section n. 节，段，区域 </li>
<li>follow v. 跟随，跟踪 </li>
<li>split v. 分开，分离 </li>
<li>need v. 必须，需要 </li>
<li>access n. 存取，选取，接近 </li>
<li>additional a. 附加的，辅助的 </li>
<li>cancel v. 删除，取消，作废 </li>
<li>document n. 文献，资料，文件 </li>
<li>case n. 情况，场合 </li>
<li>numeric n. &amp; a. 数字的，分数 </li>
<li>go vi. 运行，达到 </li>
<li>load n. &amp; v. 装入，负载，寄存 </li>
<li>try n. (尝)试，试验 </li>
<li>size n. 尺寸，大小，容量 </li>
<li>entire a. &amp; n. 完全的；总体 </li>
<li>leave v. 离开，留下 </li>
<li>history n. 历史 </li>
<li>second n. &amp; a. 秒，第二(的) </li>
<li>reflow v. &amp; n. 回流，逆流 </li>
<li>output n. 输出，输出设备 </li>
<li>out n. &amp; a. 输入，在外 </li>
<li>both a. &amp; ad. 两，双，都 </li>
<li>install vt. 安装 </li>
<li>source n. 源，电源，源点 </li>
<li>way n. 路线，途径，状态 </li>
<li>assign vt. 赋值，指定，分派 </li>
<li>support vt. 支援，支持，配套 </li>
<li>specific a. 特殊的，具体的 </li>
<li>join v. &amp; n. 连接，并(运算) </li>
<li>expand v. 扩充，扩展，展开 </li>
<li>like a. 类似的，同样的 </li>
<li>diskette n. 软磁盘，软盘片 </li>
<li>skip v. 跳跃(定位)，跳过 </li>
<li>application n. 应用 </li>
<li>confirmation n. 认可 </li>
<li>whether conj. 无论，不管 </li>
<li>hold v. 保持 </li>
<li>click n. “卡搭”声，插销 </li>
<li>write v. 写，存入 </li>
<li>byte n. (二进制的)字节 </li>
<li>abbreviate vt. 缩写，省略 </li>
<li>show v. 显示，呈现，出示 </li>
<li>otherwise ad. &amp; a. 另外 </li>
<li>working n. 工作，操作，作业 </li>
<li>delimiter n. 定界符，分界符 </li>
<li>location n. 定位，(存储器)单元 </li>
<li>perform v. 执行，完成 </li>
<li>graphic n. &amp; a. 图形；图形的 </li>
<li>read v. 读，读阅 </li>
<li>confirm vt. 证实，确认 </li>
<li>sort v. 分类，排序 </li>
<li>clause n. 条款，项目，子句 </li>
<li>once ad. &amp; n. 只一次，一旦 </li>
<li>however conj. 然而，可是 </li>
<li>extend v. 扩充 </li>
<li>look v. 看，查看 </li>
<li>starting a. 起始的 </li>
<li>now ad. &amp; n. 此刻，现在 </li>
<li>original n. &amp; a. 原文；原(初)始的 </li>
<li>correspond vi. 通信(联系) </li>
<li>property n. 性(质)，特征 </li>
<li>several a. &amp; n. 若干个，几个 </li>
<li>learn v. 学习，训练 </li>
<li>cause n. 原因，理由 </li>
<li>bracket n. (方)括号，等级 </li>
<li>omit vt. 省略，删去，遗漏 </li>
<li>running a. 运行着的，游动的 </li>
<li>sub-directory n. 子目录 </li>
<li>edge n. 棱，边，边缘，界限 </li>
<li>form n. 格式，表格，方式 </li>
<li>instruction n. 指令，指导 </li>
<li>ascii n. 美国信息交换标准码 </li>
<li>below a. &amp; prep. 下列的；低于 </li>
<li>standard n. 标准 </li>
<li>occurrence n. 出现，发生 </li>
<li>lock n. &amp; v. 锁，封闭；自动跟踪 </li>
<li>append vt. 附加，增补 </li>
<li>destination n. 目的地，接收站 </li>
<li>password n. 口令，保密字 </li>
<li>point n. 点，小数点，句号 </li>
<li>variety n. 变化，种类，品种 </li>
<li>many a. &amp; n. 许多，多数 </li>
<li>buffer n. 缓冲器 </li>
<li>useful a. 有用的 </li>
<li>object n. 对象，目标，物体 </li>
<li>again ad. 再，又，重新，也 </li>
<li>operating a. 操作的，控制的 </li>
<li>carry v. 进位，带 </li>
<li>update v. 更新，修改，校正 </li>
<li>moving n. &amp; a. 活动的，自动的 </li>
<li>coprocessor n. 协同处理器 </li>
<li>overlay v. 覆盖，重叠 </li>
<li>practice n. 实习，实践 </li>
<li>navigation n. 导航 </li>
<li>automatically ad. 自动地，机械地 </li>
<li>total n. &amp; v. 总数；总计 </li>
<li>previous a. 早先的，上述的 </li>
<li>software n. 软件 </li>
<li>shortcut n. 近路，捷径 </li>
<li>long a. 长的，远的 </li>
<li>unique a. 唯一的，独特的 </li>
<li>part n. 部分，零件 </li>
<li>updated a. 适时的，更新的 </li>
<li>internal a. 内部的 </li>
<li>fill v. 填充 </li>
<li>basic n. &amp; a. 基本；基本的 </li>
<li>math n. 数学 </li>
<li>since prep. 自从…以来 </li>
<li>determine v. 确定 </li>
<li>making n. 制造，构造 </li>
<li>center n. 中心，中央 </li>
<li>already ad. 已经，早已 </li>
<li>keyword n. 关键字(词) </li>
<li>action n. 操作，运算 </li>
<li>condition n. 条件，情况；vt. 调节 </li>
<li>quick a. &amp; ad. 快速的，灵敏的 </li>
<li>assigned a. 指定的，赋值的 </li>
<li>give vt. 给出，赋予，发生 </li>
<li>large a. (巨)大的，大量的 </li>
<li>chapter n. 章，段 </li>
<li>computer n. 计算机 </li>
<li>complete v. &amp; a. 完成；完整的 </li>
<li>past a. 过去的，结束的 </li>
<li>match v. 比较，匹配，符合 </li>
<li>recover v. 恢复，回收 </li>
<li>always ad. 总是，一直，始终 </li>
<li>require v. 需要，要求 </li>
<li>opening n. 打开，断路，孔 </li>
<li>network n. &amp; vt. 网络；联网 </li>
<li>sign n. 符号，信号，记号 </li>
<li>release vt. &amp; n. 释放，核发，版 </li>
<li>three a. &amp; n. 三(的) </li>
<li>recall vt. 撤消，复活，检索 </li>
<li>deletion n. 删去(部分)，删除 </li>
<li>fixed a. 固定的，不变的 </li>
<li>amount vt. &amp; n. 总计；合计 </li>
<li>alias n. 别名，代号，标记 </li>
<li>quote n. &amp; v. 引号；加引号 </li>
<li>correct a. &amp; vt. 正确的；改正 </li>
<li>else ad. &amp; conj. 否则，此外 </li>
<li>maximum n. &amp; a. 最大(的)，最高 </li>
<li>under prep. 在…下面(之下) </li>
<li>take v. 取，拿 </li>
<li>switching n. 开关，转接，交换 </li>
<li>element n. 元件，元素，码元 </li>
<li>modification n. 改变，修改 </li>
<li>modified a. 修改的，变更的 </li>
<li>input n. 输入，输入设备 </li>
<li>uppercase n. 大写字母 </li>
<li>plus prep. 加，加上，外加 </li>
<li>found v. 建立，创办 </li>
<li>debug vt. 调试 </li>
<li>force v. &amp; n. 强制；压力，强度 </li>
<li>lowercase n. 下档，小写体 </li>
<li>just ad. 恰好 </li>
<li>undo vt. 取消，废除 </li>
<li>environ vt. 围绕，包围 </li>
<li>why ad. 为什么 </li>
<li>temporary a. 暂时的，临时的 </li>
<li>put v. 存放(记录)，放置 </li>
<li>instead ad. (来)代替，当作 </li>
<li>encounter v. &amp; n. 遇到，碰到 </li>
<li>across prep. 交叉，越过 </li>
<li>matching n. 匹配，调整 </li>
<li>wildcard n. 通配符 </li>
<li>spill v. 漏出，溢出，漏失 </li>
<li>level n. 水平，级，层次 </li>
<li>browse v. 浏览 </li>
<li>speech n. 说话，言语，语音 </li>
<li>occur vi. 发生，出现，存在 </li>
<li>memo n. 备忘录 </li>
<li>prior a. 先验的，优先的 </li>
<li>loaded a. 有负载的 </li>
<li>length n. (字，记录，块)长度 </li>
<li>round v. 舍入，四舍五入 </li>
<li>variant n. &amp; a. 变体，易变的 </li>
<li>floppy n. 软磁盘 </li>
<li>machine n. 机器，计算机 </li>
<li>square n. &amp; a. 正方形；方形的 </li>
<li>supply vt. &amp; n. 电源，供给 </li>
<li>home n. &amp; a. 家，出发点 </li>
<li>normal a. &amp; n. 正常，标准 </li>
<li>onto prep. 向…，到…上 </li>
<li>during prep. 在…期间 </li>
<li>module n. 模块(程序设计) </li>
<li>monochrome n. 单色 </li>
<li>assistance n. 辅助设备，帮助 </li>
<li>tell n. 讲，说，教，计算 </li>
<li>library n. (程序…)库，图书馆 </li>
<li>demonstration n. (公开)表演，示范 </li>
<li>stack n. 栈，堆栈，存储栈 </li>
<li>even a. &amp; ad. 偶数的；甚至 </li>
<li>evaluate v. 估计，估算，求值 </li>
<li>times n. 次数 </li>
<li>previously ad. 以前，预先 </li>
<li>directly ad. 直接地，立即 </li>
<li>logical a. 逻辑的，逻辑”或” </li>
<li>template n. 标准框，样板，模板 </li>
<li>calling n. 呼叫，调用，调入 </li>
<li>later a. 更后的，后面的 </li>
<li>driver n. 驱动器，驱动程序 </li>
<li>therefore ad. &amp; conj. 因此，所以 </li>
<li>saving a. 保存的 </li>
<li>detail n. 元件，零件，细节 </li>
<li>linker n. 连接程序 </li>
<li>loop n. 圈，环；(程序)循环，回路 </li>
<li>process vt. 处理，进程，加工 </li>
<li>scheme n. 方案，计划，图 </li>
<li>every a. 每个，全体，所有的 </li>
<li>refer v. 访问，引用，涉及 </li>
<li>possible a. 可能的，潜在的 </li>
<li>above a. 在…之上，大于 </li>
<li>overview n. 综述，概要 </li>
<li>result n. 结果 </li>
<li>syntax n. 语法，文法，句法 </li>
<li>abbreviation n. 缩短，省略，简称 </li>
<li>bios n. 基本输入/输出系统 </li>
<li>hidden a. 隐藏的，秘密的 </li>
<li>null n. &amp; a. 空(的)，零(的) </li>
<li>send v. 发送 </li>
<li>private a. 专用的，私人的 </li>
<li>hard a. 硬的 </li>
<li>hardware n. 硬件 </li>
<li>say v. 说，显示，假定 </li>
<li>equal vt. &amp; n. 等于，相等；等号 </li>
<li>pack n. 压缩，包裹 </li>
<li>minus a. &amp; n. 负的；负数，减 </li>
<li>alternate a. 交替的，备用的 </li>
<li>collapse v. 崩溃，破裂 </li>
<li>corner n. 角，角落，转换 </li>
<li>present a. &amp; v. 现行的；提供 </li>
<li>interpreter n. 解释程序，翻译机 </li>
<li>advance v. &amp; n. 进步，提高；进展 </li>
<li>forward a. 正向的 </li>
<li>fast a. &amp; ad. 快速的 </li>
<li>special a. 专用的，特殊的 </li>
<li>slash n. 斜线 </li>
<li>utility n. &amp; a. 实用程序；实用性 </li>
<li>regardless a. 不注意的，不考虑的 </li>
<li>disable vt. 禁止，停用 </li>
<li>compatible a. 可兼容的，可共存的 </li>
<li>depend vi. 随…而定，取决于 </li>
<li>empty a. 空，零，未占用 </li>
<li>alphabetical a. 字母(表)的，abc的 </li>
<li>branch n. 分支，支线；v. 转换 </li>
<li>resume v. 重(新)开(始) </li>
<li>multiple a. 多次的，复杂的 </li>
<li>monitor n. 监视器，监督程序 </li>
<li>configuration n. 配置 </li>
<li>replacement n. 替换，置换，更新 </li>
<li>required a. 需要的 </li>
<li>macros n. 宏命令(指令) </li>
<li>table n. 表 </li>
<li>loss n. 损耗，损失 </li>
<li>batch n. 批，批量，成批 </li>
<li>exact a. 正确的 </li>
<li>aboveboard ad. &amp; a. 照直，公开的 </li>
<li>activate vt. &amp; n. 使激活，驱动 </li>
<li>around ad. &amp; prep. 周围，围绕 </li>
<li>slow a. &amp; ad. 慢速的 </li>
<li>floating a. 浮动的，浮点的 </li>
<li>refresh v. 刷新，更新，再生 </li>
<li>stop v. 停止，停机 </li>
<li>pass v. 传送，传递，遍(数) </li>
<li>public a. 公用的，公共的 </li>
<li>eject n. 弹出 </li>
<li>ignore vt. 不管，忽略不计 </li>
<li>share v. 共享，共用 </li>
<li>sequence n. 顺序，时序，序列 </li>
<li>consist vi. 符合，包括 </li>
<li>step n. 步，步骤，步长，档 </li>
<li>double a. 两倍的，成双的 </li>
<li>come vi. 来，到，出现 </li>
<li>lower a. 下部的，低级的 </li>
<li>describe vt. 描述，沿…运行 </li>
<li>count v. 计数，计算 </li>
<li>pop v. 上托，弹出(栈) </li>
<li>valid a. 有效的 </li>
<li>suspend v. 中止，暂停，挂起 </li>
<li>enhance vt. 增强，放大，夸张 </li>
<li>separate v. &amp; a. 分隔，分离，各自的 </li>
<li>echo n. 回波，反射波 </li>
<li>necessary a. 必要的，必然的 </li>
<li>greater than 大于 </li>
<li>able a. 能…的，有能力的 </li>
<li>marking n. 标记，记号，传号 </li>
<li>ask v. 请求，需要 </li>
<li>term n. 项，条款，术语 </li>
<li>bring v. 引起，产生，拿来 </li>
<li>warning n. &amp; a. 报警，预告 </li>
<li>less a. &amp; ad. 更小，更少 </li>
<li>whose pron. 谁的 </li>
<li>comment n. &amp; vi. 注解，注释 </li>
<li>effect n. 效率，作用，效能 </li>
<li>expanding a. 扩展的，扩充的 </li>
<li>on-line a. 联机的 </li>
<li>reorder v. (按序)排列，排序 </li>
<li>direct a. 直接的 </li>
<li>enclose vt. 封闭，密封，围住，包装 </li>
<li>reset vt. 复位，置”0” </li>
<li>various a. 不同的，各种各样的 </li>
<li>paper n. 纸，文件，论文 </li>
<li>prevent v. 防止，预防 </li>
<li>side n. (旁)边，面，侧(面) </li>
<li>push v. 推，按，压，进(栈) </li>
<li>programming n. 程序设计，编程序 </li>
<li>upper a. 上的，上部的 </li>
<li>row n. 行 </li>
<li>pressed a. 加压的，压缩的 </li>
<li>temporarily ad. 暂时 </li>
<li>day n. 日，天，白天，时代 </li>
<li>repaint vt. 重画 </li>
<li>redefine vt. 重新规定(定义) </li>
<li>relation n. 关系，关系式 </li>
<li>dimension n. 尺寸，维，因次 </li>
<li>boundary n. 边界，界限，约束 </li>
<li>zoom v. 变焦距 </li>
<li>initialize v. 初始化 </li>
<li>personal a. 个人的，自身的 </li>
<li>hello int. &amp; v. 喂！；呼叫 </li>
<li>true a. &amp; n. 真，实，选中 </li>
<li>wish v. &amp; n. 祝愿，希望 </li>
<li>font n. 铅字，字形 </li>
<li>know v. 知道，了解，认识 </li>
<li>convert v. 转换，变换 </li>
<li>global n. 全局，全程，全局符 </li>
<li>still a. &amp; n. &amp; v. 静止的；静；平静 </li>
<li>installation n. 安装，装配 </li>
<li>invoke vt. 调用，请求 </li>
<li>interactive a. 交互式，交互的 </li>
<li>described a. 被看到的，被发现的 </li>
<li>century n. 世纪 </li>
<li>literal a. 文字的 </li>
<li>rather ad. 宁可，有点 </li>
<li>exclusive a. 排斥，排它性 </li>
<li>marker n. 记号，标记，标志 </li>
<li>wait v. 等待 </li>
<li>appropriate a. 适当的，合适的 </li>
<li>fit v. &amp; n. 适合，装配；非特 </li>
<li>adapter n. 适配器，转换器 </li>
<li>filter n. 滤波器，滤光材料 </li>
<li>break v. 断开，撕开，中断 </li>
<li>backward ad. 向后，逆，倒 </li>
<li>searching n. 搜索 </li>
<li>receive v. 接收 </li>
<li>dual a. 对偶的，双的 </li>
<li>retry vt. 再试，复算 </li>
<li>normally ad. 正常地，通常 </li>
<li>exactly ad. 正好，完全，精确地 </li>
<li>immediately ad. 直接地 </li>
<li>separated a. 分开的 </li>
<li>high a. 高 </li>
<li>equivalent a. 相等的，等效的 </li>
<li>light n. &amp; a. 光(波，源)；轻的 </li>
<li>zero n. 零，零位，零点 </li>
<li>storage n. 存储，存储器 </li>
<li>width n. 宽度 </li>
<li>language n. 语言 </li>
<li>startup n. 启动 </li>
<li>much a. &amp; n. 很多，许多，大量 </li>
<li>per prep. 每，按 </li>
<li>over prep. 在…上方 </li>
<li>mirror n. &amp; v. 镜，反射，反映 </li>
<li>request n. &amp; vt. 请求 </li>
<li>keypad n. 小键盘 </li>
<li>keep v. 保持，保存 </li>
<li>resident a. 驻留的 </li>
<li>learning n. 学问，知识 </li>
<li>talk v. 通话，谈话 </li>
<li>summary n. 摘要，汇总，提要 </li>
<li>well n. &amp; a. 井；好，良好 </li>
<li>link n. &amp; v. 链接；连接，联络 </li>
<li>according to a. 按照，根据 </li>
<li>identify v. 识别，辨认 </li>
<li>designated a. 指定的，特指的 </li>
<li>pertain vi. 附属，属于，关于 </li>
<li>expansion n. 展开，展开式 </li>
<li>incompatible a. 不兼容的 </li>
<li>blinking n. 闪烁 </li>
<li>month n. 月份 </li>
<li>precede v. 先于 </li>
<li>readily ad. 容易地，不勉强 </li>
<li>transportable a. 可移动的 </li>
<li>appropriately ad. 适当地 </li>
<li>routine n. 程序，例行程序 </li>
<li>ready a. 就绪，准备好的 </li>
<li>listing n. 列表，编目 </li>
<li>newly ad. 新近，重新 </li>
<li>year n. (一)年，年度，年龄 </li>
<li>contact n. 接触，触点 </li>
<li>session n. 对话，通话 </li>
<li>own a. &amp; v. 自己的；拥有 </li>
<li>redraw vt. 再拉 </li>
<li>here ad. 在这里 </li>
<li>manual a. 手工的，手动的 </li>
<li>particular a. 特定的，特别的 </li>
<li>rectangle n. 矩形 </li>
<li>additive a. &amp; n. 相加的；附加物 </li>
<li>similar a. 相似的 </li>
<li>assembly n. 汇编，安装，装配 </li>
<li>copyright n. 版权 </li>
<li>description n. 描述 </li>
<li>retrieve v. 检索 </li>
<li>mistake n. 错误 </li>
<li>produce v. 生产，制造 </li>
<li>ram 随机存取存储器 </li>
<li>exception n. 例外，异常，异议 </li>
<li>digit n. 数字，位数，位 </li>
<li>reverse v. &amp; a. 反向的，逆 </li>
<li>minimum n. &amp; a. 最小(的)，最低 </li>
<li>enough a. &amp; ad. 足够的，充足的 </li>
<li>although conj. 虽然，即使 </li>
<li>reindex v. &amp; n. 变换(改变)符号 </li>
<li>third a. &amp; n. 第三，三分之一 </li>
<li>red a. &amp; n. 红色(的) </li>
<li>along prep. &amp; ad. 沿着 </li>
<li>test n. &amp; v. 测试 </li>
<li>small a. 小的，小型的 </li>
<li>feed v. 馈给，(打印机)进纸 </li>
<li>company n. &amp; v. 公司；交际，交往 </li>
<li>movie n. 影片，电影(院) </li>
<li>compile vt. 编译 </li>
<li>frequently ad. 常常，频繁地 </li>
<li>undefined a. 未定义的 </li>
<li>state n. &amp; vt. 状态；确定 </li>
<li>tick v；n. 滴答(响)；勾号(√) </li>
<li>accept vt. 接受，认可，同意 </li>
<li>intense a. 强烈的，高度的 </li>
<li>documentation n. 文件编制，文本 </li>
<li>asterisk n. 星号(*) </li>
<li>easily ad. 容易地，轻易地 </li>
<li>become v. 成为，变成，适宜 </li>
<li>address vt. &amp; n. 寻址；地址 </li>
<li>interface n. 接口 </li>
<li>pause vi. 暂停 </li>
<li>repeat v. 重复 </li>
<li>restart v. 重新启动，再启动 </li>
<li>assumed a. 假定的 </li>
<li>speed n. 速度 </li>
<li>entry n. 输入，项(目)，入口 </li>
<li>combine v. 组合，联合 </li>
<li>organize v. 组织，创办，成立 </li>
<li>finished a. 完成的 </li>
<li>mixed a. 混合的 </li>
<li>permit v. 许可，容许 </li>
<li>formatting n. 格式化 </li>
<li>root n. 根 </li>
<li>symbol n. 符号，记号 </li>
<li>binary n. &amp; a. 二进制；双态的 </li>
<li>whenever ad. &amp; conj. 随时 </li>
<li>reach v. &amp; n. 范围，达到范围 </li>
<li>caution n. &amp; v. 警告，注意 </li>
<li>subtotal n. &amp; v. 小计，求部分和 </li>
<li>card n. 卡片，插件(板) </li>
<li>general a. 通用的 </li>
<li>associated a. 联合的，相联的 </li>
<li>transfer v. 传送，转换，转移 </li>
<li>connect v. 连接 </li>
<li>partition v. 划分，分区，部分 </li>
<li>hexadecimal a. 十六进制的 </li>
<li>generate vt. 产生，发生，生成 </li>
<li>specification n. 说明书，规则说明书 </li>
<li>customize vt. 定制，定做 </li>
<li>far a. 远的，遥远的 </li>
<li>nest v. 嵌套，后进先出 </li>
<li>duplicate vt. 复制，转录，加倍 </li>
<li>compression n. 压缩，浓缩 </li>
<li>unable a. 不能的 </li>
<li>means n. 方法，手段 </li>
<li>alternately ad. 交替地，轮流地 </li>
<li>intensity n. 强度，亮度 </li>
<li>reading n. 读，读数 </li>
<li>let v. 让，允许 </li>
<li>explicitly ad. 明显地，显然地 </li>
<li>compare v. 比较，对照，比喻 </li>
<li>sector n. &amp; v. 扇区，段；分段 </li>
<li>problem n. 问题，难题 </li>
<li>vertically ad. 竖直地，直立地 </li>
<li>horizontally ad. 水平地 </li>
<li>backspace v. 退格，回退 </li>
<li>terminate v. 端接，终止 </li>
<li>people n. 人们 </li>
<li>short a. &amp; n. 短的；短路 </li>
<li>drag vt. 拖，拉，牵，曳 </li>
<li>formatted a. 有格式的 </li>
<li>preview n. &amp; vt. 预映 </li>
<li>underscore vt. 在…下面划线 </li>
<li>correctly ad. 正确地 </li>
<li>initially ad. 最初，开头 </li>
<li>reformat v. 重定格式 </li>
<li>inside n. &amp; a. 内部，内容；内部的 </li>
<li>integrate v. 综合，集成 </li>
<li>controlled a. 受控制的，受操纵的 </li>
<li>period n. 周期 </li>
<li>huge a. 巨大的，非常的 </li>
<li>determined a. 坚决的，毅然的 </li>
<li>trailing n. &amp; a. 结尾；尾随的 </li>
<li>seek v. 查找，寻找，探求 </li>
<li>introduction n. 入门，介绍，引进 </li>
<li>indent v. 缩排 </li>
<li>base n. 基，底，基地址 </li>
<li>integer n. 整数 </li>
<li>attempt vt. &amp; n. 尝试，试验 </li>
<li>twice n. &amp; ad. 两次，两倍于 </li>
<li>formed a. &amp; n. 成形 </li>
<li>subscript n. 注脚，下标 </li>
<li>tiny a. 微小的，微量的 </li>
<li>model n. 模型，样机，型号 </li>
<li>correction n. 校正，修正 </li>
<li>rating n. 定额，标称值 </li>
<li>secondary a. 辅助的，第二的 </li>
<li>opened a. 开路的，断开的 </li>
<li>limit n. 极限，限界 </li>
<li>sun n. 太阳，日 </li>
<li>translate v. 翻译，转换，平移 </li>
<li>reason n. 原因，理由 </li>
<li>colon n. 冒号”:” </li>
<li>avoid vt. 避免，取消，无效 </li>
<li>range n. 范围，域，区域 </li>
<li>allocate vt. 分配 </li>
<li>wordperfect a. 一字不错地熟记的 </li>
<li>simply ad. 简单地，单纯地 </li>
<li>verify vt. 鉴定，检验，核对 </li>
<li>manner n. 方法，样式，惯例 </li>
<li>direction n. 方向，定向，指向 </li>
<li>portion n. &amp; vt. 部分；分配 </li>
<li>emulator n. 仿真器，仿真程序 </li>
<li>successful a. 成功的 </li>
<li>applied a. 适用的，外加的 </li>
<li>sum n. 和，合计，总额</li>
<li>achieve vt. 完成，实现 </li>
<li>together ad. 一同，共同，相互 </li>
<li>affect vt. 影响，改变，感动 </li>
<li>delay v. 延迟 </li>
<li>free a. 自由的，空闲的 </li>
<li>properly ad. 真正地，适当地 </li>
<li>kind n. 种类，属，级，等 </li>
<li>splitting n. 分区(裂) </li>
<li>feature n. 特征，特点 </li>
<li>console n. 控制台，操作台 </li>
<li>operate v. 操作，运算 </li>
<li>kernel n. 内核(核心)程序 </li>
<li>easy a. &amp; ad. 容易的；容易地 </li>
<li>modifier n. 修改量，变址数 </li>
<li>invalid a. 无效的 </li>
<li>compiler n. 编译程序(器) </li>
<li>dot n. 点 </li>
<li>beep n. 蜂鸣声，嘀嘀声 </li>
<li>face n. 面，表面 </li>
<li>random a. 随机的 </li>
<li>facility n. 设施，装备，便利 </li>
<li>heading n. 标题 </li>
<li>asynchronous a. 异步的，非同步的 </li>
<li>series n. 序列，系列，串联 </li>
<li>individual a. 个别的，单个的 </li>
<li>explain v. 阐明，解释 </li>
<li>paste n. 湖，胶，膏 </li>
<li>welcome vt. &amp; n. 欢迎 </li>
<li>six n. &amp; a. 六(个)(的) </li>
<li>early a. &amp; ad. 早期，初期 </li>
<li>wrap v. &amp; n. 包装，缠绕 </li>
<li>blue a. &amp; n. 蓝(色)，青色 </li>
<li>queue v. &amp; n. 排队，队列 </li>
<li>interrupt v. &amp; n. 中断 </li>
<li>respect n. &amp; vt. 遵守，关系 </li>
<li>converted a. 转换的，变换的 </li>
<li>common a. 公用的 </li>
<li>hyphen n. 连字符，短线 </li>
<li>serial a. 串行的，串联的 </li>
<li>loading n. 装入，加载，存放 </li>
<li>retain vt. 保持，维持 </li>
<li>setup n. 安排，准备，配置 </li>
<li>freeze v. 冻结，结冰 </li>
<li>intend vt. 打算，设计 </li>
<li>explanation n. 说明，注解，注释 </li>
<li>certain a. 确实的，确定的 </li>
<li>zap v. 迅速离去，击溃 </li>
<li>archive vt. 归档 </li>
<li>negative a. 负的，否定的 </li>
<li>image n. 图像，影像，映像 </li>
<li>platform n. 平台，台架 </li>
<li>often ad. 经常，往往，屡次 </li>
<li>signal n. &amp; v. 信号；发信号 </li>
<li>cpu 控制处理部件 </li>
<li>bit n. 比特；(二进制)位 </li>
<li>fully ad. 十分，完全 </li>
<li>deactivate vt. 释放，去活化 </li>
<li>especially ad. 特别(是)，尤其 </li>
<li>usually ad. 通常，平常，一般 </li>
<li>recommend vt. 推荐，建议 </li>
<li>maintain vt. 维护，保养，保留 </li>
<li>important a. 严重的，显著的 </li>
<li>central a. 中央的，中心的 </li>
<li>addition n. 加法，增加 </li>
<li>anytime ad. 在任何时候 </li>
<li>analyst n. 分析员 </li>
<li>false a. 假(布尔值)，错误 </li>
<li>black a. &amp; n. 黑色的，黑色 </li>
<li>gather n. 聚集，集合 </li>
<li>cycle n. &amp; v. 周，周期；循环 </li>
<li>relative a. 相对的 </li>
<li>offer v. 提供，给予，呈现 </li>
<li>ending n. 结束 </li>
<li>rent v. &amp; n. 租用；裂缝 </li>
<li>sentence n. 句(子) </li>
<li>remember v. 存储，记忆，记住 </li>
<li>proper a. 真的，固有的 </li>
<li>design v. 设计 </li>
<li>examine v. 检验，考试，审查 </li>
<li>initial a. 最初的，初始的 </li>
<li>corrupt v. &amp; a. 恶化；有毛病的 </li>
<li>buy v. 买，购买，赢得 </li>
<li>increase v. 增加，增大 </li>
<li>host n. 主机 </li>
<li>sample n. &amp; v. 样品，样本；抽样 </li>
<li>pending a. 悬而未决的，未定的 </li>
<li>divide v. 除 </li>
<li>boot n. 引导，靴 </li>
<li>hide v. 隐藏，隐蔽 </li>
<li>half n. &amp; a. &amp; ad. 一半，半个 </li>
<li>magenta n. &amp; a. 深红色(的) </li>
<li>leading n. &amp; a. 引导(的) </li>
<li>wrong a. &amp; ad. n. 错误(的) </li>
<li>today n. &amp; ad. 今天 </li>
<li>least a. &amp; ad. 最小(的) </li>
<li>opposite a. &amp; n. &amp; ad. 相反的 </li>
<li>white a. &amp; n. 白色(的) </li>
<li>override v. &amp; n. 超越，克服 </li>
<li>brown a. &amp; n. 褐色(的)，棕色 </li>
<li>hex a. &amp; n. 六角形的 </li>
<li>rest n. &amp; v. 剩余，休息 </li>
<li>damage n. &amp; vt. 损伤，故障 </li>
<li>instant a. 立刻的，直接的 </li>
<li>reserved a. 保留的，预订的 </li>
<li>technology n. 工艺，技术，制造学 </li>
<li>handle n. 处理，句柄 </li>
<li>apply v. 应用，适用于，作用 </li>
<li>stand v. 处于(状态)，保持 </li>
<li>payment n. 支付，付款 </li>
<li>kilobyte n. 千字节(kb) </li>
<li>parenthesis n. 括弧，圆括号</li>
<li>scan v. 扫描，扫视，搜索 </li>
<li>locating n. 定位，查找 </li>
<li>developer n. 开发者，显影剂 </li>
<li>murder n. 弄坏，毁掉 </li>
<li>flush v. 弄平，使齐平 </li>
<li>unlock v. 开锁，打开 </li>
<li>movement n. 传送，移动 </li>
<li>consecutive a. 连续的，连贯的 </li>
<li>collection n. 集合，聚集，画卷 </li>
<li>front a. 前面的，正面的 </li>
<li>addressing n. 寻址 </li>
<li>prefix n. 前缀 </li>
<li>carousel n. 圆盘传送带 </li>
<li>safety n. 安全，保险 </li>
<li>static a. 静态的，不变的 </li>
<li>background n. 背景，底色，基础 </li>
<li>product n. (乘)积，产品 </li>
<li>assignment n. 赋值，分配 </li>
<li>bad a. 坏的，不良的 </li>
<li>declare v. 说明 </li>
<li>adjust vt. 调整，调节，控制 </li>
<li>recognize v. 识别 </li>
<li>route n. 路线，路由 </li>
<li>respectively ad. 分别地 </li>
<li>unsuccessful a. 不成功的，失败的 </li>
<li>received a. 被接收的，公认的 </li>
<li>navigate v. 导航，驾驶 </li>
<li>considered a. 考虑过的，被尊重的 </li>
<li>due a. 到期的，应付(给)的 </li>
<li>recently ad. 近来 </li>
<li>room n. 房间，空间 </li>
<li>descend v. 下降，落下 </li>
<li>fact n. 事实 </li>
<li>alter v. 改变，修改 </li>
<li>track n. 磁道，轨道 </li>
<li>precedence n. 优先权 </li>
<li>skeleton n. 骨架，框架 </li>
<li>log n. &amp; v. 记录，存入 </li>
<li>star n. 星形，星号 </li>
<li>hot a. 热的 </li>
<li>replaceable a. 可替换的 </li>
<li>accessible a. 可以使用的 </li>
<li>involve vt. 涉及，卷入，占用 </li>
<li>configure vt. 使成形 </li>
<li>question n. 问题 </li>
<li>green n. &amp; a. 绿色绿色的 </li>
<li>entirely ad. 完全地，彻底地 </li>
<li>helpful a. 有帮助的，有用的 </li>
<li>middle a. 中间的 </li>
<li>declared a. 承认的，申报的 </li>
<li>compress vt. 压缩，精减 </li>
<li>graphically ad. 用图表表示 </li>
<li>auto a. 自动的 </li>
<li>automatic a. 自动的 </li>
<li>aligned a. 对准的，均衡的 </li>
<li>anywhere ad. 在任何地方 </li>
<li>terminal n. 终端，端子 </li>
<li>door n. 舱门，入口，孔 </li>
<li>expire v. 终止，期满 </li>
<li>resolution n. 分辨率 </li>
<li>local a. 局部的，本地的 </li>
<li>semicolon n. 分号(；) </li>
<li>reread vt. 重读 </li>
<li>overwrite v. 重写 </li>
<li>critical a. &amp; n. 临界的；临界值 </li>
<li>manager n. 管理程序 </li>
<li>capability n. 能力，效力，权力 </li>
<li>affected a. 受了影响的 </li>
<li>allowed a. 容许的 </li>
<li>border n. 边界，框，界限 </li>
<li>cache n. 高速缓存 </li>
<li>bell n. 铃，钟 </li>
<li>play v. 玩，奏，放音，放象 </li>
<li>quickly a. 快，迅速地 </li>
<li>fastback n. 快速返回 </li>
<li>answer n. &amp; v. 响应，回答；答复 </li>
<li>represent v. 表示，表现，代表 </li>
<li>difference n. 差分，差 </li>
<li>highest a. 最高的 </li>
<li>project n. 项目，计划，设计 </li>
<li>physical a. 物理的，实际的 </li>
<li>matter n. 物质，内容，事情 </li>
<li>hercules n. 大力神，大力士 </li>
<li>reduce v. 减少，降低，简化 </li>
<li>publisher n. 出版者，发行人 </li>
<li>trim n. 区标，微调 </li>
<li>substitute v. 代替，替换，代入 </li>
<li>disabled a. 禁止的，报废的 </li>
<li>recent a. 近来的 </li>
<li>positive a. 正的，阳的，正片 </li>
<li>upgrade v. 升级，提高质量 </li>
<li>instance n. &amp; vt. 例子，情况；举例 </li>
<li>happen vi. (偶然)发生，碰巧 </li>
<li>elapsed vi. &amp; n. 经过 </li>
<li>future n. &amp; a. 将来，未来的 </li>
<li>midnight n. &amp; a. 午夜 </li>
<li>though conj. 虽然，尽管 </li>
<li>nor conj. 也不 </li>
<li>mono a. &amp; n. 单音的 </li>
<li>slide v. &amp; n. 滑动，滑动触头 </li>
<li>abort v. &amp; n. 中断，故障 </li>
<li>jump v. &amp; n. 转移 </li>
<li>toward prep. 朝(着…方向) </li>
<li>throughout prep. 贯穿，整，遍 </li>
<li>via prep. 经过，经由 </li>
<li>among prep. 在…之中，中间 </li>
<li>neither a. &amp; pron. (两者)都不 </li>
<li>layer n. &amp; v. 层，涂层 </li>
<li>scatter v. 散射，分散，散布 </li>
<li>attention n. 注意(信号) </li>
<li>convention n. 常规，约定，协定 </li>
<li>conventional a. 常规的，习惯的 </li>
<li>tool n. 工具，刀 </li>
<li>handler n. 处理程序 </li>
<li>processor n. 处理机，处理程序 </li>
<li>desktop a. 台式的 </li>
<li>build v. 建造，建立，组合 </li>
<li>windowing n. 开窗口 </li>
<li>development n. 开发，研制，显影 </li>
<li>exceed v. 超过，大于 </li>
<li>understand v. 懂，明白(了)，理解 </li>
<li>horizontal a. 水平的，横向的 </li>
<li>alphabetically ad. 按字母表顺序 </li>
<li>meet v. “与”，符合，满足 </li>
<li>protect vt. 保护 </li>
<li>reserve vt. 保留，预定，预约 </li>
<li>clock n. 时钟，计时器，同步 </li>
<li>manifest vt. 表明，显示，显现 </li>
<li>safe a. 安全的，可靠的 </li>
<li>disconnect vt. 拆接，断开，拆线 </li>
<li>clockwise a. 顺时针的 </li>
<li>eliminate vt. 除去，消除，切断 </li>
<li>actual a. 实际的，现实的 </li>
<li>declaration n. 说明，申报 </li>
<li>probably ad. 多半，很可能 </li>
<li>ring n. &amp; v. 环，圈；按铃 </li>
<li>cover vt. 盖，罩，套 </li>
<li>indicator n. 指示器，指示灯 </li>
<li>apple n. 苹果 </li>
<li>icon n. 图符，象征 </li>
<li>consideration n. 考虑，研究，讨论 </li>
<li>skill n. 技巧 </li>
<li>picture n. 图象，画面 </li>
<li>layout n. 布置，布局，安排 </li>
<li>suggest vt. 建议，提议，暗示 </li>
<li>convenient a. 方便的，便利的 </li>
<li>instruct vt. 讲授，命令 </li>
<li>appendix n. 附录 </li>
<li>medium n. &amp; a. 媒体；中等的 </li>
<li>truncate vt. 截尾，截断 </li>
<li>inhibit vt. 禁止 </li>
<li>nearly ad. 近乎，差不多，几乎 </li>
<li>warn vt. 警告，警戒，预告 </li>
<li>underline n. 下划线 </li>
<li>register n. 寄存器 </li>
<li>stuff n. &amp; vt. 材料；装入 </li>
<li>exclude vt. 排除，除去 </li>
<li>destroy vt. 破坏，毁坏，打破 </li>
<li>calculation n. 计算，统计，估计 </li>
<li>angle n. 角，角度 </li>
<li>lexical a. 辞典的，词法的 </li>
<li>decide v. (使)判定，判断 </li>
<li>trouble n. 故障 </li>
<li>processing n. (数据)处理，加工 </li>
<li>customer n. 顾客，客户 </li>
<li>port n. 端口，进出口 </li>
<li>discuss vt. 讨论，论述 </li>
<li>segment n. 段，片段，图块 </li>
<li>filing n. (文件的)整理汇集 </li>
<li>identically ad. 相等，恒等 </li>
<li>market n. 市场，行情，销路 </li>
<li>valuable a. 有价值的，贵重的 </li>
<li>limited a. 有限的，(受)限制的 </li>
<li>trying a. 费劲的，困难的 </li>
<li>heap n. 堆阵 </li>
<li>grey n. &amp; a. 灰色；灰色的 </li>
<li>permanently ad. 永久地，持久地 </li>
<li>accelerator n. 加速装置，加速剂 </li>
<li>originally ad. 原来，最初 </li>
<li>ability n. 性能，能力，效率 </li>
<li>internally ad. 在内(部) </li>
<li>derelict vt. 中途淘汰 </li>
<li>redirect vt. 重定向 </li>
<li>reside vi. 驻留 </li>
<li>header n. 首部，标题，报头 </li>
<li>extra a. 特别的，额外的 </li>
<li>repeated a. 重复的 </li>
<li>death n. 毁灭，消灭 </li>
<li>observe v. 观察，探测 </li>
<li>density n. 密度 </li>
<li>management n. 管理 </li>
<li>environmental a. 周围的，环境的 </li>
<li>surrounding a. 周围的，环绕的 </li>
<li>master a. 总要的，总的 </li>
<li>recursive a. 递归的，循环的 </li>
<li>trap n. &amp; vt. 陷阱；俘获 </li>
<li>dimensional n. 尺寸的，…维的 </li>
<li>logic n. 逻辑(线路) </li>
<li>conjunction n. 逻辑乘，”与” </li>
<li>identical a. 相等的，相同的 </li>
<li>advice n. 意见，参考说明 </li>
<li>meaning n. 意义，含义 </li>
<li>fall n. 落下，降落 </li>
<li>interval n. 间歇，区间 </li>
<li>compatibility n. 兼容性，适应性 </li>
<li>rule n. 规则，法则，尺 </li>
<li>flag n. 标志(记)，特征(位) </li>
<li>criterion n. 标准，判据，准则 </li>
<li>office n. 办公室，局，站 </li>
<li>express a. 快速的 </li>
<li>volume n. 卷，册，体积，容量 </li>
<li>soft a. 软的 </li>
<li>rated a. 额定的 </li>
<li>activity n. 活力，功率 </li>
<li>odometer n. 里程表，计程仪 </li>
<li>phoenix n. 凤凰，绝世珍品 </li>
<li>obtain v. 获得，得到 </li>
<li>easel n. 框，(画)架 </li>
<li>latter a. 后面的，最近的 </li>
<li>decrease v. 减少，降低，缩短 </li>
<li>mainframe n. 主机，大型机 </li>
<li>debugger n. 调试程序 </li>
<li>diacritical a. 区分的，辩别的</li>
</ol>
<p>confidential a. 机密的<br>1113. trace v. 跟踪，追踪<br>1114. division n. 除，除法，(程序)部分<br>1115. regular a. 正则的，正规的<br>1116. implicit a. 隐式的<br>1117. mention vt. &amp; n. 叙述，说到<br>1118. near ad. &amp; prep. 领近，接近<br>1119. fifth n. &amp; a. 第五，五分之一<br>1120. seven n. &amp; a. 七(个)<br>1121. whereas conj. 面，其实，既然<br>1122. review v. &amp; n. (再)检查<br>1123. whatever pron. &amp; a. 无论什么<br>1124. transform v. &amp; n. 变换，变换式<br>1125. align v. &amp; n. 定位，对准<br>1126. yellow a. &amp; n. 黄色(的)<br>1127. assist v. &amp; n. 加速，帮助<br>1128. finish v. &amp; n. 完成，结束<br>1129. micro a. &amp; n. 微的，百万分之一<br>1130. beyond prep. 超过，那边<br>1131. against prep. 反对，阻止<br>1132. upon prep. 依据，遵照<br>1133. service n. &amp; vt. 服务，业务<br>1134. little a. 小的，少量的<br>1135. exhaust v. 取尽，用完<br>1136. choice n. 选择，精品<br>1137. sounding a. 发声的<br>1138. develop v. 发展，研制，显影<br>1139. holding n. 保持，固定，存储<br>1140. alpha n. 希腊字母α，未知数<br>1141. constant n. 常数<br>1142. warranty n. 保证(书)，授权<br>1143. stay v. 停止，停留<br>1144. industry n. 工业<br>1145. trigger n. &amp; v. 触发器；触发<br>1146. lesson n. 功课，教训<br>1147. handling n. 处理，操纵<br>1148. treat v. 处理，加工<br>1149. busy a. 忙碌的，占线的<br>1150. usage n. 应用，使用，用法<br>1151. difficult a. 困难的，不容易的<br>1152. failure n. 失效，故障，失败<br>1153. communication n. 通信<br>1154. building n. 建造，建筑，房屋<br>1155. ally v. 联合，与…关联<br>1156. exclamation n. 惊叹(号)<br>1157. turning a. 转弯的，旋转的<br>1158. whole a. 全部的，整个的<br>1159. parent n. 双亲，父代<br>1160. connection n. 连接(法)<br>1161. connectivity n. 连通性，联络性<br>1162. translation n. 翻译，变换，平移<br>1163. dynamic a. 动态的，动力的<br>1164. foreground n. 前台<br>1165. preserve vt. 保存，维持<br>1166. vice n. 缺点，毛病，错误<br>1167. necessarily ad. 必定，当然<br>1168. circle n. 圆，圈，循环，周期<br>1169. differ vi. 不同，不一致<br>1170. stationary a. 静止的，平稳的<br>1171. extract vt. 抽取，摘录，开方<br>1172. unrecognized a. 未被认出的<br>1173. thereafter ad. 此后，据此<br>1174. inverse a. 反向的，逆的<br>1175. spell v. 拼写<br>1176. limiting n. (电路参数)限制处理<br>1177. restructure vt. 调整，重新组织<br>1178. delimit vt. 定界，定义<br>1179. pay v. 付款，支付<br>1180. separately ad. 分别地<br>1181. classify vt. 分类，分级<br>1182. interfere vi. 干涉，干扰，冲突<br>1183. mind n. 愿望，想法，智力<br>1184. individually ad. 个别地，单独地<br>1185. vertical a. 垂直的，立(式)的<br>1186. undesirable a. 不合乎需要的<br>1187. lot n. 一块(批，组，套)<br>1188. piece n. 一块，部分，段<br>1189. unavailable a. 不能利用的<br>1190. unlike a. 不象的，不同的<br>1191. sit v. 位于，安装<br>1192. insufficient a. 不足的，不适当的<br>1193. map n. &amp; vt. 图；映射，变址<br>1194. figure n. 数字；图，图形，形状<br>1195. prepare v. 准备<br>1196. consider v. 考虑，认为，设想<br>1197. detect vt. 检测<br>1198. convenience n. 方便，便利<br>1199. method n. 方法，方案<br>1200. mean n. &amp; vt. 平均；意味着<br>1201. salary n. &amp; vt. 薪水；发工资<br>1202. pacific a. 平稳的，太平(洋)的<br>1203. strong a. 强的<br>1204. emphasize v. 强调，着重，增强<br>1205. department n. 部门，门类，系<br>1206. forced a. 强制的，压力的<br>1207. ansi n. 美国国家标准协会<br>1208. permanent a. 永久的<br>1209. remark n. 评注，备注<br>1210. away ad. 离开，(去)掉<br>1211. concatenate vt. 连接，串联，并置<br>1212. lightning n. 闪电<br>1213. additionally ad. 另外，又<br>1214. emulate v. 仿真，模仿；赶上或超过<br>1215. tape n. 磁带，纸带<br>1216. accidentally ad. 偶然地<br>1217. concept n. 概念<br>1218. optimize v. 优选，优化<br>1219. counter n. 计数器，计算器<br>1220. expect vt. 期望，期待，盼望<br>1221. subsequently ad. 其后，其次，按着<br>1222. registration n. 登记，挂号，读数<br>1223. city n. 城市，市区<br>1224. designate vt. 任命，标志<br>1225. visible a. 可见的，明显的<br>1226. consult v. 咨询，顾问<br>1227. completely ad. 十分，完全，彻底<br>1228. virtually ad. 实际上<br>1229. substantially ad. 实质上，本质上<br>1230. specialize v. (使)专门化<br>1231. fail n. 故障，失效<br>1232. primarily ad. 首先，起初，原来<br>1233. sequentially ad. 顺序地<br>1234. client n. 顾客，买主</p>
<p>runtime n. 运行时间<br>1236. fix v. 固定，定影<br>1237. author n. 程序设计者，作者<br>1238. programmer n. 程序设计人员<br>1239. commercial a. 商业的，经济的<br>1240. particularly ad. 特别，格外，尤其<br>1241. low a. 低的，浅的，弱的<br>1242. sheet n. (图)表，纸，片<br>1243. employee n. 雇员<br>1244. legal a. 合法的，法律的<br>1245. qualified a. 合格的，受限制的<br>1246. context n. 上下文，来龙去脉<br>1247. involved a. 有关的<br>1248. conditional a. 有条件的<br>1249. halfway a. 中途的，不彻底的<br>1250. oriented a. 有向的，定向的<br>1251. pair n. (一)对，一双<br>1252. week n. (一)星期，(一)周<br>1253. suppressed vt. 抑制，取消<br>1254. subroutine n. 子程序<br>1255. bracketed a. 加括号的<br>1256. manually ad. 用手，手动地<br>1257. preset vt. 预置<br>1258. autoindex n. 自动变址(数)<br>1259. restrict vt. 约束，限制<br>1260. performance n. 性能，实绩<br>1261. showing n. 显示，表现<br>1262. ever ad. 在任何时候，曾经<br>1263. distribution n. 分布，分配<br>1264. denote vt. 指示，意味着，代表<br>1265. cash n. 现金<br>1266. repeatedly ad. 重复地<br>1267. replicate vt. 重复，复制<br>1268. mega n. 兆，百万<br>1269. conform vi. 遵从，符合<br>1270. rebuild v. 重建，修复，改造<br>1271. certainty n. 必然，确实<br>1272. controller n. 控制器<br>1273. pseudo a. 假的，伪的，冒充的<br>1274. manage v. 管理，经营，使用<br>1275. administrator n. 管理人，行政人员<br>1276. ensemble n. 总体，集合体<br>1277. bus n. 总线，信息通路<br>1278. allowable a. 容许的，承认的<br>1279. limitations n. 限制，边界<br>1280. restriction n. 限制，约束，节流<br>1281. height n. 高度<br>1282. remainder n. 余数，余项，剩余<br>1283. traverse v. 横渡，横过，横断<br>1284. organization n. 结构，机构，公司<br>1285. resulting a. 结果的，合成的<br>1286. solution n. 解，解法，解答<br>1287. external a. 外部的<br>1288. adequate a. 足够的，充分的<br>1289. interpretability n. 配合动作性<br>1290. vary v. 变化，变换<br>1291. gap n. 间隙，间隔，缝隙<br>1292. indexing n. 变址，标引，加下标<br>1293. board n. 板，插件板<br>1294. package n. 插件，(软件)包<br>1295. insertion n. 插入，嵌入，插页<br>1296. intervene vi插入，干涉<br>1297. conflict v. 冲突，碰头<br>1298. really a. 真正地，确实地<br>1299. overflow v. 溢出，上溢<br>1300. charge n. 电荷，充电，负荷<br>1301. phone n. 电话，电话机，音素<br>1302. virtual a. 虚(拟)的，虚拟<br>1303. compose v. 组成，构成，构图<br>1304. snapshot n. 抽点打印<br>1305. sensitivity n. 灵敏度<br>1306. familiar a. 熟悉的，惯用的<br>1307. mach n. 马赫(速度单位)<br>1308. incorrect a. 错误的，不正确的<br>1309. cut v. 割，切<br>1310. lowest a. 最低的，最小的<br>1311. simple a. 简单的<br>1312. subsequent a. 后来的，其次的<br>1313. capitalized a. 大写的<br>1314. compact a. 紧致的，压缩的<br>1315. plain n. 明码<br>1316. noted a. 著名的<br>1317. desirable a. 所希望的，称心的<br>1318. substitution n. 代替，替换，置换<br>1319. consume v. 消耗，使用<br>1320. forget v. 忘记<br>1321. keyed a. 键控的<br>1322. overstrike n. 过打印<br>1323. tornado n. 旋风，龙卷风<br>1324. quotation n. 引证，引用(句)<br>1325. ones n. 二进制反码<br>1326. parse vt. (语法)分析<br>1327. experience vt. &amp; n. 试验<br>1328. manufacture vt. &amp; n. 制造(业)，工业<br>1329. hundred n. &amp; a. (一)百，百个<br>1330. thousand n. &amp; a. (一)千，无数的<br>1331. twentieth n. &amp; a. 第二十(的)<br>1332. understanding n. &amp; a. 了解的，聪明的<br>1333. hand n. &amp; a. 手，手工(动)的<br>1334. restricting n. &amp; a. 限制(的)<br>1335. fancy n. &amp; a. 想象(的)，精制的<br>1336. wide a. &amp; ad. 宽的，广阔的<br>1337. fine a. &amp; ad. 微小的，细的<br>1338. worry v. &amp; n. (使)烦恼<br>1339. somewhat pron. &amp; ad. 稍微，有点<br>1340. quiet a. &amp; n. 静态，静止的<br>1341. purge v. &amp; n. 清除<br>1342. mod a. &amp; n. 时髦的<br>1343. numeral n. &amp; n. 数字的，数码<br>1344. whichever a. &amp; pron. 无论哪个<br>1345. purchase n. &amp; v. 购买<br>1346. care n. &amp; v. 关心，注意<br>1347. watch n. &amp; v. 监视，观测<br>1348. endeavor n. &amp; v. 尽力，力图<br>1349. mismatch n. &amp; vt. 失配，不匹配<br>1350. printout n. 印出<br>1351. ellipsis n. 省略符号，省略(法)<br>1352. ship n. 舰，船<br>1353. british a. &amp; n. 英国的；英国人<br>1354. parallel a. 并行<br>1355. custom a. &amp; n. 常规的，惯例；用户<br>1356. congratulation n. 祝贺<br>1357. protection n. 保护<br>1358. glass n. 玻璃<br>1359. pattern n. 模式<br>1360. insure v. 保证，保障<br>1361. stopping n. 停止，制动(状态)<br>1362. factory n. 工厂，制造厂<br>1363. implement n. &amp; vt. 工具；执行，实现<br>1364. effort n. 工作，研究计划<br>1365. worker n. 工作人员<br>1366. ampersand n. &amp;号(and)<br>1367. deal v. 处理，分配，交易<br>1368. power n. 功率，电源，幂<br>1369. difficulty n. 困难，难点<br>1370. lose n. 失去，损失<br>1371. magic n. 魔术，幻术<br>1372. proprietary a. 专有的<br>1373. aware a. 知道的，察觉到的<br>1374. numerous a. 为数众多的，无数的<br>1375. vowel n. 元音，母音<br>1376. closely a. 精密地，仔细地<br>1377. accuracy n. 精确度，准确度<br>1378. traditional a. 传统的，惯例的<br>1379. synchronization n. 同步<br>1380. fragment n. 片段，段，分段<br>1381. primary a. 原始的，主要的<br>1382. safely ad. 安全地，确实地<br>1383. habit n. 习惯<br>1384. comprise vt. 包括，由…组成<br>1385. landler n. 兰德勒舞曲<br>1386. absence n. 缺少，没有<br>1387. revolutionize vt. 变革，彻底改革<br>1388. constantly ad. 不变地，经常地<br>1389. seldom ad. 不常，很少，难得<br>1390. unfortunately ad. 不幸，遗憾地<br>1391. expunge vt. 擦除，删掉<br>1392. security n. 安全性，保密性<br>1393. touch v. &amp; n. 按，揿，触；触力<br>1394. contrast n. 反差，对比，对比度<br>1395. invent vt. 创造，想象<br>1396. reflect v. 反射<br>1397. undone a. 未完成的<br>1398. unshift v. 未移动，不移档<br>1399. complex a. &amp; n. 复杂的；复数<br>1400. complexity n. 复杂性，复杂度<br>1401. creation n. 创造，创作<br>1402. unknown a. 未知的，无名的<br>1403. greatly ad. 大大地，非常<br>1404. cost n. 值，价值，成本<br>1405. degrade v. 降低，减少，递降<br>1406. suggestion n. 暗示，提醒<br>1407. real n. 实数，实的，实型<br>1408. experimentation n. 实验(工作，法)<br>1409. experiment n. 实验，试验(研究)<br>1410. substantial a. 实质的，真正的<br>1411. solely ad. 独自，单独，只<br>1412. announce vt. 发表，宣布<br>1413. squeeze v. 挤压<br>1414. distribute vt. 分布，配线，配给<br>1415. negate vt. 否定，求反，”非”<br>1416. capture vt. 俘获，捕捉<br>1417. father n. 父，上层(树节点的)<br>1418. reinstate vt. 复原，恢复<br>1419. tutorial a. 指导的<br>1420. nicety n. 细节，精细<br>1421. roll n. &amp; v. 案卷；卷动，滚动<br>1422. exponent n. 指数，阶，幂<br>1423. exponential a. 指数的，幂的，阶的<br>1424. prefer vt. 更喜欢，宁愿<br>1425. complicated v. 使复杂化，使混乱<br>1426. reactivate v. 使恢复活动<br>1427. spread v. 展开，传播<br>1428. synchronize v. 使同步<br>1429. formation n. 构造，结构，形成<br>1430. widely ad. 广泛，很远<br>1431. comma n. 逗号”,”，逗点<br>1432. very ad. 很，非常，最<br>1433. unnecessary a. 不必要的，多余的<br>1434. unchanged a. 不变的<br>1435. cross n. 交叉，十字准线<br>1436. yet ad. 还，仍然，至今<br>1437. slowly ad. 缓慢地<br>1438. inexperienced a. 不熟练的，外行的<br>1439. noninteractive a. 不相关的，非交互的<br>1440. unwanted a. 不需要的，多余的<br>1441. unused a. 不用的，空着的<br>1442. unmarked a. 没有标记的<br>1443. nothing n. 没有任何东西<br>1444. chart n. 图(表)<br>1445. dearly ad. 极，非常，昂贵地<br>1446. extremely ad. 极端地，非常<br>1447. hardly ad. 几乎不，未必<br>1448. placement n. 布局<br>1449. think v. 考虑，以为，判断<br>1450. technical a. 技术的，专业的<br>1451. idea n. 思想，观念<br>1452. stamp n. 图章<br>1453. indirectly ad. 间接地<br>1454. equation n. 方程，方程式<br>1455. smooth v. &amp; a. 平滑；平滑的<br>1456. attached a. 附加的</p>
<p>average n. 平均，平均数<br>1458. quietly ad. 静静地<br>1459. discard v. 删除，废除，放弃<br>1460. never ad. 决不，从来不<br>1461. initiate vt. 开创，起始<br>1462. powerful a. 强大的，大功率的<br>1463. purpose n. &amp; vt. 目的，用途；打算<br>1464. regard vt. 考虑，注意，关系<br>1465. daily a. 每日的，日常的<br>1466. possibly ad. 可能地，合理地<br>1467. potentially ad. 可能地，大概地<br>1468. moreover ad. 况且，并且，此外<br>1469. american a. 美国的<br>1470. guard v. &amp; n. 防护；防护装置<br>1471. world n. 世界，全球<br>1472. independent a. 独立的<br>1473. independently a. 独立地<br>1474. continuously ad. 连续不断地<br>1475. shield v. 屏蔽，罩，防护<br>1476. glance n. 闪烁<br>1477. happening n. 事件，偶然发生的事<br>1478. transaction n. 事项，事务，学报<br>1479. emulation n. 仿真，仿效<br>1480. strike v. 敲，击<br>1481. dump v. (内存信息)转储<br>1482. occasionally ad. 偶尔(地)，不时<br>1483. tension n. 张力<br>1484. probable a. 概率的，可能的<br>1485. talent n. 才能，技能，人才<br>1486. financial a. 财务的，金融的<br>1487. meter n. 仪表，米<br>1488. logged a. 记录的，浸透的<br>1489. ware n. 仪器，商品<br>1490. disregard vt. 轻视，把…忽略不计<br>1491. waiting a. 等待的<br>1492. preceding a. 先的，以前的<br>1493. comparison n. 比较，对照<br>1494. advanced a. 先进的，预先的<br>1495. rate n. 比率，速率，费率<br>1496. fly v. 飞，跳过<br>1497. programmable a. 可编程的<br>1498. definable a. 可定义的，可确定的<br>1499. readable a. 可读的<br>1500. recoverable a. 可恢复的，可回收的<br>1501. possibility n. 可能性<br>1502. finisher n. 成品机<br>1503. applicable a. 可适用的，合适的<br>1504. printable a. 可印刷的<br>1505. executable a. 可执行的<br>1506. essentially ad. 实质上，本来<br>1507. confuse vt. 使混乱，干扰<br>1508. familiarize vt. 使熟悉，使通俗化<br>1509. employe vt. 使用，花费<br>1510. suitable a. 适合的，相适宜的<br>1511. generation n. (世)代，(发展)阶段<br>1512. quality n. 质量，性质，属性<br>1513. defective a. 故障的，有毛病的<br>1514. interpretable a. 彼此协作的<br>1515. interest n. 兴趣，注意，影响<br>1516. fourscore n. 八十<br>1517. teach v. 教，讲授<br>1518. procedural a. 程序上的<br>1519. phrase n. 短语，成语<br>1520. specifically ad. 特别地，逐一地<br>1521. penalty n. 惩罚，罚款，负担<br>1522. violate vt. 违犯，妨碍，破坏<br>1523. indefinitely ad. 无限地，无穷地<br>1524. major a. 较大的，主要的<br>1525. higher a. 较高的<br>1526. wise a. 聪明的<br>1527. becoming a. 合适的，相称的<br>1528. equally ad. 相等地，相同地<br>1529. enjoy vt. 享受，欣赏，喜爱<br>1530. forth ad. 向前<br>1531. disappear vi. 消失<br>1532. crop v. 切，剪切<br>1533. diagonally ad. 斜(对)<br>1534. labeled a. 有标号的<br>1535. decision n. 判定，决定，决策<br>1536. effective a. 有效的<br>1537. significant a. 有效的，有意义的<br>1538. avail v. &amp; n. 有益于；利益<br>1539. hang v. 中止，暂停，挂起<br>1540. craze n. &amp; v. 裂纹开裂<br>1541. consequently ad. 因此，从而<br>1542. introduce vt. 引进，引导<br>1543. team n. 队，小组<br>1544. visual a. 视觉的，直观的<br>1545. acknowledgment n. 接收(收妥)，承认<br>1546. efficiently ad. 有效地<br>1547. predict vt. 预测，预言<br>1548. anticipate vt. 预先考虑，抢…先<br>1549. bypass n. 旁路<br>1550. nature n. 自然，天然<br>1551. natural a. 自然的<br>1552. grant vt. 允许，授权<br>1553. logarithm n. 对数<br>1554. reappears vi. 再现，重现<br>1555. reload vt. 再装入<br>1556. occupy vt. 占有，充满<br>1557. photograph n. 照片；v.照相<br>1558. terminating n. 终止，终结，收信<br>1559. resolve v. 分辨，解像<br>1560. unsafe v. 恢复<br>1561. separator n. 分隔符<br>1562. hierarchical a. 分级的，分层的<br>1563. assortment n. 种类，花色品种<br>1564. growing n. 分类，分组，成群<br>1565. discussion n. 讨论，商议，论述<br>1566. alphabet n. 字母，字母表<br>1567. scattered a. 分散的<br>1568. eventually ad. 终于，最后<br>1569. finally ad. 终于，最后<br>1570. subgroup n. 分组，子群<br>1571. superimpose vt. 重叠，叠加<br>1572. reorganization vt. 重排，改组<br>1573. rewrite vt. 重写，再生<br>1574. university n. (综合性)大学<br>1575. deter vt. 阻止，拦住，妨碍<br>1576. pool n. &amp; v. 池，坑；共享<br>1577. moment n. 矩，力矩，磁矩<br>1578. shut v. 关闭<br>1579. closed a. 关闭的，闭迹<br>1580. respond v. 回答，响应<br>1581. repeating n. 重复，循环<br>1582. repetitive a. 重复的<br>1583. reenter v. 重新进入<br>1584. rearrange v. 重新整理，重新排序<br>1585. rectangular a. 矩形的，成直角的<br>1586. tag n. 特征，标记，标识符<br>1587. suppose v. 假定，推测<br>1588. supposed a. 假定的，推测的<br>1589. manipulating v. 操纵，操作<br>1590. operator n. 操作员，运算符<br>1591. masking n. 掩蔽，屏蔽<br>1592. price n. 价格<br>1593. demonstrate v. 论证，证明，证实<br>1594. importance n. 价值，重要<br>1595. pipe n. 管，导管<br>1596. overall a. 总共的，全部的<br>1597. turnkey n. 总控钥匙<br>1598. restricted a. 受限制的，受约束的<br>1599. suspension n. 暂停，中止，挂起<br>1600. seamless a. 无缝的<br>1601. clipper n. 限幅器，钳位器<br>1602. unsigned a. 无符号的<br>1603. unformatted a. 无格式的<br>1604. infinite a. 无限的，无穷的<br>1605. useless a. 无用的<br>1606. limiter n. 限制(幅)器<br>1607. mountain n. 高山，山脉<br>1608. redundant a. 冗余的<br>1609. dependent a. 相关的<br>1610. contiguous a. 相连的，邻接的<br>1611. consistent a. 相容的，一致的<br>1612. multiprocessing n. 多重处理，多道处理<br>1613. architecture n. 结构，构造<br>1614. structural a. 结构的，结构上的<br>1615. outcome n. 结果，成果，输出<br>1616. association n. 结合，协会，联想<br>1617. opinion n. 意见，见解，判断<br>1618. interpret v. 解释<br>1619. explanatory a. 解释(性)的<br>1620. assemble v. 汇编，装配<br>1621. assembler n. 汇编程序<br>1622. cad 计算机辅助设计<br>1623. arithmetic n. 算术，运算<br>1624. varying a. 变化的，可变的<br>1625. representative a. 典型的，表示的<br>1626. typical a. 典型的，标准的<br>1627. sufficient a. 充足的，足够的<br>1628. blast v. &amp; n. 清除；爆炸<br>1629. clean a. 清洁的，干净的<br>1630. caret n. 插入符号<br>1631. socket n. 插座，插孔，插口<br>1632. stated a. 规定的<br>1633. protocol n. 规约，协议，规程<br>1634. presence n. 存在，有<br>1635. telephone n. 电话<br>1636. social a. 社会的<br>1637. equipment n. 设备，装备，仪器<br>1638. lending n. &amp; a. 借给，出租；借出的<br>1639. book n. 书，手册，源程序块<br>1640. circumstances n. 情况，环境，细节<br>1641. situation n. 情况，状况，势态<br>1642. desk n. 书桌，控制台，面板<br>1643. please v. 请<br>1644. mixture n. 混合物<br>1645. representation n. 表示<br>1646. esoteric a. 深奥的，奥秘的<br>1647. depth n. 深度，浓度(颜色的)<br>1648. final a. 最终的<br>1649. physically a. 物理上，实际上<br>1650. aid n. 帮助，辅助程序<br>1651. successive a. 逐次的，相继的<br>1652. succession n. 逐次性，连续性<br>1653. unpack v. 拆开，卸，分开<br>1654. chunk n. 厚块，大部分<br>1655. alignment n. 序列，成直线<br>1656. typewriter n. 打字机<br>1657. big a. 大的，重要的<br>1658. tone n. 音调，音色，色调<br>1659. sensitive a. 敏感的，灵敏的<br>1660. reduction n. 减化，还原，减少<br>1661. indentation n. 缩进，缩排<br>1662. terminology n. 术语<br>1663. ascending a. 增长的，向上的<br>1664. augment v. 增加，添加，扩充<br>1665. increment n. 增量，加１，递增<br>1666. gain n. 增益(系数)<br>1667. stream n. 流<br>1668. obsolete a. 作废的，过时的<br>1669. accommodate v. 调节，适应<br>1670. motif n. 主题，要点，特色<br>1671. subject n. 主题，源<br>1672. job n. 作业<br>1673. differentiate v. 区别，分辨<br>1674. distinction n. 区别，相异，特性<br>1675. distinguish v. 区别，辨识<br>1676. locking n. 锁定，加锁<br>1677. progress n. 进度，进展<br>1678. fundamental a. 基本的，根本的<br>1679. basis n. 基础，座<br>1680. underlying a. 基础的，根本的<br>1681. sound n. 声音，音响<br>1682. vital a. 生动的，不可缺少的<br>1683. national a. 国家的<br>1684. sale n. 销售，销路<br>1685. agree v. 符合，相同<br>1686. iterative a. 迭代的<br>1687. inclusive a. 包括的，内含的<br>1688. charm n. 吸引力<br>1689. hit v. 命中，瞬时干扰<br>1690. course n. 过程，航向，课程<br>1691. exceeded a. 过度的，非常的<br>1692. numerical a. 数量的，数字的<br>1693. digital a. 数字的<br>1694. combo n. 二进位组合码<br>1695. cord n. 绳子，电线</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
  </entry>
</search>
