<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>AwesomeNavigation</title>
    <url>/blog.githup.io/2020/05/AwesomeNavigation/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="运维站点"><a href="#运维站点" class="headerlink" title="运维站点"></a>运维站点</h2><ul>
<li><a href="https://www.infoq.cn/topic/operation" target="_blank" rel="noopener">InfoQ</a></li>
<li><a href="http://www.ttlsa.com/" target="_blank" rel="noopener">运维时间</a></li>
<li><a href="https://tech.youzan.com/" target="_blank" rel="noopener">有赞技术团队</a></li>
<li><a href="https://www.hi-linux.com/" target="_blank" rel="noopener">运维之美</a></li>
<li><a href="http://www.178linux.com/" target="_blank" rel="noopener">Linux 运维部落</a></li>
<li><a href="https://linuxtools-rst.readthedocs.io/" target="_blank" rel="noopener">Linux 工具快速教程</a></li>
</ul>
<h2 id="网站资源"><a href="#网站资源" class="headerlink" title="网站资源"></a>网站资源</h2><ul>
<li><a href="https://access.redhat.com/documentation/en-us/" target="_blank" rel="noopener"> Red Hat Container Development  </a></li>
<li><a href="https://edu.aliyun.com/developer" target="_blank" rel="noopener">ali online courses</a></li>
<li><a href="https://e.huawei.com/cn/material/MaterialList" target="_blank" rel="noopener">HUAWEI</a></li>
</ul>
<h2 id="Awesome"><a href="#Awesome" class="headerlink" title="Awesome"></a>Awesome</h2><ul>
<li><a href="https://www.kcsou.com/s_kubesphere/" target="_blank" rel="noopener">课程搜</a></li>
<li><a href="https://github.com/prakhar1989/awesome-courses#algorithms" target="_blank" rel="noopener">CS Courses</a></li>
<li><a href="https://github.com/xingshaocheng/architect-awesome" target="_blank" rel="noopener">architect</a></li>
<li><p><a href="https://github.com/awesome-selfhosted/awesome-selfhosted" target="_blank" rel="noopener">selfhosted</a></p>
</li>
<li><p><a href="https://github.com/fffaraz/awesome-cpp" target="_blank" rel="noopener">cpp</a></p>
</li>
<li><a href="https://github.com/akullpp/awesome-java" target="_blank" rel="noopener">java</a></li>
<li><a href="https://github.com/vinta/awesome-python" target="_blank" rel="noopener">python </a></li>
<li><a href="https://github.com/jobbole/awesome-python-cn" target="_blank" rel="noopener">python-cn</a></li>
<li><a href="https://github.com/avelino/awesome-go" target="_blank" rel="noopener">go</a></li>
<li><a href="https://github.com/sindresorhus/awesome-nodejs" target="_blank" rel="noopener">nodejs</a></li>
<li><a href="https://github.com/sorrycc/awesome-javascript" target="_blank" rel="noopener">javascript</a></li>
<li><a href="https://github.com/alebcay/awesome-shell" target="_blank" rel="noopener">shell</a></li>
<li><a href="https://github.com/vuejs/awesome-vue" target="_blank" rel="noopener">vue</a></li>
<li><p><a href="http://c.biancheng.net/c/" target="_blank" rel="noopener">C语言入门</a></p>
</li>
<li><p><a href="https://github.com/josephmisiti/awesome-machine-learning" target="_blank" rel="noopener">machine-learning</a></p>
</li>
<li><p><a href="https://github.com/MaximAbramchuck/awesome-interview-questions" target="_blank" rel="noopener">interview-questions</a></p>
</li>
<li><p><a href="https://github.com/Hack-with-Github/Awesome-Hacking" target="_blank" rel="noopener">Hacking</a></p>
</li>
<li><a href="https://github.com/kahun/awesome-sysadmin" target="_blank" rel="noopener">sysadmin</a></li>
<li><p><a href="https://github.com/veggiemonk/awesome-docker" target="_blank" rel="noopener">docker</a></p>
</li>
<li><p><a href="https://github.com/jaywcjlove/awesome-mac" target="_blank" rel="noopener">mac</a></p>
</li>
<li><a href="https://github.com/herrbischoff/awesome-macos-command-line" target="_blank" rel="noopener">macos-command-line</a></li>
<li><a href="https://github.com/viatsko/awesome-vscode" target="_blank" rel="noopener">vscode</a></li>
<li><a href="https://github.com/fighting41love/funNLP" target="_blank" rel="noopener">funNLP</a></li>
</ul>
]]></content>
      <categories>
        <category>分类导航</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>awesome</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo安装配置</title>
    <url>/blog.githup.io/2020/05/hexo%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="hexo-安装使用"><a href="#hexo-安装使用" class="headerlink" title="hexo 安装使用"></a>hexo 安装使用</h1><blockquote>
<p>hexo 功能很多很完善。样式比自己写的好的多。为了快速构建，还是选用了 hexo。<br>话不多说，直接上干货。</p>
</blockquote>
<h2 id="nodejs-安装"><a href="#nodejs-安装" class="headerlink" title="nodejs 安装"></a>nodejs 安装</h2><p><a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodejs 下载</a></p>
<p><a href="https://hexo.io/" target="_blank" rel="noopener">hexo 官网</a></p>
<p><a href="https://guides.github.com/features/pages/" target="_blank" rel="noopener">github pages</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用阿里云镜像下载比较快，xz 压缩率高。</span></span><br><span class="line"><span class="comment"># 在 mac 上安装直接选择 pkg 包安装</span></span><br><span class="line">https://cdn.npm.taobao.org/dist/node/v14.2.0/node-v14.2.0.pkg</span><br></pre></td></tr></table></figure>
<h2 id="hexo-安装"><a href="#hexo-安装" class="headerlink" title="hexo 安装"></a>hexo 安装</h2><blockquote>
<p>hexo 使用 nodejs 编写，使用 npm 包管理工具进行安装。</p>
<p>安装前要设置好国内镜像。否则会很慢。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># npm 帮助</span></span><br><span class="line">npm --<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># npm command 帮助</span></span><br><span class="line">npm config -h</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出配置</span></span><br><span class="line">npm config list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这样就配置好镜像了，阿里云是国内镜像大户</span></span><br><span class="line">npm config <span class="built_in">set</span> metrics-registry <span class="string">"https://registry.npm.taobao.org"</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>hexo 使用 nodejs 编写，使用 npm 包管理工具进行安装。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># nodejs 分全局模块库和项目模块库 </span></span><br><span class="line"><span class="comment"># 全局模块库位于 nodejs 安装目录下 /usr/local/lib/node_modules</span></span><br><span class="line"><span class="comment"># 项目模块库位于项目目录下 node_modules/</span></span><br><span class="line"><span class="comment"># 列出模块</span></span><br><span class="line">npm list</span><br></pre></td></tr></table></figure>
<blockquote>
<p>全局模块安装一些通用的模块，比如: cnpm、@vue、bower</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装到全局模块（重复安装加 --force）</span></span><br><span class="line">npm install hexo-cli -g --force</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建个目录</span></span><br><span class="line">mkdir blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">hexo init</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">hexo init blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># npm 包管理文件 package.json</span></span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务，在 http://localhost:4000 查看</span></span><br><span class="line">hexo server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 支持简写。简写有好处，也有坏处。好处是输入少，坏处是不利于记忆。</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<h3 id="hexo-目录结构"><a href="#hexo-目录结构" class="headerlink" title="hexo 目录结构"></a>hexo 目录结构</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tree -L 1</span></span><br><span class="line"></span><br><span class="line"><span class="string">├──</span> <span class="string">_config.yml</span>         <span class="comment"># 站点配置文件</span></span><br><span class="line"><span class="string">├──</span> <span class="string">db.json</span></span><br><span class="line"><span class="string">├──</span> <span class="string">node_modules</span>        <span class="comment"># nodejs 模块库</span></span><br><span class="line"><span class="string">├──</span> <span class="string">package-lock.json</span></span><br><span class="line"><span class="string">├──</span> <span class="string">package.json</span>        <span class="comment"># npm 包管理文件</span></span><br><span class="line"><span class="string">├──</span> <span class="string">scaffolds</span>           <span class="comment"># hexo 模板</span></span><br><span class="line"><span class="string">├──</span> <span class="string">source</span>              <span class="comment"># 文章目录</span></span><br><span class="line"><span class="string">└──</span> <span class="string">themes</span>              <span class="comment"># 主题目录</span></span><br></pre></td></tr></table></figure>
<h3 id="配置-blog"><a href="#配置-blog" class="headerlink" title="配置 blog"></a>配置 blog</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看配置</span></span><br><span class="line">grep -v <span class="string">"#"</span> _config.yml |grep -v <span class="string">"^$"</span></span><br><span class="line">cp _config.yml _config.yml.bak</span><br><span class="line"></span><br><span class="line"><span class="comment"># 标题、描述、关键字</span></span><br><span class="line">title: blyanqi@163.com</span><br><span class="line">subtitle: <span class="string">''</span></span><br><span class="line">description: <span class="string">'君子学以聚之，问以辩之，宽以居之，仁以行之。'</span></span><br><span class="line">keywords: 运维、自动化、devops、容器架构</span><br><span class="line">author: yan qi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 语言、时区、站点 url</span></span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: <span class="string">'Asia/Shanghai'</span></span><br><span class="line">url: http://yoursite.com</span><br><span class="line">root: /</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文章按日期分类</span></span><br><span class="line">new_post_name: :year/:month/:title/</span><br><span class="line">permalink: :year/:month/:title.md</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line"></span><br><span class="line"><span class="comment"># 目录配置</span></span><br><span class="line">source_dir: <span class="built_in">source</span></span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line">default_layout: post</span><br><span class="line">external_link:</span><br><span class="line">  exclude: <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件名大小写</span></span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成文章资源文件夹</span></span><br><span class="line">post_asset_folder: <span class="literal">true</span></span><br><span class="line">relative_link: <span class="literal">false</span></span><br><span class="line">future: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 代码框配置</span></span><br><span class="line">highlight:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  line_number: <span class="literal">true</span></span><br><span class="line">  auto_detect: <span class="literal">false</span></span><br><span class="line">  tab_replace: <span class="string">''</span></span><br><span class="line">  wrap: <span class="literal">true</span></span><br><span class="line">  hljs: <span class="literal">false</span></span><br><span class="line">index_generator:</span><br><span class="line">  path: <span class="string">''</span></span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line">meta_generator: <span class="literal">true</span></span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line">use_date_for_updated: <span class="literal">false</span></span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line">include:</span><br><span class="line">exclude:</span><br><span class="line">ignore:</span><br><span class="line">theme: next</span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: <span class="string">''</span></span><br></pre></td></tr></table></figure>
<h3 id="写文章、配置文章本地图片"><a href="#写文章、配置文章本地图片" class="headerlink" title="写文章、配置文章本地图片"></a>写文章、配置文章本地图片</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成 markdown 文件(source/_post 下)</span></span><br><span class="line">hexo n first</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置站点配置 _config.yml:</span></span><br><span class="line">post_asset_folder: <span class="literal">false</span>改为post_asset_folder: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装插件</span></span><br><span class="line">npm install hexo-asset-image -- save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建文章(同时生成和文章相同的目录)</span></span><br><span class="line">hexo n firstimg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 markdown 添加图片</span></span><br><span class="line">在想添加的位置写入![](图片名字.图片格式),例如![](1.png)。</span><br></pre></td></tr></table></figure>
<h2 id="下载-next-主题"><a href="#下载-next-主题" class="headerlink" title="下载 next 主题"></a>下载 next 主题</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置加速，否则很慢</span></span><br><span class="line"><span class="comment"># 使用之前配置一下 github 进行加速。使用 https://www.ipaddress.com/ 进行地址查询</span></span><br><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;/etc/hosts</span><br><span class="line">140.82.113.3 github.com</span><br><span class="line">185.199.109.153 assets-cdn.github.com</span><br><span class="line">199.232.69.194 github.global.ssl.fastly.net</span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># 下载主题</span></span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<h3 id="next-主题目录"><a href="#next-主题目录" class="headerlink" title="next 主题目录"></a>next 主题目录</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">├──</span> <span class="string">LICENSE.md</span></span><br><span class="line"><span class="string">├──</span> <span class="string">README.md</span></span><br><span class="line"><span class="string">├──</span> <span class="string">_config.yml</span>     <span class="comment"># 主题配置文件</span></span><br><span class="line"><span class="string">├──</span> <span class="string">crowdin.yml</span></span><br><span class="line"><span class="string">├──</span> <span class="string">docs</span>            <span class="comment"># 帮助信息</span></span><br><span class="line"><span class="string">├──</span> <span class="string">gulpfile.js</span></span><br><span class="line"><span class="string">├──</span> <span class="string">languages</span>       <span class="comment">#语言包</span></span><br><span class="line"><span class="string">├──</span> <span class="string">layout</span></span><br><span class="line"><span class="string">├──</span> <span class="string">package.json</span>    <span class="comment"># npm 依赖</span></span><br><span class="line"><span class="string">├──</span> <span class="string">renovate.json</span></span><br><span class="line"><span class="string">├──</span> <span class="string">scripts</span>         <span class="comment"># js 文件</span></span><br><span class="line"><span class="string">└──</span> <span class="string">source</span>          <span class="comment"># 资源文件：css、字体、svg</span></span><br></pre></td></tr></table></figure>
<h3 id="配置-next-主题"><a href="#配置-next-主题" class="headerlink" title="配置 next 主题"></a>配置 next 主题</h3><blockquote>
<p>主题配置内容比较多 <a href="https://hexo-theme-next.netlify.app/docs/" target="_blank" rel="noopener">next 主题配置</a></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 此处纪录常用配置</span></span><br><span class="line"><span class="comment"># 使用主题 themes/next/_config.yml 查找 theme</span></span><br><span class="line"><span class="comment"># sed -i '/^theme/s/landscape/next/' _config.yml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看一下配置文件</span></span><br><span class="line">grep -v <span class="string">"#"</span> themes/next/_config.yml |grep -v <span class="string">"^$"</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改一下 scheme (hexo 主题有4种样式)，选用 Gemini</span></span><br><span class="line">scheme: Gemini</span><br><span class="line"></span><br><span class="line"><span class="comment"># 代码高亮 codeblock</span></span><br><span class="line">codeblock:</span><br><span class="line">  theme:</span><br><span class="line">    light: vs</span><br><span class="line">    dark: tomorrow-night</span><br><span class="line"></span><br><span class="line"><span class="comment"># footer 修改</span></span><br><span class="line">since: 2017</span><br><span class="line">animated: <span class="literal">true</span></span><br><span class="line">powered: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 post 模板</span></span><br><span class="line">vim scaffolds/post.md</span><br><span class="line"><span class="comment"># 添加：</span></span><br><span class="line">categories:</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加字数统计 （新创建 post 才会有数据）</span></span><br><span class="line">npm install hexo-symbols-count-time</span><br><span class="line"></span><br><span class="line"><span class="comment"># hexo config</span></span><br><span class="line"><span class="comment"># Post Wordcount</span></span><br><span class="line">symbols_count_time:</span><br><span class="line">  symbols: <span class="literal">true</span></span><br><span class="line">  time: <span class="literal">true</span></span><br><span class="line">  total_symbols: <span class="literal">true</span></span><br><span class="line">  total_time: <span class="literal">true</span></span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br><span class="line"></span><br><span class="line"><span class="comment"># hexo/theme/next/_config.yml</span></span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: <span class="literal">true</span></span><br><span class="line">  item_text_post: <span class="literal">true</span></span><br><span class="line">  item_text_total: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SEO 配置 next/_config.yml</span></span><br><span class="line">disable_baidu_transformation: <span class="literal">true</span></span><br><span class="line">index_with_subtitle: <span class="literal">true</span></span><br><span class="line">exturl: <span class="literal">true</span></span><br><span class="line">google_site_verification: XXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">bing_site_verification: XXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">baidu_site_verification: XXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">baidu_push: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># web Analytics</span></span><br><span class="line">google_analytics:</span><br><span class="line">  tracking_id: UA-XXXXXXXX-X</span><br><span class="line">  only_pageview: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Local Search 配置</span></span><br><span class="line">npm install hexo-generator-searchdb</span><br><span class="line"><span class="comment"># hexo/_config.yml</span></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  <span class="built_in">limit</span>: 10000</span><br><span class="line"></span><br><span class="line"><span class="comment"># next/_config.yml</span></span><br><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class="line">local_search:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  trigger: auto</span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  top_n_per_article: 1</span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  unescape: <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  preload: <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h2 id="设置文章分类"><a href="#设置文章分类" class="headerlink" title="设置文章分类"></a>设置文章分类</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建 page</span></span><br><span class="line">hexo new page categories</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取日期</span></span><br><span class="line">date <span class="string">"+%F %T"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 page</span></span><br><span class="line">cat &lt;&lt;<span class="string">"EOF"</span> &gt;<span class="built_in">source</span>/categories/index.md</span><br><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date: 2020-05-13 16:22:16 </span><br><span class="line"><span class="built_in">type</span>: <span class="string">"categories"</span></span><br><span class="line">---</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给文章添加“categories”属性</span></span><br><span class="line">categories: </span><br><span class="line">- develop</span><br></pre></td></tr></table></figure>
<h2 id="设置文章标签"><a href="#设置文章标签" class="headerlink" title="设置文章标签"></a>设置文章标签</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建 page</span></span><br><span class="line">hexo new page tags</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 page</span></span><br><span class="line">cat &lt;&lt;<span class="string">"EOF"</span> &gt;<span class="built_in">source</span>/tags/index.md</span><br><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2020-05-13 16:22:16 </span><br><span class="line"><span class="built_in">type</span>: <span class="string">"tags"</span></span><br><span class="line">---</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给文章添加“tags”属性</span></span><br><span class="line">tags:</span><br><span class="line">- jQuery</span><br><span class="line">- 表格</span><br></pre></td></tr></table></figure>
<h2 id="设置文章置顶"><a href="#设置文章置顶" class="headerlink" title="设置文章置顶"></a>设置文章置顶</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在post中添加标签</span></span><br><span class="line">top: 10</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以修改模板添加标识，不添加也不影响</span></span><br><span class="line">vim /themes/*/layout/_macro/post.ejs</span><br><span class="line">&lt;% <span class="keyword">if</span> (page.top) &#123; %&gt;</span><br><span class="line">  &lt;i class=<span class="string">"fa fa-thumb-tack"</span>&gt;&lt;/i&gt;</span><br><span class="line">  &lt;font color=7D26CD&gt;置顶&lt;/font&gt;</span><br><span class="line">  &lt;span class=<span class="string">"post-meta-divider"</span>&gt;|&lt;/span&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>
<h2 id="使用数学公式"><a href="#使用数学公式" class="headerlink" title="使用数学公式"></a>使用数学公式</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br><span class="line"></span><br><span class="line">vim themes/*/_config.yml</span><br><span class="line">mathjax:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  mhchem: <span class="literal">false</span> <span class="comment">#化学公式</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在文章中加</span></span><br><span class="line">mathjax: <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h2 id="使用音视频"><a href="#使用音视频" class="headerlink" title="使用音视频"></a>使用音视频</h2><ul>
<li><a href="https://github.com/grzhan/hexo-tag-aplayer" target="_blank" rel="noopener">音频</a></li>
<li><a href="https://github.com/NextMoe/hexo-tag-dplayer" target="_blank" rel="noopener">视频</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 音频插件</span></span><br><span class="line">npm install hexo-tag-aplayer</span><br><span class="line"><span class="comment"># 视频插件</span></span><br><span class="line">npm install hexo-tag-dplayer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在markdown里添加音频</span></span><br><span class="line">&#123;% aplayer <span class="string">"她的睫毛"</span> <span class="string">"周杰伦"</span> <span class="string">"http://home.ustc.edu.cn/~mmmwhy/%d6%dc%bd%dc%c2%d7%20-%20%cb%fd%b5%c4%bd%de%c3%ab.mp3"</span>  <span class="string">"http://home.ustc.edu.cn/~mmmwhy/jay.jpg"</span> <span class="string">"autoplay=false"</span> %&#125;</span><br><span class="line"><span class="comment"># 在markdown里添加视频</span></span><br><span class="line">&#123;% dplayer <span class="string">"url=http://home.ustc.edu.cn/~mmmwhy/GEM.mp4"</span>  <span class="string">"pic=http://home.ustc.edu.cn/~mmmwhy/GEM.jpg"</span> <span class="string">"loop=yes"</span> <span class="string">"theme=#FADFA3"</span> <span class="string">"autoplay=false"</span> <span class="string">"token=tokendemo"</span> %&#125;</span><br></pre></td></tr></table></figure>
<h2 id="站内文章引用"><a href="#站内文章引用" class="headerlink" title="站内文章引用"></a>站内文章引用</h2><figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% post_link 路径/文件名(不要后缀) 文章别名(可选) %&#125;</span><br><span class="line">&#123;% post_link dir/hexo安装配置 %&#125;</span><br></pre></td></tr></table></figure>
<h2 id="设置字体大小"><a href="#设置字体大小" class="headerlink" title="设置字体大小"></a>设置字体大小</h2><figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">vim themes/next/<span class="keyword">source</span>/css/_variables/base.styl</span><br><span class="line">/font-<span class="keyword">size</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// Font size</span></span><br><span class="line">  <span class="number">91</span> $font-<span class="keyword">size</span>-base           = (hexo-config(<span class="string">'font.enable'</span>) and hexo-config(<span class="string">'font.global.size'</span>) is a <span class="string">'unit'</span>) ? <span class="keyword">unit</span>(hexo-config(<span class="string">'font.global.size'</span>), em) : <span class="number">.8</span>em;</span><br><span class="line">  <span class="number">92</span> $font-<span class="keyword">size</span>-smallest       = <span class="number">.5</span>em;</span><br><span class="line">  <span class="number">93</span> $font-<span class="keyword">size</span>-smaller        = <span class="number">.55</span>m;</span><br><span class="line">  <span class="number">94</span> $font-<span class="keyword">size</span>-small          = <span class="number">1.18</span>em;</span><br><span class="line">  <span class="number">95</span> $font-<span class="keyword">size</span>-medium         = <span class="number">.8</span>em;</span><br><span class="line">  <span class="number">96</span> $font-<span class="keyword">size</span>-large          = <span class="number">.85</span>em;</span><br><span class="line">  <span class="number">97</span> $font-<span class="keyword">size</span>-larger         = <span class="number">.9</span>em;</span><br><span class="line">  <span class="number">98</span> $font-<span class="keyword">size</span>-largest        = <span class="number">1.38</span>em;</span><br></pre></td></tr></table></figure>
<h2 id="生成部署-hexo"><a href="#生成部署-hexo" class="headerlink" title="生成部署 hexo"></a>生成部署 hexo</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成静态文件 (用于githup page 部署)</span></span><br><span class="line">hexo generate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个 githup repository</span></span><br><span class="line">name: blog.githup.io</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 githup 库地址 _config.yaml</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/blyanqi/blog.githup.io.git</span><br><span class="line">  branch: master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为github设置SSH Keys</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"blyanqi@163.com"</span></span><br><span class="line"><span class="comment"># 测试 ssh key</span></span><br><span class="line">ssh -T git@github.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署到 githup page</span></span><br><span class="line">npm install --save hexo-deployer-git</span><br><span class="line">hexo deploy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一键部署</span></span><br><span class="line"><span class="comment"># 编辑 package.json</span></span><br><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"build"</span>: <span class="string">"hexo generate"</span>,</span><br><span class="line">    <span class="string">"clean"</span>: <span class="string">"hexo clean"</span>,</span><br><span class="line">    <span class="string">"deploy"</span>: <span class="string">"hexo deploy"</span>,</span><br><span class="line">    <span class="string">"server"</span>: <span class="string">"hexo server"</span>,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"># build</span></span><br><span class="line">npm run deploy</span><br></pre></td></tr></table></figure>
<h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">INFO  Copying files from public folder...</span><br><span class="line">FATAL Something<span class="string">'s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">TypeError [ERR_INVALID_ARG_TYPE]: The "mode" argument must be integer. Received an instance of Object</span></span><br><span class="line"><span class="string">    at copyFile (fs.js:1890:10)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 是因为 nodejs 版本问题，选用稳定版本 v12.16.3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">remote: Invalid username or password.</span></span><br><span class="line"><span class="string">fatal: Authentication failed for '</span>https://github.com/blyanqi/blog.githup.io.git/<span class="string">'</span></span><br><span class="line"><span class="string">FATAL Something'</span>s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br><span class="line">Error: Spawn failed</span><br><span class="line"></span><br><span class="line"><span class="comment"># git 验证失败</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># index.html 里面空白没有内容 (重新生成一遍，可能是node换版本导致)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 静态文件请求不到，修改 _config,yaml 里 root: / 改成  root: /blog.githup.io/</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>develop</category>
      </categories>
      <tags>
        <tag>github page</tag>
        <tag>hexo</tag>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>配置国内镜像源</title>
    <url>/blog.githup.io/2020/05/%E9%85%8D%E7%BD%AE%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="删除所有源"><a href="#删除所有源" class="headerlink" title="删除所有源"></a>删除所有源</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">rm</span>  <span class="string">/etc/yum.repos.d/* -rf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新缓存</span></span><br><span class="line"><span class="attr">yum</span> <span class="string">clean all &amp;&amp; yum makecache</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看源</span></span><br><span class="line"><span class="attr">yum</span> <span class="string">repolist all</span></span><br></pre></td></tr></table></figure>
<h2 id="centos-镜像源"><a href="#centos-镜像源" class="headerlink" title="centos 镜像源"></a>centos 镜像源</h2><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"># Aliyun 源</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-<span class="module-access"><span class="module"><span class="identifier">Base</span>.</span></span>repo http:<span class="comment">//mirrors.aliyun.com/repo/Centos-7.repo</span></span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-<span class="module-access"><span class="module"><span class="identifier">Base</span>.</span></span>repo http:<span class="comment">//mirrors.aliyun.com/repo/Centos-8.repo</span></span><br></pre></td></tr></table></figure>
<h2 id="docker-镜像源"><a href="#docker-镜像源" class="headerlink" title="docker 镜像源"></a>docker 镜像源</h2><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">wget http<span class="variable">s:</span>//mirrors.aliyun.<span class="keyword">com</span>/docker-<span class="keyword">ce</span>/linux/centos/docker-<span class="keyword">ce</span>.repo -O /etc/yum.repos.d/docker-<span class="keyword">ce</span>.repo</span><br></pre></td></tr></table></figure>
<h2 id="docker-registry-源"><a href="#docker-registry-源" class="headerlink" title="docker registry 源"></a>docker registry 源</h2><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://pe80e41t.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 加载 reload</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl reload docker</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>数据结构</title>
    <url>/blog.githup.io/2020/05/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="数据结构概念"><a href="#数据结构概念" class="headerlink" title="数据结构概念"></a>数据结构概念</h2>]]></content>
  </entry>
  <entry>
    <title>Consul安装配置</title>
    <url>/blog.githup.io/2020/05/Consul%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href>consul</a></li>
</ul>
<h2 id="Consul-conceptual"><a href="#Consul-conceptual" class="headerlink" title="Consul conceptual"></a>Consul conceptual</h2><ul>
<li>微服务</li>
<li>服务网格</li>
<li>服务发现</li>
<li>服务间调用</li>
<li>限流</li>
<li>熔断</li>
<li>监控</li>
</ul>
<h2 id="Consul-集群安装"><a href="#Consul-集群安装" class="headerlink" title="Consul 集群安装"></a>Consul 集群安装</h2><h2 id="服务注册"><a href="#服务注册" class="headerlink" title="服务注册"></a>服务注册</h2><h2 id="限流"><a href="#限流" class="headerlink" title="限流"></a>限流</h2><h2 id="熔断"><a href="#熔断" class="headerlink" title="熔断"></a>熔断</h2><h2 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h2>]]></content>
  </entry>
  <entry>
    <title>kong安装配置</title>
    <url>/blog.githup.io/2020/05/kong%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://docs.konghq.com/" target="_blank" rel="noopener">Kong docs </a></li>
</ul>
<h2 id="kong-consul"><a href="#kong-consul" class="headerlink" title="kong consul"></a>kong consul</h2><ul>
<li>nginx</li>
<li>lua</li>
<li>API</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>gitlab迁移</title>
    <url>/blog.githup.io/2020/05/gitlab%E8%BF%81%E7%A7%BB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="迁移"><a href="#迁移" class="headerlink" title="迁移"></a>迁移</h1><h2 id="一、备份"><a href="#一、备份" class="headerlink" title="一、备份"></a>一、备份</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 关闭 nginx</span></span><br><span class="line">gitlab-ctl stop nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份</span></span><br><span class="line">gitlab-rake gitlab:backup:create</span><br><span class="line">---</span><br><span class="line">Dumping database ... </span><br><span class="line">Dumping PostgreSQL database gitlabhq_production ... [DONE]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">Dumping repositories ...</span><br><span class="line"> * uhetrip/BuyerWeb ... [DONE]</span><br><span class="line"> * uhetrip/BuyerWeb.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/DataService ... [DONE]</span><br><span class="line"> * uhetrip/DataService.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/OrderService ... [DONE]</span><br><span class="line"> * uhetrip/OrderService.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/TicketingService ... [DONE]</span><br><span class="line"> * uhetrip/TicketingService.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/RefundService ... [DONE]</span><br><span class="line"> * uhetrip/RefundService.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/OperationService ... [DONE]</span><br><span class="line"> * uhetrip/OperationService.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/PaymentService ... [DONE]</span><br><span class="line"> * uhetrip/PaymentService.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/AccountingService ... [DONE]</span><br><span class="line"> * uhetrip/AccountingService.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/DBService ... [DONE]</span><br><span class="line"> * uhetrip/DBService.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/AuthService ... [DONE]</span><br><span class="line"> * uhetrip/AuthService.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/LoggingService ... [DONE]</span><br><span class="line"> * uhetrip/LoggingService.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/OperationWeb ... [DONE]</span><br><span class="line"> * uhetrip/OperationWeb.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/common-net ... [DONE]</span><br><span class="line"> * uhetrip/common-net.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/UtilService ... [DONE]</span><br><span class="line"> * uhetrip/UtilService.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/common-java ... [DONE]</span><br><span class="line"> * uhetrip/common-java.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/dev-env ... [DONE]</span><br><span class="line"> * uhetrip/dev-env.wiki ...  [SKIPPED]</span><br><span class="line"> * spider-fare/lcc_spider ... [DONE]</span><br><span class="line"> * spider-fare/lcc_spider.wiki ...  [SKIPPED]</span><br><span class="line"> * spider-fare-service/lcc_shopping ... [DONE]</span><br><span class="line"> * spider-fare-service/lcc_shopping.wiki ...  [SKIPPED]</span><br><span class="line"> * lihaipeng/TaskService ... [DONE]</span><br><span class="line"> * lihaipeng/TaskService.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/TaskSchedulerService ... [DONE]</span><br><span class="line"> * uhetrip/TaskSchedulerService.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/monitor ... [DONE]</span><br><span class="line"> * uhetrip/monitor.wiki ...  [SKIPPED]</span><br><span class="line"> * data-source/eterm-service ... [DONE]</span><br><span class="line"> * data-source/eterm-service.wiki ...  [SKIPPED]</span><br><span class="line"> * data-source/worldspan-service ... [DONE]</span><br><span class="line"> * data-source/worldspan-service.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/SupplierWeb ... [DONE]</span><br><span class="line"> * uhetrip/SupplierWeb.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/CommissionService ... [DONE]</span><br><span class="line"> * uhetrip/CommissionService.wiki ...  [SKIPPED]</span><br><span class="line"> * spider-booker/lcc_booker ... [DONE]</span><br><span class="line"> * spider-booker/lcc_booker.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/SupplierService ... [DONE]</span><br><span class="line"> * uhetrip/SupplierService.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/PromotionService ... [DONE]</span><br><span class="line"> * uhetrip/PromotionService.wiki ...  [SKIPPED]</span><br><span class="line"> * spider-fare-service/lcc_booking ... [DONE]</span><br><span class="line"> * spider-fare-service/lcc_booking.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/MonitoringWeb ... [DONE]</span><br><span class="line"> * uhetrip/MonitoringWeb.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/MonitoringService ... [DONE]</span><br><span class="line"> * uhetrip/MonitoringService.wiki ...  [SKIPPED]</span><br><span class="line"> * uhetrip/DistributionAPI ... [DONE]</span><br><span class="line"> * uhetrip/DistributionAPI.wiki ...  [SKIPPED]</span><br><span class="line"> * spider-ticket-info/lcc_ticket_info ... [DONE]</span><br><span class="line"> * spider-ticket-info/lcc_ticket_info.wiki ...  [SKIPPED]</span><br><span class="line"> * spider-fare-service/lcc_fare_tracker ... [DONE]</span><br><span class="line"> * spider-fare-service/lcc_fare_tracker.wiki ...  [SKIPPED]</span><br><span class="line"> * spider-fare/lcc_spider_node ... [DONE]</span><br><span class="line"> * spider-fare/lcc_spider_node.wiki ...  [SKIPPED]</span><br><span class="line"> * tickectValidator/ticketValidator ... [DONE]</span><br><span class="line"> * tickectValidator/ticketValidator.wiki ...  [SKIPPED]</span><br><span class="line"> * operation/settelment2 ... [DONE]</span><br><span class="line"> * operation/settelment2.wiki ...  [SKIPPED]</span><br><span class="line"> * operation/airCore2 ... [DONE]</span><br><span class="line"> * operation/airCore2.wiki ...  [SKIPPED]</span><br><span class="line"> * lcc/lcc_yawei ... [DONE]</span><br><span class="line"> * lcc/lcc_yawei.wiki ...  [SKIPPED]</span><br><span class="line"> * spider-booker/lcc_booker_node ... [DONE]</span><br><span class="line"> * spider-booker/lcc_booker_node.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-gds/fesf-gds-sabre ... [DONE]</span><br><span class="line"> * fesf-gds/fesf-gds-sabre.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-transaction/fesf-access-control-service ... [DONE]</span><br><span class="line"> * fesf-transaction/fesf-access-control-service.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-transaction/fesf-shopping-service ... [DONE]</span><br><span class="line"> * fesf-transaction/fesf-shopping-service.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-transaction/fesf-booking-service ... [DONE]</span><br><span class="line"> * fesf-transaction/fesf-booking-service.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-transaction/fesf-shopping-engine-service ... [DONE]</span><br><span class="line"> * fesf-transaction/fesf-shopping-engine-service.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-transaction/fesf-commission-service ... [DONE]</span><br><span class="line"> * fesf-transaction/fesf-commission-service.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-transaction/fesf-roe-service ... [DONE]</span><br><span class="line"> * fesf-transaction/fesf-roe-service.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-transaction/fesf-commission-web ... [DONE]</span><br><span class="line"> * fesf-transaction/fesf-commission-web.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-transaction/fesf-marketing-web ... [DONE]</span><br><span class="line"> * fesf-transaction/fesf-marketing-web.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-transaction/fesf-roe-web ... [DONE]</span><br><span class="line"> * fesf-transaction/fesf-roe-web.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-fundamental/fesf-permission-service ... [DONE]</span><br><span class="line"> * fesf-fundamental/fesf-permission-service.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-business/fesf-order-service ... [DONE]</span><br><span class="line"> * fesf-business/fesf-order-service.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-business/fesf-order-web ... [DONE]</span><br><span class="line"> * fesf-business/fesf-order-web.wiki ...  [SKIPPED]</span><br><span class="line"> * lihaipeng/fesf-archetype ... [DONE]</span><br><span class="line"> * lihaipeng/fesf-archetype.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-fundamental/fesf-common-dto ... [DONE]</span><br><span class="line"> * fesf-fundamental/fesf-common-dto.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-fundamental/ops ... [DONE]</span><br><span class="line"> * fesf-fundamental/ops.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-fundamental/fesf-preload-service ... [DONE]</span><br><span class="line"> * fesf-fundamental/fesf-preload-service.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-fundamental/fesf-scheduler-service ... [DONE]</span><br><span class="line"> * fesf-fundamental/fesf-scheduler-service.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-fundamental/fesf-utility ... [DONE]</span><br><span class="line"> * fesf-fundamental/fesf-utility.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-gds/fesf-gds-navitaire ... [DONE]</span><br><span class="line"> * fesf-gds/fesf-gds-navitaire.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-gds/fesf-gds-mock-service ... [DONE]</span><br><span class="line"> * fesf-gds/fesf-gds-mock-service.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-business/fesf-analysis-web ... [DONE]</span><br><span class="line"> * fesf-business/fesf-analysis-web.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-business/fesf-analysis-service ... [DONE]</span><br><span class="line"> * fesf-business/fesf-analysis-service.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-business/fesf-analysis-assist-service ... [DONE]</span><br><span class="line"> * fesf-business/fesf-analysis-assist-service.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-gds/fesf-gds-grandholidays ... [DONE]</span><br><span class="line"> * fesf-gds/fesf-gds-grandholidays.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-business/fesf-accounting-service ... [DONE]</span><br><span class="line"> * fesf-business/fesf-accounting-service.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-business/fesf-accounting-web ... [DONE]</span><br><span class="line"> * fesf-business/fesf-accounting-web.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-gds/fesf-gds-farelogix ... [DONE]</span><br><span class="line"> * fesf-gds/fesf-gds-farelogix.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-gds/fesf-ndc-172 ... [DONE]</span><br><span class="line"> * fesf-gds/fesf-ndc-172.wiki ...  [SKIPPED]</span><br><span class="line"> * fesf-gds/fesf-gds-travelport ... [DONE]</span><br><span class="line"> * fesf-gds/fesf-gds-travelport.wiki ...  [SKIPPED]</span><br><span class="line"> * operation/OrderDispatcher ... [DONE]</span><br><span class="line"> * operation/OrderDispatcher.wiki ...  [SKIPPED]</span><br><span class="line"> * spider-fare-service/lcc_fare_catcher ... [DONE]</span><br><span class="line"> * spider-fare-service/lcc_fare_catcher.wiki ...  [SKIPPED]</span><br><span class="line"> * operation/manualTicket ... [DONE]</span><br><span class="line"> * operation/manualTicket.wiki ...  [SKIPPED]</span><br><span class="line"> * spider-fare/lcc_spider_browser ... [DONE]</span><br><span class="line"> * spider-fare/lcc_spider_browser.wiki ...  [SKIPPED]</span><br><span class="line"> * operation/TicketValidator ... [DONE]</span><br><span class="line"> * operation/TicketValidator.wiki ...  [SKIPPED]</span><br><span class="line"> * fare-stream/fare_stream_spark ... [DONE]</span><br><span class="line"> * fare-stream/fare_stream_spark.wiki ...  [SKIPPED]</span><br><span class="line"> * zhoucailiang/gohello ... [SKIPPED]</span><br><span class="line"> * zhoucailiang/gohello.wiki ...  [SKIPPED]</span><br><span class="line"> * spider-booker/lcc-automatic-order ... [DONE]</span><br><span class="line"> * spider-booker/lcc-automatic-order.wiki ...  [SKIPPED]</span><br><span class="line"> * uhe-standard-template/uhe-back-end-web ... [DONE]</span><br><span class="line"> * uhe-standard-template/uhe-back-end-web.wiki ...  [SKIPPED]</span><br><span class="line"> * uhe-standard-template/uhe-front-end-web ... [DONE]</span><br><span class="line"> * uhe-standard-template/uhe-front-end-web.wiki ...  [SKIPPED]</span><br><span class="line"> * spider-booker/lcc-automatic-order-service ... [DONE]</span><br><span class="line"> * spider-booker/lcc-automatic-order-service.wiki ...  [SKIPPED]</span><br><span class="line"> * uhe-standard-template/biz-monitor ... [DONE]</span><br><span class="line"> * uhe-standard-template/biz-monitor.wiki ...  [SKIPPED]</span><br><span class="line"> * spider-ticket-info/text-parse-service ... [DONE]</span><br><span class="line"> * spider-ticket-info/text-parse-service.wiki ...  [SKIPPED]</span><br><span class="line"> * product/refactor-order-system ... [DONE]</span><br><span class="line"> * product/refactor-order-system.wiki ...  [DONE]</span><br><span class="line"> * product/auth-system ... [SKIPPED]</span><br><span class="line"> * product/auth-system.wiki ...  [DONE]</span><br><span class="line"> * go-go/go-auth-service ... [DONE]</span><br><span class="line"> * go-go/go-auth-service.wiki ...  [SKIPPED]</span><br><span class="line"> * go-go/go-order-service ... [DONE]</span><br><span class="line"> * go-go/go-order-service.wiki ...  [SKIPPED]</span><br><span class="line"> * go-go/dev-ops ... [DONE]</span><br><span class="line"> * go-go/dev-ops.wiki ...  [SKIPPED]</span><br><span class="line"> * go-go/go-meta-web ... [DONE]</span><br><span class="line"> * go-go/go-meta-web.wiki ...  [SKIPPED]</span><br><span class="line"> * go-go/go-ota-adapter-service ... [DONE]</span><br><span class="line"> * go-go/go-ota-adapter-service.wiki ...  [SKIPPED]</span><br><span class="line"> * go-go/go-order-web ... [DONE]</span><br><span class="line"> * go-go/go-order-web.wiki ...  [SKIPPED]</span><br><span class="line"> * stool/stool-order-service ... [DONE]</span><br><span class="line"> * stool/stool-order-service.wiki ...  [SKIPPED]</span><br><span class="line"> * stool/stool-passenger-service ... [DONE]</span><br><span class="line"> * stool/stool-passenger-service.wiki ...  [SKIPPED]</span><br><span class="line"> * stool/stool-scheduler-service ... [DONE]</span><br><span class="line"> * stool/stool-scheduler-service.wiki ...  [SKIPPED]</span><br><span class="line"> * stool/wx-azf-app ... [DONE]</span><br><span class="line"> * stool/wx-azf-app.wiki ...  [SKIPPED]</span><br><span class="line"> * go-meta/go-meta-web ... [DONE]</span><br><span class="line"> * go-meta/go-meta-web.wiki ...  [SKIPPED]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">Dumping uploads ... </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">Dumping builds ... </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">Dumping artifacts ... </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">Dumping pages ... </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">Dumping lfs objects ... </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">Dumping container registry images ... </span><br><span class="line">[DISABLED]</span><br><span class="line">Creating backup archive: 1589946460_2020_05_20_10.2.1_gitlab_backup.tar ... <span class="keyword">done</span></span><br><span class="line">Uploading backup archive to remote storage  ... skipped</span><br><span class="line">Deleting tmp directories ... <span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">Deleting old backups ... skipping</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 /var/opt/gitlab/backups 生成备份文件</span></span><br><span class="line">ls /var/opt/gitlab/backups</span><br><span class="line">---</span><br><span class="line">-rw------- 1 git git 372561920 May 20 11:47 1589946460_2020_05_20_10.2.1_gitlab_backup.tar</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份配置文件</span></span><br><span class="line">cp /etc/gitlab/gitlab.rb gitlab.rb`date <span class="string">"+%F"</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份nginx配置文件</span></span><br><span class="line">cp /var/opt/gitlab/nginx/conf/gitlab-http.conf gitlab-http.conf`date <span class="string">"+%F"</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份邮件配置</span></span><br><span class="line">cp /etc/postfix/main.cf main.cf`date <span class="string">"+%F"</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment"># [可修改备份文件目录]</span></span><br><span class="line">gitlab_rails[<span class="string">'backup_path'</span>] = <span class="string">"/var/opt/gitlab/backups"</span></span><br></pre></td></tr></table></figure>
<h2 id="二、将文件复制到新机器"><a href="#二、将文件复制到新机器" class="headerlink" title="二、将文件复制到新机器"></a>二、将文件复制到新机器</h2><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 复制相关文件到新服务器</span></span><br><span class="line">scp <span class="regexp">/var/</span>opt<span class="regexp">/gitlab/</span>backups<span class="regexp">/*_gitlab_backup.tar newserver:/</span>var<span class="regexp">/opt/gi</span>tlab<span class="regexp">/backups/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 授权</span></span><br><span class="line">chmod <span class="number">777</span> <span class="regexp">/var/</span>opt<span class="regexp">/gitlab/</span>backups<span class="regexp">/*_gitlab_backup.tar</span></span><br></pre></td></tr></table></figure>
<h2 id="三、恢复"><a href="#三、恢复" class="headerlink" title="三、恢复"></a>三、恢复</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 关闭 nginx</span></span><br><span class="line">gitlab-ctl <span class="keyword">stop</span> nginx</span><br><span class="line"></span><br><span class="line"><span class="comment">#停止相关数据连接服务</span></span><br><span class="line">gitlab-ctl <span class="keyword">stop</span> unicorn</span><br><span class="line">gitlab-ctl <span class="keyword">stop</span> sidekiq</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将备份文件复制到 new server：/var/opt/gitlab/backups/ 下</span></span><br><span class="line"><span class="comment"># 文件日期串</span></span><br><span class="line">gitlab-rake gitlab:<span class="keyword">backup</span>:<span class="keyword">restore</span> <span class="keyword">BACKUP</span>=文件日期串</span><br><span class="line"><span class="comment"># 两次 entry yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动相关数据连接服务</span></span><br><span class="line">gitlab-ctl <span class="keyword">start</span> unicorn</span><br><span class="line">gitlab-ctl <span class="keyword">start</span> sidekiq</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 nginx</span></span><br><span class="line">gitlab-ctl <span class="keyword">start</span> nginx</span><br></pre></td></tr></table></figure>
<h1 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 关闭 nginx</span></span><br><span class="line"><span class="string">gitlab-ctl</span> <span class="string">stop</span> <span class="string">nginx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份</span></span><br><span class="line"><span class="string">gitlab-rake</span> <span class="string">gitlab:backup:create</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 停服务</span></span><br><span class="line"><span class="string">gitlab-ctl</span> <span class="string">stop</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">ok: down: gitaly:</span> <span class="string">0s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: gitlab-monitor:</span> <span class="string">0s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: gitlab-workhorse:</span> <span class="string">0s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: logrotate:</span> <span class="string">1s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: nginx:</span> <span class="string">0s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: node-exporter:</span> <span class="string">1s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: postgres-exporter:</span> <span class="string">0s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: postgresql:</span> <span class="string">0s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: prometheus:</span> <span class="string">0s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: redis:</span> <span class="string">0s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: redis-exporter:</span> <span class="string">0s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: sidekiq:</span> <span class="string">0s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="attr">ok: down: unicorn:</span> <span class="string">1s,</span> <span class="string">normally</span> <span class="string">up</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<h2 id="安装升级包"><a href="#安装升级包" class="headerlink" title="安装升级包"></a>安装升级包</h2><a href="/blog.githup.io/2020/05/gitlab%E5%AE%89%E8%A3%85/" title="gitlib安装">gitlib安装</a>
<h2 id="启动-gitlab"><a href="#启动-gitlab" class="headerlink" title="启动 gitlab"></a>启动 gitlab</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 重新加载配置并启动</span></span><br><span class="line"><span class="string">gitlab-ctl</span> <span class="string">reconfigure</span></span><br><span class="line"><span class="string">gitlab-ctl</span> <span class="string">restart</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动gitlab</span></span><br><span class="line"><span class="string">gitlab-ctl</span> <span class="string">start</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">ok: run: gitaly:</span> <span class="string">(pid</span> <span class="number">22544</span><span class="string">)</span> <span class="string">1s</span></span><br><span class="line"><span class="attr">ok: run: gitlab-monitor:</span> <span class="string">(pid</span> <span class="number">22546</span><span class="string">)</span> <span class="string">0s</span></span><br><span class="line"><span class="attr">ok: run: gitlab-workhorse:</span> <span class="string">(pid</span> <span class="number">22552</span><span class="string">)</span> <span class="string">1s</span></span><br><span class="line"><span class="attr">ok: run: logrotate:</span> <span class="string">(pid</span> <span class="number">22566</span><span class="string">)</span> <span class="string">0s</span></span><br><span class="line"><span class="attr">ok: run: nginx:</span> <span class="string">(pid</span> <span class="number">22578</span><span class="string">)</span> <span class="string">1s</span></span><br><span class="line"><span class="attr">ok: run: node-exporter:</span> <span class="string">(pid</span> <span class="number">22583</span><span class="string">)</span> <span class="string">0s</span></span><br><span class="line"><span class="attr">ok: run: postgres-exporter:</span> <span class="string">(pid</span> <span class="number">22588</span><span class="string">)</span> <span class="string">0s</span></span><br><span class="line"><span class="attr">ok: run: postgresql:</span> <span class="string">(pid</span> <span class="number">22593</span><span class="string">)</span> <span class="string">1s</span></span><br><span class="line"><span class="attr">ok: run: prometheus:</span> <span class="string">(pid</span> <span class="number">22601</span><span class="string">)</span> <span class="string">0s</span></span><br><span class="line"><span class="attr">ok: run: redis:</span> <span class="string">(pid</span> <span class="number">22609</span><span class="string">)</span> <span class="string">1s</span></span><br><span class="line"><span class="attr">ok: run: redis-exporter:</span> <span class="string">(pid</span> <span class="number">22613</span><span class="string">)</span> <span class="string">0s</span></span><br><span class="line"><span class="attr">ok: run: sidekiq:</span> <span class="string">(pid</span> <span class="number">22618</span><span class="string">)</span> <span class="string">0s</span></span><br><span class="line"><span class="attr">ok: run: unicorn:</span> <span class="string">(pid</span> <span class="number">22625</span><span class="string">)</span> <span class="string">1s</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>devops</category>
      </categories>
  </entry>
  <entry>
    <title>容器技术原理</title>
    <url>/blog.githup.io/2020/05/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="namespace-隔离"><a href="#namespace-隔离" class="headerlink" title="namespace 隔离"></a>namespace 隔离</h2><h2 id="分层文件系统-overlay"><a href="#分层文件系统-overlay" class="headerlink" title="分层文件系统 overlay"></a>分层文件系统 overlay</h2>]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>linux-kernel</title>
    <url>/blog.githup.io/2020/05/linux-kernel/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.kernel.org/doc/html/latest/" target="_blank" rel="noopener">kernel</a><br><a href="https://www.ibm.com/developerworks/cn/linux/kernel/syscall/part1/appendix.html" target="_blank" rel="noopener">Linux系统调用列表</a><br><a href="https://cmake.org/cmake/help/latest/" target="_blank" rel="noopener">cmake</a></p>
<h3 id="kernel-source-directory"><a href="#kernel-source-directory" class="headerlink" title="kernel source directory"></a>kernel source directory</h3><hr>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">linux-<span class="number">5.6</span>.<span class="number">13</span>/</span><br><span class="line">├── COPYING</span><br><span class="line">├── CREDITS</span><br><span class="line">├── Documentation</span><br><span class="line">├── Kbuild</span><br><span class="line">├── Kconfig</span><br><span class="line">├── LICENSES</span><br><span class="line">├── MAINTAINERS</span><br><span class="line">├── Makefile</span><br><span class="line">├── README</span><br><span class="line">├── arch            <span class="comment"># 体系结构相关的代码，例如arm, x86等等。</span></span><br><span class="line">├── block           <span class="comment"># 提供块设备的层次。</span></span><br><span class="line">├── certs           <span class="comment"># </span></span><br><span class="line">├── crypto          <span class="comment"># 加密、解密相关的库函数</span></span><br><span class="line">├── drivers         <span class="comment"># 设备驱动</span></span><br><span class="line">├── fs              <span class="comment"># VFS子系统</span></span><br><span class="line">├── <span class="keyword">include</span>         <span class="comment"># 内核头文件，需要提供给外部模块（例如用户空间代码）使用</span></span><br><span class="line">├── init            <span class="comment"># Linux系统启动初始化相关的代码</span></span><br><span class="line">├── ipc             <span class="comment"># IPC（进程间通信）子系统</span></span><br><span class="line">├── kernel          <span class="comment"># Linux内核的核心代码，包含了3.2小节所描述的进程调度子系统，以及和进程调度相关的模块。</span></span><br><span class="line">├── <span class="class"><span class="keyword">lib</span>             <span class="comment"># 实现需要在内核中使用的库函数</span></span></span><br><span class="line">├── mm              <span class="comment"># 内存管理子系统</span></span><br><span class="line">├── net             <span class="comment"># 不包括网络设备驱动的网络子系统</span></span><br><span class="line">├── samples         <span class="comment"># 示例代码</span></span><br><span class="line">├── scripts         <span class="comment"># 用于内核编译的配置文件、脚本等。</span></span><br><span class="line">├── security        <span class="comment"># 提供安全特性（SELinux）</span></span><br><span class="line">├── sound           <span class="comment"># 音频相关的驱动及子系统，可以看作“音频子系统”。</span></span><br><span class="line">├── tools           <span class="comment"># 一些常用工具，如性能剖析、自测试等</span></span><br><span class="line">├── usr             <span class="comment"># 用于生成initramfs的代码</span></span><br><span class="line">└── virt            <span class="comment"># 提供虚拟机技术（KVM等）的支持</span></span><br></pre></td></tr></table></figure>
<h3 id="kernel-实现功能"><a href="#kernel-实现功能" class="headerlink" title="kernel 实现功能"></a>kernel 实现功能</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">* </span>系统调用接口</span><br><span class="line"><span class="bullet">* </span>进程管理</span><br><span class="line"><span class="bullet">    * </span>调度策略</span><br><span class="line"><span class="bullet">    * </span>架构特定的调度</span><br><span class="line"><span class="bullet">    * </span>架构独立的调度</span><br><span class="line"><span class="bullet">    * </span>系统调用接口</span><br><span class="line"><span class="bullet">* </span>内存管理</span><br><span class="line"><span class="bullet">    * </span>架构相关管理</span><br><span class="line"><span class="bullet">    * </span>架构独立管理</span><br><span class="line"><span class="bullet">    * </span>系统调用接口</span><br><span class="line"><span class="bullet">* </span>虚拟文件系统</span><br><span class="line"><span class="bullet">* </span>网络堆栈</span><br><span class="line"><span class="bullet">    * </span>网络设备驱动</span><br><span class="line"><span class="bullet">    * </span>设备独立接口</span><br><span class="line"><span class="bullet">    * </span>网络协议</span><br><span class="line"><span class="bullet">    * </span>协议独立接口</span><br><span class="line"><span class="bullet">    * </span>系统调用接口</span><br><span class="line"><span class="bullet">* </span>设备驱动程序</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>计算机</category>
      </categories>
  </entry>
  <entry>
    <title>Linux操作系统原理</title>
    <url>/blog.githup.io/2020/05/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>计算机组成原理</title>
    <url>/blog.githup.io/2020/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="指令集"><a href="#指令集" class="headerlink" title="指令集"></a>指令集</h2><ul>
<li><p><a href="https://zh.wikipedia.org/wiki/%E5%A4%8D%E6%9D%82%E6%8C%87%E4%BB%A4%E9%9B%86" target="_blank" rel="noopener">CISC 复杂指令集</a></p>
<ul>
<li>X86架构 (<a href="http://www.zhaoxin.com/" target="_blank" rel="noopener">兆芯</a>)<ul>
<li><a href="https://zh.wikipedia.org/wiki/X86" target="_blank" rel="noopener">X86</a></li>
</ul>
</li>
</ul>
</li>
<li><p><a href="https://zh.wikipedia.org/wiki/%E7%B2%BE%E7%AE%80%E6%8C%87%E4%BB%A4%E9%9B%86" target="_blank" rel="noopener">RISC 精简指令集</a></p>
<ul>
<li>ARM架构 (<a href="https://e.huawei.com/cn/solutions/hic" target="_blank" rel="noopener">华为</a>)<ul>
<li><a href="https://zh.wikipedia.org/wiki/ARM%E6%9E%B6%E6%A7%8B" target="_blank" rel="noopener">ARM</a></li>
</ul>
</li>
<li>MIPS架构(<a href="http://www.loongson.cn/index.html" target="_blank" rel="noopener">龙芯</a>)<ul>
<li><a href="https://zh.wikipedia.org/wiki/MIPS%E6%9E%B6%E6%A7%8B" target="_blank" rel="noopener">MIPS</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="计算机组成"><a href="#计算机组成" class="headerlink" title="计算机组成"></a>计算机组成</h2><ul>
<li>CPU</li>
<li>MEMORY</li>
<li>DISK</li>
<li><p>IO</p>
<ul>
<li>GPU</li>
<li>NET</li>
</ul>
</li>
<li><p>主板</p>
<ul>
<li>北桥<ul>
<li>CPU</li>
<li>MEMORY</li>
<li>GPU</li>
<li>PCIE</li>
</ul>
</li>
<li>南桥<ul>
<li>DISK</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="hello-world-工作流程"><a href="#hello-world-工作流程" class="headerlink" title="hello world 工作流程"></a>hello world 工作流程</h2><p><a href="https://yangwang.hk/?p=281" target="_blank" rel="noopener">引用：用机器码写hello world</a></p>
<p>加电 -&gt; BIOS -&gt; 读取第一扇区 -&gt; bootloader -&gt; 操作系统</p>
<ul>
<li>加电</li>
<li>BIOS<ul>
<li>电池</li>
<li>只读 ROM</li>
</ul>
</li>
<li><p>第一扇区</p>
<ul>
<li>MBR（ Master Boot Record，主引导记录 ）<ul>
<li>466字节的引导程序</li>
<li>64字节的分区表<blockquote>
<p>为什么一块硬盘上最多只能有四个主分区的原因——第五个主分区放不下…</p>
</blockquote>
</li>
<li>2字节的校验位</li>
</ul>
</li>
</ul>
</li>
<li><p>实模式</p>
</li>
<li><p>保护模式</p>
<ul>
<li>286架构<blockquote>
<p>段寄存器保存的数据不再是内存物理地址，而是称作选择器（selector）</p>
<ul>
<li>选择器<ul>
<li>高13位指向描述符表</li>
<li>最低的两位数据定义了请求的权限，从0到3，0是最高权限，3是最低权限；</li>
<li>剩下的一位表示是使用全局描述符表（GDT）还是局部描述符表（LDT）。</li>
</ul>
</li>
<li>全局描述表（GDT Global Descriptor Table)</li>
</ul>
</blockquote>
</li>
<li>386架构 （CPU开创的分页内存管理）<ul>
<li>页目（page directory）</li>
<li>页表（page table）<blockquote>
<p>CR3寄存器保存了进程的页目的物理地址。页目与页表中每4字节为一个单元，是一个32位的值，当页目项第0位为1时，表明页表已经在物理内存中；当页表项第0位为1时，表明访问的数据已经在内存中。</p>
</blockquote>
</li>
</ul>
</li>
</ul>
</li>
<li><p>0x7c00</p>
<blockquote>
<p>8086设计出了20位的寻址总线(16位集群器寻20位地址)<br>16位最大是65536，也就是64kb。2^20=1MB。</p>
</blockquote>
</li>
<li>段寄存器（16位）一级<ul>
<li>段地址</li>
</ul>
</li>
<li><p>指针寄存器（4位）二级</p>
<ul>
<li>偏移地址</li>
</ul>
</li>
<li><p>显示器</p>
<ul>
<li>点距<blockquote>
<p>像素之间的距离</p>
</blockquote>
</li>
<li><p>分辨率</p>
<blockquote>
<p>显示分辨率（屏幕分辨率）是屏幕图像的精密度，是指显示器所能显示的像素有多少。</p>
</blockquote>
<ul>
<li>ppi（像素每英寸）</li>
<li>dpi（点每英寸）用于打印机    </li>
</ul>
</li>
<li>频率<blockquote>
<p>刷新率指每秒钟出现新图像的数量</p>
</blockquote>
</li>
</ul>
</li>
<li>显卡<blockquote>
<p>控制像素点显示，显卡有一块内存，叫显存。只需要把字符写入显存，显卡就会帮助我们将他显示在屏幕上。</p>
</blockquote>
</li>
<li>内存映射(会把显存映射到内存)</li>
<li>显示字符<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">086</span>下<span class="number">0X00000</span><span class="number">-0X9FFFF</span>是留给普通内存的，后面的<span class="number">0XF0000</span>-FFFFF则是存放BIOS的芯片。</span><br><span class="line">中间<span class="number">0XA0000</span>-EFFFFF的<span class="number">320</span>k字节，则由各种外围设备提供，比如显卡。</span><br><span class="line">显存的范围是<span class="number">0xB8000</span><span class="number">-0XBFFF</span></span><br><span class="line">显卡在启动后，会自动的被初始化为<span class="number">80</span>×<span class="number">25</span>的文本模式，一共两千个字符。</span><br><span class="line"><span class="number">0xB8000</span>就对应屏幕的左上角第一个字符，然后是往右依次类推</span><br><span class="line"></span><br><span class="line">一个字符并不是占用一个字节，而是两个。</span><br><span class="line">第一个字节是字符的ASCII，第二个字节指定了字符的显示属性，比如颜色，是否闪烁。</span><br><span class="line">颜色分为前景色和背景色（前四bit，后四bit）</span><br><span class="line">前四：K RGB K,控制是否闪烁</span><br><span class="line">后四：I RGB I,控制颜色深浅</span><br><span class="line"></span><br><span class="line">屏幕黑色时，显存里是空格。</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>计算机语言编译过程</title>
    <url>/blog.githup.io/2020/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="计算机组成原理"><a href="#计算机组成原理" class="headerlink" title="计算机组成原理"></a>计算机组成原理</h2><a href="/blog.githup.io/2020/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/" title="计算机组成原理">计算机组成原理</a>
<h2 id="汇编"><a href="#汇编" class="headerlink" title="汇编"></a>汇编</h2><blockquote>
<p>不同的指令集对应不同的汇编器</p>
</blockquote>
<ul>
<li><a href="https://www.ibm.com/developerworks/cn/linux/l-assembly/index.html" target="_blank" rel="noopener">Linux 汇编语言开发指南</a></li>
</ul>
<h2 id="C-语言编译过程"><a href="#C-语言编译过程" class="headerlink" title="C 语言编译过程"></a>C 语言编译过程</h2><ul>
<li>预处理<ul>
<li>处理预编译指令，例如 #define，#if，#ifdefine 等。</li>
<li>将 #include 包含文件插入到该预编译指令的位置</li>
<li>删除所有的注析 // 、/**/</li>
</ul>
</li>
<li>编译<ul>
<li>把预处理过的代码编译成汇编代码</li>
</ul>
</li>
<li>汇编<ul>
<li>把汇编代码编译成目标代码</li>
</ul>
</li>
<li>链接<ul>
<li>把目标代码链接成可执行文件</li>
</ul>
</li>
</ul>
<h2 id="以-nginx-代码为例，使用-gcc-编译器了解一下编译过程。"><a href="#以-nginx-代码为例，使用-gcc-编译器了解一下编译过程。" class="headerlink" title="以 nginx 代码为例，使用 gcc 编译器了解一下编译过程。"></a>以 nginx 代码为例，使用 gcc 编译器了解一下编译过程。</h2><h3 id="下载-nginx-代码"><a href="#下载-nginx-代码" class="headerlink" title="下载 nginx 代码"></a>下载 nginx 代码</h3><p><a href="http://nginx.org/download/nginx-1.17.10.tar.gz" target="_blank" rel="noopener">nginx 源码</a></p>
<h3 id="使用-gcc-编译器-gcc-version-4-8-5"><a href="#使用-gcc-编译器-gcc-version-4-8-5" class="headerlink" title="使用 gcc 编译器 (gcc version 4.8.5)"></a>使用 gcc 编译器 (gcc version 4.8.5)</h3><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">gcc -v # 显示编译过程</span><br><span class="line">gcc -### # 选项和命令不执行</span><br><span class="line">gcc -E # 预处理</span><br><span class="line">gcc -S # 编译成汇编代码</span><br><span class="line">gcc -c # 编译、汇编，不链接</span><br></pre></td></tr></table></figure>
<h3 id="gcc-编译过程"><a href="#gcc-编译过程" class="headerlink" title="gcc 编译过程"></a>gcc 编译过程</h3><a href="/blog.githup.io/2020/05/nginx/" title="nginx源码分析">nginx源码分析</a>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://nginx.org/download/nginx-1.17.10.tar.gz</span><br><span class="line">tar -zxf nginx-1.17.10.tar.gz</span><br><span class="line"><span class="built_in">cd</span> /root/nginx-1.17.10</span><br><span class="line"></span><br><span class="line"><span class="comment"># 先执行 configure 配置一下整个环境。因为要生成一些文件</span></span><br><span class="line">./configure --prefix=/opt/nginx</span><br><span class="line"><span class="built_in">cd</span> /src/core</span><br><span class="line"><span class="comment"># 备份一下源码</span></span><br><span class="line">cp nginx.c nginx.c.bak</span><br><span class="line"></span><br><span class="line"><span class="comment"># -I 用于预处理时，指定头文件</span></span><br><span class="line">gcc -I/root/nginx-1.17.10/src/core \</span><br><span class="line">-I../../objs/ \</span><br><span class="line">-I../../src/os/unix/ \</span><br><span class="line">-E nginx.c</span><br><span class="line"></span><br><span class="line">gcc -I/root/nginx-1.17.10/src/core -I../../objs/ -I../../src/os/unix/ -E nginx.c &gt;nginx1.c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 预处理前后的对比</span></span><br><span class="line">gcc -I/root/nginx-1.17.10/src/core -I../../objs/ -I../../src/os/unix/ -E nginx.c |less -N</span><br><span class="line">less -N nginx.c.bak</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">gcc -S nginx1.c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 汇编</span></span><br><span class="line">gcc -c nginx1.s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 链接</span></span><br><span class="line">gcc nginx1.o -o nginx1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译后文件大小(行)</span></span><br><span class="line">1590 nginx.c.bak    <span class="comment"># 源码</span></span><br><span class="line">13535 nginx1.c      <span class="comment"># 预处理后代码，把所有需要的头文件都 include 进来</span></span><br><span class="line">3726 nginx1.s       <span class="comment"># 编译后汇编代码</span></span><br><span class="line">139 nginx1.o        <span class="comment"># 编译成目标文件</span></span><br></pre></td></tr></table></figure>
<h2 id="linux-可执行文件介绍"><a href="#linux-可执行文件介绍" class="headerlink" title="linux 可执行文件介绍"></a>linux 可执行文件介绍</h2><blockquote>
<p>ELF 是Executable and Linking Format的缩写，即可执行和可链接的格式，是Unix/Linux系统ABI (Application Binary Interface)规范的一部分。</p>
</blockquote>
<h3 id="usr-include-elf-h"><a href="#usr-include-elf-h" class="headerlink" title="/usr/include/elf.h"></a>/usr/include/elf.h</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"># 定义了数据类型</span><br><span class="line"> <span class="number">30</span> <span class="comment">/* Type for a 16-bit quantity.  */</span></span><br><span class="line">  <span class="number">31</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>16_t Elf32_Half;</span><br><span class="line">  <span class="number">32</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>16_t Elf64_Half;</span><br><span class="line">  <span class="number">33</span> </span><br><span class="line">  <span class="number">34</span> <span class="comment">/* Types for signed and unsigned 32-bit quantities.  */</span></span><br><span class="line">  <span class="number">35</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>32_t Elf32_Word;</span><br><span class="line">  <span class="number">36</span> <span class="keyword">typedef</span> <span class="built_in">int</span>32_t  Elf32_Sword;</span><br><span class="line">  <span class="number">37</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>32_t Elf64_Word;</span><br><span class="line">  <span class="number">38</span> <span class="keyword">typedef</span> <span class="built_in">int</span>32_t  Elf64_Sword;</span><br><span class="line">  <span class="number">39</span> </span><br><span class="line">  <span class="number">40</span> <span class="comment">/* Types for signed and unsigned 64-bit quantities.  */</span></span><br><span class="line">  <span class="number">41</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>64_t Elf32_Xword;</span><br><span class="line">  <span class="number">42</span> <span class="keyword">typedef</span> <span class="built_in">int</span>64_t  Elf32_Sxword;</span><br><span class="line">  <span class="number">43</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>64_t Elf64_Xword;</span><br><span class="line">  <span class="number">44</span> <span class="keyword">typedef</span> <span class="built_in">int</span>64_t  Elf64_Sxword;</span><br><span class="line">  <span class="number">45</span> </span><br><span class="line">  <span class="number">46</span> <span class="comment">/* Type of addresses.  */</span></span><br><span class="line">  <span class="number">47</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>32_t Elf32_Addr;</span><br><span class="line">  <span class="number">48</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>64_t Elf64_Addr;</span><br><span class="line">  <span class="number">49</span> </span><br><span class="line">  <span class="number">50</span> <span class="comment">/* Type of file offsets.  */</span></span><br><span class="line">  <span class="number">51</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>32_t Elf32_Off;</span><br><span class="line">  <span class="number">52</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>64_t Elf64_Off;</span><br><span class="line">  <span class="number">53</span> </span><br><span class="line">  <span class="number">54</span> <span class="comment">/* Type for section indices, which are 16-bit quantities.  */</span></span><br><span class="line">  <span class="number">55</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>16_t Elf32_Section;</span><br><span class="line">  <span class="number">56</span> <span class="keyword">typedef</span> <span class="built_in">uint</span>16_t Elf64_Section;</span><br><span class="line">  <span class="number">57</span> </span><br><span class="line">  <span class="number">58</span> <span class="comment">/* Type for version symbol information.  */</span></span><br><span class="line">  <span class="number">59</span> <span class="keyword">typedef</span> Elf32_Half Elf32_Versym;</span><br><span class="line">  <span class="number">60</span> <span class="keyword">typedef</span> Elf64_Half Elf64_Versym;</span><br><span class="line"></span><br><span class="line"># 定义了结构体</span><br><span class="line">  <span class="number">67</span> <span class="keyword">typedef</span> struct</span><br><span class="line">  <span class="number">68</span> &#123;</span><br><span class="line">  <span class="number">69</span>   unsigned char e_ident[EI_NIDENT];     <span class="comment">/* Magic number and other info */</span></span><br><span class="line">  <span class="number">70</span>   Elf32_Half    e_type;                 <span class="comment">/* Object file type */</span></span><br><span class="line">  <span class="number">71</span>   Elf32_Half    e_machine;              <span class="comment">/* Architecture */</span></span><br><span class="line">  <span class="number">72</span>   Elf32_Word    e_version;              <span class="comment">/* Object file version */</span></span><br><span class="line">  <span class="number">73</span>   Elf32_Addr    e_entry;                <span class="comment">/* Entry point virtual address */</span></span><br><span class="line">  <span class="number">74</span>   Elf32_Off     e_phoff;                <span class="comment">/* Program header table file offset */</span></span><br><span class="line">  <span class="number">75</span>   Elf32_Off     e_shoff;                <span class="comment">/* Section header table file offset */</span></span><br><span class="line">  <span class="number">76</span>   Elf32_Word    e_flags;                <span class="comment">/* Processor-specific flags */</span></span><br><span class="line">  <span class="number">77</span>   Elf32_Half    e_ehsize;               <span class="comment">/* ELF header size in bytes */</span></span><br><span class="line">  <span class="number">78</span>   Elf32_Half    e_phentsize;            <span class="comment">/* Program header table entry size */</span></span><br><span class="line">  <span class="number">79</span>   Elf32_Half    e_phnum;                <span class="comment">/* Program header table entry count */</span></span><br><span class="line">  <span class="number">80</span>   Elf32_Half    e_shentsize;            <span class="comment">/* Section header table entry size */</span></span><br><span class="line">  <span class="number">81</span>   Elf32_Half    e_shnum;                <span class="comment">/* Section header table entry count */</span></span><br><span class="line">  <span class="number">82</span>   Elf32_Half    e_shstrndx;             <span class="comment">/* Section header string table index */</span></span><br><span class="line">  <span class="number">83</span> &#125; Elf32_Ehdr;</span><br><span class="line">  <span class="number">84</span> </span><br><span class="line">  <span class="number">85</span> <span class="keyword">typedef</span> struct</span><br><span class="line">  <span class="number">86</span> &#123;</span><br><span class="line">  <span class="number">87</span>   unsigned char e_ident[EI_NIDENT];     <span class="comment">/* Magic number and other info */</span></span><br><span class="line">  <span class="number">88</span>   Elf64_Half    e_type;                 <span class="comment">/* Object file type */</span></span><br><span class="line">  <span class="number">89</span>   Elf64_Half    e_machine;              <span class="comment">/* Architecture */</span></span><br><span class="line">  <span class="number">90</span>   Elf64_Word    e_version;              <span class="comment">/* Object file version */</span></span><br><span class="line">  <span class="number">91</span>   Elf64_Addr    e_entry;                <span class="comment">/* Entry point virtual address */</span></span><br><span class="line">  <span class="number">92</span>   Elf64_Off     e_phoff;                <span class="comment">/* Program header table file offset */</span></span><br><span class="line">  <span class="number">93</span>   Elf64_Off     e_shoff;                <span class="comment">/* Section header table file offset */</span></span><br><span class="line">  <span class="number">94</span>   Elf64_Word    e_flags;                <span class="comment">/* Processor-specific flags */</span></span><br><span class="line">  <span class="number">95</span>   Elf64_Half    e_ehsize;               <span class="comment">/* ELF header size in bytes */</span></span><br><span class="line">  <span class="number">96</span>   Elf64_Half    e_phentsize;            <span class="comment">/* Program header table entry size */</span></span><br><span class="line">  <span class="number">97</span>   Elf64_Half    e_phnum;                <span class="comment">/* Program header table entry count */</span></span><br><span class="line">  <span class="number">98</span>   Elf64_Half    e_shentsize;            <span class="comment">/* Section header table entry size */</span></span><br><span class="line">  <span class="number">99</span>   Elf64_Half    e_shnum;                <span class="comment">/* Section header table entry count */</span></span><br><span class="line"> <span class="number">100</span>   Elf64_Half    e_shstrndx;             <span class="comment">/* Section header string table index */</span></span><br><span class="line"> <span class="number">101</span> &#125; Elf64_Ehdr;</span><br><span class="line"></span><br><span class="line"># 解释了数值表示的意义</span><br><span class="line"> <span class="number">160</span> <span class="comment">/* Legal values for e_type (object file type).  */</span></span><br><span class="line"> <span class="number">161</span> </span><br><span class="line"> <span class="number">162</span> #define ET_NONE         <span class="number">0</span>               <span class="comment">/* No file type */</span></span><br><span class="line"> <span class="number">163</span> #define ET_REL          <span class="number">1</span>               <span class="comment">/* Relocatable file */</span></span><br><span class="line"> <span class="number">164</span> #define ET_EXEC         <span class="number">2</span>               <span class="comment">/* Executable file */</span></span><br><span class="line"> <span class="number">165</span> #define ET_DYN          <span class="number">3</span>               <span class="comment">/* Shared object file */</span></span><br><span class="line"> <span class="number">166</span> #define ET_CORE         <span class="number">4</span>               <span class="comment">/* Core file */</span></span><br><span class="line"> <span class="number">167</span> #define ET_NUM          <span class="number">5</span>               <span class="comment">/* Number of defined types */</span></span><br><span class="line"> <span class="number">168</span> #define ET_LOOS         <span class="number">0xfe00</span>          <span class="comment">/* OS-specific range start */</span></span><br><span class="line"> <span class="number">169</span> #define ET_HIOS         <span class="number">0xfeff</span>          <span class="comment">/* OS-specific range end */</span></span><br><span class="line"> <span class="number">170</span> #define ET_LOPROC       <span class="number">0xff00</span>          <span class="comment">/* Processor-specific range start */</span></span><br><span class="line"> <span class="number">171</span> #define ET_HIPROC       <span class="number">0xffff</span>          <span class="comment">/* Processor-specific range end */</span></span><br></pre></td></tr></table></figure>
<h3 id="通过-readelf-命令了解-linux-可执行文件"><a href="#通过-readelf-命令了解-linux-可执行文件" class="headerlink" title="通过 readelf 命令了解 linux 可执行文件"></a>通过 readelf 命令了解 linux 可执行文件</h3><ul>
<li>section<blockquote>
<p>目标代码文件的内容是由section组成的,.text，.bss，.data这些指示，都指的是section。</p>
<ul>
<li>section header table</li>
</ul>
</blockquote>
</li>
<li>segment<blockquote>
<p>可执行文件的内容是由segment组成的。</p>
<ul>
<li>program header table</li>
</ul>
</blockquote>
</li>
<li>Magic number<blockquote>
<p>Magic number一般是指硬写到代码里的整数常量，数值是编程者自己指定的，其他人不知道数值有什么具体意义，表示不明觉厉，就称作magic number。</p>
</blockquote>
</li>
<li>Magic number 作用<blockquote>
<p>file命令是一个很神奇的命令。它能够根据文件中魔数来判断文件类型。这比根据后缀来判断文件类型要靠谱一点。比如，即使把一张位图文件后缀名改为.jpg，file命令依然大公无私地告诉你它是一张bmp图片。<br>ELF文件头会写入一个magic number，检查这个数和自己预想的是否一致可以判断文件是否损坏。<br>在缓冲区数组旁放一个magic number（称作canary金丝雀），通过检查是否一致可检测缓冲区溢出攻击。</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看segment 和 section 对应关系</span></span><br><span class="line"><span class="attr">readelf</span> <span class="string">-l /usr/bin/sleep</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 反编译</span></span><br><span class="line"><span class="attr">readelf</span> <span class="string">-S nginx1.o</span></span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<h2 id="反汇编工具-objdump"><a href="#反汇编工具-objdump" class="headerlink" title="反汇编工具 objdump"></a>反汇编工具 objdump</h2><blockquote>
<p>objdump是用查看目标文件或者可执行的目标文件的构成</p>
</blockquote>
<ul>
<li><p>符号表</p>
<blockquote>
<p>在计算机科学中，符号表是一种用于语言翻译器（例如编译器和解释器）中的数据结构。<br>在符号表中，程序源代码中的每个标识符都和它的声明或使用信息绑定在一起，比如其数据类型、作用域以及内存地址。<br>散列表是用来实现符号表的一种常用技术。<br>编译器可能会使用一个很大的符号表来包含所有的符号，或是针对不同的作用域使用层次结构的多个独立的符号表。</p>
</blockquote>
</li>
<li><p>文件头</p>
</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">objdump</span> <span class="string">-f</span> <span class="string">nginx1.o</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">nginx1.o:</span>     <span class="string">file</span> <span class="string">format</span> <span class="string">elf64-x86-64</span></span><br><span class="line"><span class="attr">architecture:</span> <span class="string">i386:x86-64,</span> <span class="attr">flags 0x00000011:</span></span><br><span class="line"><span class="string">HAS_RELOC,</span> <span class="string">HAS_SYMS</span></span><br><span class="line"><span class="string">start</span> <span class="string">address</span> <span class="number">0x0000000000000000</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>计算机语言编译</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx</title>
    <url>/blog.githup.io/2020/05/nginx/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.kancloud.cn/digest/understandingnginx/202599" target="_blank" rel="noopener">理解 nginx 源码</a></p>
<h2 id="nginx-代码结构"><a href="#nginx-代码结构" class="headerlink" title="nginx 代码结构"></a>nginx 代码结构</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── core  <span class="meta"># Nginx的核心源代码，包括常用数据结构的以及Nginx 内核实现的核心代码；</span></span><br><span class="line">├── <span class="keyword">event</span> <span class="meta"># Nginx事件驱动模型，以及定时器的实现相关代码；</span></span><br><span class="line">├── http  <span class="meta"># Nginx 实现http 服务器相关的代码；</span></span><br><span class="line">├── mail  <span class="meta"># Nginx 实现邮件代理服务器相关的代码；</span></span><br><span class="line">├── misc  <span class="meta"># 辅助代码，测试C++头 的兼容性，以及对Google_PerfTools 的支持；</span></span><br><span class="line">├── os    <span class="meta"># 不同体系统结构所提供的系统函数的封装，提供对外统一的系统调用接口；</span></span><br><span class="line">└── stream <span class="meta">#</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>多语言helloworld示例</title>
    <url>/blog.githup.io/2020/05/%E5%A4%9A%E8%AF%AD%E8%A8%80helloworld%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="多语言helloworld示例"><a href="#多语言helloworld示例" class="headerlink" title="多语言helloworld示例"></a>多语言helloworld示例</h1><p><a href="https://www.runoob.com/w3cnote/hello-world-programs-of-24-programing-language.html" target="_blank" rel="noopener">runoob 示例</a></p>
<h3 id="python-示例"><a href="#python-示例" class="headerlink" title="python 示例"></a>python 示例</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">"Hello World"</span>)</span><br></pre></td></tr></table></figure>
<h3 id="C-示例"><a href="#C-示例" class="headerlink" title="C 示例"></a>C 示例</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">include <span class="string">"stdio.h"</span> <span class="comment">// 头文件</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;  <span class="comment">// 入口函数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello World\n"</span>) <span class="comment">// 输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="C-示例-1"><a href="#C-示例-1" class="headerlink" title="C++ 示例"></a>C++ 示例</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; <span class="comment">// 命名空间</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello World!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="java"><a href="#java" class="headerlink" title="java"></a>java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123; <span class="comment">// 类</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []args)</span> </span>&#123; <span class="comment">// 入口函数</span></span><br><span class="line">        System.out.println(<span class="string">"Hello World"</span>); <span class="comment">// 输出</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="golang-示例"><a href="#golang-示例" class="headerlink" title="golang 示例"></a>golang 示例</h3><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main <span class="comment">// 命名空间</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span> <span class="comment">// 输出包</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    fmt.Println(<span class="string">"Hello World"</span>) <span class="comment">// 输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>hello world</tag>
        <tag>指令集</tag>
      </tags>
  </entry>
  <entry>
    <title>Java环境准备</title>
    <url>/blog.githup.io/2020/05/Java%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="JDK-安装"><a href="#JDK-安装" class="headerlink" title="JDK 安装"></a>JDK 安装</h2><ul>
<li><a href="https://www.oracle.com/java/" target="_blank" rel="noopener">Java</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/14/" target="_blank" rel="noopener">JDK docs</a></li>
</ul>
<h3 id="下载-JDK-包"><a href="#下载-JDK-包" class="headerlink" title="下载 JDK 包"></a>下载 JDK 包</h3><ul>
<li><a href="https://www.oracle.com/java/technologies/javase-jdk14-downloads.html" target="_blank" rel="noopener">Oracle JDK</a></li>
<li><a href="https://openjdk.java.net/" target="_blank" rel="noopener">OPENJDK</a></li>
</ul>
<h3 id="JAVA-开发工具"><a href="#JAVA-开发工具" class="headerlink" title="JAVA 开发工具"></a>JAVA 开发工具</h3><ul>
<li><a href="https://www.eclipse.org/downloads/" target="_blank" rel="noopener">Eclipse</a></li>
<li><a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">Idea</a></li>
</ul>
<h3 id="Java-框架"><a href="#Java-框架" class="headerlink" title="Java 框架"></a>Java 框架</h3><p><a href="https://spring.io/" target="_blank" rel="noopener">Spring family</a></p>
<h3 id="配置三个变量"><a href="#配置三个变量" class="headerlink" title="配置三个变量"></a>配置三个变量</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">JAVA_HOME <span class="comment"># 安装java目录</span></span><br><span class="line">CLASSPATH <span class="comment"># java 类库</span></span><br><span class="line">PATH      <span class="comment"># java 可执行路径</span></span><br></pre></td></tr></table></figure>
<h3 id="hello-world-示例"><a href="#hello-world-示例" class="headerlink" title="hello world 示例"></a>hello world 示例</h3><p>新建一个 Helloworld.class 文件<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// java 类声明</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 入口函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// java 输出语句</span></span><br><span class="line">        System.out.println(<span class="string">"Hello World"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
  </entry>
  <entry>
    <title>markdown数学公式</title>
    <url>/blog.githup.io/2020/05/markdown%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="行内与独行"><a href="#行内与独行" class="headerlink" title="行内与独行"></a>行内与独行</h2><p>行内公式：将公式插入到本行内，一个美元符，$xyz$</p>
<p>独行公式：将公式插入到新的一行内，并且居中，两个美元符，<script type="math/tex">xyz</script></p>
<h2 id="上标、下标与组合"><a href="#上标、下标与组合" class="headerlink" title="上标、下标与组合"></a>上标、下标与组合</h2><div class="table-container">
<table>
<thead>
<tr>
<th>符号</th>
<th>表示</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr>
<td>上标符号</td>
<td>^</td>
<td>$x^4$</td>
</tr>
<tr>
<td>下标符号</td>
<td>_</td>
<td>$x_1$</td>
</tr>
<tr>
<td>组合符号</td>
<td>{}</td>
<td>${16}<em>{8}O{2+}</em>{2}$</td>
</tr>
</tbody>
</table>
</div>
<h2 id="汉字、字体与格式"><a href="#汉字、字体与格式" class="headerlink" title="汉字、字体与格式"></a>汉字、字体与格式</h2><div class="table-container">
<table>
<thead>
<tr>
<th>符号</th>
<th>表示</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr>
<td>汉字形式</td>
<td>\mbox{}</td>
<td>$V_{\mbox{初始}}$</td>
</tr>
<tr>
<td>字体控制</td>
<td>\displaystyle</td>
<td>$\displaystyle \frac{x+y}{y+z}$</td>
</tr>
<tr>
<td>下划线符号</td>
<td>\underline</td>
<td>$\underline{x+y}$</td>
</tr>
<tr>
<td>标签</td>
<td>\tag{数字}</td>
<td>$\tag{12}$</td>
</tr>
<tr>
<td>上大括号</td>
<td>\overbrace{算式}</td>
<td>$\overbrace{a+b+c+d}^{2.0}$</td>
</tr>
<tr>
<td>下大括号</td>
<td>\underbrace{算式}</td>
<td>$a+\underbrace{b+c}_{1.0}+d$</td>
</tr>
<tr>
<td>上位符号</td>
<td>\stacrel{上位符号}{基位符号}</td>
<td>$\vec{x}\stackrel{\mathrm{def}}{=}{x_1,\dots,x_n}$</td>
</tr>
</tbody>
</table>
</div>
<h2 id="占位符"><a href="#占位符" class="headerlink" title="占位符"></a>占位符</h2><div class="table-container">
<table>
<thead>
<tr>
<th>符号</th>
<th>表示</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr>
<td>两个quad空格</td>
<td>\qquad</td>
<td>$x \qquad y$</td>
</tr>
<tr>
<td>quad空格</td>
<td>\quad</td>
<td>$x \quad y$</td>
</tr>
<tr>
<td>大空格</td>
<td>符号\</td>
<td>$x \ y$</td>
</tr>
<tr>
<td>中空格</td>
<td>符号\:</td>
<td>$x : y$</td>
</tr>
<tr>
<td>小空格</td>
<td>符号\,</td>
<td>$x , y$</td>
</tr>
<tr>
<td>没有空格</td>
<td>符号``</td>
<td>$xy$</td>
</tr>
<tr>
<td>紧贴</td>
<td>符号!</td>
<td>$x ! y$</td>
</tr>
</tbody>
</table>
</div>
<h2 id="定界符与组合"><a href="#定界符与组合" class="headerlink" title="定界符与组合"></a>定界符与组合</h2><div class="table-container">
<table>
<thead>
<tr>
<th>符号</th>
<th>表示</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr>
<td>括号</td>
<td>（）\big(\big) \Big(\Big) \bigg(\bigg) \Bigg(\Bigg)</td>
<td>$（）\big(\big) \Big(\Big) \bigg(\bigg) \Bigg(\Bigg)$</td>
</tr>
<tr>
<td>中括号</td>
<td>[]</td>
<td>$[x+y]$</td>
</tr>
<tr>
<td>大括号</td>
<td>{ }</td>
<td>${x+y}$</td>
</tr>
<tr>
<td>自适应括号</td>
<td>\left</td>
<td>$\left(x\right)$</td>
</tr>
<tr>
<td>自适应括号</td>
<td>\right</td>
<td>$\left(x{yz}\right)$</td>
</tr>
<tr>
<td>组合公式</td>
<td>{上位公式 \choose 下位公式}</td>
<td>${n+1 \choose k}={n \choose k}+{n \choose k-1}$</td>
</tr>
<tr>
<td>组合公式</td>
<td>{上位公式 \atop 下位公式}</td>
<td>$\sum{k_0,k_1,\ldots&gt;0 \atop k_0+k_1+\cdots=n}A{k0}A{k_1}\cdots$</td>
</tr>
</tbody>
</table>
</div>
<blockquote>
<p>$\sum<em>{k_0,k_1,\ldots&gt;0 \atop k_0+k_1+\cdots=n}A</em>{k<em>0}A</em>{k_1}\cdots$</p>
</blockquote>
<h2 id="四则运算"><a href="#四则运算" class="headerlink" title="四则运算"></a>四则运算</h2><div class="table-container">
<table>
<thead>
<tr>
<th>运算符</th>
<th>符号</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr>
<td>加法运算</td>
<td>+</td>
<td>$x+y=z$</td>
</tr>
<tr>
<td>减法运算</td>
<td>-</td>
<td>$x-y=z$</td>
</tr>
<tr>
<td>加减运算</td>
<td>\pm</td>
<td>$x \pm y=z$</td>
</tr>
<tr>
<td>减甲运算</td>
<td>\mp</td>
<td>$x \mp y=z$</td>
</tr>
<tr>
<td>乘法运算</td>
<td>\times</td>
<td>$x \times y=z$</td>
</tr>
<tr>
<td>点乘运算</td>
<td>\cdot</td>
<td>$x \cdot y=z$</td>
</tr>
<tr>
<td>星乘运算</td>
<td>\ast</td>
<td>$x \ast y=z$</td>
</tr>
<tr>
<td>除法运算</td>
<td>\div</td>
<td>$x \div y=z$</td>
</tr>
<tr>
<td>斜法运算</td>
<td>/</td>
<td>$x/y=z$</td>
</tr>
<tr>
<td>分式表示</td>
<td>\frac{分子}{分母}</td>
<td>$\frac{x+y}{y+z}$</td>
</tr>
<tr>
<td>分式表示</td>
<td>{分子} \voer {分母}</td>
<td>${x+y} \over {y+z}$</td>
</tr>
<tr>
<td>绝对值表示</td>
<td></td>
<td>$x+y$</td>
</tr>
</tbody>
</table>
</div>
<h2 id="高级运算"><a href="#高级运算" class="headerlink" title="高级运算"></a>高级运算</h2><div class="table-container">
<table>
<thead>
<tr>
<th>运算符</th>
<th>符号</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr>
<td>平均数运算</td>
<td>\overline{算式}</td>
<td>$\overline{xyz}$</td>
</tr>
<tr>
<td>开二次方运算</td>
<td>\sqrt</td>
<td>$\sqrt x$</td>
</tr>
<tr>
<td>开方运算</td>
<td>\sqrt[开方数]{被开方数}</td>
<td>$\sqrt[3]{x+y}$</td>
</tr>
<tr>
<td>对数运算</td>
<td>\log</td>
<td>$\log(x)$</td>
</tr>
<tr>
<td>极限运算</td>
<td>\lim</td>
<td>$\lim^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</td>
</tr>
<tr>
<td>极限运算</td>
<td>\displaystyle \lim</td>
<td>$\displaystyle \lim^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</td>
</tr>
<tr>
<td>求和运算</td>
<td>\sum</td>
<td>$\sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</td>
</tr>
<tr>
<td>求和运算</td>
<td>\displaystyle \sum</td>
<td>$\displaystyle \sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</td>
</tr>
<tr>
<td>积分运算</td>
<td>\int</td>
<td>$\int^{\infty}_{0}{xdx}$</td>
</tr>
<tr>
<td>积分运算</td>
<td>\displaystyle \int</td>
<td>$\displaystyle \int^{\infty}_{0}{xdx}$</td>
</tr>
<tr>
<td>微分运算</td>
<td>\partial</td>
<td>$\frac{\partial x}{\partial y}$</td>
</tr>
<tr>
<td>矩阵表示</td>
<td>\begin{matrix} \end{matrix}</td>
<td>$\left[ \begin{matrix} 1 &amp; 2 &amp; 3 \cdots \vdots 4 &amp; 5 &amp; 6 \end{matrix} \right]$</td>
</tr>
</tbody>
</table>
</div>
<blockquote>
<p>\ddots \cdots</p>
</blockquote>
<h2 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h2><div class="table-container">
<table>
<thead>
<tr>
<th>逻辑运算</th>
<th>符号</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr>
<td>等于运算</td>
<td>=</td>
<td>$x+y=z$</td>
</tr>
<tr>
<td>大于运算</td>
<td>&gt;</td>
<td>$x+y&gt;z$</td>
</tr>
<tr>
<td>小于运算</td>
<td>&lt;</td>
<td>$x+y&lt;z$</td>
</tr>
<tr>
<td>大于等于运算</td>
<td>\geq</td>
<td>$x+y \geq z$</td>
</tr>
<tr>
<td>小于等于运算</td>
<td>\leq</td>
<td>$x+y \leq z$</td>
</tr>
<tr>
<td>不等于运算</td>
<td>\neq</td>
<td>$x+y \neq z$</td>
</tr>
<tr>
<td>不大于等于运算</td>
<td>\ngeq</td>
<td>$x+y \ngeq z$</td>
</tr>
<tr>
<td>不大于等于运算</td>
<td>\not\geq</td>
<td>$x+y \not\geq z$</td>
</tr>
<tr>
<td>不小于等于运算</td>
<td>\nleq</td>
<td>$x+y \nleq z$</td>
</tr>
<tr>
<td>不小于等于运算</td>
<td>\not\leq</td>
<td>$x+y \not\leq z$</td>
</tr>
<tr>
<td>约等于运算</td>
<td>\approx</td>
<td>$x+y \approx z$</td>
</tr>
<tr>
<td>恒定等于运算</td>
<td>\equiv</td>
<td>$x+y \equiv z$</td>
</tr>
</tbody>
</table>
</div>
<h2 id="集合运算"><a href="#集合运算" class="headerlink" title="集合运算"></a>集合运算</h2><div class="table-container">
<table>
<thead>
<tr>
<th>数学运算</th>
<th>符号</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr>
<td>属于运算</td>
<td>\in</td>
<td>$x \in y$</td>
</tr>
<tr>
<td>不属于运算</td>
<td>\notin</td>
<td>$x \notin y$</td>
</tr>
<tr>
<td>不属于运算</td>
<td>\not\in</td>
<td>$x \not\in y$</td>
</tr>
<tr>
<td>子集运算</td>
<td>\subset</td>
<td>$x \subset y$</td>
</tr>
<tr>
<td>子集运算</td>
<td>\supset</td>
<td>$x \supset y$</td>
</tr>
<tr>
<td>真子集运算</td>
<td>\subseteq</td>
<td>$x \subseteq y$</td>
</tr>
<tr>
<td>非真子集运算</td>
<td>\subsetneq</td>
<td>$x \subsetneq y$</td>
</tr>
<tr>
<td>真子集运算</td>
<td>\supseteq</td>
<td>$x \supseteq y$</td>
</tr>
<tr>
<td>非真子集运算</td>
<td>\supsetneq</td>
<td>$x \supsetneq y$</td>
</tr>
<tr>
<td>非子集运算</td>
<td>\not\subset</td>
<td>$x \not\subset y$</td>
</tr>
<tr>
<td>非子集运算</td>
<td>\not\supset</td>
<td>$x \not\supset y$</td>
</tr>
<tr>
<td>并集运算</td>
<td>\cup</td>
<td>$x \cup y$</td>
</tr>
<tr>
<td>交集运算</td>
<td>\cap</td>
<td>$x \cap y$</td>
</tr>
<tr>
<td>差集运算</td>
<td>\setminus</td>
<td>$x \setminus y$</td>
</tr>
<tr>
<td>同或运算</td>
<td>\bigodot</td>
<td>$x \bigodot y$</td>
</tr>
<tr>
<td>同与运算</td>
<td>\bigotimes</td>
<td>$x \bigotimes y$</td>
</tr>
<tr>
<td>实数集合</td>
<td>\mathbb{R}</td>
<td>\mathbb{R}</td>
</tr>
<tr>
<td>自然数集合</td>
<td>\mathbb{Z}</td>
<td>\mathbb{Z}</td>
</tr>
<tr>
<td>空集</td>
<td>\emptyset</td>
<td>$\emptyset$</td>
</tr>
</tbody>
</table>
</div>
<h2 id="数学符号"><a href="#数学符号" class="headerlink" title="数学符号"></a>数学符号</h2><div class="table-container">
<table>
<thead>
<tr>
<th>学名</th>
<th>符号</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr>
<td>无穷</td>
<td>\infty</td>
<td>$\infty$</td>
</tr>
<tr>
<td>虚数</td>
<td>\imath</td>
<td>$\imath$</td>
</tr>
<tr>
<td>虚数</td>
<td>\jmath</td>
<td>$\jmath$</td>
</tr>
<tr>
<td>数学符号</td>
<td>符号\hat{a}</td>
<td>$\hat{a}$</td>
</tr>
<tr>
<td>数学符号</td>
<td>符号\check{a}</td>
<td>$\check{a}$</td>
</tr>
<tr>
<td>数学符号</td>
<td>符号\breve{a}</td>
<td>$\breve{a}$</td>
</tr>
<tr>
<td>数学符号</td>
<td>符号\tilde{a}</td>
<td>$\tilde{a}$</td>
</tr>
<tr>
<td>数学符号</td>
<td>符号\bar{a}</td>
<td>$\bar{a}$</td>
</tr>
<tr>
<td>矢量符号</td>
<td>符号\vec{a}</td>
<td>$\vec{a}$</td>
</tr>
<tr>
<td>数学符号</td>
<td>符号\acute{a}</td>
<td>$\acute{a}$</td>
</tr>
<tr>
<td>数学符号</td>
<td>符号\grave{a}</td>
<td>$\grave{a}$</td>
</tr>
<tr>
<td>数学符号</td>
<td>符号\mathring{a}</td>
<td>$\mathring{a}$</td>
</tr>
<tr>
<td>一阶导数符号</td>
<td>符号\dot{a}</td>
<td>$\dot{a}$</td>
</tr>
<tr>
<td>二阶导数符号</td>
<td>符号\ddot{a}</td>
<td>$\ddot{a}$</td>
</tr>
<tr>
<td>上箭头</td>
<td>\uparrow</td>
<td>$\uparrow$</td>
</tr>
<tr>
<td>上箭头</td>
<td>\Uparrow</td>
<td>$\Uparrow$</td>
</tr>
<tr>
<td>下箭头</td>
<td>\downarrow</td>
<td>$\downarrow$</td>
</tr>
<tr>
<td>下箭头</td>
<td>\Downarrow</td>
<td>$\Downarrow$</td>
</tr>
<tr>
<td>左箭头</td>
<td>\leftarrow</td>
<td>$\leftarrow$</td>
</tr>
<tr>
<td>左箭头</td>
<td>\Leftarrow</td>
<td>$\Leftarrow$</td>
</tr>
<tr>
<td>右箭头</td>
<td>\rightarrow</td>
<td>$\rightarrow$</td>
</tr>
<tr>
<td>右箭头</td>
<td>\Rightarrow</td>
<td>$\Rightarrow$</td>
</tr>
<tr>
<td>底端对齐的省略号</td>
<td>\ldots</td>
<td>$1,2,\ldots,n$</td>
</tr>
<tr>
<td>中线对齐的省略号</td>
<td>\cdots</td>
<td>$x_1^2 + x_2^2 + \cdots + x_n^2$</td>
</tr>
<tr>
<td>竖直对齐的省略号</td>
<td>\vdots</td>
<td>$\vdots$</td>
</tr>
<tr>
<td>斜对齐的省略号</td>
<td>\ddots</td>
<td>$\ddots$</td>
</tr>
</tbody>
</table>
</div>
<h2 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h2><div class="table-container">
<table>
<thead>
<tr>
<th>字母</th>
<th>实现</th>
<th>字母</th>
<th>实现</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>A</td>
<td>α</td>
<td>\alhpa</td>
</tr>
<tr>
<td>B</td>
<td>B</td>
<td>β</td>
<td>\beta</td>
</tr>
<tr>
<td>Γ</td>
<td>\Gamma</td>
<td>γ</td>
<td>\gamma</td>
</tr>
<tr>
<td>Δ</td>
<td>\Delta</td>
<td>δ</td>
<td>\delta</td>
</tr>
<tr>
<td>E</td>
<td>E</td>
<td>ϵ</td>
<td>\epsilon</td>
</tr>
<tr>
<td>Z</td>
<td>Z</td>
<td>ζ</td>
<td>\zeta</td>
</tr>
<tr>
<td>H</td>
<td>H</td>
<td>η</td>
<td>\eta</td>
</tr>
<tr>
<td>Θ</td>
<td>\Theta</td>
<td>θ</td>
<td>\theta</td>
</tr>
<tr>
<td>I</td>
<td>I</td>
<td>ι</td>
<td>\iota</td>
</tr>
<tr>
<td>K</td>
<td>K</td>
<td>κ</td>
<td>\kappa</td>
</tr>
<tr>
<td>Λ</td>
<td>\Lambda</td>
<td>λ</td>
<td>\lambda</td>
</tr>
<tr>
<td>M</td>
<td>M</td>
<td>μ</td>
<td>\mu</td>
</tr>
<tr>
<td>N</td>
<td>N</td>
<td>ν</td>
<td>\nu</td>
</tr>
<tr>
<td>Ξ</td>
<td>\Xi</td>
<td>ξ</td>
<td>\xi</td>
</tr>
<tr>
<td>O</td>
<td>O</td>
<td>ο</td>
<td>\omicron</td>
</tr>
<tr>
<td>Π</td>
<td>\Pi</td>
<td>π</td>
<td>\pi</td>
</tr>
<tr>
<td>P</td>
<td>P</td>
<td>ρ</td>
<td>\rho</td>
</tr>
<tr>
<td>Σ</td>
<td>\Sigma</td>
<td>σ</td>
<td>\sigma</td>
</tr>
<tr>
<td>T</td>
<td>T</td>
<td>τ</td>
<td>\tau</td>
</tr>
<tr>
<td>Υ</td>
<td>\Upsilon</td>
<td>υ</td>
<td>\upsilon</td>
</tr>
<tr>
<td>Φ</td>
<td>\Phi</td>
<td>ϕ</td>
<td>\phi</td>
</tr>
<tr>
<td>X</td>
<td>X</td>
<td>χ</td>
<td>\chi</td>
</tr>
<tr>
<td>Ψ</td>
<td>\Psi</td>
<td>ψ</td>
<td>\psi</td>
</tr>
<tr>
<td>Ω</td>
<td>\v</td>
<td>ω</td>
<td>\omega</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>数学公式</tag>
      </tags>
  </entry>
  <entry>
    <title>python环境准备</title>
    <url>/blog.githup.io/2020/05/python%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://www.python.org/" target="_blank" rel="noopener">Python</a></li>
<li><a href="https://www.python.org/doc/" target="_blank" rel="noopener">Python docs</a><blockquote>
<p>练习时使用最新版，部署时尽量不要使用最新版。很多开发库没跟上。</p>
<p>对于初学者建议不要选用太多自动化的工具。云里雾里遇到问题就歇菜。</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>数据分析，直接选用 anaconda</p>
<p>数据分析也常用 jupter 工具</p>
<ul>
<li><a href="https://www.anaconda.com/products/individual#Downloads" target="_blank" rel="noopener">Anaconda</a></li>
<li><a href="https://jupyter.org/install" target="_blank" rel="noopener">jupter</a></li>
</ul>
</blockquote>
<ul>
<li><a href="https://pypi.org/project/pip/" target="_blank" rel="noopener">包管理工具 pip</a></li>
</ul>
<blockquote>
<p>交互工具选用 ipython<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install ipython</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="安装-Python-3-8-2"><a href="#安装-Python-3-8-2" class="headerlink" title="安装 Python 3.8.2"></a>安装 Python 3.8.2</h2><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">wget http<span class="variable">s:</span>//www.<span class="keyword">python</span>.org/ftp/<span class="keyword">python</span>/<span class="number">3.8</span>.<span class="number">2</span>/Python-<span class="number">3.8</span>.<span class="number">2</span>.tgz</span><br><span class="line">tar -zxf Python-<span class="number">3.8</span>.<span class="number">2</span>.tgz </span><br><span class="line"><span class="keyword">cd</span> Python-<span class="number">3.8</span>.<span class="number">2</span></span><br><span class="line">./configure  --prefix /usr/local/<span class="keyword">python</span></span><br><span class="line"><span class="keyword">make</span> -<span class="keyword">j</span> $(/proc/cpuinfo |<span class="keyword">grep</span> cores|wc -<span class="keyword">l</span>)</span><br><span class="line"><span class="keyword">make</span> install</span><br><span class="line"></span><br><span class="line"># 配置国内镜像源</span><br><span class="line"><span class="built_in">mkdir</span> ~/.pip</span><br><span class="line"><span class="keyword">cat</span> &lt;&lt;<span class="string">'EOF'</span> &gt;~/.pip/pip.<span class="keyword">conf</span> </span><br><span class="line">[<span class="keyword">global</span>]</span><br><span class="line"><span class="built_in">index</span>-url = http://pypi.douban.<span class="keyword">com</span>/simple</span><br><span class="line">extra-<span class="built_in">index</span>-url=http<span class="variable">s:</span>//mirrors.aliyun.<span class="keyword">com</span>/pypi/simple</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 配置虚拟环境</span><br><span class="line">/usr/local/<span class="keyword">python</span>/bin/pip3 install --upgrade pip</span><br><span class="line">/usr/local/<span class="keyword">python</span>/bin/pip3 install virtualenv</span><br><span class="line">/usr/local/<span class="keyword">python</span>/bin/virtualenv demo</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">". demo/bin/activate"</span> &gt;&gt;~/.bash_profile</span><br><span class="line">. demo/bin/activate</span><br><span class="line">pip install django</span><br><span class="line"></span><br><span class="line"><span class="keyword">python</span> --<span class="keyword">version</span></span><br><span class="line"># <span class="keyword">verbose</span> (跟踪导入的语句 trace import statements)</span><br><span class="line"><span class="keyword">python</span> -v</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Rancher安装配置</title>
    <url>/blog.githup.io/2020/05/Rancher%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://rancher2.docs.rancher.cn/" target="_blank" rel="noopener"> rander 2.x 新文档 </a></p>
<h2 id="Rancher-2-X-docker-安装"><a href="#Rancher-2-X-docker-安装" class="headerlink" title="Rancher 2.X docker 安装"></a>Rancher 2.X docker 安装</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载最新的镜像</span></span><br><span class="line"><span class="string">docker</span> <span class="string">pull</span> <span class="string">rancher/rancher</span></span><br><span class="line"><span class="string">docker</span> <span class="string">image</span> <span class="string">ls</span></span><br><span class="line"><span class="comment"># 查看镜像详情</span></span><br><span class="line"><span class="string">docker</span> <span class="string">inspect</span> <span class="string">rancher/rancher:latest</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"> <span class="attr">"Volumes":</span> <span class="string">&#123;</span></span><br><span class="line">                <span class="string">"/var/lib/rancher"</span><span class="string">:</span> <span class="string">&#123;&#125;,</span></span><br><span class="line">                <span class="string">"/var/log/auditlog"</span><span class="string">:</span> <span class="string">&#123;&#125;</span></span><br><span class="line">            <span class="string">&#125;,</span></span><br><span class="line">            <span class="attr">"WorkingDir":</span> <span class="string">"/var/lib/rancher"</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># 创建 pvc</span></span><br><span class="line"><span class="string">mkdir</span> <span class="string">-p</span> <span class="string">/docker_volume/rancher_home/rancher</span></span><br><span class="line"><span class="string">mkdir</span> <span class="string">-p</span> <span class="string">/docker_volume/rancher_home/auditlog</span></span><br><span class="line"><span class="comment"># 运行</span></span><br><span class="line"><span class="string">docker</span> <span class="string">run</span> <span class="string">-d</span> <span class="string">--restart=unless-stopped</span> <span class="string">-p</span> <span class="number">80</span><span class="string">:80</span> <span class="string">-p</span> <span class="number">443</span><span class="string">:443</span> <span class="string">\</span></span><br><span class="line"><span class="string">-v</span> <span class="string">/docker_volume/rancher_home/rancher:/var/lib/rancher</span> <span class="string">\</span></span><br><span class="line"><span class="string">-v</span> <span class="string">/docker_volume/rancher_home/auditlog:/var/log/auditlog</span> <span class="string">\</span></span><br><span class="line"><span class="string">--name</span> <span class="string">rancher</span> <span class="string">rancher/rancher</span>  </span><br><span class="line"><span class="comment"># 查看容器</span></span><br><span class="line"><span class="string">docker</span> <span class="string">container</span> <span class="string">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问</span></span><br><span class="line"><span class="string">http://192.168.0.61</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 admin 密码</span></span><br><span class="line"><span class="string">admin@123456.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择页面底部 设置语言</span></span><br></pre></td></tr></table></figure>
<h2 id="导入现有的-kubernetes-集群"><a href="#导入现有的-kubernetes-集群" class="headerlink" title="导入现有的 kubernetes 集群"></a>导入现有的 kubernetes 集群</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加集群 -&gt; 导入现有集群 -&gt; 名称 -&gt; 导入命令 -&gt; 完成 </span></span><br><span class="line"><span class="comment"># 需要 kubernetes 管理员权限，已经有了无需执行</span></span><br><span class="line">kubectl create clusterrolebinding cluster-admin-binding --clusterrole cluster-admin --user [USER_ACCOUNT]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 kubernetes 集群执行</span></span><br><span class="line"><span class="comment"># 有证书</span></span><br><span class="line">kubectl apply -f https://192.168.0.61/v3/import/d2nkw8bzktbzrtsnfcdbxdzjbxqpbn8gwbhntxcpprwpf7jq9t9689.yaml</span><br><span class="line"><span class="comment"># 绕过证书检查</span></span><br><span class="line">curl --insecure -sfL https://192.168.0.61/v3/import/d2nkw8bzktbzrtsnfcdbxdzjbxqpbn8gwbhntxcpprwpf7jq9t9689.yaml | kubectl apply -f -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 会在kubernetes 上所有节点上创建 </span></span><br><span class="line">cattle-node-agent</span><br><span class="line"><span class="comment"># 在 master 上创建两个 pod</span></span><br><span class="line">cattle-cluster-agent</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>Harbor安装配置</title>
    <url>/blog.githup.io/2020/05/Harbor%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://github.com/goharbor/harbor/blob/master/docs/README.md" target="_blank" rel="noopener">Harbor docs</a></p>
<h2 id="安装需求"><a href="#安装需求" class="headerlink" title="安装需求"></a>安装需求</h2><ul>
<li><a href="https://docs.docker.com/engine/install/" target="_blank" rel="noopener">Docker engine install</a></li>
<li><a href="https://docs.docker.com/compose/install/" target="_blank" rel="noopener">Docker compose install</a></li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Docker engine Version 17.06.0-ce+ or higher</span></span><br><span class="line"></span><br><span class="line"><span class="string">docker</span> <span class="string">version</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">Client:</span> <span class="string">Docker</span> <span class="string">Engine</span> <span class="bullet">-</span> <span class="string">Community</span></span><br><span class="line"> <span class="attr">Version:</span>           <span class="number">19.03</span><span class="number">.8</span></span><br><span class="line"> <span class="attr">API version:</span>       <span class="number">1.39</span> <span class="string">(downgraded</span> <span class="string">from</span> <span class="number">1.40</span><span class="string">)</span></span><br><span class="line"> <span class="attr">Go version:</span>        <span class="string">go1.12.17</span></span><br><span class="line"> <span class="attr">Git commit:</span>        <span class="string">afacb8b</span></span><br><span class="line"> <span class="attr">Built:</span>             <span class="string">Wed</span> <span class="string">Mar</span> <span class="number">11</span> <span class="number">01</span><span class="string">:27:04</span> <span class="number">2020</span></span><br><span class="line"> <span class="attr">OS/Arch:</span>           <span class="string">linux/amd64</span></span><br><span class="line"> <span class="attr">Experimental:</span>      <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Server:</span> <span class="string">Docker</span> <span class="string">Engine</span> <span class="bullet">-</span> <span class="string">Community</span></span><br><span class="line"> <span class="attr">Engine:</span></span><br><span class="line">  <span class="attr">Version:</span>          <span class="number">18.09</span><span class="number">.7</span></span><br><span class="line">  <span class="attr">API version:</span>      <span class="number">1.39</span> <span class="string">(minimum</span> <span class="string">version</span> <span class="number">1.12</span><span class="string">)</span></span><br><span class="line">  <span class="attr">Go version:</span>       <span class="string">go1.10.8</span></span><br><span class="line">  <span class="attr">Git commit:</span>       <span class="string">2d0083d</span></span><br><span class="line">  <span class="attr">Built:</span>            <span class="string">Thu</span> <span class="string">Jun</span> <span class="number">27</span> <span class="number">17</span><span class="string">:26:28</span> <span class="number">2019</span></span><br><span class="line">  <span class="attr">OS/Arch:</span>          <span class="string">linux/amd64</span></span><br><span class="line">  <span class="attr">Experimental:</span>     <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Docker Compose Version 1.18.0 or higher</span></span><br><span class="line"></span><br><span class="line"><span class="string">sudo</span> <span class="string">curl</span> <span class="string">-L</span> <span class="string">"https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)"</span> <span class="string">-o</span> <span class="string">/usr/local/bin/docker-compose</span></span><br><span class="line"><span class="string">sudo</span> <span class="string">chmod</span> <span class="string">+x</span> <span class="string">/usr/local/bin/docker-compose</span></span><br><span class="line"><span class="string">sudo</span> <span class="string">ln</span> <span class="string">-s</span> <span class="string">/usr/local/bin/docker-compose</span> <span class="string">/usr/bin/docker-compose</span></span><br><span class="line"><span class="string">docker-compose</span> <span class="string">--version</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Openssl Latest is preferred</span></span><br></pre></td></tr></table></figure>
<h2 id="harbor-下载"><a href="#harbor-下载" class="headerlink" title="harbor 下载"></a><a href="https://github.com/goharbor/harbor/releases" target="_blank" rel="noopener">harbor 下载</a></h2><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">cp harbor.yml.tmpl harbor.yml</span><br><span class="line"><span class="meta"># 配置 harbor.yml</span></span><br><span class="line">hostname 本机IP</span><br><span class="line"><span class="meta"># 把 ssl 先注释</span></span><br><span class="line"><span class="symbol">https:</span></span><br><span class="line"><span class="symbol">  port:</span> <span class="number">443</span></span><br><span class="line"><span class="symbol">  certificate:</span> <span class="meta-keyword">/your/</span>certificate/path</span><br><span class="line"><span class="symbol">  private_key:</span> <span class="meta-keyword">/your/</span>private<span class="meta-keyword">/key/</span>path</span><br><span class="line"></span><br><span class="line"><span class="meta"># 下载镜像</span></span><br><span class="line">./prepare </span><br><span class="line"></span><br><span class="line"><span class="meta"># 安装</span></span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure>
<h3 id="安装-16-个镜像，启动了9个容器"><a href="#安装-16-个镜像，启动了9个容器" class="headerlink" title="安装 16 个镜像，启动了9个容器"></a>安装 16 个镜像，启动了9个容器</h3><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">goharbor/chartmuseum-photon    <span class="comment">#</span></span><br><span class="line">goharbor/redis-photon          <span class="comment">#</span></span><br><span class="line">goharbor/trivy-adapter-photon  <span class="comment">#</span></span><br><span class="line">goharbor/clair-adapter-photon  <span class="comment">#</span></span><br><span class="line">goharbor/clair-photon          <span class="comment">#</span></span><br><span class="line">goharbor/notary-server-photon  </span><br><span class="line">goharbor/notary-signer-photon  </span><br><span class="line">goharbor/harbor-registryctl    </span><br><span class="line">goharbor/registry-photon       </span><br><span class="line">goharbor/nginx-photon          </span><br><span class="line">goharbor/harbor-<span class="built_in">log</span>            </span><br><span class="line">goharbor/harbor-jobservice     </span><br><span class="line">goharbor/harbor-core           </span><br><span class="line">goharbor/harbor-portal         </span><br><span class="line">goharbor/harbor-db             </span><br><span class="line">goharbor/<span class="built_in">prepare</span></span><br></pre></td></tr></table></figure>
<h3 id="配置docker信任"><a href="#配置docker信任" class="headerlink" title="配置docker信任"></a>配置docker信任</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"insecure-registries"</span>: [</span><br><span class="line">    <span class="string">"192.168.0.61:81"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">systemctl reload docker</span><br></pre></td></tr></table></figure>
<h3 id="创建一个项目"><a href="#创建一个项目" class="headerlink" title="创建一个项目"></a>创建一个项目</h3><blockquote>
<p>登录后</p>
<ul>
<li>创建一个项目 newproject,分配大小。（ -1 不限制）</li>
<li>创建一个用户 new 。 到项目中授权新用户为项目管理员 </li>
</ul>
</blockquote>
<h3 id="制作上传镜像"><a href="#制作上传镜像" class="headerlink" title="制作上传镜像"></a>制作上传镜像</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"># 制作镜像</span><br><span class="line">docker tag busybox <span class="number">192.168</span><span class="number">.0</span><span class="number">.61</span>:<span class="number">81</span>/newproject/busybox:<span class="number">0.1</span></span><br><span class="line"># 将当前容器打为镜像 (docker commit 当前运行的容器名 新镜像名:版本号)</span><br><span class="line">docker commit busybox <span class="number">192.168</span><span class="number">.0</span><span class="number">.61</span>:<span class="number">81</span>/newproject/busybox:<span class="number">0.2</span></span><br><span class="line"></span><br><span class="line"># 登录镜像库</span><br><span class="line">docker login <span class="number">192.168</span><span class="number">.0</span><span class="number">.61</span>:<span class="number">81</span></span><br><span class="line"># 上传镜像</span><br><span class="line">docker push <span class="number">192.168</span><span class="number">.0</span><span class="number">.61</span>:<span class="number">81</span>/newproject/busybox:<span class="number">0.1</span></span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>l2tpvpn安装</title>
    <url>/blog.githup.io/2020/05/l2tpvpn%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Script for automatic setup of an IPsec VPN server on CentOS/RHEL 6 and 7.</span></span><br><span class="line"><span class="comment"># Works on any dedicated server or virtual private server (VPS) except OpenVZ.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># DO NOT RUN THIS SCRIPT ON YOUR PC OR MAC!</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The latest version of this script is available at:</span></span><br><span class="line"><span class="comment"># https://github.com/hwdsl2/setup-ipsec-vpn</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Copyright (C) 2015-2019 Lin Song &lt;linsongui@gmail.com&gt;</span></span><br><span class="line"><span class="comment"># Based on the work of Thomas Sarlandie (Copyright 2012)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This work is licensed under the Creative Commons Attribution-ShareAlike 3.0</span></span><br><span class="line"><span class="comment"># Unported License: http://creativecommons.org/licenses/by-sa/3.0/</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Attribution required: please include my name in any derivative and let me</span></span><br><span class="line"><span class="comment"># know how you have improved it!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># =====================================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define your own values for these variables</span></span><br><span class="line"><span class="comment"># - IPsec pre-shared key, VPN username and password</span></span><br><span class="line"><span class="comment"># - All values MUST be placed inside 'single quotes'</span></span><br><span class="line"><span class="comment"># - DO NOT use these special characters within values: \ " '</span></span><br><span class="line"></span><br><span class="line">YOUR_IPSEC_PSK=<span class="string">'112233'</span></span><br><span class="line">YOUR_USERNAME=<span class="string">'yanqi'</span></span><br><span class="line">YOUR_PASSWORD=<span class="string">'yanqi123'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Important notes:   https://git.io/vpnnotes</span></span><br><span class="line"><span class="comment"># Setup VPN clients: https://git.io/vpnclients</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># =====================================================</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"</span></span><br><span class="line">SYS_DT=$(date +%F-%T)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">exiterr</span></span>()  &#123; <span class="built_in">echo</span> <span class="string">"Error: <span class="variable">$1</span>"</span> &gt;&amp;2; <span class="built_in">exit</span> 1; &#125;</span><br><span class="line"><span class="function"><span class="title">exiterr2</span></span>() &#123; exiterr <span class="string">"'yum install' failed."</span>; &#125;</span><br><span class="line"><span class="function"><span class="title">conf_bk</span></span>() &#123; /bin/cp -f <span class="string">"<span class="variable">$1</span>"</span> <span class="string">"<span class="variable">$1</span>.old-<span class="variable">$SYS_DT</span>"</span> 2&gt;/dev/null; &#125;</span><br><span class="line"><span class="function"><span class="title">bigecho</span></span>() &#123; <span class="built_in">echo</span>; <span class="built_in">echo</span> <span class="string">"## <span class="variable">$1</span>"</span>; <span class="built_in">echo</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">check_ip</span></span>() &#123;</span><br><span class="line">  IP_REGEX=<span class="string">'^(([0-9]|[1-9][0-9]|1[0-9]&#123;2&#125;|2[0-4][0-9]|25[0-5])\.)&#123;3&#125;([0-9]|[1-9][0-9]|1[0-9]&#123;2&#125;|2[0-4][0-9]|25[0-5])$'</span></span><br><span class="line">  <span class="built_in">printf</span> <span class="string">'%s'</span> <span class="string">"<span class="variable">$1</span>"</span> | tr -d <span class="string">'\n'</span> | grep -Eq <span class="string">"<span class="variable">$IP_REGEX</span>"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">vpnsetup</span></span>() &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! grep -qs -e <span class="string">"release 6"</span> -e <span class="string">"release 7"</span> /etc/redhat-release; <span class="keyword">then</span></span><br><span class="line">  exiterr <span class="string">"This script only supports CentOS/RHEL 6 and 7."</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -f /proc/user_beancounters ]; <span class="keyword">then</span></span><br><span class="line">  exiterr <span class="string">"OpenVZ VPS is not supported. Try OpenVPN: github.com/Nyr/openvpn-install"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$(id -u)</span>"</span> != 0 ]; <span class="keyword">then</span></span><br><span class="line">  exiterr <span class="string">"Script must be run as root. Try 'sudo sh <span class="variable">$0</span>'"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">def_iface=$(route 2&gt;/dev/null | grep -m 1 <span class="string">'^default'</span> | grep -o <span class="string">'[^ ]*$'</span>)</span><br><span class="line">[ -z <span class="string">"<span class="variable">$def_iface</span>"</span> ] &amp;&amp; def_iface=$(ip -4 route list 0/0 2&gt;/dev/null | grep -m 1 -Po <span class="string">'(?&lt;=dev )(\S+)'</span>)</span><br><span class="line">def_state=$(cat <span class="string">"/sys/class/net/<span class="variable">$def_iface</span>/operstate"</span> 2&gt;/dev/null)</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$def_state</span>"</span> ] &amp;&amp; [ <span class="string">"<span class="variable">$def_state</span>"</span> != <span class="string">"down"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">case</span> <span class="string">"<span class="variable">$def_iface</span>"</span> <span class="keyword">in</span></span><br><span class="line">    wl*)</span><br><span class="line">      exiterr <span class="string">"Wireless interface '<span class="variable">$def_iface</span>' detected. DO NOT run this script on your PC or Mac!"</span></span><br><span class="line">      ;;</span><br><span class="line">  <span class="keyword">esac</span></span><br><span class="line">  NET_IFACE=<span class="string">"<span class="variable">$def_iface</span>"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  eth0_state=$(cat <span class="string">"/sys/class/net/eth0/operstate"</span> 2&gt;/dev/null)</span><br><span class="line">  <span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$eth0_state</span>"</span> ] || [ <span class="string">"<span class="variable">$eth0_state</span>"</span> = <span class="string">"down"</span> ]; <span class="keyword">then</span></span><br><span class="line">    exiterr <span class="string">"Could not detect the default network interface."</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  NET_IFACE=eth0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">[ -n <span class="string">"<span class="variable">$YOUR_IPSEC_PSK</span>"</span> ] &amp;&amp; VPN_IPSEC_PSK=<span class="string">"<span class="variable">$YOUR_IPSEC_PSK</span>"</span></span><br><span class="line">[ -n <span class="string">"<span class="variable">$YOUR_USERNAME</span>"</span> ] &amp;&amp; VPN_USER=<span class="string">"<span class="variable">$YOUR_USERNAME</span>"</span></span><br><span class="line">[ -n <span class="string">"<span class="variable">$YOUR_PASSWORD</span>"</span> ] &amp;&amp; VPN_PASSWORD=<span class="string">"<span class="variable">$YOUR_PASSWORD</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$VPN_IPSEC_PSK</span>"</span> ] &amp;&amp; [ -z <span class="string">"<span class="variable">$VPN_USER</span>"</span> ] &amp;&amp; [ -z <span class="string">"<span class="variable">$VPN_PASSWORD</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  bigecho <span class="string">"VPN credentials not set by user. Generating random PSK and password..."</span></span><br><span class="line">  VPN_IPSEC_PSK=$(LC_CTYPE=C tr -dc <span class="string">'A-HJ-NPR-Za-km-z2-9'</span> &lt; /dev/urandom | head -c 20)</span><br><span class="line">  VPN_USER=vpnuser</span><br><span class="line">  VPN_PASSWORD=$(LC_CTYPE=C tr -dc <span class="string">'A-HJ-NPR-Za-km-z2-9'</span> &lt; /dev/urandom | head -c 16)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$VPN_IPSEC_PSK</span>"</span> ] || [ -z <span class="string">"<span class="variable">$VPN_USER</span>"</span> ] || [ -z <span class="string">"<span class="variable">$VPN_PASSWORD</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  exiterr <span class="string">"All VPN credentials must be specified. Edit the script and re-enter them."</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">printf</span> <span class="string">'%s'</span> <span class="string">"<span class="variable">$VPN_IPSEC_PSK</span> <span class="variable">$VPN_USER</span> <span class="variable">$VPN_PASSWORD</span>"</span> | LC_ALL=C grep -q <span class="string">'[^ -~]\+'</span>; <span class="keyword">then</span></span><br><span class="line">  exiterr <span class="string">"VPN credentials must not contain non-ASCII characters."</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$VPN_IPSEC_PSK</span> <span class="variable">$VPN_USER</span> <span class="variable">$VPN_PASSWORD</span>"</span> <span class="keyword">in</span></span><br><span class="line">  *[\\\"\<span class="string">']*)</span></span><br><span class="line"><span class="string">    exiterr "VPN credentials must not contain these special characters: \\ \" '</span><span class="string">"</span></span><br><span class="line"><span class="string">    ;;</span></span><br><span class="line"><span class="string">esac</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "</span>VPN setup <span class="keyword">in</span> progress... Please be patient.<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Create and change to working dir</span></span><br><span class="line"><span class="string">mkdir -p /opt/src</span></span><br><span class="line"><span class="string">cd /opt/src || exit 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "</span>Installing packages required <span class="keyword">for</span> setup...<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">yum -y install wget bind-utils openssl \</span></span><br><span class="line"><span class="string">  iptables iproute gawk grep sed net-tools || exiterr2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "</span>Trying to auto discover IP of this server...<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">cat &lt;&lt;'EOF'</span></span><br><span class="line"><span class="string">In case the script hangs here for more than a few minutes,</span></span><br><span class="line"><span class="string">press Ctrl-C to abort. Then edit it and manually enter IP.</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># In case auto IP discovery fails, enter server's public IP here.</span></span><br><span class="line"><span class="string">PUBLIC_IP=<span class="variable">$&#123;VPN_PUBLIC_IP:-''&#125;</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ -z "</span><span class="variable">$PUBLIC_IP</span><span class="string">" ] &amp;&amp; PUBLIC_IP=<span class="variable">$(dig @resolver1.opendns.com -t A -4 myip.opendns.com +short)</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">check_ip "</span><span class="variable">$PUBLIC_IP</span><span class="string">" || PUBLIC_IP=<span class="variable">$(wget -t 3 -T 15 -qO- http://ipv4.icanhazip.com)</span></span></span><br><span class="line"><span class="string">check_ip "</span><span class="variable">$PUBLIC_IP</span><span class="string">" || exiterr "</span>Cannot detect this server<span class="string">'s public IP. Edit the script and manually enter it."</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "Adding the EPEL repository..."</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">epel_url="https://dl.fedoraproject.org/pub/epel/epel-release-latest-$(rpm -E '</span>%&#123;rhel&#125;<span class="string">').noarch.rpm"</span></span><br><span class="line"><span class="string">yum -y install epel-release || yum -y install "$epel_url" || exiterr2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "Installing packages required for the VPN..."</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">REPO1='</span>--enablerepo=epel<span class="string">'</span></span><br><span class="line"><span class="string">REPO2='</span>--enablerepo=*server-optional*<span class="string">'</span></span><br><span class="line"><span class="string">REPO3='</span>--enablerepo=*releases-optional*<span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">yum -y install nss-devel nspr-devel pkgconfig pam-devel \</span></span><br><span class="line"><span class="string">  libcap-ng-devel libselinux-devel curl-devel \</span></span><br><span class="line"><span class="string">  flex bison gcc make ppp || exiterr2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">yum "$REPO1" -y install xl2tpd || exiterr2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if grep -qs "release 6" /etc/redhat-release; then</span></span><br><span class="line"><span class="string">  yum -y remove libevent-devel</span></span><br><span class="line"><span class="string">  yum "$REPO2" "$REPO3" -y install libevent2-devel fipscheck-devel || exiterr2</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  yum -y install systemd-devel iptables-services || exiterr2</span></span><br><span class="line"><span class="string">  yum "$REPO2" "$REPO3" -y install libevent-devel fipscheck-devel || exiterr2</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">case "$(uname -r)" in</span></span><br><span class="line"><span class="string">  4.1[456]*)</span></span><br><span class="line"><span class="string">    if grep -qs "release 6" /etc/redhat-release; then</span></span><br><span class="line"><span class="string">      L2TP_VER=1.3.12</span></span><br><span class="line"><span class="string">      l2tp_dir="xl2tpd-$L2TP_VER"</span></span><br><span class="line"><span class="string">      l2tp_file="$l2tp_dir.tar.gz"</span></span><br><span class="line"><span class="string">      l2tp_url="https://github.com/xelerance/xl2tpd/archive/v$L2TP_VER.tar.gz"</span></span><br><span class="line"><span class="string">      yum "$REPO2" "$REPO3" -y install libpcap-devel || exiterr2</span></span><br><span class="line"><span class="string">      wget -t 3 -T 30 -nv -O "$l2tp_file" "$l2tp_url" || exit 1</span></span><br><span class="line"><span class="string">      /bin/rm -rf "/opt/src/$l2tp_dir"</span></span><br><span class="line"><span class="string">      tar xzf "$l2tp_file" &amp;&amp; /bin/rm -f "$l2tp_file"</span></span><br><span class="line"><span class="string">      cd "$l2tp_dir" &amp;&amp; make -s 2&gt;/dev/null &amp;&amp; PREFIX=/usr make -s install</span></span><br><span class="line"><span class="string">      cd /opt/src || exit 1</span></span><br><span class="line"><span class="string">      /bin/rm -rf "/opt/src/$l2tp_dir"</span></span><br><span class="line"><span class="string">    fi</span></span><br><span class="line"><span class="string">    ;;</span></span><br><span class="line"><span class="string">esac</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "Installing Fail2Ban to protect SSH..."</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">yum "$REPO1" -y install fail2ban || exiterr2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "Compiling and installing Libreswan..."</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">SWAN_VER=3.27</span></span><br><span class="line"><span class="string">swan_file="libreswan-$SWAN_VER.tar.gz"</span></span><br><span class="line"><span class="string">swan_url1="https://github.com/libreswan/libreswan/archive/v$SWAN_VER.tar.gz"</span></span><br><span class="line"><span class="string">swan_url2="https://download.libreswan.org/$swan_file"</span></span><br><span class="line"><span class="string">if ! &#123; wget -t 3 -T 30 -nv -O "$swan_file" "$swan_url1" || wget -t 3 -T 30 -nv -O "$swan_file" "$swan_url2"; &#125;; then</span></span><br><span class="line"><span class="string">  exit 1</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">/bin/rm -rf "/opt/src/libreswan-$SWAN_VER"</span></span><br><span class="line"><span class="string">tar xzf "$swan_file" &amp;&amp; /bin/rm -f "$swan_file"</span></span><br><span class="line"><span class="string">cd "libreswan-$SWAN_VER" || exit 1</span></span><br><span class="line"><span class="string">cat &gt; Makefile.inc.local &lt;&lt;'</span>EOF<span class="string">'</span></span><br><span class="line"><span class="string">WERROR_CFLAGS =</span></span><br><span class="line"><span class="string">USE_DNSSEC = false</span></span><br><span class="line"><span class="string">USE_DH31 = false</span></span><br><span class="line"><span class="string">USE_GLIBC_KERN_FLIP_HEADERS = true</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">NPROCS=$(grep -c ^processor /proc/cpuinfo)</span></span><br><span class="line"><span class="string">[ -z "$NPROCS" ] &amp;&amp; NPROCS=1</span></span><br><span class="line"><span class="string">make "-j$((NPROCS+1))" -s base &amp;&amp; make -s install-base</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">cd /opt/src || exit 1</span></span><br><span class="line"><span class="string">/bin/rm -rf "/opt/src/libreswan-$SWAN_VER"</span></span><br><span class="line"><span class="string">if ! /usr/local/sbin/ipsec --version 2&gt;/dev/null | grep -qF "$SWAN_VER"; then</span></span><br><span class="line"><span class="string">  exiterr "Libreswan $SWAN_VER failed to build."</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "Creating VPN configuration..."</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">L2TP_NET=$&#123;VPN_L2TP_NET:-'</span>192.168.42.0/24<span class="string">'&#125;</span></span><br><span class="line"><span class="string">L2TP_LOCAL=$&#123;VPN_L2TP_LOCAL:-'</span>192.168.42.1<span class="string">'&#125;</span></span><br><span class="line"><span class="string">L2TP_POOL=$&#123;VPN_L2TP_POOL:-'</span>192.168.42.10-192.168.42.250<span class="string">'&#125;</span></span><br><span class="line"><span class="string">XAUTH_NET=$&#123;VPN_XAUTH_NET:-'</span>192.168.43.0/24<span class="string">'&#125;</span></span><br><span class="line"><span class="string">XAUTH_POOL=$&#123;VPN_XAUTH_POOL:-'</span>192.168.43.10-192.168.43.250<span class="string">'&#125;</span></span><br><span class="line"><span class="string">DNS_SRV1=$&#123;VPN_DNS_SRV1:-'</span>8.8.8.8<span class="string">'&#125;</span></span><br><span class="line"><span class="string">DNS_SRV2=$&#123;VPN_DNS_SRV2:-'</span>8.8.4.4<span class="string">'&#125;</span></span><br><span class="line"><span class="string">DNS_SRVS="\"$DNS_SRV1 $DNS_SRV2\""</span></span><br><span class="line"><span class="string">[ -n "$VPN_DNS_SRV1" ] &amp;&amp; [ -z "$VPN_DNS_SRV2" ] &amp;&amp; DNS_SRVS="$DNS_SRV1"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Create IPsec config</span></span><br><span class="line"><span class="string">conf_bk "/etc/ipsec.conf"</span></span><br><span class="line"><span class="string">cat &gt; /etc/ipsec.conf &lt;&lt;EOF</span></span><br><span class="line"><span class="string">version 2.0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">config setup</span></span><br><span class="line"><span class="string">  virtual-private=%v4:10.0.0.0/8,%v4:192.168.0.0/16,%v4:172.16.0.0/12,%v4:!$L2TP_NET,%v4:!$XAUTH_NET</span></span><br><span class="line"><span class="string">  protostack=netkey</span></span><br><span class="line"><span class="string">  interfaces=%defaultroute</span></span><br><span class="line"><span class="string">  uniqueids=no</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">conn shared</span></span><br><span class="line"><span class="string">  left=%defaultroute</span></span><br><span class="line"><span class="string">  leftid=$PUBLIC_IP</span></span><br><span class="line"><span class="string">  right=%any</span></span><br><span class="line"><span class="string">  encapsulation=yes</span></span><br><span class="line"><span class="string">  authby=secret</span></span><br><span class="line"><span class="string">  pfs=no</span></span><br><span class="line"><span class="string">  rekey=no</span></span><br><span class="line"><span class="string">  keyingtries=5</span></span><br><span class="line"><span class="string">  dpddelay=30</span></span><br><span class="line"><span class="string">  dpdtimeout=120</span></span><br><span class="line"><span class="string">  dpdaction=clear</span></span><br><span class="line"><span class="string">  ike=aes256-sha2,aes128-sha2,aes256-sha1,aes128-sha1,aes256-sha2;modp1024,aes128-sha1;modp1024</span></span><br><span class="line"><span class="string">  phase2alg=aes_gcm-null,aes128-sha1,aes256-sha1,aes256-sha2_512,aes128-sha2,aes256-sha2</span></span><br><span class="line"><span class="string">  sha2-truncbug=yes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">conn l2tp-psk</span></span><br><span class="line"><span class="string">  auto=add</span></span><br><span class="line"><span class="string">  leftprotoport=17/1701</span></span><br><span class="line"><span class="string">  rightprotoport=17/%any</span></span><br><span class="line"><span class="string">  type=transport</span></span><br><span class="line"><span class="string">  phase2=esp</span></span><br><span class="line"><span class="string">  also=shared</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">conn xauth-psk</span></span><br><span class="line"><span class="string">  auto=add</span></span><br><span class="line"><span class="string">  leftsubnet=0.0.0.0/0</span></span><br><span class="line"><span class="string">  rightaddresspool=$XAUTH_POOL</span></span><br><span class="line"><span class="string">  modecfgdns=$DNS_SRVS</span></span><br><span class="line"><span class="string">  leftxauthserver=yes</span></span><br><span class="line"><span class="string">  rightxauthclient=yes</span></span><br><span class="line"><span class="string">  leftmodecfgserver=yes</span></span><br><span class="line"><span class="string">  rightmodecfgclient=yes</span></span><br><span class="line"><span class="string">  modecfgpull=yes</span></span><br><span class="line"><span class="string">  xauthby=file</span></span><br><span class="line"><span class="string">  ike-frag=yes</span></span><br><span class="line"><span class="string">  ikev2=never</span></span><br><span class="line"><span class="string">  cisco-unity=yes</span></span><br><span class="line"><span class="string">  also=shared</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Specify IPsec PSK</span></span><br><span class="line"><span class="string">conf_bk "/etc/ipsec.secrets"</span></span><br><span class="line"><span class="string">cat &gt; /etc/ipsec.secrets &lt;&lt;EOF</span></span><br><span class="line"><span class="string">%any  %any  : PSK "$VPN_IPSEC_PSK"</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Create xl2tpd config</span></span><br><span class="line"><span class="string">conf_bk "/etc/xl2tpd/xl2tpd.conf"</span></span><br><span class="line"><span class="string">cat &gt; /etc/xl2tpd/xl2tpd.conf &lt;&lt;EOF</span></span><br><span class="line"><span class="string">[global]</span></span><br><span class="line"><span class="string">port = 1701</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[lns default]</span></span><br><span class="line"><span class="string">ip range = $L2TP_POOL</span></span><br><span class="line"><span class="string">local ip = $L2TP_LOCAL</span></span><br><span class="line"><span class="string">require chap = yes</span></span><br><span class="line"><span class="string">refuse pap = yes</span></span><br><span class="line"><span class="string">require authentication = yes</span></span><br><span class="line"><span class="string">name = l2tpd</span></span><br><span class="line"><span class="string">pppoptfile = /etc/ppp/options.xl2tpd</span></span><br><span class="line"><span class="string">length bit = yes</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Set xl2tpd options</span></span><br><span class="line"><span class="string">conf_bk "/etc/ppp/options.xl2tpd"</span></span><br><span class="line"><span class="string">cat &gt; /etc/ppp/options.xl2tpd &lt;&lt;EOF</span></span><br><span class="line"><span class="string">+mschap-v2</span></span><br><span class="line"><span class="string">ipcp-accept-local</span></span><br><span class="line"><span class="string">ipcp-accept-remote</span></span><br><span class="line"><span class="string">noccp</span></span><br><span class="line"><span class="string">auth</span></span><br><span class="line"><span class="string">mtu 1280</span></span><br><span class="line"><span class="string">mru 1280</span></span><br><span class="line"><span class="string">proxyarp</span></span><br><span class="line"><span class="string">lcp-echo-failure 4</span></span><br><span class="line"><span class="string">lcp-echo-interval 30</span></span><br><span class="line"><span class="string">connect-delay 5000</span></span><br><span class="line"><span class="string">ms-dns $DNS_SRV1</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if [ -z "$VPN_DNS_SRV1" ] || [ -n "$VPN_DNS_SRV2" ]; then</span></span><br><span class="line"><span class="string">cat &gt;&gt; /etc/ppp/options.xl2tpd &lt;&lt;EOF</span></span><br><span class="line"><span class="string">ms-dns $DNS_SRV2</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Create VPN credentials</span></span><br><span class="line"><span class="string">conf_bk "/etc/ppp/chap-secrets"</span></span><br><span class="line"><span class="string">cat &gt; /etc/ppp/chap-secrets &lt;&lt;EOF</span></span><br><span class="line"><span class="string">"$VPN_USER" l2tpd "$VPN_PASSWORD" *</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">conf_bk "/etc/ipsec.d/passwd"</span></span><br><span class="line"><span class="string">VPN_PASSWORD_ENC=$(openssl passwd -1 "$VPN_PASSWORD")</span></span><br><span class="line"><span class="string">cat &gt; /etc/ipsec.d/passwd &lt;&lt;EOF</span></span><br><span class="line"><span class="string">$VPN_USER:$VPN_PASSWORD_ENC:xauth-psk</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "Updating sysctl settings..."</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if ! grep -qs "hwdsl2 VPN script" /etc/sysctl.conf; then</span></span><br><span class="line"><span class="string">  conf_bk "/etc/sysctl.conf"</span></span><br><span class="line"><span class="string">  if [ "$(getconf LONG_BIT)" = "64" ]; then</span></span><br><span class="line"><span class="string">    SHM_MAX=68719476736</span></span><br><span class="line"><span class="string">    SHM_ALL=4294967296</span></span><br><span class="line"><span class="string">  else</span></span><br><span class="line"><span class="string">    SHM_MAX=4294967295</span></span><br><span class="line"><span class="string">    SHM_ALL=268435456</span></span><br><span class="line"><span class="string">  fi</span></span><br><span class="line"><span class="string">cat &gt;&gt; /etc/sysctl.conf &lt;&lt;EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Added by hwdsl2 VPN script</span></span><br><span class="line"><span class="string">kernel.msgmnb = 65536</span></span><br><span class="line"><span class="string">kernel.msgmax = 65536</span></span><br><span class="line"><span class="string">kernel.shmmax = $SHM_MAX</span></span><br><span class="line"><span class="string">kernel.shmall = $SHM_ALL</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">net.ipv4.ip_forward = 1</span></span><br><span class="line"><span class="string">net.ipv4.conf.all.accept_source_route = 0</span></span><br><span class="line"><span class="string">net.ipv4.conf.all.accept_redirects = 0</span></span><br><span class="line"><span class="string">net.ipv4.conf.all.send_redirects = 0</span></span><br><span class="line"><span class="string">net.ipv4.conf.all.rp_filter = 0</span></span><br><span class="line"><span class="string">net.ipv4.conf.default.accept_source_route = 0</span></span><br><span class="line"><span class="string">net.ipv4.conf.default.accept_redirects = 0</span></span><br><span class="line"><span class="string">net.ipv4.conf.default.send_redirects = 0</span></span><br><span class="line"><span class="string">net.ipv4.conf.default.rp_filter = 0</span></span><br><span class="line"><span class="string">net.ipv4.conf.$NET_IFACE.send_redirects = 0</span></span><br><span class="line"><span class="string">net.ipv4.conf.$NET_IFACE.rp_filter = 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">net.core.wmem_max = 12582912</span></span><br><span class="line"><span class="string">net.core.rmem_max = 12582912</span></span><br><span class="line"><span class="string">net.ipv4.tcp_rmem = 10240 87380 12582912</span></span><br><span class="line"><span class="string">net.ipv4.tcp_wmem = 10240 87380 12582912</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "Updating IPTables rules..."</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Check if rules need updating</span></span><br><span class="line"><span class="string">ipt_flag=0</span></span><br><span class="line"><span class="string">IPT_FILE="/etc/sysconfig/iptables"</span></span><br><span class="line"><span class="string">if ! grep -qs "hwdsl2 VPN script" "$IPT_FILE" \</span></span><br><span class="line"><span class="string">   || ! iptables -t nat -C POSTROUTING -s "$L2TP_NET" -o "$NET_IFACE" -j MASQUERADE 2&gt;/dev/null \</span></span><br><span class="line"><span class="string">   || ! iptables -t nat -C POSTROUTING -s "$XAUTH_NET" -o "$NET_IFACE" -m policy --dir out --pol none -j MASQUERADE 2&gt;/dev/null; then</span></span><br><span class="line"><span class="string">  ipt_flag=1</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Add IPTables rules for VPN</span></span><br><span class="line"><span class="string">if [ "$ipt_flag" = "1" ]; then</span></span><br><span class="line"><span class="string">  service fail2ban stop &gt;/dev/null 2&gt;&amp;1</span></span><br><span class="line"><span class="string">  iptables-save &gt; "$IPT_FILE.old-$SYS_DT"</span></span><br><span class="line"><span class="string">  iptables -I INPUT 1 -p udp --dport 1701 -m policy --dir in --pol none -j DROP</span></span><br><span class="line"><span class="string">  iptables -I INPUT 2 -m conntrack --ctstate INVALID -j DROP</span></span><br><span class="line"><span class="string">  iptables -I INPUT 3 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT</span></span><br><span class="line"><span class="string">  iptables -I INPUT 4 -p udp -m multiport --dports 500,4500 -j ACCEPT</span></span><br><span class="line"><span class="string">  iptables -I INPUT 5 -p udp --dport 1701 -m policy --dir in --pol ipsec -j ACCEPT</span></span><br><span class="line"><span class="string">  iptables -I INPUT 6 -p udp --dport 1701 -j DROP</span></span><br><span class="line"><span class="string">  iptables -I FORWARD 1 -m conntrack --ctstate INVALID -j DROP</span></span><br><span class="line"><span class="string">  iptables -I FORWARD 2 -i "$NET_IFACE" -o ppp+ -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT</span></span><br><span class="line"><span class="string">  iptables -I FORWARD 3 -i ppp+ -o "$NET_IFACE" -j ACCEPT</span></span><br><span class="line"><span class="string">  iptables -I FORWARD 4 -i ppp+ -o ppp+ -s "$L2TP_NET" -d "$L2TP_NET" -j ACCEPT</span></span><br><span class="line"><span class="string">  iptables -I FORWARD 5 -i "$NET_IFACE" -d "$XAUTH_NET" -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT</span></span><br><span class="line"><span class="string">  iptables -I FORWARD 6 -s "$XAUTH_NET" -o "$NET_IFACE" -j ACCEPT</span></span><br><span class="line"><span class="string">  # Uncomment if you wish to disallow traffic between VPN clients themselves</span></span><br><span class="line"><span class="string">  # iptables -I FORWARD 2 -i ppp+ -o ppp+ -s "$L2TP_NET" -d "$L2TP_NET" -j DROP</span></span><br><span class="line"><span class="string">  # iptables -I FORWARD 3 -s "$XAUTH_NET" -d "$XAUTH_NET" -j DROP</span></span><br><span class="line"><span class="string">  iptables -A FORWARD -j DROP</span></span><br><span class="line"><span class="string">  iptables -t nat -I POSTROUTING -s "$XAUTH_NET" -o "$NET_IFACE" -m policy --dir out --pol none -j MASQUERADE</span></span><br><span class="line"><span class="string">  iptables -t nat -I POSTROUTING -s "$L2TP_NET" -o "$NET_IFACE" -j MASQUERADE</span></span><br><span class="line"><span class="string">  echo "# Modified by hwdsl2 VPN script" &gt; "$IPT_FILE"</span></span><br><span class="line"><span class="string">  iptables-save &gt;&gt; "$IPT_FILE"</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "Creating basic Fail2Ban rules..."</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if [ ! -f /etc/fail2ban/jail.local ] ; then</span></span><br><span class="line"><span class="string">cat &gt; /etc/fail2ban/jail.local &lt;&lt;'</span>EOF<span class="string">'</span></span><br><span class="line"><span class="string">[ssh-iptables]</span></span><br><span class="line"><span class="string">enabled  = true</span></span><br><span class="line"><span class="string">filter   = sshd</span></span><br><span class="line"><span class="string">action   = iptables[name=SSH, port=ssh, protocol=tcp]</span></span><br><span class="line"><span class="string">logpath  = /var/log/secure</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bigecho "Enabling services on boot..."</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if grep -qs "release 6" /etc/redhat-release; then</span></span><br><span class="line"><span class="string">  chkconfig iptables on</span></span><br><span class="line"><span class="string">  chkconfig fail2ban on</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  systemctl --now mask firewalld 2&gt;/dev/null</span></span><br><span class="line"><span class="string">  systemctl enable iptables fail2ban 2&gt;/dev/null</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if ! grep -qs "hwdsl2 VPN script" /etc/rc.local; then</span></span><br><span class="line"><span class="string">  if [ -f /etc/rc.local ]; then</span></span><br><span class="line"><span class="string">    conf_bk "/etc/rc.local"</span></span><br><span class="line"><span class="string">  else</span></span><br><span class="line"><span class="string">    echo '</span><span class="comment">#!/bin/sh' &gt; /etc/rc.local</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">cat &gt;&gt; /etc/rc.local &lt;&lt;<span class="string">'EOF'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Added by hwdsl2 VPN script</span></span><br><span class="line">(sleep 15</span><br><span class="line">modprobe -q pppol2tp</span><br><span class="line">service ipsec restart</span><br><span class="line">service xl2tpd restart</span><br><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/ip_forward)&amp;</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">bigecho <span class="string">"Starting services..."</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Restore SELinux contexts</span></span><br><span class="line">restorecon /etc/ipsec.d/*db 2&gt;/dev/null</span><br><span class="line">restorecon /usr/<span class="built_in">local</span>/sbin -Rv 2&gt;/dev/null</span><br><span class="line">restorecon /usr/<span class="built_in">local</span>/libexec/ipsec -Rv 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line"><span class="comment"># Reload sysctl.conf</span></span><br><span class="line">sysctl -e -q -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># Update file attributes</span></span><br><span class="line">chmod +x /etc/rc.local</span><br><span class="line">chmod 600 /etc/ipsec.secrets* /etc/ppp/chap-secrets* /etc/ipsec.d/passwd*</span><br><span class="line"></span><br><span class="line"><span class="comment"># Apply new IPTables rules</span></span><br><span class="line">iptables-restore &lt; <span class="string">"<span class="variable">$IPT_FILE</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Fix xl2tpd on CentOS 7, if kernel module "l2tp_ppp" is unavailable</span></span><br><span class="line"><span class="keyword">if</span> grep -qs <span class="string">"release 7"</span> /etc/redhat-release; <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">if</span> ! modprobe -q l2tp_ppp; <span class="keyword">then</span></span><br><span class="line">    sed -i <span class="string">'/^ExecStartPre/s/^/#/'</span> /usr/lib/systemd/system/xl2tpd.service</span><br><span class="line">    systemctl daemon-reload</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Restart services</span></span><br><span class="line">mkdir -p /run/pluto</span><br><span class="line">modprobe -q pppol2tp</span><br><span class="line">service fail2ban restart 2&gt;/dev/null</span><br><span class="line">service ipsec restart 2&gt;/dev/null</span><br><span class="line">service xl2tpd restart 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF</span><br><span class="line"></span><br><span class="line">================================================</span><br><span class="line"></span><br><span class="line">IPsec VPN server is now ready <span class="keyword">for</span> use!</span><br><span class="line"></span><br><span class="line">Connect to your new VPN with these details:</span><br><span class="line"></span><br><span class="line">Server IP: <span class="variable">$PUBLIC_IP</span></span><br><span class="line">IPsec PSK: <span class="variable">$VPN_IPSEC_PSK</span></span><br><span class="line">Username: <span class="variable">$VPN_USER</span></span><br><span class="line">Password: <span class="variable">$VPN_PASSWORD</span></span><br><span class="line"></span><br><span class="line">Write these down. You<span class="string">'ll need them to connect!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Important notes:   https://git.io/vpnnotes</span></span><br><span class="line"><span class="string">Setup VPN clients: https://git.io/vpnclients</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">================================================</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## Defer setup until we have the complete script</span></span><br><span class="line"><span class="string">vpnsetup "$@"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">exit 0</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>frp内网穿透</title>
    <url>/blog.githup.io/2020/05/frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://github.com/fatedier/frp/blob/master/README_zh.md" target="_blank" rel="noopener">Frp</a></p>
<h2 id="获取包"><a href="#获取包" class="headerlink" title="获取包"></a>获取包</h2><p>git clone <a href="https://github.com/fatedier/frp.git" target="_blank" rel="noopener">https://github.com/fatedier/frp.git</a></p>
<h3 id="服务端安装"><a href="#服务端安装" class="headerlink" title="服务端安装"></a>服务端安装</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 一键安装脚本</span></span><br><span class="line">wget --no-check-certificate https:<span class="regexp">//</span>raw.githubusercontent.com<span class="regexp">/clangcn/</span>onekey-install-shell<span class="regexp">/master/</span>frps<span class="regexp">/install-frps.sh -O ./i</span>nstall-frps.sh</span><br><span class="line"><span class="comment"># 安装位置：/usr/local/frps/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一路回车，就可以安装成功。</span></span><br></pre></td></tr></table></figure>
<h4 id="Congratulations-frps-install-completed"><a href="#Congratulations-frps-install-completed" class="headerlink" title="Congratulations, frps install completed!"></a>Congratulations, frps install completed!</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">You Server IP      :</span> <span class="number">11.84</span><span class="number">.8</span><span class="number">.4</span></span><br><span class="line"><span class="attr">Bind port          :</span> <span class="number">7000</span></span><br><span class="line"><span class="attr">KCP support        :</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">vhost http port    :</span> <span class="number">80</span></span><br><span class="line"><span class="attr">vhost https port   :</span> <span class="number">443</span></span><br><span class="line"><span class="attr">Dashboard port     :</span> <span class="number">6443</span></span><br><span class="line"><span class="attr">token              :</span> <span class="string">TrVhUVLCoZltnuLA</span></span><br><span class="line"><span class="attr">tcp_mux            :</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">Max Pool count     :</span> <span class="number">50</span></span><br><span class="line"><span class="attr">Log level          :</span> <span class="string">info</span></span><br><span class="line"><span class="attr">Log max days       :</span> <span class="number">3</span></span><br><span class="line"><span class="attr">Log file           :</span> <span class="string">enable</span></span><br><span class="line"><span class="string">==============================================</span></span><br><span class="line"><span class="attr">frps Dashboard     :</span> <span class="string">http://11.84.8.4:6443/</span></span><br><span class="line"><span class="attr">Dashboard user     :</span> <span class="string">admin</span></span><br><span class="line"><span class="attr">Dashboard password :</span> <span class="string">JFvEzm</span></span><br><span class="line"><span class="string">==============================================</span></span><br><span class="line"></span><br><span class="line"><span class="attr">frps status manage :</span> <span class="string">frps</span> <span class="string">&#123;start|stop|restart|status|config|version&#125;</span></span><br><span class="line"><span class="attr">Example:</span></span><br><span class="line">  <span class="attr">start:</span> <span class="string">frps</span> <span class="string">start</span></span><br><span class="line">   <span class="attr">stop:</span> <span class="string">frps</span> <span class="string">stop</span></span><br><span class="line"><span class="attr">restart:</span> <span class="string">frps</span> <span class="string">restart</span></span><br></pre></td></tr></table></figure>
<h4 id="配置服务端"><a href="#配置服务端" class="headerlink" title="配置服务端"></a>配置服务端</h4><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frps.ini</span></span><br><span class="line">[common]</span><br><span class="line">bind_port = 7000</span><br><span class="line">启动 frps：</span><br><span class="line"><span class="string">./frps</span> -c <span class="string">./frps.ini</span></span><br></pre></td></tr></table></figure>
<h3 id="客户端安装"><a href="#客户端安装" class="headerlink" title="客户端安装"></a>客户端安装</h3><figure class="highlight nix"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/fatedier/frp.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 frpc.ini 文件，假设 frps 所在服务器的公网 IP 为 x.x.x.x；</span></span><br><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line">[common]</span><br><span class="line"><span class="attr">server_addr</span> = x.x.x.x <span class="comment"># 服务端IP</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span>    <span class="comment"># 服务端端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ssh 配置样例</span></span><br><span class="line">[ssh]</span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">22</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6000</span> <span class="comment">#服务端转发端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 客户端frpc：</span></span><br><span class="line">./frpc -c ./frpc.ini</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过 ssh 访问内网机器，假设用户名为 test：</span></span><br><span class="line">ssh <span class="attr">-oPort=6000</span> test@x.x.x.x</span><br></pre></td></tr></table></figure>
<h4 id="squid-配置样例"><a href="#squid-配置样例" class="headerlink" title="squid 配置样例"></a>squid 配置样例</h4><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">frpc.ini </span><br><span class="line">[common]</span><br><span class="line">server_addr = x.x.x.x # 服务端IP</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">[squid]</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 8000</span><br><span class="line">remote_port = 8809</span><br><span class="line">use_compression = <span class="literal">true</span></span><br><span class="line">use_encryption = <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h4 id="gitlab-配置样例"><a href="#gitlab-配置样例" class="headerlink" title="gitlab 配置样例"></a>gitlab 配置样例</h4><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = <span class="number">11.84</span>.<span class="number">8.4</span> <span class="comment"># 服务端IP</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[gitlab]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">443</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">443</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">false</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title>webvirtmgr安装</title>
    <url>/blog.githup.io/2020/05/webvirtmgr%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="CentOS-7-x-安装"><a href="#CentOS-7-x-安装" class="headerlink" title="CentOS 7.x 安装"></a>CentOS 7.x 安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum -y install http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm</span><br><span class="line"><span class="comment"># if this doesn't work, use yum install epel-release</span></span><br><span class="line">sudo yum -y install git python-pip libvirt-python libxml2-python python-websockify supervisor nginx</span><br><span class="line">sudo yum -y install gcc python-devel</span><br><span class="line">sudo pip install numpy</span><br></pre></td></tr></table></figure>
<h2 id="Install-python-requirements-and-setup-Django-environment"><a href="#Install-python-requirements-and-setup-Django-environment" class="headerlink" title="Install python requirements and setup Django environment"></a>Install python requirements and setup Django environment</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git://github.com/retspen/webvirtmgr.git</span><br><span class="line"><span class="built_in">cd</span> webvirtmgr</span><br><span class="line">pyvenv webvirt</span><br><span class="line">. webvirt/bin/activate</span><br><span class="line">sudo pip install -r requirements.txt <span class="comment"># or python-pip (RedHat, Fedora, CentOS, OpenSuse)</span></span><br><span class="line">./manage.py syncdb</span><br><span class="line">./manage.py collectstatic</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Adding additional superusers</span></span><br><span class="line">$ ./manage.py createsuperuser</span><br></pre></td></tr></table></figure>
<h2 id="Setup-Nginx"><a href="#Setup-Nginx" class="headerlink" title="Setup Nginx"></a>Setup Nginx</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">sudo</span> mv webvirtmgr /var/www/         ( CentOS, RedHat, Fedora, Ubuntu )</span><br><span class="line"> </span><br><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;/etc/nginx/conf.d/webvirtmgr.conf</span><br><span class="line">server &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span> default_server;</span><br><span class="line">    <span class="attribute">server_name</span> <span class="variable">$hostname</span>;</span><br><span class="line">    <span class="comment">#access_log /var/log/nginx/webvirtmgr_access_log;</span></span><br><span class="line">    <span class="attribute">location</span> /static/ &#123;</span><br><span class="line">            <span class="attribute">root</span> /var/www/webvirtmgr/webvirtmgr; <span class="comment"># or /srv instead of /var</span></span><br><span class="line">            <span class="attribute">expires</span> max;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ .*\.(js|css)$</span> &#123;</span><br><span class="line">               <span class="attribute">proxy_pass</span> http://127.0.0.1:8000;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://127.0.0.1:8000;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-for <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>:<span class="variable">$server_port</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">            <span class="attribute">proxy_connect_timeout</span> <span class="number">600</span>;</span><br><span class="line">            <span class="attribute">proxy_read_timeout</span> <span class="number">600</span>;</span><br><span class="line">            <span class="attribute">proxy_send_timeout</span> <span class="number">600</span>;</span><br><span class="line">            <span class="attribute">client_max_body_size</span> <span class="number">1024M</span>; <span class="comment"># Set higher depending on your needs</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"><span class="attribute">sudo</span> service nginx restart</span><br><span class="line">sudo chown -R nginx:nginx /var/www/webvirtmgr</span><br></pre></td></tr></table></figure>
<h3 id="Setup-Supervisor"><a href="#Setup-Supervisor" class="headerlink" title="Setup Supervisor"></a>Setup Supervisor</h3><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[program:webvirtmgr]</span></span><br><span class="line"><span class="attr">command</span>=/usr/bin/python /var/www/webvirtmgr/manage.py run_gunicorn -c /var/www/webvirtmgr/conf/gunicorn.conf.py</span><br><span class="line"><span class="attr">directory</span>=/var/www/webvirtmgr</span><br><span class="line"><span class="attr">autostart</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">autorestart</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">logfile</span>=/var/log/supervisor/webvirtmgr.log</span><br><span class="line"><span class="attr">log_stderr</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">user</span>=nginx</span><br><span class="line"><span class="section">[program:webvirtmgr-console]</span></span><br><span class="line"><span class="attr">command</span>=/usr/bin/python /var/www/webvirtmgr/console/webvirtmgr-console</span><br><span class="line"><span class="attr">directory</span>=/var/www/webvirtmgr</span><br><span class="line"><span class="attr">autostart</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">autorestart</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">stdout_logfile</span>=/var/log/supervisor/webvirtmgr-console.log</span><br><span class="line"><span class="attr">redirect_stderr</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">user</span>=nginx</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo  chkconfig supervisord on</span><br><span class="line">sudo service supervisord stop</span><br><span class="line">sudo service supervisord start</span><br></pre></td></tr></table></figure>
<h3 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/www/webvirtmgr</span><br><span class="line">sudo git pull</span><br><span class="line">sudo ./manage.py collectstatic</span><br><span class="line">sudo service supervisord restart</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">./manage.py runserver 0:8000</span><br></pre></td></tr></table></figure>
<h3 id="使用tcp方式连接libvirtd"><a href="#使用tcp方式连接libvirtd" class="headerlink" title="使用tcp方式连接libvirtd"></a>使用tcp方式连接libvirtd</h3><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">vim /etc/libvirt/libvirtd.conf</span><br><span class="line"></span><br><span class="line">listen_tls = 0</span><br><span class="line">listen_tcp = 1</span><br><span class="line">tcp_port = <span class="string">"16509"</span> <span class="comment">#tcp端口</span></span><br><span class="line">listen_addr = <span class="string">"0.0.0.0"</span> <span class="comment">#监听IP</span></span><br><span class="line">unix_sock_ro_perms = <span class="string">"0777"</span></span><br><span class="line">unix_sock_rw_perms = <span class="string">"0770"</span></span><br><span class="line">auth_tcp = <span class="string">"none"</span></span><br><span class="line">max_clients = 1024 <span class="comment">#最大连接书</span></span><br><span class="line">min_workers = 100</span><br><span class="line">max_workers = 200</span><br><span class="line">max_requests = 20</span><br><span class="line">max_client_requests = 50</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>虚拟化</category>
      </categories>
  </entry>
  <entry>
    <title>gitlib安装</title>
    <url>/blog.githup.io/2020/05/gitlab%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="概念-conceptual"><a href="#概念-conceptual" class="headerlink" title="概念 conceptual"></a>概念 conceptual</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">git</span>     <span class="comment"># 版本管理工具</span></span><br><span class="line">gitlib  <span class="comment"># 实现git功能的开发库</span></span><br><span class="line">githup  <span class="comment"># git 公有仓库</span></span><br><span class="line">gitlab  <span class="comment"># git 私有仓库</span></span><br></pre></td></tr></table></figure>
<h2 id="docker-方式安装-sameersbn-docker-gitlab"><a href="#docker-方式安装-sameersbn-docker-gitlab" class="headerlink" title="docker 方式安装(sameersbn/docker-gitlab)"></a>docker 方式安装(sameersbn/docker-gitlab)</h2><p><a href="https://github.com/sameersbn/docker-gitlab/blob/master/README.md#installation" target="_blank" rel="noopener">docker-gitlab docs</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<h3 id="Centos7"><a href="#Centos7" class="headerlink" title="Centos7"></a>Centos7</h3><h4 id="安装配置依赖包"><a href="#安装配置依赖包" class="headerlink" title="安装配置依赖包"></a>安装配置依赖包</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install -y curl policycoreutils-python openssh-server</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> sshd</span><br><span class="line">sudo systemctl start sshd</span><br></pre></td></tr></table></figure>
<h4 id="打开防火墙"><a href="#打开防火墙" class="headerlink" title="打开防火墙"></a>打开防火墙</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo firewall-cmd --permanent --add-service=http</span><br><span class="line">sudo systemctl reload firewalld</span><br></pre></td></tr></table></figure>
<h4 id="安装postfix"><a href="#安装postfix" class="headerlink" title="安装postfix"></a>安装postfix</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install postfix</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> postfix</span><br><span class="line">sudo systemctl start postfix</span><br></pre></td></tr></table></figure>
<h5 id="配置postfix"><a href="#配置postfix" class="headerlink" title="配置postfix"></a>配置postfix</h5><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">fatal: parameter inet_interfaces: <span class="literal">no</span> local<span class="built_in"> interface </span>found <span class="keyword">for</span> ::1</span><br><span class="line">vim /etc/postfix/main.cf</span><br><span class="line">inet_interfaces = all</span><br></pre></td></tr></table></figure>
<h2 id="GitLab-安装"><a href="#GitLab-安装" class="headerlink" title="GitLab 安装"></a>GitLab 安装</h2><h3 id="添加-GitLab-安装库"><a href="#添加-GitLab-安装库" class="headerlink" title="添加 GitLab 安装库"></a>添加 GitLab 安装库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.rpm.sh | sudo bash</span><br><span class="line">EXTERNAL_URL=<span class="string">"http://gitlab.example.com"</span>;yum install -y gitlab-ee</span><br></pre></td></tr></table></figure>
<h3 id="gitlab服务列表"><a href="#gitlab服务列表" class="headerlink" title="gitlab服务列表"></a>gitlab服务列表</h3><ul>
<li>gitaly</li>
<li>gitlab-monitor</li>
<li>gitlab-workhorse</li>
<li>logrotate</li>
<li>nginx</li>
<li>node-exporter</li>
<li>postgres-exporter</li>
<li>postgresql</li>
<li>prometheus</li>
<li>redis</li>
<li>redis-exporter</li>
<li>sidekiq</li>
<li>unicorn</li>
</ul>
<h3 id="gitlab-配置文件"><a href="#gitlab-配置文件" class="headerlink" title="gitlab 配置文件"></a>gitlab 配置文件</h3><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># 设置访问url</span></span><br><span class="line">cat /etc/gitlab/gitlab.rb</span><br><span class="line">external_url <span class="string">'http://192.168.88.201'</span></span><br><span class="line"><span class="meta"># 修改url后需要重新reconfigure</span></span><br><span class="line"><span class="meta"># 重新配置(配置完成会启动各服务)</span></span><br><span class="line">gitlab-ctl reconfigure</span><br><span class="line"><span class="meta"># 访问</span></span><br><span class="line">http:<span class="comment">//192.168.88.201/</span></span><br><span class="line"><span class="meta"># 会提示更改新的账号密码，如下： </span></span><br><span class="line">root,<span class="number">5</span>th9ol</span><br></pre></td></tr></table></figure>
<h3 id="管理、配置gitlab"><a href="#管理、配置gitlab" class="headerlink" title="管理、配置gitlab"></a>管理、配置gitlab</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动所有gitlab组件：</span></span><br><span class="line">gitlab-ctl start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止所有gitlab组件：</span></span><br><span class="line">gitlab-ctl stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启所有gitlab组件：</span></span><br><span class="line">gitlab-ctl restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 管理员密码忘了：</span></span><br><span class="line">登录GitLab的Rails控制台</span><br><span class="line">gitlab-rails<span class="built_in"> console </span>production</span><br><span class="line">user = User.where(id: 1).first()</span><br><span class="line">user.password = 12345678</span><br><span class="line">user.<span class="attribute">password_confirmation</span>=12345678</span><br><span class="line">user.save!</span><br></pre></td></tr></table></figure>
<h3 id="备份计划："><a href="#备份计划：" class="headerlink" title="备份计划："></a>备份计划：</h3><p>备份GitLab repositories and GitLab metadata<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 加入计划任务：</span></span><br><span class="line"><span class="number">0</span> <span class="number">2</span> * * * <span class="regexp">/opt/gi</span>tlab<span class="regexp">/bin/gi</span>tlab-rake gitlab:backup:create</span><br></pre></td></tr></table></figure></p>
<h3 id="恢复gitlab："><a href="#恢复gitlab：" class="headerlink" title="恢复gitlab："></a>恢复gitlab：</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">root@puppet backups</span>]<span class="meta"># pwd</span></span><br><span class="line">/<span class="keyword">var</span>/opt/gitlab/backups</span><br><span class="line"></span><br><span class="line">[<span class="meta">root@puppet backups</span>]<span class="meta"># ls</span></span><br><span class="line"><span class="number">1406691018</span>_gitlab_backup.tar</span><br><span class="line"></span><br><span class="line">b.停止unicorn和sidekiq，保证数据库没有新的连接，不会有写数据情况</span><br><span class="line">[<span class="meta">root@puppet backups</span>]<span class="meta"># gitlab-ctl stop unicorn</span></span><br><span class="line">ok: down: unicorn: <span class="number">0</span>s, normally up</span><br><span class="line"></span><br><span class="line">[<span class="meta">root@puppet backups</span>]<span class="meta"># gitlab-ctl stop sidekiq</span></span><br><span class="line">ok: down: sidekiq: <span class="number">0</span>s, normally up</span><br><span class="line"></span><br><span class="line">c.恢复数据，<span class="number">1406691018</span>为备份文件的时间戳</span><br><span class="line">[<span class="meta">root@puppet backups</span>]<span class="meta"># gitlab-rake gitlab:backup:restore BACKUP=1406691018</span></span><br></pre></td></tr></table></figure>
<h3 id="目前使用http方式，没有使用ssh"><a href="#目前使用http方式，没有使用ssh" class="headerlink" title="目前使用http方式，没有使用ssh"></a>目前使用http方式，没有使用ssh</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下面用管理员 root 创建一个普通用户 yanqi,</span></span><br><span class="line"><span class="comment"># 从邮件中登录修改密码 yanqi , 5th9ol</span></span><br><span class="line"><span class="comment"># 然后使用yanqi创建一个git仓库girl，</span></span><br><span class="line">new project:<span class="string">"websystem"</span></span><br><span class="line"><span class="comment"># 最后在客户机下向新建的仓库里上传一个代码文件。</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"alarm_machine@163.com"</span></span><br></pre></td></tr></table></figure>
<h3 id="pycharm-配置gitlab"><a href="#pycharm-配置gitlab" class="headerlink" title="pycharm 配置gitlab"></a>pycharm 配置gitlab</h3><p><a href="http://192.168.88.201/yanqi/websystem.git" target="_blank" rel="noopener">http://192.168.88.201/yanqi/websystem.git</a><br><a href="http://www.cnblogs.com/derekchen/p/5873010.html" target="_blank" rel="noopener">参考配置</a></p>
<h3 id="linux-使用-gitlab"><a href="#linux-使用-gitlab" class="headerlink" title="linux 使用 gitlab"></a>linux 使用 gitlab</h3><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">yum</span> <span class="string">install git</span></span><br><span class="line"></span><br><span class="line"><span class="attr">git</span> <span class="string">clone http://192.168.88.201/yanqi/websystem.git</span></span><br><span class="line"><span class="attr">cd</span> <span class="string">websystem</span></span><br><span class="line"><span class="attr">git</span> <span class="string">pull</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>devops</category>
      </categories>
  </entry>
  <entry>
    <title>周易名言</title>
    <url>/blog.githup.io/2020/05/%E5%91%A8%E6%98%93%E5%90%8D%E8%A8%80/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="吉凶悔吝-周而复始"><a href="#吉凶悔吝-周而复始" class="headerlink" title="吉凶悔吝 周而复始"></a>吉凶悔吝 周而复始</h3><h4 id="修身"><a href="#修身" class="headerlink" title="修身"></a>修身</h4><ul>
<li>天行健，君子以自强不息。<blockquote>
<p>语出《易传》中的《象传》。意思是:宇宙不停运转，人应效法天地，永远不断地前进。</p>
</blockquote>
</li>
<li>地势坤，君子以厚德载物。<blockquote>
<p>意为大地的气势宽厚和顺，君子应增厚美德，容载万物。一个人要能承受自己能力以内，要自己权衡。</p>
</blockquote>
</li>
<li>君子以反身修德。<blockquote>
<p>出自《易经 蹇卦》,原文应是“山上有水,蹇,君子以反身修德”。意思是说君子在面对挫折、困难(蹇)的时候,应该反躬自问,修养品德。</p>
</blockquote>
</li>
<li><p>君子以自昭明德。</p>
</li>
<li><p>君子以顺德，积小以高大。</p>
</li>
<li>君子以见善则迁，有过则改。</li>
<li>见险而能止，智矣哉。</li>
<li>君子上交不谄，下交不渎。</li>
<li>君子以慎言语，节饮食。</li>
<li>君子以俭德辟难，不可荣以禄。</li>
<li>君子以独立不惧，遁世无闷。</li>
<li>君子藏器于身，待时而动。</li>
<li>君子以惩忿窒欲。</li>
<li>君子之道，或出或处，或默或语。</li>
<li>君子以非礼弗履。</li>
<li>君子以言有物而行有恒。</li>
<li>君子以思不出其位。</li>
<li>君子以恐惧修省。</li>
<li>君子以正位凝命。</li>
<li>君子敬以直内，义以方外，敬义立而德不孤。</li>
<li>君子以向晦入宴息。</li>
<li>君子以立不易方。</li>
<li>君子以果行育德。</li>
<li>君子以多识前言往行以畜其德。</li>
<li>君子以致命遂志。</li>
<li>君子以朋友讲习。</li>
<li>君子以思患而豫防之。</li>
<li>君子以同而异。</li>
<li>君子以行过乎恭，丧过乎哀，用过乎俭。</li>
</ul>
<h4 id="齐家"><a href="#齐家" class="headerlink" title="齐家"></a>齐家</h4><ul>
<li>方以类聚，物以群分。</li>
<li>积善之家，必有余庆；积不善之家，必有余殃。</li>
<li>德薄而位尊，知小而谋大，力小而任重，鲜不及矣。</li>
<li>仁者见之谓之仁，知者见之谓之知。</li>
<li>穷则变，变则通，通则久。</li>
<li>居上位而不骄，在下位而不忧。故乾乾因其时而惕，虽危而无咎矣。</li>
</ul>
<h4 id="平天下"><a href="#平天下" class="headerlink" title="平天下"></a>平天下</h4><ul>
<li>天地之道，恒久而不已也。</li>
<li>形而上者谓之道。形而下者谓之器。</li>
<li>几事不密则害成。</li>
<li>遏恶扬善，顺天休命。</li>
<li>知周乎万物，而道济天下。</li>
</ul>
<p>不易乎世，不成乎名；遁世无闷，不见是而无闷；乐则行之，忧则违之，确乎其不可拔。</p>
<p>探赜索隐，钩深致远。</p>
<p>劳尔不伐，有功而不德，厚之至也！</p>
<p>乐天知名，故不忧。</p>
<p>君子知微知彰，知柔知刚，万夫之望。</p>
<p>虎视眈眈，其欲逐逐。</p>
<p>尺蠖之屈，以求信也。龙蛇之蛰，以存身也。</p>
<p>本乎天者亲上，本乎地者亲下。</p>
<p>二人同心，其利断金。同心之言，其臭如兰。</p>
<p>谦谦君子，卑以自牧也。</p>
<p>蒙以正养，圣功也。</p>
<p>书不尽言，言不尽意。</p>
<p>尺蠖之屈，以求信也；龙蛇之蛰，以存身也。</p>
<p>神而明之，存乎其人；默而成之，不言而信，存乎德行。</p>
<p>括囊无咎无誉，盖言慎也。</p>
<p>庸言之信，庸行之谨，闲邪存其诚，善世而不伐，德博而化。</p>
<p>汤武革命，顺乎天而应乎人。</p>
<p>乐天知命，故不忧。</p>
<p>日中则昃，月盈则食。天地盈虚，与时消息。而况于人乎？况于鬼神乎？</p>
<p>时止则止，时行则行，动静不失其时，其道光明。</p>
<p>困而不失其所亨，其唯君子乎！</p>
<p>备物致用，立成器以为天下利，莫大乎圣人。</p>
<p>物不可穷也，故受之以未济。</p>
<p>谦也者，致恭以存其位者也。</p>
<p>同声相应，同气相求。</p>
<p>慢藏诲盗，冶容诲淫。</p>
<p>刚健笃实辉光，日新其德。</p>
]]></content>
      <categories>
        <category>东方哲学</category>
      </categories>
  </entry>
  <entry>
    <title>DevOps</title>
    <url>/blog.githup.io/2020/05/DevOps/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>CI 持续集成（Continuous Integration）<br>CD 持续部署（Continuous Delivery）<br>CD 持续部署（Continuous Deployment）</p>
<p>BUILD 构建<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">Java</span> <span class="string">maven</span></span><br><span class="line"><span class="string">nodejs</span> <span class="string">npm</span></span><br><span class="line"><span class="string">python</span> <span class="string">pyinstaller</span></span><br></pre></td></tr></table></figure></p>
<p>流水线</p>
<p>Blue Ocean</p>
<p>TEST</p>
<p>MERGE</p>
<p>kubernetes<br>docker</p>
<p><a href="https://github.com/gitlabhq" target="_blank" rel="noopener">gitlib</a><br><a href="https://goharbor.io/" target="_blank" rel="noopener">harbor</a><br><a href="https://www.jenkins.io/zh/doc/" target="_blank" rel="noopener">Jenkins</a><br><a href="https://docs.rancher.cn/" target="_blank" rel="noopener">rancher</a></p>
<p>docker + gitlib + jenkins + horbor</p>
]]></content>
      <categories>
        <category>devops</category>
      </categories>
  </entry>
  <entry>
    <title>仿hexo的golang实现</title>
    <url>/blog.githup.io/2020/05/%E4%BB%BFhexo%E7%9A%84golang%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>^^最近想写一下博客。顺便把自己的文档给整理一下。<br>gitee pages 提供静态页的空间。把这个过程也纪录一下。<br>选择 gitee 主要原因是国内访问比较快。<br>githup pages 需要的话导出一份放上去就可以很方便。</p>
<p>实现功能</p>
<pre><code>1、通过模板生成静态页
2、定义网站结构，一次性生成
3、把 markdown文件保存到 md 目录，用来生成文章
4、定义文章结构，把文章生成后加到list页面里。
</code></pre><p>实现完之后三步搞定</p>
<pre><code>1、执行命令生成网站
2、对 md 目录下的文章自动生成
3、发布到 gitee
</code></pre><p>最后写个 deply.sh 一键发布</p>
<h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><h4 id="发布的目录结构"><a href="#发布的目录结构" class="headerlink" title="发布的目录结构"></a>发布的目录结构</h4><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">blog #类似hexo public</span><br><span class="line">	|-&gt; artcles </span><br><span class="line">		|-&gt; modules #把文章分类</span><br><span class="line">			|-&gt; artcle</span><br><span class="line">	|-&gt; static # 静态文件</span><br><span class="line">		|-&gt; css</span><br><span class="line">		|-&gt; js</span><br><span class="line">		|-&gt; images</span><br></pre></td></tr></table></figure>
<h4 id="待发布的目录结构"><a href="#待发布的目录结构" class="headerlink" title="待发布的目录结构"></a>待发布的目录结构</h4><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">blog</span><br><span class="line">	|-&gt; templates</span><br><span class="line">		|-&gt; static       	<span class="comment">#存放静态文件</span></span><br><span class="line">            |-&gt; css</span><br><span class="line">            |-&gt; js</span><br><span class="line">            |-&gt; images</span><br><span class="line">		|-&gt; nav.tpl 		<span class="comment">#导航条</span></span><br><span class="line">		|-&gt; index.tpl 		<span class="comment">#首页</span></span><br><span class="line">		|-&gt; header.tpl 		<span class="comment">#page 头部</span></span><br><span class="line">		|-&gt; content.tpl 	<span class="comment">#page 内容部分</span></span><br><span class="line">		|-&gt; footer.tpl		<span class="comment">#page 尾部</span></span><br><span class="line">		|-&gt; md 				<span class="comment">#用来存放文章</span></span><br><span class="line">            |-&gt;cloud        <span class="comment">#支持文章分类，文章太多后容易查找</span></span><br><span class="line">		|-&gt; <span class="keyword">list</span>.tpl		<span class="comment">#列表页</span></span><br><span class="line">		|-&gt; listcontent.tpl <span class="comment">#列表内容部分 </span></span><br><span class="line">	|-&gt; main.go</span><br><span class="line">	|-&gt; go.mod</span><br></pre></td></tr></table></figure>
<h3 id="主程序-main-go"><a href="#主程序-main-go" class="headerlink" title="主程序 main.go"></a>主程序 main.go</h3><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	<span class="string">"github.com/PuerkitoBio/goquery"</span> <span class="comment">//用来处理dom</span></span><br><span class="line">	<span class="string">"os/exec"</span></span><br><span class="line">	<span class="string">"strconv"</span></span><br><span class="line"></span><br><span class="line">	<span class="string">"path/filepath"</span></span><br><span class="line">	<span class="string">"regexp"</span> <span class="comment">//正则主要是匹配 tab</span></span><br><span class="line">	<span class="string">"strings"</span></span><br><span class="line"></span><br><span class="line">	<span class="string">"html/template"</span> <span class="comment">// html 模板</span></span><br><span class="line">	<span class="string">"io/ioutil"</span> <span class="comment">// 文件操作</span></span><br><span class="line">	<span class="string">"log"</span></span><br><span class="line">	<span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义网站结构</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">	ROOT          = <span class="string">"blog"</span></span><br><span class="line">	TEMP          = <span class="string">"templates"</span></span><br><span class="line">	ARTCLEDIR     = ROOT + <span class="string">"/artcle"</span></span><br><span class="line">	STATICDIR     = ROOT + <span class="string">"/static"</span></span><br><span class="line">	TEMPMD        = TEMP + <span class="string">"/md"</span></span><br><span class="line">	TEMPSTATICDIR = TEMP + <span class="string">"/static"</span></span><br><span class="line">	INDEX         = ROOT + <span class="string">"/index.html"</span></span><br><span class="line">	LIST          = <span class="string">"/list.html"</span></span><br><span class="line">	TEMPLATES     = <span class="string">"templates"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 页面名称</span></span><br><span class="line"><span class="keyword">type</span> Page <span class="keyword">struct</span> &#123;</span><br><span class="line">	title <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 标签颜色 color</span></span><br><span class="line"><span class="keyword">type</span> tagColor <span class="keyword">struct</span> &#123;</span><br><span class="line">	colorn <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文章的属性</span></span><br><span class="line"><span class="keyword">type</span> Artcle <span class="keyword">struct</span> &#123;</span><br><span class="line">	name     <span class="keyword">string</span></span><br><span class="line">	date     <span class="keyword">string</span></span><br><span class="line">	catagory <span class="keyword">string</span></span><br><span class="line">	tag      <span class="keyword">string</span></span><br><span class="line">	tagColor</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文件列表--感觉这点golang不如python好操作</span></span><br><span class="line"><span class="keyword">var</span> fileList []<span class="keyword">string</span></span><br><span class="line"><span class="keyword">var</span> staticfileList []<span class="keyword">string</span></span><br><span class="line"><span class="keyword">var</span> mdfileList []<span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 程序入口</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// 生成blog</span></span><br><span class="line">	TpltoBlog()</span><br><span class="line">	<span class="comment">// 把 static 拷贝到blog</span></span><br><span class="line">	staticToBlog()</span><br><span class="line">	<span class="comment">// 把文章发表出去，对md进行处理</span></span><br><span class="line">	mdHandler2()</span><br><span class="line">	<span class="comment">//遍历 artcle 目录，把生成 html 文章 加到list.html中</span></span><br><span class="line">	htmlToList()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把html 加入list.html中</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">htmlToList</span><span class="params">()</span></span> &#123;</span><br><span class="line">	GetAllFile(ARTCLEDIR)</span><br><span class="line">	<span class="keyword">for</span> _, f := <span class="keyword">range</span> fileList &#123;</span><br><span class="line">		fmt.Println(f)</span><br><span class="line">		addList(f)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理 md 底下的文件（废弃）</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mdHandler</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// 遍历一下目录</span></span><br><span class="line">	files, _ := ioutil.ReadDir(TEMPMD)</span><br><span class="line">	<span class="keyword">for</span> _, file := <span class="keyword">range</span> files &#123;</span><br><span class="line">		filename := file.Name()</span><br><span class="line">		<span class="keyword">if</span> file.IsDir() &#123;</span><br><span class="line">			<span class="keyword">continue</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="comment">// 处理 md to html</span></span><br><span class="line">			<span class="keyword">if</span> strings.Contains(filename, <span class="string">".md"</span>) &#123;</span><br><span class="line">				<span class="comment">//fmt.Println(filename)</span></span><br><span class="line">				htmlfilename := strings.Replace(filename, <span class="string">".md"</span>, <span class="string">".html"</span>, <span class="number">-1</span>)</span><br><span class="line">				fmt.Println(TEMPMD+<span class="string">"/"</span>+filename, TEMPMD+<span class="string">"/"</span>+htmlfilename)</span><br><span class="line">                <span class="comment">// 通过外部命令实现</span></span><br><span class="line">				cmd := exec.Command(<span class="string">"./mdtohtml"</span>, <span class="string">"-css"</span>, <span class="string">"blog/static/css/base.css"</span>, TEMPMD+<span class="string">"/"</span>+filename, TEMPMD+<span class="string">"/"</span>+htmlfilename)</span><br><span class="line">				cmd.Run()</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理 md 底下的文件</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mdHandler2</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// 生成 md 文件列表</span></span><br><span class="line">	getMD(<span class="string">"templates/md"</span>)</span><br><span class="line">	<span class="keyword">for</span> _, file := <span class="keyword">range</span> mdfileList &#123;</span><br><span class="line">		<span class="keyword">if</span> strings.Contains(file, <span class="string">".md"</span>) &#123;</span><br><span class="line">			htmlfilename := strings.Replace(file, <span class="string">".md"</span>, <span class="string">".html"</span>, <span class="number">-1</span>)</span><br><span class="line">			fmt.Println(file, htmlfilename)</span><br><span class="line">			cmd := exec.Command(<span class="string">"./mdtohtml"</span>, <span class="string">"-css"</span>, <span class="string">"blog/static/css/base.css"</span>, file, htmlfilename)</span><br><span class="line">			cmd.Run()</span><br><span class="line">			_, err := os.Stat(htmlfilename)</span><br><span class="line">			<span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">				<span class="keyword">if</span> strings.Contains(htmlfilename, <span class="string">".html"</span>) &#123;</span><br><span class="line">					fmt.Println(htmlfilename)</span><br><span class="line">					HtmltoBlog(htmlfilename) <span class="comment">// 对 html 的进行处理</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历 md</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getMD</span><span class="params">(filename <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">	files, _ := ioutil.ReadDir(filename)</span><br><span class="line">	<span class="keyword">for</span> _, file := <span class="keyword">range</span> files &#123;</span><br><span class="line">		f := file.Name()</span><br><span class="line">		<span class="keyword">if</span> file.IsDir() &#123;</span><br><span class="line">			<span class="comment">//fmt.Println(filename + "/" + f)</span></span><br><span class="line">			getMD(filename + <span class="string">"/"</span> + f)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//fmt.Println(f)</span></span><br><span class="line">		mdfileList = <span class="built_in">append</span>(mdfileList, filename+<span class="string">"/"</span>+f)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理md底下html文件</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">htmlHandler</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// 遍历一下目录</span></span><br><span class="line">	files, _ := ioutil.ReadDir(TEMPMD)</span><br><span class="line">	<span class="keyword">for</span> _, file := <span class="keyword">range</span> files &#123;</span><br><span class="line">		filename := file.Name()</span><br><span class="line">		<span class="keyword">if</span> file.IsDir() &#123;</span><br><span class="line">			<span class="keyword">continue</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="comment">// html to modules(/blog/artcle/*)</span></span><br><span class="line">			<span class="keyword">if</span> strings.Contains(filename, <span class="string">".html"</span>) &#123;</span><br><span class="line">				fmt.Println(filename)</span><br><span class="line">				HtmltoBlog(filename) <span class="comment">// 对 html 的进行处理</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把 static 拷贝到blog</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">staticToBlog</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> tempfile <span class="keyword">string</span></span><br><span class="line">	staticToList(TEMPSTATICDIR)</span><br><span class="line">	<span class="keyword">for</span> _, f := <span class="keyword">range</span> staticfileList &#123;</span><br><span class="line">		tempfile = strings.Replace(f, <span class="string">"templates/"</span>, <span class="string">"blog/"</span>, <span class="number">-1</span>)</span><br><span class="line">		fmt.Println(f, tempfile)</span><br><span class="line">		t, _ := ioutil.ReadFile(f)</span><br><span class="line">		ioutil.WriteFile(tempfile, t, os.ModePerm)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 寻找静态文件</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">staticToList</span><span class="params">(pathname <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">	files, _ := ioutil.ReadDir(pathname)</span><br><span class="line">	<span class="keyword">for</span> _, file := <span class="keyword">range</span> files &#123;</span><br><span class="line">		filename := file.Name()</span><br><span class="line">		<span class="comment">//fmt.Println(filename)</span></span><br><span class="line">		<span class="keyword">if</span> file.IsDir() &#123;</span><br><span class="line">			staticToList(pathname + <span class="string">"/"</span> + filename)</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			staticfileList = <span class="built_in">append</span>(staticfileList, pathname+<span class="string">"/"</span>+filename)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归目录</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetAllFile</span><span class="params">(pathname <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	rd, err := ioutil.ReadDir(pathname)</span><br><span class="line">	<span class="keyword">for</span> _, fi := <span class="keyword">range</span> rd &#123;</span><br><span class="line">		<span class="keyword">if</span> fi.IsDir() &#123;</span><br><span class="line">			<span class="comment">//fmt.Printf("[%s]\n", pathname+"/"+fi.Name())</span></span><br><span class="line">			GetAllFile(pathname + <span class="string">"/"</span> + fi.Name())</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> fi.Name() != <span class="string">"list.html"</span> &#123;</span><br><span class="line">				<span class="comment">//fmt.Println(pathname + "/" + fi.Name())</span></span><br><span class="line">				fileList = <span class="built_in">append</span>(fileList, pathname+<span class="string">"/"</span>+fi.Name())</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据模板生成html</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TpltoBlog</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 创建目录和文件</span></span><br><span class="line">	os.MkdirAll(ARTCLEDIR+<span class="string">"/bigdata"</span>, os.ModePerm)</span><br><span class="line">	os.MkdirAll(ARTCLEDIR+<span class="string">"/cloud"</span>, os.ModePerm)</span><br><span class="line">	os.MkdirAll(STATICDIR+<span class="string">"/css"</span>, os.ModePerm)</span><br><span class="line">	os.Mkdir(STATICDIR+<span class="string">"/images"</span>, os.ModePerm)</span><br><span class="line">	os.Mkdir(STATICDIR+<span class="string">"/scripts"</span>, os.ModePerm)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 生成模块</span></span><br><span class="line">	ArtcleDir := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;</span><br><span class="line">		<span class="string">"bigdata"</span>: <span class="string">"大数据"</span>,</span><br><span class="line">		<span class="string">"cloud"</span>:   <span class="string">"云计算"</span>,</span><br><span class="line">		<span class="string">"devops"</span>:  <span class="string">"DevOps"</span>,</span><br><span class="line">		<span class="string">"develop"</span>: <span class="string">"开发技术"</span>,</span><br><span class="line">		<span class="string">"pmp"</span>:     <span class="string">"PMP"</span>,</span><br><span class="line">		<span class="string">"system"</span>:  <span class="string">"系统管理"</span>,</span><br><span class="line">		<span class="string">"lookfor"</span>: <span class="string">"速查表"</span>,</span><br><span class="line">	&#125;</span><br><span class="line">	ArtcleMap := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> dir, name := <span class="keyword">range</span> ArtcleDir &#123;</span><br><span class="line">		os.MkdirAll(ARTCLEDIR+<span class="string">"/"</span>+dir, os.ModePerm)</span><br><span class="line">		ArtcleMap[ARTCLEDIR+<span class="string">"/"</span>+dir+LIST] = name</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 生成主页</span></span><br><span class="line">	t1, _ := template.ParseFiles(<span class="string">"templates/index.tpl"</span>, <span class="string">"templates/header.tpl"</span>, <span class="string">"templates/nav.tpl"</span>, <span class="string">"templates/content.tpl"</span>, <span class="string">"templates/footer.tpl"</span>)</span><br><span class="line">	<span class="comment">// p := Page&#123;"主页"&#125;</span></span><br><span class="line">	indexFile1, _ := os.Create(INDEX)</span><br><span class="line">	t1.Execute(indexFile1, ArtcleMap)</span><br><span class="line">	indexFile1.Close()</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 生成列表页</span></span><br><span class="line">	t2, _ := template.ParseFiles(<span class="string">"templates/list.tpl"</span>, <span class="string">"templates/header.tpl"</span>, <span class="string">"templates/nav.tpl"</span>, <span class="string">"templates/listcontent.tpl"</span>, <span class="string">"templates/footer.tpl"</span>)</span><br><span class="line">	<span class="comment">// p1 := Page&#123;"列表"&#125;</span></span><br><span class="line">	<span class="keyword">for</span> dir, _ := <span class="keyword">range</span> ArtcleDir &#123;</span><br><span class="line">		fmt.Println(ARTCLEDIR + <span class="string">"/"</span> + dir + LIST)</span><br><span class="line">		listFile, err := os.Create(ARTCLEDIR + <span class="string">"/"</span> + dir + LIST)</span><br><span class="line">		<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">			fmt.Println(err)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 把对列表页进行html渲染</span></span><br><span class="line">		t2.Execute(listFile, ArtcleMap)</span><br><span class="line">		listFile.Close()</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 生成 404 页面</span></span><br><span class="line">	t404, _ := template.ParseFiles(<span class="string">"templates/404.tpl"</span>)</span><br><span class="line">	p := Page&#123;<span class="string">"404"</span>&#125;</span><br><span class="line">	indexFile404, _ := os.Create(ROOT + <span class="string">"/404.html"</span>)</span><br><span class="line">	t404.Execute(indexFile404, p)</span><br><span class="line">	indexFile404.Close()</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> k, v := <span class="keyword">range</span> ArtcleMap &#123;</span><br><span class="line">		fmt.Println(k, v)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把文章添加到列表</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addList</span><span class="params">(filename <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">	<span class="comment">// 获取目录</span></span><br><span class="line">	listDir := filepath.Dir(filename)</span><br><span class="line">	listFile := listDir + <span class="string">"/list.html"</span></span><br><span class="line">	fmt.Println(listDir, listFile, filename)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 判断有没有 list.html</span></span><br><span class="line">	_, err := os.Stat(listFile)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 获取文件</span></span><br><span class="line">	text, _ := ioutil.ReadFile(filename)</span><br><span class="line">	r := regexp.MustCompile(<span class="string">`&lt;!--(.*)--&gt;`</span>)</span><br><span class="line">	b := r.FindAllStringSubmatch(<span class="keyword">string</span>(text), <span class="number">-1</span>)</span><br><span class="line">	atl := Artcle&#123;&#125;</span><br><span class="line">    <span class="comment">// 定义文章分类的颜色</span></span><br><span class="line">	Color := <span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span>&#123;</span><br><span class="line">		<span class="number">1</span>: <span class="string">"rgba(0,0,255,0.8)"</span>,</span><br><span class="line">		<span class="number">2</span>: <span class="string">"rgba(255,0,0,0.8)"</span>,</span><br><span class="line">		<span class="number">3</span>: <span class="string">"rgba(0,255,0,0.8)"</span>,</span><br><span class="line">		<span class="number">4</span>: <span class="string">"rgba(100,100,100,0.8)"</span>,</span><br><span class="line">		<span class="number">5</span>: <span class="string">"rgba(125,200,120,0.8)"</span>,</span><br><span class="line">	&#125;</span><br><span class="line">	atl.colorn = <span class="number">5</span></span><br><span class="line">	atl.tag = <span class="string">"其他"</span></span><br><span class="line">	atl.date = <span class="string">"2010-02-08"</span></span><br><span class="line">	<span class="comment">// 查找 html 标签信息</span></span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> b &#123;</span><br><span class="line">		<span class="comment">//fmt.Println(v)</span></span><br><span class="line">		tmp := v[<span class="number">1</span>]</span><br><span class="line">		<span class="keyword">if</span> strings.Contains(tmp, <span class="string">"title:"</span>) &#123;</span><br><span class="line">			atl.name = purhcontent(<span class="string">"title:"</span>, tmp)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"tag:"</span>) &#123;</span><br><span class="line">			atl.tag = purhcontent(<span class="string">"tag:"</span>, tmp)</span><br><span class="line">			<span class="keyword">if</span> <span class="built_in">len</span>(atl.tag) &lt; <span class="number">1</span> &#123;</span><br><span class="line">				atl.tag = <span class="string">"其他"</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"date:"</span>) &#123;</span><br><span class="line">			atl.date = purhcontent(<span class="string">"date:"</span>, tmp)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"catagory:"</span>) &#123;</span><br><span class="line">			atl.catagory = purhcontent(<span class="string">"catagory:"</span>, tmp)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"color:"</span>) &#123;</span><br><span class="line">			atl.colorn, err = strconv.Atoi(purhcontent(<span class="string">"color:"</span>, tmp))</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 对列表页进行生成</span></span><br><span class="line">	domname := <span class="string">".list dl"</span></span><br><span class="line">	htmltag := <span class="string">`&lt;dd&gt;&lt;a href="`</span> + atl.name + <span class="string">`.html"&gt;`</span> + atl.name +</span><br><span class="line">		<span class="string">`&lt;/a&gt;&lt;span class="tag"&gt;&lt;span style="background-color: `</span> +</span><br><span class="line">		Color[atl.colorn] + <span class="string">` !important;"&gt;`</span> + atl.tag + <span class="string">`&lt;/span&gt;&lt;span&gt;`</span> +</span><br><span class="line">		atl.date + <span class="string">`&lt;/span&gt;&lt;/span&gt;&lt;/dd&gt;`</span></span><br><span class="line">	fmt.Println(domname, htmltag)</span><br><span class="line">	artcleTolist(listFile, domname, htmltag)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对md 标签进行操作</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HtmltoBlog</span><span class="params">(filename <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">	newDir := ARTCLEDIR + <span class="string">"/"</span></span><br><span class="line">	<span class="comment">// md 下的 html 进行处理，并分类保存到 blog 下</span></span><br><span class="line">	text, _ := ioutil.ReadFile(filename)</span><br><span class="line">	r := regexp.MustCompile(<span class="string">`&lt;!--(.*)--&gt;`</span>)</span><br><span class="line">	b := r.FindAllStringSubmatch(<span class="keyword">string</span>(text), <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">	atl := Artcle&#123;&#125;</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> b &#123;</span><br><span class="line">		<span class="comment">//fmt.Println(v)</span></span><br><span class="line">		tmp := v[<span class="number">1</span>]</span><br><span class="line">		<span class="keyword">if</span> strings.Contains(tmp, <span class="string">"title:"</span>) &#123;</span><br><span class="line">			atl.name = purhcontent(<span class="string">"title:"</span>, tmp)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"tag:"</span>) &#123;</span><br><span class="line">			atl.tag = purhcontent(<span class="string">"tag:"</span>, tmp)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"date:"</span>) &#123;</span><br><span class="line">			atl.date = purhcontent(<span class="string">"date:"</span>, tmp)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> strings.Contains(tmp, <span class="string">"catagory:"</span>) &#123;</span><br><span class="line">			atl.catagory = purhcontent(<span class="string">"catagory:"</span>, tmp)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	oldFile := filename</span><br><span class="line">	newFile := newDir + atl.catagory + <span class="string">"/"</span> + atl.name + <span class="string">".html"</span></span><br><span class="line">	fmt.Println(oldFile)</span><br><span class="line">	fmt.Println(newFile)</span><br><span class="line">	os.Rename(oldFile, newFile)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入key提取value</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">purhcontent</span><span class="params">(k <span class="keyword">string</span>, v <span class="keyword">string</span>)</span> <span class="params">(value <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">	tmp := v</span><br><span class="line">	<span class="keyword">if</span> strings.Contains(tmp, k) &#123;</span><br><span class="line">		v1 := strings.Split(tmp, <span class="string">":"</span>)</span><br><span class="line">		value = strings.TrimSpace(v1[<span class="number">1</span>])</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在 list.html 插入文章节点</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">artcleTolist</span><span class="params">(filename, domname, htmltag <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">	f, err := os.OpenFile(filename, os.O_RDONLY, os.ModePerm)</span><br><span class="line">	<span class="keyword">defer</span> f.Close()</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatal(err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 从文件中转doc</span></span><br><span class="line">	doc, err := goquery.NewDocumentFromReader(f)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatal(err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 查找 dom 节点</span></span><br><span class="line">	s := doc.Find(domname)</span><br><span class="line">	<span class="comment">// 文章已经存在就不添加</span></span><br><span class="line">	tmps, _ := s.Html()</span><br><span class="line">	<span class="keyword">if</span> strings.Contains(tmps, htmltag) &#123;</span><br><span class="line">		<span class="comment">//fmt.Println("匹配到了")</span></span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	s = s.AppendHtml(htmltag)</span><br><span class="line">	<span class="comment">// 将doc 转 html</span></span><br><span class="line">	html, _ := doc.Html()</span><br><span class="line">	f1, _ := os.OpenFile(filename, os.O_WRONLY, os.ModePerm)</span><br><span class="line">	<span class="keyword">defer</span> f1.Close()</span><br><span class="line">	f1.WriteString(html)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="需要使用-markdown-to-html-的模块"><a href="#需要使用-markdown-to-html-的模块" class="headerlink" title="需要使用 markdown to html 的模块"></a>需要使用 markdown to html 的模块</h3><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Blackfriday Markdown Processor</span></span><br><span class="line"><span class="comment">// Available at http://github.com/russross/blackfriday</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Copyright © 2011 Russ Ross &lt;russ@russross.com&gt;.</span></span><br><span class="line"><span class="comment">// Distributed under the Simplified BSD License.</span></span><br><span class="line"><span class="comment">// See README.md for details.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Example front-end for command-line use</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"flag"</span></span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	<span class="string">"github.com/russross/blackfriday"</span></span><br><span class="line">	<span class="string">"io/ioutil"</span></span><br><span class="line">	<span class="string">"os"</span></span><br><span class="line">	<span class="string">"runtime/pprof"</span></span><br><span class="line">	<span class="string">"strings"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> DEFAULT_TITLE = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// parse command-line options</span></span><br><span class="line">	<span class="keyword">var</span> page, toc, toconly, xhtml, latex, smartypants, latexdashes, fractions <span class="keyword">bool</span></span><br><span class="line">	<span class="keyword">var</span> css, cpuprofile <span class="keyword">string</span></span><br><span class="line">	<span class="keyword">var</span> repeat <span class="keyword">int</span></span><br><span class="line">	flag.BoolVar(&amp;page, <span class="string">"page"</span>, <span class="literal">false</span>,</span><br><span class="line">		<span class="string">"Generate a standalone HTML page (implies -latex=false)"</span>)</span><br><span class="line">	flag.BoolVar(&amp;toc, <span class="string">"toc"</span>, <span class="literal">false</span>,</span><br><span class="line">		<span class="string">"Generate a table of contents (implies -latex=false)"</span>)</span><br><span class="line">	flag.BoolVar(&amp;toconly, <span class="string">"toconly"</span>, <span class="literal">false</span>,</span><br><span class="line">		<span class="string">"Generate a table of contents only (implies -toc)"</span>)</span><br><span class="line">	flag.BoolVar(&amp;xhtml, <span class="string">"xhtml"</span>, <span class="literal">true</span>,</span><br><span class="line">		<span class="string">"Use XHTML-style tags in HTML output"</span>)</span><br><span class="line">	flag.BoolVar(&amp;latex, <span class="string">"latex"</span>, <span class="literal">false</span>,</span><br><span class="line">		<span class="string">"Generate LaTeX output instead of HTML"</span>)</span><br><span class="line">	flag.BoolVar(&amp;smartypants, <span class="string">"smartypants"</span>, <span class="literal">true</span>,</span><br><span class="line">		<span class="string">"Apply smartypants-style substitutions"</span>)</span><br><span class="line">	flag.BoolVar(&amp;latexdashes, <span class="string">"latexdashes"</span>, <span class="literal">true</span>,</span><br><span class="line">		<span class="string">"Use LaTeX-style dash rules for smartypants"</span>)</span><br><span class="line">	flag.BoolVar(&amp;fractions, <span class="string">"fractions"</span>, <span class="literal">true</span>,</span><br><span class="line">		<span class="string">"Use improved fraction rules for smartypants"</span>)</span><br><span class="line">	flag.StringVar(&amp;css, <span class="string">"css"</span>, <span class="string">""</span>,</span><br><span class="line">		<span class="string">"Link to a CSS stylesheet (implies -page)"</span>)</span><br><span class="line">	flag.StringVar(&amp;cpuprofile, <span class="string">"cpuprofile"</span>, <span class="string">""</span>,</span><br><span class="line">		<span class="string">"Write cpu profile to a file"</span>)</span><br><span class="line">	flag.IntVar(&amp;repeat, <span class="string">"repeat"</span>, <span class="number">1</span>,</span><br><span class="line">		<span class="string">"Process the input multiple times (for benchmarking)"</span>)</span><br><span class="line">	flag.Usage = <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">		fmt.Fprintf(os.Stderr, <span class="string">"Blackfriday Markdown Processor v"</span>+blackfriday.VERSION+</span><br><span class="line">			<span class="string">"\nAvailable at http://github.com/russross/blackfriday\n\n"</span>+</span><br><span class="line">			<span class="string">"Copyright © 2011 Russ Ross &lt;russ@russross.com&gt;\n"</span>+</span><br><span class="line">			<span class="string">"Distributed under the Simplified BSD License\n"</span>+</span><br><span class="line">			<span class="string">"See website for details\n\n"</span>+</span><br><span class="line">			<span class="string">"Usage:\n"</span>+</span><br><span class="line">			<span class="string">"  %s [options] [inputfile [outputfile]]\n\n"</span>+</span><br><span class="line">			<span class="string">"Options:\n"</span>,</span><br><span class="line">			os.Args[<span class="number">0</span>])</span><br><span class="line">		flag.PrintDefaults()</span><br><span class="line">	&#125;</span><br><span class="line">	flag.Parse()</span><br><span class="line"></span><br><span class="line">	<span class="comment">// enforce implied options</span></span><br><span class="line">	<span class="keyword">if</span> css != <span class="string">""</span> &#123;</span><br><span class="line">		css = <span class="string">"/"</span> + css</span><br><span class="line">		page = <span class="literal">true</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> page &#123;</span><br><span class="line">		latex = <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> toconly &#123;</span><br><span class="line">		toc = <span class="literal">true</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> toc &#123;</span><br><span class="line">		latex = <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// turn on profiling?</span></span><br><span class="line">	<span class="keyword">if</span> cpuprofile != <span class="string">""</span> &#123;</span><br><span class="line">		f, err := os.Create(cpuprofile)</span><br><span class="line">		<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">			fmt.Fprintln(os.Stderr, err)</span><br><span class="line">		&#125;</span><br><span class="line">		pprof.StartCPUProfile(f)</span><br><span class="line">		<span class="keyword">defer</span> pprof.StopCPUProfile()</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// read the input</span></span><br><span class="line">	<span class="keyword">var</span> input []<span class="keyword">byte</span></span><br><span class="line">	<span class="keyword">var</span> err error</span><br><span class="line">	args := flag.Args()</span><br><span class="line">	<span class="keyword">switch</span> <span class="built_in">len</span>(args) &#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">		<span class="comment">//if input, err = ioutil.ReadAll(os.Stdin); err != nil &#123;</span></span><br><span class="line">		<span class="comment">//	fmt.Fprintln(os.Stderr, "Error reading from Stdin:", err)</span></span><br><span class="line">		<span class="comment">//	os.Exit(-1)</span></span><br><span class="line">		<span class="comment">//&#125;</span></span><br><span class="line">		flag.Usage()</span><br><span class="line">	<span class="keyword">case</span> <span class="number">1</span>, <span class="number">2</span>:</span><br><span class="line">		<span class="keyword">if</span> input, err = ioutil.ReadFile(args[<span class="number">0</span>]); err != <span class="literal">nil</span> &#123;</span><br><span class="line">			fmt.Fprintln(os.Stderr, <span class="string">"Error reading from"</span>, args[<span class="number">0</span>], <span class="string">":"</span>, err)</span><br><span class="line">			os.Exit(<span class="number">-1</span>)</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">default</span>:</span><br><span class="line">		flag.Usage()</span><br><span class="line">		os.Exit(<span class="number">-1</span>)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// set up options</span></span><br><span class="line">	extensions := <span class="number">0</span></span><br><span class="line">	extensions |= blackfriday.EXTENSION_NO_INTRA_EMPHASIS</span><br><span class="line">	extensions |= blackfriday.EXTENSION_TABLES</span><br><span class="line">	extensions |= blackfriday.EXTENSION_FENCED_CODE</span><br><span class="line">	extensions |= blackfriday.EXTENSION_AUTOLINK</span><br><span class="line">	extensions |= blackfriday.EXTENSION_STRIKETHROUGH</span><br><span class="line">	extensions |= blackfriday.EXTENSION_SPACE_HEADERS</span><br><span class="line"></span><br><span class="line">	<span class="keyword">var</span> renderer blackfriday.Renderer</span><br><span class="line">	<span class="keyword">if</span> latex &#123;</span><br><span class="line">		<span class="comment">// render the data into LaTeX</span></span><br><span class="line">		renderer = blackfriday.LatexRenderer(<span class="number">0</span>)</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="comment">// render the data into HTML</span></span><br><span class="line">		htmlFlags := <span class="number">0</span></span><br><span class="line">		<span class="keyword">if</span> xhtml &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_USE_XHTML</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> smartypants &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_USE_SMARTYPANTS</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> fractions &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_SMARTYPANTS_FRACTIONS</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> latexdashes &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_SMARTYPANTS_LATEX_DASHES</span><br><span class="line">		&#125;</span><br><span class="line">		title := <span class="string">""</span></span><br><span class="line">		<span class="keyword">if</span> page &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_COMPLETE_PAGE</span><br><span class="line">			title = getTitle(input)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> toconly &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_OMIT_CONTENTS</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> toc &#123;</span><br><span class="line">			htmlFlags |= blackfriday.HTML_TOC</span><br><span class="line">		&#125;</span><br><span class="line">		renderer = blackfriday.HtmlRenderer(htmlFlags, title, css)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// parse and render</span></span><br><span class="line">	<span class="keyword">var</span> output []<span class="keyword">byte</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; repeat; i++ &#123;</span><br><span class="line">		output = blackfriday.Markdown(input, renderer, extensions)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// output the result</span></span><br><span class="line">	<span class="keyword">var</span> out *os.File</span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">len</span>(args) == <span class="number">2</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> out, err = os.Create(args[<span class="number">1</span>]); err != <span class="literal">nil</span> &#123;</span><br><span class="line">			fmt.Fprintf(os.Stderr, <span class="string">"Error creating %s: %v"</span>, args[<span class="number">1</span>], err)</span><br><span class="line">			os.Exit(<span class="number">-1</span>)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">defer</span> out.Close()</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		out = os.Stdout</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> _, err = out.Write(output); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Fprintln(os.Stderr, <span class="string">"Error writing output:"</span>, err)</span><br><span class="line">		os.Exit(<span class="number">-1</span>)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// try to guess the title from the input buffer</span></span><br><span class="line"><span class="comment">// just check if it starts with an &lt;h1&gt; element and use that</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getTitle</span><span class="params">(input []<span class="keyword">byte</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">	i := <span class="number">0</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// skip blank lines</span></span><br><span class="line">	<span class="keyword">for</span> i &lt; <span class="built_in">len</span>(input) &amp;&amp; (input[i] == <span class="string">'\n'</span> || input[i] == <span class="string">'\r'</span>) &#123;</span><br><span class="line">		i++</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> i &gt;= <span class="built_in">len</span>(input) &#123;</span><br><span class="line">		<span class="keyword">return</span> DEFAULT_TITLE</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> input[i] == <span class="string">'\r'</span> &amp;&amp; i+<span class="number">1</span> &lt; <span class="built_in">len</span>(input) &amp;&amp; input[i+<span class="number">1</span>] == <span class="string">'\n'</span> &#123;</span><br><span class="line">		i++</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// find the first line</span></span><br><span class="line">	start := i</span><br><span class="line">	<span class="keyword">for</span> i &lt; <span class="built_in">len</span>(input) &amp;&amp; input[i] != <span class="string">'\n'</span> &amp;&amp; input[i] != <span class="string">'\r'</span> &#123;</span><br><span class="line">		i++</span><br><span class="line">	&#125;</span><br><span class="line">	line1 := input[start:i]</span><br><span class="line">	<span class="keyword">if</span> input[i] == <span class="string">'\r'</span> &amp;&amp; i+<span class="number">1</span> &lt; <span class="built_in">len</span>(input) &amp;&amp; input[i+<span class="number">1</span>] == <span class="string">'\n'</span> &#123;</span><br><span class="line">		i++</span><br><span class="line">	&#125;</span><br><span class="line">	i++</span><br><span class="line"></span><br><span class="line">	<span class="comment">// check for a prefix header</span></span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">len</span>(line1) &gt;= <span class="number">3</span> &amp;&amp; line1[<span class="number">0</span>] == <span class="string">'#'</span> &amp;&amp; (line1[<span class="number">1</span>] == <span class="string">' '</span> || line1[<span class="number">1</span>] == <span class="string">'\t'</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> strings.TrimSpace(<span class="keyword">string</span>(line1[<span class="number">2</span>:]))</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// check for an underlined header</span></span><br><span class="line">	<span class="keyword">if</span> i &gt;= <span class="built_in">len</span>(input) || input[i] != <span class="string">'='</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> DEFAULT_TITLE</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i &lt; <span class="built_in">len</span>(input) &amp;&amp; input[i] == <span class="string">'='</span> &#123;</span><br><span class="line">		i++</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i &lt; <span class="built_in">len</span>(input) &amp;&amp; (input[i] == <span class="string">' '</span> || input[i] == <span class="string">'\t'</span>) &#123;</span><br><span class="line">		i++</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> i &gt;= <span class="built_in">len</span>(input) || (input[i] != <span class="string">'\n'</span> &amp;&amp; input[i] != <span class="string">'\r'</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> DEFAULT_TITLE</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> strings.TrimSpace(<span class="keyword">string</span>(line1))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="部署脚本-deploy-sh"><a href="#部署脚本-deploy-sh" class="headerlink" title="部署脚本 deploy.sh"></a>部署脚本 deploy.sh</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go run main.go</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">git add ./*</span><br><span class="line">git commit -m <span class="string">"file update"</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>develop</category>
      </categories>
      <tags>
        <tag>goquery</tag>
        <tag>markdown转html</tag>
      </tags>
  </entry>
  <entry>
    <title>chrome-headless</title>
    <url>/blog.githup.io/2020/05/chrome-headless/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="MAC-系统中"><a href="#MAC-系统中" class="headerlink" title="MAC 系统中"></a>MAC 系统中</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/Applications/Google</span>\ Chrome.app/Contents/MacOS</span><br><span class="line">ln -s <span class="string">./Google</span>\ Chrome <span class="string">./chrome</span></span><br><span class="line"><span class="string">./chrome</span> <span class="params">--headless</span> <span class="params">--disable-gpu</span> <span class="params">--dump-dom</span> http:<span class="string">//www.baidu.com</span></span><br><span class="line"><span class="params">--headless</span> 不显示窗体</span><br><span class="line"><span class="params">--disable-gpu</span> 关闭GPU</span><br><span class="line"><span class="params">--dump-dom</span> 把 dom 元素输出来</span><br></pre></td></tr></table></figure>
<h3 id="chrome-相关"><a href="#chrome-相关" class="headerlink" title="chrome 相关"></a>chrome 相关</h3><ul>
<li><a href="https://www.chromium.org/" target="_blank" rel="noopener">Chromium</a><ul>
<li>Chromium是由Google主导开发的网页浏览器。</li>
</ul>
</li>
<li>CDB<ul>
<li>chrome debug protocol，简称cdp。一个让devtools和浏览器内核交换数据的通道</li>
</ul>
</li>
<li><a href="https://chromedevtools.github.io/devtools-protocol/" target="_blank" rel="noopener">devtools</a><ul>
<li>对chrome 进行调试的工具。</li>
</ul>
</li>
<li><a href="https://github.com/chromedp" target="_blank" rel="noopener">chromedb</a><ul>
<li>golang语言中利用CDB驱动浏览器包。</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>develop</category>
      </categories>
      <tags>
        <tag>chrome</tag>
        <tag>cdp</tag>
      </tags>
  </entry>
  <entry>
    <title>万台服务器运维</title>
    <url>/blog.githup.io/2020/05/%E4%B8%87%E5%8F%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1万台服务器的计算量和成本核算"><a href="#1万台服务器的计算量和成本核算" class="headerlink" title="1万台服务器的计算量和成本核算"></a>1万台服务器的计算量和成本核算</h2><p>按照当前主流的机架两U服务器来配置(参考 Dell R740)</p>
<blockquote>
<p>需要单独 1000台 来做 Ceph 云存储</p>
</blockquote>
<pre><code>* 单 4210 CPU 10核 20线程
* 内存 320G
* 磁盘 SSD 500G
</code></pre><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">整体计算量：</span><br><span class="line">CPU cores = <span class="number">10000</span> * <span class="number">40</span>核 = <span class="number">40</span>w 核心</span><br><span class="line">Memory    = <span class="number">10000</span> * <span class="number">320</span>G = <span class="number">3</span> PB</span><br><span class="line">本地 Disk  = <span class="number">10000</span> * <span class="number">500</span>G = <span class="number">4.7</span> PB</span><br><span class="line">云盘       = <span class="number">1000</span> * <span class="number">96</span>T = <span class="number">96</span> PB</span><br><span class="line"></span><br><span class="line">每台虚机按（ <span class="number">4</span>cores，<span class="number">32</span>G，<span class="number">200</span>GB ） 可以约开 <span class="number">10</span>w台虚拟机</span><br><span class="line"><span class="number">4</span>C * <span class="number">10</span>w = <span class="number">40</span>w 核心</span><br><span class="line"><span class="number">32</span>G * <span class="number">10</span>w = <span class="number">3</span> PB</span><br><span class="line">(系统盘)<span class="number">40</span>G * <span class="number">10</span>w = <span class="number">4</span> PB</span><br><span class="line">(云盘)<span class="number">200</span>G * <span class="number">10</span>w = <span class="number">19</span> PB * <span class="number">3</span> 两个副本 = <span class="number">57</span> PB &lt; 云盘 <span class="number">96</span> PB</span><br><span class="line"></span><br><span class="line">机房成本核算：</span><br><span class="line">一个<span class="number">42</span>U机柜大概可以放<span class="number">12</span>台设备。</span><br><span class="line"><span class="number">11000</span>台/<span class="number">12</span> = <span class="number">916</span> 机柜</span><br><span class="line">机柜托管费用大约<span class="number">5000</span>一年</span><br><span class="line"><span class="number">916</span> * <span class="number">5000</span> = <span class="number">458</span>w/年</span><br><span class="line"></span><br><span class="line"><span class="number">11000</span>台物理服务器成本：</span><br><span class="line"><span class="number">11000</span>台 * <span class="number">5</span>w = <span class="number">5.5</span> 亿</span><br><span class="line"></span><br><span class="line">网络设备计算：</span><br><span class="line">  业务端：万兆以太网交换机</span><br><span class="line">    <span class="number">11000</span>/<span class="number">46</span> * <span class="number">2</span> = <span class="number">480</span> 台 * <span class="number">3</span>w = <span class="number">1440</span>w</span><br><span class="line">  管理端：千兆以太网交换机</span><br><span class="line">    <span class="number">11000</span>/<span class="number">46</span>     = <span class="number">240</span> 台 * <span class="number">2</span>k = <span class="number">48</span>w</span><br><span class="line"></span><br><span class="line">按照阿里云的报价计算：</span><br><span class="line">按月计费：</span><br><span class="line">（ <span class="number">4</span>cores，<span class="number">32</span>G，<span class="number">200</span>GB ） ~= <span class="number">800</span> 元/月 </span><br><span class="line"><span class="number">800</span> * <span class="number">100000</span> * <span class="number">12</span>月 = <span class="number">9.6</span>亿/年</span><br><span class="line"></span><br><span class="line">按使用量(<span class="number">1.68</span>/时)计费：</span><br><span class="line">（ <span class="number">4</span>cores，<span class="number">32</span>G，<span class="number">200</span>GB ） ~= <span class="number">1200</span>元/月  </span><br><span class="line"><span class="number">1200</span> * <span class="number">100000</span> * <span class="number">12</span>月 = <span class="number">14.4</span> 亿/年</span><br><span class="line"></span><br><span class="line">带宽费用：略</span><br><span class="line"></span><br><span class="line">人力成本： 百台/人</span><br><span class="line"><span class="number">11000</span>/<span class="number">100</span> = <span class="number">110</span> 人 * <span class="number">20</span>w(平均年薪) = <span class="number">2200</span>w</span><br><span class="line"></span><br><span class="line">运维复杂度估算：</span><br><span class="line">AN: application类别数量</span><br><span class="line">LN: application层级</span><br><span class="line">SN: 服务器数量</span><br><span class="line">E: 调整因子</span><br><span class="line">OPCOMPLEX:运维复杂度</span><br></pre></td></tr></table></figure>
<p>承载的服务量<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">web 服务计算量：</span><br><span class="line">依照 <span class="number">163.</span>com首页 计算 <span class="number">128</span>kb静态页请求</span><br><span class="line"><span class="number">10</span>GB带宽跑满可以接受 <span class="number">9960</span>个/秒</span><br></pre></td></tr></table></figure></p>
<h2 id="备份和容灾设计"><a href="#备份和容灾设计" class="headerlink" title="备份和容灾设计"></a>备份和容灾设计</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">备份采用同城双节点，对数据进行实时备份。</span><br><span class="line">同城机房容灾需要使用专线来保证数据完整。进行热数据实时迁移减小数据量。</span><br><span class="line"></span><br><span class="line">异地节点进行容灾。异步数据同步，主要数据进行同步。</span><br></pre></td></tr></table></figure>
<h2 id="云计算设计"><a href="#云计算设计" class="headerlink" title="云计算设计"></a>云计算设计</h2><h3 id="5000台搭建-openstack-集群"><a href="#5000台搭建-openstack-集群" class="headerlink" title="5000台搭建 openstack 集群"></a>5000台搭建 openstack 集群</h3><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">openstack</span></span><br></pre></td></tr></table></figure>
<h3 id="4000台搭建-kubernetes-容器云"><a href="#4000台搭建-kubernetes-容器云" class="headerlink" title="4000台搭建 kubernetes 容器云"></a>4000台搭建 kubernetes 容器云</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="1000-台配置成裸金属"><a href="#1000-台配置成裸金属" class="headerlink" title="1000 台配置成裸金属"></a>1000 台配置成裸金属</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="技术人员组成-110-人"><a href="#技术人员组成-110-人" class="headerlink" title="技术人员组成(110 人)"></a>技术人员组成(110 人)</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="技术人员管理"><a href="#技术人员管理" class="headerlink" title="技术人员管理"></a>技术人员管理</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>计算量</tag>
        <tag>成本核算</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis使用</title>
    <url>/blog.githup.io/2020/05/Redis%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://redis.io/documentation" target="_blank" rel="noopener"> Redis </a></p>
]]></content>
      <categories>
        <category>Service</category>
      </categories>
  </entry>
  <entry>
    <title>NFS安装配置</title>
    <url>/blog.githup.io/2020/05/NFS%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">配置文件 <span class="regexp">/etc/</span>exports</span><br><span class="line">NFS 进程</span><br><span class="line">rpc.portmap <span class="comment"># portmap进程的主要功能是把RPC程序号转化为Internet的端口号。</span></span><br><span class="line"></span><br><span class="line">rpc.mountd</span><br><span class="line">rpc.nfsd</span><br><span class="line">rpc.statd</span><br><span class="line">rpc.lockd</span><br><span class="line">rpc.rquotad</span><br></pre></td></tr></table></figure>
<h2 id="安装-NFS-server"><a href="#安装-NFS-server" class="headerlink" title="安装 NFS server"></a>安装 NFS server</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">yum</span> <span class="string">-y install nfs-utils</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">restart nfs</span></span><br><span class="line"><span class="comment"># 重新载入配置</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">reload nfs</span></span><br></pre></td></tr></table></figure>
<h2 id="配置-NFS-server"><a href="#配置-NFS-server" class="headerlink" title="配置 NFS server"></a>配置 NFS server</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">1. </span><br><span class="line">mkdir /data</span><br><span class="line"><span class="comment"># 默认登录进来使用 nfsnobody 用户</span></span><br><span class="line">chmod 777 /data/nfs</span><br><span class="line"></span><br><span class="line">2. <span class="builtin-name">set</span><span class="built_in"> config </span></span><br><span class="line"><span class="comment"># directory machine1(option11,option12)</span></span><br><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;/etc/exports</span><br><span class="line">/data/nfs 192.168.0.0/255.255.255.0(rw,sync)</span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># optinos</span></span><br><span class="line">ro : read only</span><br><span class="line">rw : read <span class="keyword">and</span> write</span><br><span class="line">no_root_squash : 使用 nobody 作为客户端用户</span><br><span class="line">no_subtree_check : </span><br><span class="line">sync : write is complete</span><br></pre></td></tr></table></figure>
<h2 id="通过-host-deny-限制访问"><a href="#通过-host-deny-限制访问" class="headerlink" title="通过 host deny 限制访问"></a>通过 host deny 限制访问</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">/etc/hosts.deny</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># service: host [or network/netmask] , host [or network/netmask]</span></span><br><span class="line"><span class="string">/etc/hosts.allow</span></span><br><span class="line"><span class="attr">portmap:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.1</span> <span class="string">,</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.2</span></span><br></pre></td></tr></table></figure>
<h2 id="检查-nfs-是否启动"><a href="#检查-nfs-是否启动" class="headerlink" title="检查 nfs 是否启动"></a>检查 nfs 是否启动</h2><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>exportfs -v</span><br><span class="line"><span class="variable">$ </span>rpcinfo -p</span><br></pre></td></tr></table></figure>
<h2 id="client-配置"><a href="#client-配置" class="headerlink" title="client 配置"></a>client 配置</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 nfs client</span></span><br><span class="line"><span class="string">yum</span> <span class="string">-y</span> <span class="string">install</span> <span class="string">nfs-utils</span></span><br><span class="line"><span class="comment"># 查看可以挂载的目录</span></span><br><span class="line"><span class="string">showmount</span> <span class="string">-e</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.105</span></span><br><span class="line"><span class="comment"># 挂载</span></span><br><span class="line"><span class="comment"># 只读挂载</span></span><br><span class="line"><span class="string">mount</span> <span class="string">-r</span> <span class="string">-t</span> <span class="string">nfs</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.105</span><span class="string">:/data/nfs</span> <span class="string">/mnt</span> </span><br><span class="line"><span class="comment"># 可写挂载</span></span><br><span class="line"><span class="string">mount</span> <span class="string">-w</span> <span class="string">-t</span> <span class="string">nfs</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.105</span><span class="string">:/data/nfs</span> <span class="string">/mnt</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入 /etc/fstab（指定端口）</span></span><br><span class="line"><span class="string">localhost:/home</span>  <span class="string">/mnt/home</span>  <span class="string">nfs</span>  <span class="string">rw,hard,intr,port=250,mountport=251</span>  <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="string">cat</span> <span class="string">&lt;&lt;'EOF'</span> <span class="string">&gt;&gt;/etc/fstab</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.0</span><span class="number">.105</span><span class="string">:/data/nfs</span>  <span class="string">/mnt</span>    <span class="string">nfs</span>          <span class="string">rw</span>            <span class="number">0</span>    <span class="number">0</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>
<h2 id="NFS-优化"><a href="#NFS-优化" class="headerlink" title="NFS 优化"></a>NFS 优化</h2><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置块大小提供传输速度</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 网络数据包大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 输入队列大小</span></span><br><span class="line">echo <span class="number">262144</span> &gt; <span class="regexp">/proc/sys</span><span class="regexp">/net/core</span><span class="regexp">/rmem_default</span></span><br><span class="line"><span class="regexp">echo 262144 &gt; /proc</span><span class="regexp">/sys/net</span><span class="regexp">/core/rmem</span>_max</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Storages</category>
      </categories>
  </entry>
  <entry>
    <title>mac命令行操作</title>
    <url>/blog.githup.io/2020/05/mac%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://support.apple.com/zh-cn/guide/terminal/trmlshtcts/mac" target="_blank" rel="noopener">命令行快捷键</a><br><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">新建窗口（new）:<span class="keyword">Command</span>-N</span><br><span class="line">使用相同命令新建窗口:Control-<span class="keyword">Command</span>-N</span><br><span class="line">新建标签页（tab）：<span class="keyword">Command</span>-T</span><br><span class="line">使用相同命令新建标签页（tab）：Control-<span class="keyword">Command</span>-T</span><br><span class="line">显示或隐藏标签页栏：Shift-<span class="keyword">Command</span>-T</span><br><span class="line">显示所有标签页或退出标签页概览：Shift-<span class="keyword">Command</span>-反斜杠 (\)</span><br><span class="line">新建命令：Shift-<span class="keyword">Command</span>-N</span><br><span class="line">新建远程连接：Shift-<span class="keyword">Command</span>-K</span><br><span class="line">显示或隐藏检查器(inspect)：<span class="keyword">Command</span>-I</span><br><span class="line"></span><br><span class="line">编辑标题：Shift-<span class="keyword">Command</span>-I</span><br><span class="line">编辑背景颜色：<span class="keyword">Option</span>-<span class="keyword">Command</span>-I</span><br><span class="line">放大字体：<span class="keyword">Command</span>-加号键 (+)</span><br><span class="line">缩小字体：<span class="keyword">Command</span>-减号键 (–)</span><br><span class="line">下一个窗口：<span class="keyword">Command</span>-重音符键 (`)</span><br><span class="line">上一个窗口：<span class="keyword">Command</span>-Shift-波浪符号 (~)</span><br><span class="line">下一个标签页：Control-Tab</span><br><span class="line">上一个标签页：Control-Shift-Tab</span><br><span class="line"></span><br><span class="line">将窗口拆分为两个面板：<span class="keyword">Command</span>-D</span><br><span class="line">关闭拆分面板：Shift-<span class="keyword">Command</span>-D</span><br><span class="line"></span><br><span class="line">关闭标签页：<span class="keyword">Command</span>-W</span><br><span class="line">关闭窗口：Shift-<span class="keyword">Command</span>-W</span><br><span class="line"></span><br><span class="line">关闭其他标签页：<span class="keyword">Option</span>-<span class="keyword">Command</span>-W</span><br><span class="line">全部关闭：<span class="keyword">Option</span>-Shift-<span class="keyword">Command</span>-W</span><br><span class="line"></span><br><span class="line">滚动到顶部：<span class="keyword">Command</span>-Home</span><br><span class="line">滚动到底部：<span class="keyword">Command</span>-End</span><br><span class="line"></span><br><span class="line">上一页：<span class="keyword">Command</span>-Page Up</span><br><span class="line">下一页：<span class="keyword">Command</span>-Page Down</span><br><span class="line">上一行：<span class="keyword">Option</span>-<span class="keyword">Command</span>-Page Up</span><br><span class="line">下一行：<span class="keyword">Option</span>-<span class="keyword">Command</span>-Page Down</span><br></pre></td></tr></table></figure></p>
<h3 id="MAC-命令行翻墙"><a href="#MAC-命令行翻墙" class="headerlink" title="MAC 命令行翻墙"></a>MAC 命令行翻墙</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">lsof -i :1086</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt;~/.bash_profile</span><br><span class="line">alias <span class="attribute">proxy</span>=<span class="string">'export all_proxy=socks5://127.0.0.1:1086'</span></span><br><span class="line">alias <span class="attribute">unproxy</span>=<span class="string">'unset all_proxy'</span></span><br><span class="line">EOF</span><br><span class="line">source ~/.bash_profile</span><br><span class="line"></span><br><span class="line">proxy</span><br><span class="line">curl ip.sb</span><br><span class="line"></span><br><span class="line">unproxy</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>mactools</category>
      </categories>
  </entry>
  <entry>
    <title>Homebrew使用</title>
    <url>/blog.githup.io/2020/05/Homebrew%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener">Homebrew</a></p>
<h3 id="Install-Homebrew"><a href="#Install-Homebrew" class="headerlink" title="Install Homebrew"></a>Install Homebrew</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ruby 写的管理包管理工具</span></span><br><span class="line">/bin/bash -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)</span>"</span></span><br></pre></td></tr></table></figure>
<h3 id="using"><a href="#using" class="headerlink" title="using"></a>using</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install wget</span><br><span class="line">把软件包安装到 /usr/<span class="built_in">local</span>/Cellar</span><br><span class="line">将可执行文件链接到 /usr/<span class="built_in">local</span>/bin/ 下</span><br><span class="line"></span><br><span class="line">brew edit wget</span><br><span class="line"></span><br><span class="line">brew cask create foo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 包管理</span></span><br><span class="line">brew install node</span><br><span class="line">brew uninstall &lt;packageName&gt;</span><br><span class="line">brew search &lt;packageName&gt;</span><br><span class="line">brew list</span><br><span class="line">brew info &lt;packageName&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line">xcode-select --install</span><br><span class="line">brew upgrade</span><br></pre></td></tr></table></figure>
<h3 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mac使用brew update无反应,更新慢解决办法</span><br><span class="line"></span><br><span class="line">使用中科大的镜像</span><br><span class="line">替换默认源</span><br><span class="line">第一步，替换brew.git</span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>"</span> || <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/Homebrew</span><br><span class="line">git remote <span class="built_in">set</span>-url origin https://mirrors.ustc.edu.cn/brew.git</span><br><span class="line"></span><br><span class="line">第二步：替换homebrew-core.git</span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>/Library/Taps/homebrew/homebrew-core"</span></span><br><span class="line">git remote <span class="built_in">set</span>-url origin https://mirrors.ustc.edu.cn/homebrew-core.git</span><br><span class="line"></span><br><span class="line">最后使用</span><br><span class="line">brew update</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>mactools</category>
      </categories>
  </entry>
  <entry>
    <title>Django框架使用</title>
    <url>/blog.githup.io/2020/05/Django%E6%A1%86%E6%9E%B6%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h2><ul>
<li><a href="https://docs.djangoproject.com/zh-hans/3.0/" target="_blank" rel="noopener"> Django </a></li>
</ul>
<h2 id="概念-Concepts"><a href="#概念-Concepts" class="headerlink" title="概念 Concepts"></a>概念 Concepts</h2><ul>
<li>项目 project</li>
<li>模板 template</li>
<li>模型 modules</li>
<li>表单 form</li>
<li>视图 view</li>
<li>管理工具<ul>
<li>django-admin</li>
</ul>
</li>
</ul>
<p>brower -&gt; view -&gt; controller -&gt; models</p>
<h3 id="python3-install"><a href="#python3-install" class="headerlink" title="python3 install"></a>python3 install</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.8.2/Python-3.8.2.tgz</span><br><span class="line">tar -zxf Python-3.8.2.tgz </span><br><span class="line">cd Python-3.8.2</span><br><span class="line">./configure  <span class="comment">--prefix /usr/local/python</span></span><br><span class="line">make -j $(/proc/cpuinfo |grep cores|wc -l)</span><br><span class="line">make <span class="keyword">install</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置国内镜像源</span></span><br><span class="line">mkdir ~/.pip</span><br><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;~/.pip/pip.conf </span><br><span class="line">[<span class="keyword">global</span>]</span><br><span class="line"><span class="keyword">index</span>-<span class="keyword">url</span> = <span class="keyword">http</span>://pypi.douban.com/simple</span><br><span class="line">extra-<span class="keyword">index</span>-<span class="keyword">url</span>=https://mirrors.aliyun.com/pypi/simple</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置虚拟环境</span></span><br><span class="line">/usr/<span class="keyword">local</span>/python/<span class="keyword">bin</span>/pip3 <span class="keyword">install</span> <span class="comment">--upgrade pip</span></span><br><span class="line">/usr/<span class="keyword">local</span>/python/<span class="keyword">bin</span>/pip3 <span class="keyword">install</span> virtualenv</span><br><span class="line">/usr/<span class="keyword">local</span>/python/<span class="keyword">bin</span>/virtualenv djangodemo</span><br><span class="line"></span><br><span class="line">echo <span class="string">". djangodemo/bin/activate"</span> &gt;&gt;~/.bash_profile</span><br><span class="line">. djangodemo/<span class="keyword">bin</span>/<span class="keyword">activate</span></span><br><span class="line">pip <span class="keyword">install</span> django</span><br><span class="line">django-<span class="keyword">admin</span> <span class="comment">--version</span></span><br></pre></td></tr></table></figure>
<h3 id="创建了一个项目"><a href="#创建了一个项目" class="headerlink" title="创建了一个项目"></a>创建了一个项目</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">django-admin startproject -h</span><br><span class="line">django-admin startproject web1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置数据库</span></span><br><span class="line">yum -y install mariadb mariadb-devel</span><br><span class="line">systemctl start mariadb</span><br><span class="line">pip install mysqlclient</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据库</span></span><br><span class="line">mysql -uroot -p <span class="string">"create database web1"</span></span><br><span class="line">CREATE DATABASE `web1`<span class="built_in"> DEFAULT </span>CHARACTER <span class="builtin-name">SET</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment"># vim web1/setting.py</span></span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">"HOST"</span>: <span class="string">'localhost'</span>,</span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'web1'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'PORT'</span>: 3306,</span><br><span class="line">    <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">        <span class="string">'init_command'</span>: <span class="string">'SET default_storage_engine=INNODB'</span>,</span><br><span class="line">        <span class="string">'autocommit'</span>: <span class="literal">True</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许所有主机访问，默认为空，返回 400</span></span><br><span class="line">ALLOWED_HOSTS=[<span class="string">"*"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 同步数据库</span></span><br><span class="line">python manage.py migrate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建管理员账号</span></span><br><span class="line">python manage.py createsuperuser</span><br><span class="line"></span><br><span class="line"><span class="comment"># admin 模块位置</span></span><br><span class="line">lib/python3.8/site-packages/django/contrib/admin/</span><br><span class="line"><span class="attribute">DEBUG</span>=<span class="literal">True</span></span><br><span class="line">导致 admin 模块的静态文件加载不到</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">python manage.py runserver 0:8000</span><br></pre></td></tr></table></figure>
<h3 id="Django-目录结构"><a href="#Django-目录结构" class="headerlink" title="Django 目录结构"></a>Django 目录结构</h3><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">web1  <span class="meta"># 项目目录</span></span><br><span class="line">web1/manage.py <span class="meta"># 项目管理工具</span></span><br><span class="line">web1/web1  <span class="meta"># </span></span><br><span class="line">web1<span class="meta-keyword">/web1/</span>__init__.py <span class="meta"># 告诉 Python 这个目录应该被认为是一个 Python 包。</span></span><br><span class="line">web1<span class="meta-keyword">/web1/</span>asgi.py     <span class="meta"># ASGI 兼容的Web服务器上的入口</span></span><br><span class="line">web1<span class="meta-keyword">/web1/</span>settings.py <span class="meta"># Django 项目的配置文件</span></span><br><span class="line">web1<span class="meta-keyword">/web1/</span>urls.py     <span class="meta"># Django 项目的 URL 声明 ，路由</span></span><br><span class="line">web1<span class="meta-keyword">/web1/</span>wsgi.py     <span class="meta"># WSGI 兼容的Web服务器上的入口</span></span><br></pre></td></tr></table></figure>
<h3 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h3><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> web1</span><br><span class="line"><span class="keyword">python</span> manage.<span class="keyword">py</span> startapp polls</span><br><span class="line"></span><br><span class="line">polls/</span><br><span class="line">├── admin.<span class="keyword">py</span></span><br><span class="line">├── apps.<span class="keyword">py</span></span><br><span class="line">├── __init__.<span class="keyword">py</span></span><br><span class="line">├── migrations</span><br><span class="line">│   └── __init__.<span class="keyword">py</span></span><br><span class="line">├── models.<span class="keyword">py</span></span><br><span class="line">├── tests.<span class="keyword">py</span> </span><br><span class="line">├── urls.<span class="keyword">py</span>  # 路由</span><br><span class="line">└── views.<span class="keyword">py</span> # 视图</span><br></pre></td></tr></table></figure>
<ul>
<li><p>创建项目</p>
<ul>
<li>创建应用<ul>
<li>编写视图</li>
<li>配置路由</li>
<li>配置模型</li>
<li>生成迁移文件<ul>
<li>查看迁移文件</li>
</ul>
</li>
<li>执行迁移</li>
<li>通过 shell 调试</li>
</ul>
</li>
</ul>
</li>
<li><p>后台创建</p>
<ul>
<li>创建后台用户</li>
<li>通过 admin 文件向后台注册表</li>
</ul>
</li>
<li><p>编写多视图</p>
</li>
<li>使用模板来渲染视图</li>
<li>404 页面处理</li>
<li>为 url 添加命名空间</li>
</ul>
]]></content>
      <categories>
        <category>python开发</category>
      </categories>
  </entry>
  <entry>
    <title>Kubesphere</title>
    <url>/blog.githup.io/2020/05/Kubesphere/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://kubesphere.io/" target="_blank" rel="noopener"> Kubesphere 官网 </a></p>
<ul>
<li>微服务 ks-apiserver ks-apigateway<ul>
<li>服务治理</li>
<li>灰度发布</li>
<li>熔断 Istio</li>
<li>限流</li>
<li>智能路由 Ingress</li>
</ul>
</li>
<li>CI/CD Jenkins<ul>
<li>代码仓库<ul>
<li>git</li>
<li>SVN</li>
<li>BitBucket</li>
</ul>
</li>
<li>镜像仓库管理<ul>
<li>Harbor</li>
</ul>
</li>
<li>镜像迁移</li>
<li>源码到镜像 Source-to-Image</li>
<li>安全扫描</li>
<li>流水线 Pipeline<ul>
<li>checkout</li>
<li>UT test SonarQube</li>
<li>Publish</li>
</ul>
</li>
<li>部署<ul>
<li>蓝绿部署（将两个版本同时在线）</li>
<li>金丝雀发布（将一部分真实流量引入一个新版本进行测试）</li>
<li>流量镜像（将生产流量镜像拷贝到测试集群或者新的版本中）</li>
</ul>
</li>
</ul>
</li>
<li>应用管理 OpenPitrix<ul>
<li>应用发布</li>
<li>应用部署</li>
<li>版本控制</li>
<li>应用仓库管理<ul>
<li>OpenPitrix</li>
</ul>
</li>
</ul>
</li>
<li>监控&amp;日志&amp;告警 Prometheus<ul>
<li>系统及服务监控 Metrics-server</li>
<li>系统及服务日志 Elasticsearch Fluent Bit</li>
<li>告警管理 Alert Notification</li>
</ul>
</li>
<li>安全<ul>
<li>用户管理 ks-account</li>
<li>角色管理</li>
<li>第三方登录认证</li>
<li>密钥管理</li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><p>网络插件</p>
<ul>
<li>Istio</li>
<li>Calico</li>
<li>Flannel</li>
</ul>
</li>
<li><p>kubernetes 集群<br>  Namespace 项目<br>  pod 容器组<br>  deployments 部署<br>  StatefulSets 有状态副本集<br>  DaemonSet 守护进程集<br>  Jobs 任务<br>  CronJob 定时任务<br>  service 服务(网络)<br>  Ingress 应用路由<br>  Image Registries 镜像仓库<br>  PersistentVolumeClaim（PVC) 存储卷<br>  StorageClass 存储类型</p>
</li>
<li><p>多租户 ks-controller-manager</p>
<ul>
<li>跨集群</li>
<li>多级组织机构管理<ul>
<li>三层级权限管理<ul>
<li>集群<ul>
<li>主机 Node</li>
</ul>
</li>
<li>企业空间 Workspace</li>
<li>项目 Namespace</li>
</ul>
</li>
<li>统一认证<ul>
<li>LDAP</li>
<li>AD</li>
<li>单点登录 (SSO) </li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<ul>
<li>openstack</li>
<li><p>存储服务</p>
<ul>
<li>GlusterFS</li>
<li>CephRBD</li>
<li>NFS  </li>
</ul>
</li>
<li><p>Web 控制台</p>
<ul>
<li>向导式</li>
<li>可视化</li>
</ul>
</li>
<li>控制台 ks-console</li>
</ul>
<hr>
<ul>
<li>依赖服务<ul>
<li>redis</li>
<li>MySQL</li>
<li>PostgreSQL</li>
<li>OpenLDAP</li>
</ul>
</li>
</ul>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul>
<li>在线安装<ul>
<li>单节点安装</li>
<li>多节点安装</li>
</ul>
</li>
<li><p>离线安装</p>
</li>
<li><p>安装前置条件</p>
<ul>
<li>集群环境</li>
<li>创建 StorageClass</li>
</ul>
</li>
<li><p>对 common.yaml 进行配置</p>
<ul>
<li>kubernetes 配置</li>
<li>kubersphere 配置</li>
<li>GPU 节点配置示例</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>OpenStack安装</title>
    <url>/blog.githup.io/2020/05/OpenStack%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li><a href="https://www.openstack.org/" target="_blank" rel="noopener"> Openstack 官网 </a></li>
<li><a href="https://docs.openstack.org/install-guide/" target="_blank" rel="noopener">Install 指南</a></li>
<li><a href="https://docs.openstack.org/install-guide/get-started-conceptual-architecture.html" target="_blank" rel="noopener">openstack 架构图</a></li>
<li><a href="https://docs.openstack.org/train/user/" target="_blank" rel="noopener">组件介绍</a></li>
</ul>
<h2 id="组件介绍"><a href="#组件介绍" class="headerlink" title="组件介绍"></a>组件介绍</h2><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">Keystone 认证组件</span><br><span class="line">Glance 镜像组件</span><br><span class="line">placement 资源管理组件(是从Nova中剥离出来的)</span><br><span class="line">------------------------</span><br><span class="line">其他组件</span><br><span class="line"></span><br><span class="line">Nova 计算组件</span><br><span class="line">Netron 网络组件</span><br><span class="line">------------------------</span><br><span class="line">Master Node</span><br><span class="line"></span><br><span class="line">Nova 计算组件</span><br><span class="line">Netron 网络组件</span><br><span class="line">------------------------</span><br><span class="line">Worker Node</span><br></pre></td></tr></table></figure>
<h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><p>提供5台 linux 系统(Centos 7) 主机</p>
<p>主机IP如下：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">master:<span class="number">192.168</span><span class="number">.0</span><span class="number">.51</span></span><br><span class="line">work1:<span class="number">192.168</span><span class="number">.0</span><span class="number">.52</span></span><br><span class="line">work2:<span class="number">192.168</span><span class="number">.0</span><span class="number">.53</span></span><br></pre></td></tr></table></figure>
<h3 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h3><h4 id="设置主机名"><a href="#设置主机名" class="headerlink" title="设置主机名"></a>设置主机名</h4><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">ssh <span class="number">192.168</span><span class="number">.0</span><span class="number">.51</span> <span class="string">" hostnamectl set-hostname controller"</span></span><br><span class="line">ssh <span class="number">192.168</span><span class="number">.0</span><span class="number">.52</span> <span class="string">" hostnamectl set-hostname work1"</span></span><br><span class="line">ssh <span class="number">192.168</span><span class="number">.0</span><span class="number">.53</span> <span class="string">" hostnamectl set-hostname work2"</span></span><br></pre></td></tr></table></figure>
<h4 id="设置主机名解析"><a href="#设置主机名解析" class="headerlink" title="设置主机名解析"></a>设置主机名解析</h4><figure class="highlight dns"><table><tr><td class="code"><pre><span class="line">echo "<span class="number">192.168.0.51</span> controller</span><br><span class="line"><span class="number">192.168.0.52</span> work1</span><br><span class="line"><span class="number">192.168.0.53</span> work2"&gt;&gt;/etc/hosts</span><br></pre></td></tr></table></figure>
<h4 id="生成ssh-key"><a href="#生成ssh-key" class="headerlink" title="生成ssh key"></a>生成ssh key</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">ssh-keygen</span><br><span class="line">ssh-copy-id <span class="number">192.168</span><span class="number">.0</span><span class="number">.51</span></span><br><span class="line">ssh-copy-id <span class="number">192.168</span><span class="number">.0</span><span class="number">.52</span></span><br><span class="line">ssh-copy-id <span class="number">192.168</span><span class="number">.0</span><span class="number">.53</span></span><br><span class="line"></span><br><span class="line">SSHVerify</span><br></pre></td></tr></table></figure>
<blockquote>
<p>for x in <code>grep -o -.* /etc/hosts</code>;do echo $x; ssh-copy-id $x ;done</p>
</blockquote>
<h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h4><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">systemctl</span> <span class="string">stop firewalld</span></span><br><span class="line"><span class="attr">iptables</span> <span class="string">-L -n</span></span><br></pre></td></tr></table></figure>
<h4 id="关闭-selinux"><a href="#关闭-selinux" class="headerlink" title="关闭 selinux"></a>关闭 selinux</h4><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">setenforce <span class="number">0</span></span><br><span class="line">sed -i <span class="string">"s/^SELINUX=enforcing/SELINUX=disabled/g"</span> /etc/selinux/<span class="built_in">config</span></span><br></pre></td></tr></table></figure>
<h4 id="关闭-swap"><a href="#关闭-swap" class="headerlink" title="关闭 swap"></a>关闭 swap</h4><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">swapoff -a</span><br><span class="line">swapoff -<span class="selector-tag">a</span> sed -<span class="selector-tag">i</span> <span class="string">'s/.*swap.*/#&amp;/'</span> /etc/fstab</span><br></pre></td></tr></table></figure>
<h3 id="NTP-配置"><a href="#NTP-配置" class="headerlink" title="NTP 配置"></a>NTP 配置</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">yum install chrony -y</span><br><span class="line"><span class="comment"># vim /etc/chrony.conf</span></span><br><span class="line">sed -i <span class="string">"/^server/d"</span> <span class="regexp">/etc/</span>chrony.conf</span><br><span class="line">sed -i <span class="string">"2a server ntp1.cloud.aliyuncs.com iburst"</span> <span class="regexp">/etc/</span>chrony.conf</span><br><span class="line">sed -i <span class="string">"2a server ntp2.cloud.aliyuncs.com iburst"</span> <span class="regexp">/etc/</span>chrony.conf </span><br><span class="line">sed -i <span class="string">"/#allow/s/#//"</span> <span class="regexp">/etc/</span>chrony.conf</span><br><span class="line">systemctl enable chronyd.service;systemctl start chronyd.service</span><br></pre></td></tr></table></figure>
<h3 id="生成随机密码（安装时使用统一密码）"><a href="#生成随机密码（安装时使用统一密码）" class="headerlink" title="生成随机密码（安装时使用统一密码）"></a>生成随机密码（安装时使用统一密码）</h3><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">openssl <span class="keyword">rand</span> -<span class="keyword">hex</span> <span class="number">10</span></span><br></pre></td></tr></table></figure>
<h3 id="设置-train-版本的源"><a href="#设置-train-版本的源" class="headerlink" title="设置 train 版本的源"></a>设置 train 版本的源</h3><figure class="highlight gml"><table><tr><td class="code"><pre><span class="line">yum install https:<span class="comment">//rdoproject.org/repos/rdo-release.rpm</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 安装所需的yum 库</span></span><br><span class="line">yum -<span class="symbol">y</span> install centos-release-openstack-train</span><br><span class="line">yum repolist</span><br><span class="line">yum upgrade -<span class="symbol">y</span></span><br><span class="line">yum install python-openstackclient -<span class="symbol">y</span></span><br><span class="line">yum install openstack-selinux -<span class="symbol">y</span></span><br></pre></td></tr></table></figure>
<h3 id="数据库安装"><a href="#数据库安装" class="headerlink" title="数据库安装"></a>数据库安装</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">yum <span class="keyword">install</span> mariadb mariadb-<span class="keyword">server</span> python2-PyMySQL -y</span><br><span class="line"> </span><br><span class="line">vim /etc/my.cnf.d/openstack.cnf</span><br><span class="line"> </span><br><span class="line">[mysqld]</span><br><span class="line">bind-address = <span class="number">192.168</span><span class="number">.0</span><span class="number">.51</span></span><br><span class="line"><span class="keyword">default</span>-<span class="keyword">storage</span>-<span class="keyword">engine</span> = <span class="keyword">innodb</span></span><br><span class="line">innodb_file_per_table</span><br><span class="line">max_connections = <span class="number">4096</span></span><br><span class="line"><span class="keyword">collation</span>-<span class="keyword">server</span> = utf8_general_ci</span><br><span class="line"><span class="built_in">character</span>-<span class="keyword">set</span>-<span class="keyword">server</span> = utf8</span><br><span class="line"> </span><br><span class="line">systemctl <span class="keyword">enable</span> mariadb.service</span><br><span class="line">systemctl <span class="keyword">start</span> mariadb.service</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 数据库安装</span></span><br><span class="line"><span class="comment">#validate</span></span><br><span class="line">netstat -ntlp |grep <span class="number">3306</span></span><br><span class="line"> </span><br><span class="line">mysql_secure_installation</span><br><span class="line">n y....</span><br></pre></td></tr></table></figure>
<h3 id="消息队列安装"><a href="#消息队列安装" class="headerlink" title="消息队列安装"></a>消息队列安装</h3><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">安装 rabbitmq</span><br><span class="line">yum install rabbitmq-<span class="keyword">server</span> -y</span><br><span class="line"> </span><br><span class="line">systemctl <span class="keyword">enable</span> rabbitmq-<span class="keyword">server</span>.service</span><br><span class="line">systemctl <span class="keyword">start</span> rabbitmq-<span class="keyword">server</span>.service</span><br><span class="line"> </span><br><span class="line"><span class="meta">#validate</span></span><br><span class="line">netstat -ntlp|grep <span class="number">25672</span></span><br><span class="line"></span><br><span class="line"># 添加用户，设置权限</span><br><span class="line">rabbitmqctl add_user openstack RABBIT_PASS</span><br><span class="line">rabbitmqctl set_permissions openstack ".*" ".*" ".*"</span><br></pre></td></tr></table></figure>
<h3 id="Memcached-安装"><a href="#Memcached-安装" class="headerlink" title="Memcached 安装"></a>Memcached 安装</h3><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">yum</span> <span class="string">install memcached python-memcached -y</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">vim</span> <span class="string">/etc/sysconfig/memcached</span></span><br><span class="line"><span class="attr">OPTIONS</span>=<span class="string">"-l 127.0.0.1,::1,controller"</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">systemctl</span> <span class="string">enable memcached.service</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">start memcached.service</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># validate</span></span><br><span class="line"><span class="attr">netstat</span> <span class="string">-ntlp |grep 11211</span></span><br></pre></td></tr></table></figure>
<h3 id="Etcd-安装"><a href="#Etcd-安装" class="headerlink" title="Etcd 安装"></a>Etcd 安装</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">yum install etcd -y</span><br><span class="line"> </span><br><span class="line">vim /etc/etcd/etcd.conf</span><br><span class="line"> </span><br><span class="line"><span class="comment">#[Member]</span></span><br><span class="line"><span class="attribute">ETCD_DATA_DIR</span>=<span class="string">"/var/lib/etcd/default.etcd"</span></span><br><span class="line"><span class="attribute">ETCD_LISTEN_PEER_URLS</span>=<span class="string">"http://10.0.0.11:2380"</span></span><br><span class="line"><span class="attribute">ETCD_LISTEN_CLIENT_URLS</span>=<span class="string">"http://10.0.0.11:2379"</span></span><br><span class="line"><span class="attribute">ETCD_NAME</span>=<span class="string">"controller"</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#[Clustering]</span></span><br><span class="line"><span class="attribute">ETCD_INITIAL_ADVERTISE_PEER_URLS</span>=<span class="string">"http://10.0.0.11:2380"</span></span><br><span class="line"><span class="attribute">ETCD_ADVERTISE_CLIENT_URLS</span>=<span class="string">"http://10.0.0.11:2379"</span></span><br><span class="line"><span class="attribute">ETCD_INITIAL_CLUSTER</span>=<span class="string">"controller=http://10.0.0.11:2380"</span></span><br><span class="line"><span class="attribute">ETCD_INITIAL_CLUSTER_TOKEN</span>=<span class="string">"etcd-cluster-01"</span></span><br><span class="line"><span class="attribute">ETCD_INITIAL_CLUSTER_STATE</span>=<span class="string">"new"</span></span><br><span class="line"> </span><br><span class="line">systemctl <span class="builtin-name">enable</span> etcd</span><br><span class="line">systemctl start etcd</span><br><span class="line"> </span><br><span class="line">netstat -ntlp|grep etcd</span><br></pre></td></tr></table></figure>
<h2 id="Openstack-组件安装"><a href="#Openstack-组件安装" class="headerlink" title="Openstack 组件安装"></a>Openstack 组件安装</h2><h3 id="KEYSTONE"><a href="#KEYSTONE" class="headerlink" title="KEYSTONE"></a>KEYSTONE</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建数据库</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> keystone;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> keystone.* <span class="keyword">TO</span> <span class="string">'keystone'</span>@<span class="string">'localhost'</span> \</span><br><span class="line"><span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'KEYSTONE_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> keystone.* <span class="keyword">TO</span> <span class="string">'keystone'</span>@<span class="string">'%'</span> \</span><br><span class="line"><span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'KEYSTONE_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装包</span></span><br><span class="line">yum <span class="keyword">install</span> openstack-keystone httpd mod_wsgi -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置</span></span><br><span class="line">cp /etc/keystone/keystone.conf /etc/keystone/keystone.conf.bak</span><br><span class="line">grep -v -e <span class="string">"^$"</span> -e <span class="string">"#"</span> /etc/keystone/keystone.conf.bak &gt;/etc/keystone/keystone.conf</span><br><span class="line"> </span><br><span class="line">/etc/keystone/keystone.conf</span><br><span class="line">[<span class="keyword">database</span>]</span><br><span class="line"><span class="comment"># 连接数据库</span></span><br><span class="line"><span class="keyword">connection</span> = mysql+pymysql://keystone:KEYSTONE_DBPASS@controller/keystone</span><br><span class="line">[token]</span><br><span class="line"><span class="comment"># token 使用的方式</span></span><br><span class="line">provider = fernet</span><br><span class="line"></span><br><span class="line">初始化身份认证服务的数据库</span><br><span class="line">su -s /<span class="keyword">bin</span>/sh -c <span class="string">"keystone-manage db_sync"</span> keystone</span><br><span class="line"> </span><br><span class="line">查看创建的表</span><br><span class="line"><span class="comment">#validate</span></span><br><span class="line">mysql keystone -e <span class="string">"show tables;"</span></span><br><span class="line"> </span><br><span class="line">// 初始化Fernet <span class="keyword">keys</span></span><br><span class="line">keystone-manage fernet_setup <span class="comment">--keystone-user keystone --keystone-group keystone</span></span><br><span class="line"> </span><br><span class="line">ls /etc/keystone/fernet-<span class="keyword">keys</span>/</span><br><span class="line"> </span><br><span class="line">// 认证设置使用的系统用户，组</span><br><span class="line">keystone-manage credential_setup <span class="comment">--keystone-user keystone --keystone-group keystone</span></span><br><span class="line"> </span><br><span class="line">// 建立身份服务</span><br><span class="line">keystone-manage bootstrap <span class="comment">--bootstrap-password ADMIN_PASS \</span></span><br><span class="line">  <span class="comment">--bootstrap-admin-url http://controller:5000/v3/ \</span></span><br><span class="line">  <span class="comment">--bootstrap-internal-url http://controller:5000/v3/ \</span></span><br><span class="line">  <span class="comment">--bootstrap-public-url http://controller:5000/v3/ \</span></span><br><span class="line">  <span class="comment">--bootstrap-region-id RegionOne</span></span><br><span class="line"> </span><br><span class="line">// Apache 服务配置</span><br><span class="line">vim +<span class="number">95</span> /etc/httpd/conf/httpd.conf</span><br><span class="line">ServerName controller</span><br><span class="line"> </span><br><span class="line"><span class="keyword">ln</span> -s /usr/<span class="keyword">share</span>/keystone/wsgi-keystone.conf /etc/httpd/conf.d/</span><br><span class="line"> </span><br><span class="line"><span class="comment"># systemctl enable httpd.service</span></span><br><span class="line"><span class="comment"># systemctl start httpd.service</span></span><br><span class="line"> </span><br><span class="line">// 设置管理员环境变量</span><br><span class="line"><span class="keyword">export</span> OS_USERNAME=<span class="keyword">admin</span></span><br><span class="line"><span class="keyword">export</span> OS_PASSWORD=ADMIN_PASS</span><br><span class="line"><span class="keyword">export</span> OS_PROJECT_NAME=<span class="keyword">admin</span></span><br><span class="line"><span class="keyword">export</span> OS_USER_DOMAIN_NAME=<span class="keyword">Default</span></span><br><span class="line"><span class="keyword">export</span> OS_PROJECT_DOMAIN_NAME=<span class="keyword">Default</span></span><br><span class="line"><span class="keyword">export</span> OS_AUTH_URL=<span class="keyword">http</span>://controller:<span class="number">5000</span>/v3</span><br><span class="line"><span class="keyword">export</span> OS_IDENTITY_API_VERSION=<span class="number">3</span></span><br><span class="line"> </span><br><span class="line">// 创建服务实体和API端点</span><br><span class="line">创建一个域(<span class="keyword">default</span> 域 默认存在)</span><br><span class="line">openstack <span class="keyword">domain</span> <span class="keyword">create</span> <span class="comment">--description "An Example Domain" example</span></span><br><span class="line"> </span><br><span class="line">创建一个服务， 隶属于 <span class="keyword">default</span> 域</span><br><span class="line">openstack <span class="keyword">project</span> <span class="keyword">create</span> <span class="comment">--domain default --description "Service Project" service</span></span><br><span class="line"> </span><br><span class="line">创建一个项目，隶属于 <span class="keyword">default</span> 域</span><br><span class="line">openstack <span class="keyword">project</span> <span class="keyword">create</span> <span class="comment">--domain default --description "Demo Project" myproject</span></span><br><span class="line"> </span><br><span class="line">创建一个用户，隶属于 <span class="keyword">default</span> 域</span><br><span class="line">openstack <span class="keyword">user</span> <span class="keyword">create</span> <span class="comment">--domain default --password-prompt myuser</span></span><br><span class="line"><span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">// 创建一个角色</span><br><span class="line">openstack <span class="keyword">role</span> <span class="keyword">create</span> myrole</span><br><span class="line"> </span><br><span class="line">// 关联项目，用户，角色</span><br><span class="line">openstack <span class="keyword">role</span> <span class="keyword">add</span> <span class="comment">--project myproject --user myuser myrole</span></span><br><span class="line"> </span><br><span class="line">// 删除环境变量</span><br><span class="line">unset OS_AUTH_URL OS_PASSWORD</span><br><span class="line"> </span><br><span class="line">// 获取一个token</span><br><span class="line">// api</span><br><span class="line">openstack <span class="comment">--os-auth-url http://controller:5000/v3 \</span></span><br><span class="line">// 项目域 <span class="comment">--os-project-domain-name Default</span></span><br><span class="line">// 用户域</span><br><span class="line"><span class="comment">--os-user-domain-name Default</span></span><br><span class="line">// 项目名 <span class="comment">--os-project-name admin</span></span><br><span class="line">// 用户名</span><br><span class="line"><span class="comment">--os-username admin token issue</span></span><br><span class="line">// 密码</span><br><span class="line">ADMIN_PASS</span><br><span class="line"> </span><br><span class="line">// 获取<span class="keyword">admin</span> 管理员的token</span><br><span class="line">openstack <span class="comment">--os-auth-url http://controller:5000/v3 \</span></span><br><span class="line">  <span class="comment">--os-project-domain-name Default --os-user-domain-name Default \</span></span><br><span class="line">  <span class="comment">--os-project-name admin --os-username admin token issue</span></span><br><span class="line"> </span><br><span class="line">ADMIN_PASS</span><br><span class="line"> </span><br><span class="line">// 获取一个 myproject 的 token</span><br><span class="line">openstack <span class="comment">--os-auth-url http://controller:5000/v3 \</span></span><br><span class="line">  <span class="comment">--os-project-domain-name Default --os-user-domain-name Default \</span></span><br><span class="line">  <span class="comment">--os-project-name myproject --os-username myuser token issue</span></span><br><span class="line"> </span><br><span class="line"><span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">设置一个管理员的环境变量 <span class="keyword">admin</span>-openrc</span><br><span class="line">echo <span class="string">"export OS_PROJECT_DOMAIN_NAME=Default</span></span><br><span class="line"><span class="string">export OS_USER_DOMAIN_NAME=Default</span></span><br><span class="line"><span class="string">export OS_PROJECT_NAME=admin</span></span><br><span class="line"><span class="string">export OS_USERNAME=admin</span></span><br><span class="line"><span class="string">export OS_PASSWORD=ADMIN_PASS</span></span><br><span class="line"><span class="string">export OS_AUTH_URL=http://controller:5000/v3</span></span><br><span class="line"><span class="string">export OS_IDENTITY_API_VERSION=3</span></span><br><span class="line"><span class="string">export OS_IMAGE_API_VERSION=2"</span> &gt;<span class="keyword">admin</span>-openrc</span><br><span class="line"> </span><br><span class="line">设置一个demo的环境变量 demo-openrc</span><br><span class="line">echo <span class="string">"export OS_PROJECT_DOMAIN_NAME=Default</span></span><br><span class="line"><span class="string">export OS_USER_DOMAIN_NAME=Default</span></span><br><span class="line"><span class="string">export OS_PROJECT_NAME=myproject</span></span><br><span class="line"><span class="string">export OS_USERNAME=myuser</span></span><br><span class="line"><span class="string">export OS_PASSWORD=123456</span></span><br><span class="line"><span class="string">export OS_AUTH_URL=http://controller:5000/v3</span></span><br><span class="line"><span class="string">export OS_IDENTITY_API_VERSION=3</span></span><br><span class="line"><span class="string">export OS_IMAGE_API_VERSION=2"</span>&gt;demo-openrc</span><br><span class="line"> </span><br><span class="line">// 获得一个token</span><br><span class="line">. <span class="keyword">admin</span>-openrc</span><br><span class="line">openstack token issue</span><br><span class="line"> </span><br><span class="line">. demo-openrc</span><br><span class="line">openstack token issue</span><br></pre></td></tr></table></figure>
<h3 id="Glance-安装"><a href="#Glance-安装" class="headerlink" title="Glance 安装"></a>Glance 安装</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> glance;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> glance.* <span class="keyword">TO</span> <span class="string">'glance'</span>@<span class="string">'localhost'</span> \</span><br><span class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'GLANCE_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> glance.* <span class="keyword">TO</span> <span class="string">'glance'</span>@<span class="string">'%'</span> \</span><br><span class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'GLANCE_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line">// 注册 glance</span><br><span class="line">. admin-openrc</span><br><span class="line">openstack user <span class="keyword">create</span> <span class="comment">--domain default --password-prompt glance</span></span><br><span class="line"><span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">openstack <span class="keyword">role</span> <span class="keyword">add</span> <span class="comment">--project service --user glance admin</span></span><br><span class="line"> </span><br><span class="line">// 创建服务</span><br><span class="line">openstack service <span class="keyword">create</span> <span class="comment">--name glance \</span></span><br><span class="line">  <span class="comment">--description "OpenStack Image" image</span></span><br><span class="line"> </span><br><span class="line">// 创建 <span class="keyword">public</span> 网络 image</span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne image public http://controller:9292</span></span><br><span class="line"> </span><br><span class="line">// 创建 internal 网络 image</span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne image internal http://controller:9292</span></span><br><span class="line"> </span><br><span class="line">// 创建 <span class="keyword">admin</span> 网络 image</span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne image admin http://controller:9292</span></span><br><span class="line"> </span><br><span class="line">yum <span class="keyword">install</span> openstack-glance -y</span><br><span class="line"> </span><br><span class="line">cp /etc/glance/glance-api.conf /etc/glance/glance-api.conf.bak</span><br><span class="line">grep -Ev <span class="string">"^$|#"</span> /etc/glance/glance-api.conf.bak &gt; /etc/glance/glance-api.conf</span><br><span class="line"> </span><br><span class="line">vim /etc/glance/glance-api.conf</span><br><span class="line">[<span class="keyword">database</span>]</span><br><span class="line"><span class="keyword">connection</span> = mysql+pymysql://glance:GLANCE_DBPASS@controller/glance</span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri  = <span class="keyword">http</span>://controller:<span class="number">5000</span></span><br><span class="line">auth_url = <span class="keyword">http</span>://controller:<span class="number">5000</span></span><br><span class="line">memcached_servers = controller:<span class="number">11211</span></span><br><span class="line">auth_type = <span class="keyword">password</span></span><br><span class="line">project_domain_name = <span class="keyword">Default</span></span><br><span class="line">user_domain_name = <span class="keyword">Default</span></span><br><span class="line">project_name = service</span><br><span class="line">username = glance</span><br><span class="line"><span class="keyword">password</span> = <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">[paste_deploy]</span><br><span class="line">flavor = keystone</span><br><span class="line"> </span><br><span class="line">[glance_store]</span><br><span class="line">stores = <span class="keyword">file</span>,<span class="keyword">http</span></span><br><span class="line">default_store = <span class="keyword">file</span></span><br><span class="line">filesystem_store_datadir = /<span class="keyword">var</span>/lib/glance/images/</span><br><span class="line"> </span><br><span class="line">su -s /<span class="keyword">bin</span>/sh -c <span class="string">"glance-manage db_sync"</span> glance</span><br><span class="line"> </span><br><span class="line"><span class="comment">#validate</span></span><br><span class="line">mysql glance -e <span class="string">"show tables;"</span></span><br><span class="line"> </span><br><span class="line">systemctl <span class="keyword">enable</span> openstack-glance-api.service</span><br><span class="line">systemctl <span class="keyword">start</span> openstack-glance-api.service</span><br><span class="line"> </span><br><span class="line">netstat -nltp |grep <span class="number">9292</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">// 创建一个镜像</span><br><span class="line"> </span><br><span class="line">. <span class="keyword">admin</span>-openrc</span><br><span class="line"> </span><br><span class="line"> wget <span class="keyword">http</span>://download.cirros-cloud.net/<span class="number">0.4</span><span class="number">.0</span>/cirros<span class="number">-0.4</span><span class="number">.0</span>-x86_64-disk.img</span><br><span class="line"> </span><br><span class="line">glance image-<span class="keyword">create</span> <span class="comment">--name "cirros" \</span></span><br><span class="line">  <span class="comment">--file cirros-0.4.0-x86_64-disk.img \</span></span><br><span class="line">  <span class="comment">--disk-format qcow2 --container-format bare \</span></span><br><span class="line">  <span class="comment">--visibility public</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#Invalid OpenStack Identity credentials.</span></span><br><span class="line">配置文件密码错误，修改后重启服务</span><br><span class="line"> </span><br><span class="line">glance image-<span class="keyword">list</span></span><br></pre></td></tr></table></figure>
<h3 id="Placement-安装"><a href="#Placement-安装" class="headerlink" title="Placement 安装"></a>Placement 安装</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> placement;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> placement.* <span class="keyword">TO</span> <span class="string">'placement'</span>@<span class="string">'localhost'</span>  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'PLACEMENT_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> placement.* <span class="keyword">TO</span> <span class="string">'placement'</span>@<span class="string">'%'</span>  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'PLACEMENT_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line">. admin-openrc</span><br><span class="line">openstack user <span class="keyword">create</span> <span class="comment">--domain default --password-prompt placement</span></span><br><span class="line"><span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">openstack <span class="keyword">role</span> <span class="keyword">add</span> <span class="comment">--project service --user placement admin</span></span><br><span class="line"> </span><br><span class="line">openstack service <span class="keyword">create</span> <span class="comment">--name placement \</span></span><br><span class="line">  <span class="comment">--description "Placement API" placement</span></span><br><span class="line"> </span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne placement public http://controller:8778</span></span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne placement internal http://controller:8778</span></span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne placement admin http://controller:8778</span></span><br><span class="line"> </span><br><span class="line">yum <span class="keyword">install</span> openstack-placement-api -y</span><br><span class="line">cp /etc/placement/placement.conf /etc/placement/placement.conf.bak</span><br><span class="line">grep -Ev <span class="string">"#|^$"</span> /etc/placement/placement.conf.bak &gt;/etc/placement/placement.conf</span><br><span class="line"> </span><br><span class="line">vim /etc/placement/placement.conf</span><br><span class="line"> </span><br><span class="line">[placement_database]</span><br><span class="line"><span class="keyword">connection</span> = mysql+pymysql://placement:PLACEMENT_DBPASS@controller/placement</span><br><span class="line"> </span><br><span class="line">[api]</span><br><span class="line">auth_strategy = keystone</span><br><span class="line"> </span><br><span class="line">[keystone_authtoken]</span><br><span class="line">auth_url = <span class="keyword">http</span>://controller:<span class="number">5000</span>/v3</span><br><span class="line">memcached_servers = controller:<span class="number">11211</span></span><br><span class="line">auth_type = <span class="keyword">password</span></span><br><span class="line">project_domain_name = <span class="keyword">Default</span></span><br><span class="line">user_domain_name = <span class="keyword">Default</span></span><br><span class="line">project_name = service</span><br><span class="line">username = placement</span><br><span class="line"><span class="keyword">password</span> = <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">su -s /<span class="keyword">bin</span>/sh -c <span class="string">"placement-manage db sync"</span> placement</span><br><span class="line"> </span><br><span class="line">/usr/lib/python2<span class="number">.7</span>/site-packages/pymysql/cursors.py:<span class="number">170</span>: <span class="keyword">Warning</span>: (<span class="number">1280</span>, u<span class="string">"Name 'alembic_version_pkc' ignored for PRIMARY key."</span>)</span><br><span class="line">  <span class="keyword">result</span> = self._query(<span class="keyword">query</span>)</span><br><span class="line"> </span><br><span class="line">mysql placement -e <span class="string">"show tables;"</span></span><br><span class="line"> </span><br><span class="line">systemctl restart httpd</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># httpd 报 403 拒绝访问，可以使用 uwsgi 试试</span></span><br><span class="line"><span class="comment">#pip install -i https://pypi.tuna.tsinghua.edu.cn/simple uwsgi</span></span><br><span class="line"><span class="comment">#uwsgi -d -M --http :8778 --wsgi-file /usr/bin/placement-api --processes 2 --threads 10</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">curl -v <span class="keyword">http</span>://controller:<span class="number">8778</span></span><br><span class="line"><span class="comment">#httpd 报 403 拒绝访问</span></span><br><span class="line">AH01630: <span class="keyword">client</span> denied <span class="keyword">by</span> <span class="keyword">server</span> configuration: /usr/<span class="keyword">bin</span>/placement-api</span><br><span class="line"> </span><br><span class="line"> vim /etc/httpd/conf.d/<span class="number">00</span>-placement-api.conf</span><br><span class="line"> </span><br><span class="line">&lt;<span class="keyword">Directory</span> /usr/<span class="keyword">bin</span>&gt;</span><br><span class="line">    &lt;IfVersion &gt;= <span class="number">2.4</span>&gt;</span><br><span class="line">        Require <span class="keyword">all</span> granted</span><br><span class="line">    &lt;/IfVersion&gt;</span><br><span class="line">    &lt;IfVersion &lt; <span class="number">2.4</span>&gt;</span><br><span class="line">        <span class="keyword">Order</span> <span class="keyword">allow</span>,deny</span><br><span class="line">        <span class="keyword">Allow</span> <span class="keyword">from</span> <span class="keyword">all</span></span><br><span class="line">    &lt;/IfVersion&gt;</span><br><span class="line">&lt;/<span class="keyword">Directory</span>&gt;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">. <span class="keyword">admin</span>-openrc</span><br><span class="line"> </span><br><span class="line">placement-<span class="keyword">status</span> <span class="keyword">upgrade</span> <span class="keyword">check</span></span><br><span class="line"> </span><br><span class="line">pip <span class="keyword">install</span> osc-placement</span><br><span class="line"> </span><br><span class="line">openstack <span class="comment">--os-placement-api-version 1.2 resource class list --sort-column name</span></span><br><span class="line"> </span><br><span class="line">openstack <span class="comment">--os-placement-api-version 1.6 trait list --sort-column name</span></span><br></pre></td></tr></table></figure>
<h3 id="Nova-控制节点安装"><a href="#Nova-控制节点安装" class="headerlink" title="Nova 控制节点安装"></a>Nova 控制节点安装</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> nova_api;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> nova;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> nova_cell0;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova_api.* <span class="keyword">TO</span> <span class="string">'nova'</span>@<span class="string">'localhost'</span> \</span><br><span class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'NOVA_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova_api.* <span class="keyword">TO</span> <span class="string">'nova'</span>@<span class="string">'%'</span> \</span><br><span class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'NOVA_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova.* <span class="keyword">TO</span> <span class="string">'nova'</span>@<span class="string">'localhost'</span> \</span><br><span class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'NOVA_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova.* <span class="keyword">TO</span> <span class="string">'nova'</span>@<span class="string">'%'</span> \</span><br><span class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'NOVA_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova_cell0.* <span class="keyword">TO</span> <span class="string">'nova'</span>@<span class="string">'localhost'</span> \</span><br><span class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'NOVA_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova_cell0.* <span class="keyword">TO</span> <span class="string">'nova'</span>@<span class="string">'%'</span> \</span><br><span class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'NOVA_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">. admin-openrc</span><br><span class="line">// 创建一个nova 用户</span><br><span class="line">openstack user <span class="keyword">create</span> <span class="comment">--domain default --password-prompt nova</span></span><br><span class="line"><span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">// 创建一个nova 到 <span class="keyword">admin</span> 角色</span><br><span class="line">openstack <span class="keyword">role</span> <span class="keyword">add</span> <span class="comment">--project service --user nova admin</span></span><br><span class="line"> </span><br><span class="line">// <span class="keyword">Create</span> the nova service entity</span><br><span class="line">openstack service <span class="keyword">create</span> <span class="comment">--name nova \</span></span><br><span class="line">  <span class="comment">--description "OpenStack Compute" compute</span></span><br><span class="line"> </span><br><span class="line">// <span class="keyword">Create</span> the <span class="keyword">Compute</span> API service endpoints</span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne compute public http://controller:8774/v2.1</span></span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne compute internal http://controller:8774/v2.1</span></span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne compute admin http://controller:8774/v2.1</span></span><br><span class="line"> </span><br><span class="line">yum <span class="keyword">install</span> openstack-nova-api openstack-nova-conductor \</span><br><span class="line">  openstack-nova-novncproxy openstack-nova-scheduler -y</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">cp /etc/nova/nova.conf /etc/nova/nova.conf.bak</span><br><span class="line">grep -Ev <span class="string">"^$|#"</span> /etc/nova/nova.conf.bak &gt; /etc/nova/nova.conf</span><br><span class="line"> </span><br><span class="line">vim /etc/nova/nova.conf</span><br><span class="line">[<span class="keyword">DEFAULT</span>]</span><br><span class="line">enabled_apis = osapi_compute,metadata</span><br><span class="line">transport_url = rabbit://openstack:RABBIT_PASS@controller:<span class="number">5672</span>/</span><br><span class="line">my_ip = <span class="number">192.168</span><span class="number">.0</span><span class="number">.51</span></span><br><span class="line">use_neutron = <span class="literal">true</span></span><br><span class="line">firewall_driver = nova.virt.firewall.NoopFirewallDriver</span><br><span class="line"> </span><br><span class="line">[api]</span><br><span class="line">auth_strategy = keystone</span><br><span class="line"> </span><br><span class="line">[api_database]</span><br><span class="line"><span class="keyword">connection</span> = mysql+pymysql://nova:NOVA_DBPASS@controller/nova_api</span><br><span class="line"> </span><br><span class="line">[barbican]</span><br><span class="line">[<span class="keyword">cache</span>]</span><br><span class="line">[cinder]</span><br><span class="line">[<span class="keyword">compute</span>]</span><br><span class="line">[conductor]</span><br><span class="line">[console]</span><br><span class="line">[consoleauth]</span><br><span class="line">[cors]</span><br><span class="line">[<span class="keyword">database</span>]</span><br><span class="line"><span class="keyword">connection</span> = mysql+pymysql://nova:NOVA_DBPASS@controller/nova</span><br><span class="line"> </span><br><span class="line">[devices]</span><br><span class="line">[ephemeral_storage_encryption]</span><br><span class="line">[filter_scheduler]</span><br><span class="line">[glance]</span><br><span class="line">api_servers = <span class="keyword">http</span>://controller:<span class="number">9292</span></span><br><span class="line"> </span><br><span class="line">[guestfs]</span><br><span class="line">[healthcheck]</span><br><span class="line">[hyperv]</span><br><span class="line">[ironic]</span><br><span class="line">[key_manager]</span><br><span class="line">[keystone]</span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri = <span class="keyword">http</span>://controller:<span class="number">5000</span>/</span><br><span class="line">auth_url = <span class="keyword">http</span>://controller:<span class="number">5000</span>/</span><br><span class="line">memcached_servers = controller:<span class="number">11211</span></span><br><span class="line">auth_type = <span class="keyword">password</span></span><br><span class="line">project_domain_name = <span class="keyword">Default</span></span><br><span class="line">user_domain_name = <span class="keyword">Default</span></span><br><span class="line">project_name = service</span><br><span class="line">username = nova</span><br><span class="line"><span class="keyword">password</span> = <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">[libvirt]</span><br><span class="line">[metrics]</span><br><span class="line">[mks]</span><br><span class="line">[neutron]</span><br><span class="line">[notifications]</span><br><span class="line">[osapi_v21]</span><br><span class="line">[oslo_concurrency]</span><br><span class="line">lock_path = /<span class="keyword">var</span>/lib/nova/tmp</span><br><span class="line"> </span><br><span class="line">[oslo_messaging_amqp]</span><br><span class="line">[oslo_messaging_kafka]</span><br><span class="line">[oslo_messaging_notifications]</span><br><span class="line">[oslo_messaging_rabbit]</span><br><span class="line">[oslo_middleware]</span><br><span class="line">[oslo_policy]</span><br><span class="line">[pci]</span><br><span class="line">[placement]</span><br><span class="line">region_name = RegionOne</span><br><span class="line">project_domain_name = <span class="keyword">Default</span></span><br><span class="line">project_name = service</span><br><span class="line">auth_type = <span class="keyword">password</span></span><br><span class="line">user_domain_name = <span class="keyword">Default</span></span><br><span class="line">auth_url = <span class="keyword">http</span>://controller:<span class="number">5000</span>/v3</span><br><span class="line">username = placement</span><br><span class="line"><span class="keyword">password</span> = <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">[powervm]</span><br><span class="line">[privsep]</span><br><span class="line">[profiler]</span><br><span class="line">[<span class="keyword">quota</span>]</span><br><span class="line">[rdp]</span><br><span class="line">[remote_debug]</span><br><span class="line">[scheduler]</span><br><span class="line">[serial_console]</span><br><span class="line">[service_user]</span><br><span class="line">[spice]</span><br><span class="line">[upgrade_levels]</span><br><span class="line">[vault]</span><br><span class="line">[vendordata_dynamic_auth]</span><br><span class="line">[vmware]</span><br><span class="line">[vnc]</span><br><span class="line">enabled = <span class="literal">true</span></span><br><span class="line">server_listen = $my_ip</span><br><span class="line">server_proxyclient_address = $my_ip</span><br><span class="line"> </span><br><span class="line">[workarounds]</span><br><span class="line">[wsgi]</span><br><span class="line">[xenserver]</span><br><span class="line">[xvp]</span><br><span class="line">[zvm]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">su -s /<span class="keyword">bin</span>/sh -c <span class="string">"nova-manage api_db sync"</span> nova</span><br><span class="line"> </span><br><span class="line">mysql nova_api -e <span class="string">"show tables;"</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">Register</span> the cell0 <span class="keyword">database</span></span><br><span class="line">su -s /<span class="keyword">bin</span>/sh -c <span class="string">"nova-manage cell_v2 map_cell0"</span> nova</span><br><span class="line"> </span><br><span class="line"><span class="keyword">Create</span> the cell1 cell</span><br><span class="line">su -s /<span class="keyword">bin</span>/sh -c <span class="string">"nova-manage cell_v2 create_cell --name=cell1 --verbose"</span> nova</span><br><span class="line"> </span><br><span class="line">Populate the nova <span class="keyword">database</span></span><br><span class="line">su -s /<span class="keyword">bin</span>/sh -c <span class="string">"nova-manage db sync"</span> nova<span class="string">'</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">Verify nova cell0 and cell1 are registered correctly</span></span><br><span class="line"><span class="string">su -s /bin/sh -c "nova-manage cell_v2 list_cells" nova</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">#validate</span></span><br><span class="line"><span class="string">mysql nova -e "show tables;"</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">systemctl enable \</span></span><br><span class="line"><span class="string">    openstack-nova-api.service \</span></span><br><span class="line"><span class="string">    openstack-nova-scheduler.service \</span></span><br><span class="line"><span class="string">    openstack-nova-conductor.service \</span></span><br><span class="line"><span class="string">    openstack-nova-novncproxy.service</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">systemctl start \</span></span><br><span class="line"><span class="string">    openstack-nova-api.service \</span></span><br><span class="line"><span class="string">    openstack-nova-scheduler.service \</span></span><br><span class="line"><span class="string">    openstack-nova-conductor.service \</span></span><br><span class="line"><span class="string">    openstack-nova-novncproxy.service</span></span><br></pre></td></tr></table></figure>
<h3 id="Neutron-控制节点安装"><a href="#Neutron-控制节点安装" class="headerlink" title="Neutron 控制节点安装"></a>Neutron 控制节点安装</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line"> </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> neutron;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> neutron.* <span class="keyword">TO</span> <span class="string">'neutron'</span>@<span class="string">'localhost'</span> \</span><br><span class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'NEUTRON_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> neutron.* <span class="keyword">TO</span> <span class="string">'neutron'</span>@<span class="string">'%'</span> \</span><br><span class="line">  <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'NEUTRON_DBPASS'</span>;</span><br><span class="line"> </span><br><span class="line">. admin-openrc</span><br><span class="line">// <span class="keyword">Create</span> the neutron <span class="keyword">user</span></span><br><span class="line">openstack <span class="keyword">user</span> <span class="keyword">create</span> <span class="comment">--domain default --password-prompt neutron</span></span><br><span class="line"><span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">// <span class="keyword">Add</span> the <span class="keyword">admin</span> <span class="keyword">role</span> <span class="keyword">to</span> the neutron <span class="keyword">user</span></span><br><span class="line">openstack <span class="keyword">role</span> <span class="keyword">add</span> <span class="comment">--project service --user neutron admin</span></span><br><span class="line"> </span><br><span class="line">// <span class="keyword">Create</span> the neutron service entity</span><br><span class="line">openstack service <span class="keyword">create</span> <span class="comment">--name neutron \</span></span><br><span class="line">  <span class="comment">--description "OpenStack Networking" network</span></span><br><span class="line"> </span><br><span class="line">// <span class="keyword">Create</span> the Networking service API endpoints</span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne network public http://controller:9696</span></span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne network internal http://controller:9696</span></span><br><span class="line">openstack endpoint <span class="keyword">create</span> <span class="comment">--region RegionOne network admin http://controller:9696</span></span><br><span class="line"> </span><br><span class="line">// linux bridge 支持</span><br><span class="line">lsmod |grep br_netfilter</span><br><span class="line">modprobe br_netfilter</span><br><span class="line"> </span><br><span class="line">sysctl -a |grep <span class="string">"net.bridge.bridge"</span></span><br><span class="line">echo <span class="string">"modprobe br_netfilter"</span> &gt;/etc/sysconfig/modules/br_netfilter.modules</span><br><span class="line"> </span><br><span class="line">sysctl -a |grep net.bridge.bridge-nf-<span class="keyword">call</span>-iptables</span><br><span class="line">sysctl -a |grep net.bridge.bridge-nf-<span class="keyword">call</span>-ip6tables</span><br><span class="line"> </span><br><span class="line">// 选择其中一个网络类型安装</span><br><span class="line">//  非路由模式</span><br><span class="line">Networking <span class="keyword">Option</span> <span class="number">1</span>: Provider networks</span><br><span class="line">// 路由模式</span><br><span class="line">Networking <span class="keyword">Option</span> <span class="number">2</span>: <span class="keyword">Self</span>-service networks</span><br><span class="line"> </span><br><span class="line">// 配置元数据代理</span><br><span class="line">vim /etc/neutron/metadata_agent.ini</span><br><span class="line">[<span class="keyword">DEFAULT</span>]</span><br><span class="line">nova_metadata_host = controller</span><br><span class="line">metadata_proxy_shared_secret = METADATA_SECRET</span><br><span class="line"> </span><br><span class="line">vim /etc/nova/nova.conf</span><br><span class="line">[neutron]</span><br><span class="line">auth_url = <span class="keyword">http</span>://controller:<span class="number">5000</span></span><br><span class="line">auth_type = <span class="keyword">password</span></span><br><span class="line">project_domain_name = <span class="keyword">default</span></span><br><span class="line">user_domain_name = <span class="keyword">default</span></span><br><span class="line">region_name = RegionOne</span><br><span class="line">project_name = service</span><br><span class="line">username = neutron</span><br><span class="line"><span class="keyword">password</span> = NEUTRON_PASS</span><br><span class="line">service_metadata_proxy = <span class="literal">true</span></span><br><span class="line">metadata_proxy_shared_secret = METADATA_SECRET</span><br><span class="line"> </span><br><span class="line"><span class="comment"># ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf \</span></span><br><span class="line">  <span class="comment">--config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># systemctl restart openstack-nova-api.service</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># systemctl enable neutron-server.service \</span></span><br><span class="line">  neutron-linuxbridge-agent.service \</span><br><span class="line">    neutron-dhcp-agent.service \</span><br><span class="line">  neutron-metadata-agent.service</span><br><span class="line"> </span><br><span class="line"><span class="comment"># systemctl start neutron-server.service \</span></span><br><span class="line">  neutron-linuxbridge-agent.service \</span><br><span class="line">    neutron-dhcp-agent.service \</span><br><span class="line">  neutron-metadata-agent.service</span><br><span class="line"> </span><br><span class="line">// 选择路由模式后执行</span><br><span class="line"><span class="comment"># systemctl enable neutron-l3-agent.service</span></span><br><span class="line"><span class="comment"># systemctl start neutron-l3-agent.service</span></span><br><span class="line"> </span><br><span class="line">neutron <span class="keyword">agent</span>-<span class="keyword">list</span></span><br></pre></td></tr></table></figure>
<h3 id="网络类型分为：桥接型，路由型两种，安装方式也不同。"><a href="#网络类型分为：桥接型，路由型两种，安装方式也不同。" class="headerlink" title="网络类型分为：桥接型，路由型两种，安装方式也不同。"></a>网络类型分为：桥接型，路由型两种，安装方式也不同。</h3><h4 id="桥接型"><a href="#桥接型" class="headerlink" title="桥接型"></a>桥接型</h4><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">yum install openstack-neutron openstack-neutron-ml2 \</span><br><span class="line">  openstack-neutron-linuxbridge ebtables -y</span><br><span class="line"> </span><br><span class="line">cp  <span class="regexp">/etc/</span>neutron<span class="regexp">/neutron.conf  /</span>etc<span class="regexp">/neutron/</span>neutron.conf.bak</span><br><span class="line">grep -Ev <span class="string">"#|^$"</span> <span class="regexp">/etc/</span>neutron<span class="regexp">/neutron.conf.bak &gt;/</span>etc<span class="regexp">/neutron/</span>neutron.conf</span><br><span class="line"> </span><br><span class="line">vim <span class="regexp">/etc/</span>neutron/neutron.conf</span><br><span class="line">[DEFAULT]</span><br><span class="line">core_plugin = ml2</span><br><span class="line">service_plugins =</span><br><span class="line">auth_strategy = keystone</span><br><span class="line">notify_nova_on_port_status_changes = <span class="literal">true</span></span><br><span class="line">notify_nova_on_port_data_changes = <span class="literal">true</span></span><br><span class="line"> </span><br><span class="line">[database]</span><br><span class="line">connection = mysql+<span class="string">pymysql:</span><span class="comment">//neutron:NEUTRON_DBPASS@controller/neutron</span></span><br><span class="line"> </span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri = <span class="string">http:</span><span class="comment">//controller:5000</span></span><br><span class="line">auth_url = <span class="string">http:</span><span class="comment">//controller:5000</span></span><br><span class="line">memcached_servers = <span class="string">controller:</span><span class="number">11211</span></span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = <span class="keyword">default</span></span><br><span class="line">user_domain_name = <span class="keyword">default</span></span><br><span class="line">project_name = service</span><br><span class="line">username = neutron</span><br><span class="line">password = <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">[nova]</span><br><span class="line">auth_url = <span class="string">http:</span><span class="comment">//controller:5000</span></span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = <span class="keyword">default</span></span><br><span class="line">user_domain_name = <span class="keyword">default</span></span><br><span class="line">region_name = RegionOne</span><br><span class="line">project_name = service</span><br><span class="line">username = nova</span><br><span class="line">password = <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">cp <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/</span>ml2<span class="regexp">/ml2_conf.ini /</span>etc<span class="regexp">/neutron/</span>plugins<span class="regexp">/ml2/</span>ml2_conf.ini.bak</span><br><span class="line">grep -Ev <span class="string">"#|^$"</span> <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/</span>ml2<span class="regexp">/ml2_conf.ini.bak &gt;/</span>etc<span class="regexp">/neutron/</span>plugins<span class="regexp">/ml2/</span>ml2_conf.ini</span><br><span class="line"> </span><br><span class="line">vim <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/</span>ml2/ml2_conf.ini</span><br><span class="line">[ml2]</span><br><span class="line">type_drivers = flat,vlan</span><br><span class="line">tenant_network_types =</span><br><span class="line">mechanism_drivers = linuxbridge</span><br><span class="line">extension_drivers = port_security</span><br><span class="line">[ml2_type_flat]</span><br><span class="line">flat_networks = provider</span><br><span class="line">[securitygroup]</span><br><span class="line">enable_ipset = <span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">cp <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/</span>ml2<span class="regexp">/linuxbridge_agent.ini /</span>etc<span class="regexp">/neutron/</span>plugins<span class="regexp">/ml2/</span>linuxbridge_agent.ini.bak</span><br><span class="line">grep -Ev <span class="string">"#|^$"</span> <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/</span>ml2<span class="regexp">/linuxbridge_agent.ini.bak &gt;/</span>etc<span class="regexp">/neutron/</span>plugins<span class="regexp">/ml2/</span>linuxbridge_agent.ini</span><br><span class="line"> </span><br><span class="line">vim <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/</span>ml2/linuxbridge_agent.ini</span><br><span class="line">[linux_bridge]</span><br><span class="line">physical_interface_mappings = <span class="string">provider:</span>eth0</span><br><span class="line">[vxlan]</span><br><span class="line">enable_vxlan = <span class="literal">false</span></span><br><span class="line">[securitygroup]</span><br><span class="line">enable_security_group = <span class="literal">true</span></span><br><span class="line">firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver</span><br><span class="line"> </span><br><span class="line">cp <span class="regexp">/etc/</span>neutron<span class="regexp">/dhcp_agent.ini /</span>etc<span class="regexp">/neutron/</span>dhcp_agent.ini.bak</span><br><span class="line">grep -Ev <span class="string">"#|^$"</span> <span class="regexp">/etc/</span>neutron<span class="regexp">/dhcp_agent.ini.bak &gt;/</span>etc<span class="regexp">/neutron/</span>dhcp_agent.ini</span><br><span class="line">vim <span class="regexp">/etc/</span>neutron/dhcp_agent.ini</span><br><span class="line"> </span><br><span class="line">[DEFAULT]</span><br><span class="line">interface_driver = linuxbridge</span><br><span class="line">dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq</span><br><span class="line">enable_isolated_metadata = <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h4 id="路由型"><a href="#路由型" class="headerlink" title="路由型"></a>路由型</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="Worker-节点安装"><a href="#Worker-节点安装" class="headerlink" title="Worker 节点安装"></a>Worker 节点安装</h2><h3 id="Nova-组件"><a href="#Nova-组件" class="headerlink" title="Nova 组件"></a>Nova 组件</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line">yum -y install centos-release-openstack-train</span><br><span class="line"> </span><br><span class="line">yum install openstack-nova-compute -y</span><br><span class="line"> </span><br><span class="line">cp /etc/nova/nova.conf /etc/nova/nova.conf.bak</span><br><span class="line">grep -Ev <span class="string">"#|^$"</span> /etc/nova/nova.conf.bak &gt;/etc/nova/nova.conf</span><br><span class="line"> </span><br><span class="line">vim /etc/nova/nova.conf</span><br><span class="line">[<span class="meta">DEFAULT</span>]</span><br><span class="line">enabled_apis = osapi_compute,metadata</span><br><span class="line">transport_url = rabbit:<span class="comment">//openstack:RABBIT_PASS@controller</span></span><br><span class="line">my_ip = <span class="number">192.168</span><span class="number">.0</span><span class="number">.104</span></span><br><span class="line">use_neutron = <span class="literal">true</span></span><br><span class="line">firewall_driver = nova.virt.firewall.NoopFirewallDriver</span><br><span class="line"> </span><br><span class="line">[<span class="meta">api</span>]</span><br><span class="line">auth_strategy = keystone</span><br><span class="line"> </span><br><span class="line">[<span class="meta">api_database</span>]</span><br><span class="line">[<span class="meta">barbican</span>]</span><br><span class="line">[<span class="meta">cache</span>]</span><br><span class="line">[<span class="meta">cinder</span>]</span><br><span class="line">[<span class="meta">compute</span>]</span><br><span class="line">[<span class="meta">conductor</span>]</span><br><span class="line">[<span class="meta">console</span>]</span><br><span class="line">[<span class="meta">consoleauth</span>]</span><br><span class="line">[<span class="meta">cors</span>]</span><br><span class="line">[<span class="meta">database</span>]</span><br><span class="line">[<span class="meta">devices</span>]</span><br><span class="line">[<span class="meta">ephemeral_storage_encryption</span>]</span><br><span class="line">[<span class="meta">filter_scheduler</span>]</span><br><span class="line">[<span class="meta">glance</span>]</span><br><span class="line">api_servers = http:<span class="comment">//controller:9292</span></span><br><span class="line"> </span><br><span class="line">[<span class="meta">guestfs</span>]</span><br><span class="line">[<span class="meta">healthcheck</span>]</span><br><span class="line">[<span class="meta">hyperv</span>]</span><br><span class="line">[<span class="meta">ironic</span>]</span><br><span class="line">[<span class="meta">key_manager</span>]</span><br><span class="line">[<span class="meta">keystone</span>]</span><br><span class="line">[<span class="meta">keystone_authtoken</span>]</span><br><span class="line">www_authenticate_uri = http:<span class="comment">//controller:5000/</span></span><br><span class="line">auth_url = http:<span class="comment">//controller:5000/</span></span><br><span class="line">memcached_servers = controller:<span class="number">11211</span></span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = Default</span><br><span class="line">user_domain_name = Default</span><br><span class="line">project_name = service</span><br><span class="line">username = nova</span><br><span class="line">password = <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">[<span class="meta">libvirt</span>]</span><br><span class="line">virt_type = qemu</span><br><span class="line">[<span class="meta">metrics</span>]</span><br><span class="line">[<span class="meta">mks</span>]</span><br><span class="line">[<span class="meta">neutron</span>]</span><br><span class="line">[<span class="meta">notifications</span>]</span><br><span class="line">[<span class="meta">osapi_v21</span>]</span><br><span class="line">[<span class="meta">oslo_concurrency</span>]</span><br><span class="line">lock_path = /<span class="keyword">var</span>/lib/nova/tmp</span><br><span class="line"> </span><br><span class="line">[<span class="meta">oslo_messaging_amqp</span>]</span><br><span class="line">[<span class="meta">oslo_messaging_kafka</span>]</span><br><span class="line">[<span class="meta">oslo_messaging_notifications</span>]</span><br><span class="line">[<span class="meta">oslo_messaging_rabbit</span>]</span><br><span class="line">[<span class="meta">oslo_middleware</span>]</span><br><span class="line">[<span class="meta">oslo_policy</span>]</span><br><span class="line">[<span class="meta">pci</span>]</span><br><span class="line">[<span class="meta">placement</span>]</span><br><span class="line">region_name = RegionOne</span><br><span class="line">project_domain_name = Default</span><br><span class="line">project_name = service</span><br><span class="line">auth_type = password</span><br><span class="line">user_domain_name = Default</span><br><span class="line">auth_url = http:<span class="comment">//controller:5000/v3</span></span><br><span class="line">username = placement</span><br><span class="line">password = <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">[<span class="meta">powervm</span>]</span><br><span class="line">[<span class="meta">privsep</span>]</span><br><span class="line">[<span class="meta">profiler</span>]</span><br><span class="line">[<span class="meta">quota</span>]</span><br><span class="line">[<span class="meta">rdp</span>]</span><br><span class="line">[<span class="meta">remote_debug</span>]</span><br><span class="line">[<span class="meta">scheduler</span>]</span><br><span class="line">[<span class="meta">serial_console</span>]</span><br><span class="line">[<span class="meta">service_user</span>]</span><br><span class="line">[<span class="meta">spice</span>]</span><br><span class="line">[<span class="meta">upgrade_levels</span>]</span><br><span class="line">[<span class="meta">vault</span>]</span><br><span class="line">[<span class="meta">vendordata_dynamic_auth</span>]</span><br><span class="line">[<span class="meta">vmware</span>]</span><br><span class="line">[<span class="meta">vnc</span>]</span><br><span class="line">enabled = <span class="literal">true</span></span><br><span class="line">server_listen = <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">server_proxyclient_address = $my_ip</span><br><span class="line">novncproxy_base_url = http:<span class="comment">//controller:6080/vnc_auto.html</span></span><br><span class="line"> </span><br><span class="line">[<span class="meta">workarounds</span>]</span><br><span class="line">[<span class="meta">wsgi</span>]</span><br><span class="line">[<span class="meta">xenserver</span>]</span><br><span class="line">[<span class="meta">xvp</span>]</span><br><span class="line">[<span class="meta">zvm</span>]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">egrep -c <span class="string">'(vmx|svm)'</span> /proc/cpuinfo</span><br><span class="line">systemctl enable libvirtd.service openstack-nova-compute.service</span><br><span class="line">systemctl start libvirtd.service openstack-nova-compute.service</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">Failed to connect socket to <span class="string">'/var/run/libvirt/libvirt-sock'</span>: Permission denied: libvirtError: Failed to connect socket to <span class="string">'/var/run/libvirt/libvirt-sock'</span>: Permission denied</span><br><span class="line"> </span><br><span class="line">chmod <span class="number">777</span> /<span class="keyword">var</span>/run/libvirt/libvirt-sock</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">Run the following commands <span class="keyword">on</span> the controller node.</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 查看主机</span></span><br><span class="line">. admin-openrc</span><br><span class="line">openstack compute service list --service nova-compute</span><br><span class="line"> </span><br><span class="line">Discover compute hosts</span><br><span class="line">su -s /bin/sh -c <span class="string">"nova-manage cell_v2 discover_hosts --verbose"</span> nova</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 自动发现 controller 配置</span></span><br><span class="line">vim /etc/nova/nova.conf</span><br><span class="line">[<span class="meta">scheduler</span>]</span><br><span class="line">discover_hosts_in_cells_interval = <span class="number">120</span></span><br><span class="line"> </span><br><span class="line">openstack user list</span><br><span class="line">openstack service list</span><br><span class="line">openstack role list</span><br><span class="line"> </span><br><span class="line">openstack service list</span><br><span class="line">openstack compute service list</span><br><span class="line">openstack catalog list</span><br><span class="line">openstack image list</span><br><span class="line">nova-status upgrade check</span><br></pre></td></tr></table></figure>
<h3 id="Neutron-组件"><a href="#Neutron-组件" class="headerlink" title="Neutron 组件"></a>Neutron 组件</h3><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">yum install openstack-neutron-linuxbridge ebtables ipset -y</span><br><span class="line"> </span><br><span class="line">cp <span class="regexp">/etc/</span>neutron<span class="regexp">/neutron.conf /</span>etc<span class="regexp">/neutron/</span>neutron.conf.bak</span><br><span class="line">grep -Ev <span class="string">"#|^$"</span> <span class="regexp">/etc/</span>neutron<span class="regexp">/neutron.conf.bak &gt;/</span>etc<span class="regexp">/neutron/</span>neutron.conf</span><br><span class="line"> </span><br><span class="line">vim <span class="regexp">/etc/</span>neutron/neutron.conf</span><br><span class="line">[DEFAULT]</span><br><span class="line">transport_url = <span class="string">rabbit:</span><span class="comment">//openstack:RABBIT_PASS@controller</span></span><br><span class="line">auth_strategy = keystone</span><br><span class="line"> </span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri = <span class="string">http:</span><span class="comment">//controller:5000</span></span><br><span class="line">auth_url = <span class="string">http:</span><span class="comment">//controller:5000</span></span><br><span class="line">memcached_servers = <span class="string">controller:</span><span class="number">11211</span></span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = <span class="keyword">default</span></span><br><span class="line">user_domain_name = <span class="keyword">default</span></span><br><span class="line">project_name = service</span><br><span class="line">username = neutron</span><br><span class="line">password = <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">[oslo_concurrency]</span><br><span class="line">lock_path = <span class="regexp">/var/</span>lib<span class="regexp">/neutron/</span>tmp</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">cp <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/</span>ml2<span class="regexp">/linuxbridge_agent.ini /</span>etc<span class="regexp">/neutron/</span>plugins<span class="regexp">/ml2/</span>linuxbridge_agent.ini.bak</span><br><span class="line">grep -Ev <span class="string">"#|^$"</span> <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/</span>ml2<span class="regexp">/linuxbridge_agent.ini.bak &gt;/</span>etc<span class="regexp">/neutron/</span>plugins<span class="regexp">/ml2/</span>linuxbridge_agent.ini</span><br><span class="line"> </span><br><span class="line">vim <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/</span>ml2/linuxbridge_agent.ini</span><br><span class="line">[linux_bridge]</span><br><span class="line">physical_interface_mappings = <span class="string">provider:</span>em1</span><br><span class="line"> </span><br><span class="line">[vxlan]</span><br><span class="line">enable_vxlan = <span class="literal">false</span></span><br><span class="line"> </span><br><span class="line">[securitygroup]</span><br><span class="line">enable_security_group = <span class="literal">true</span></span><br><span class="line">firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">vim <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">[neutron]</span><br><span class="line">auth_url = <span class="string">http:</span><span class="comment">//controller:5000</span></span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = <span class="keyword">default</span></span><br><span class="line">user_domain_name = <span class="keyword">default</span></span><br><span class="line">region_name = RegionOne</span><br><span class="line">project_name = service</span><br><span class="line">username = neutron</span><br><span class="line">password = <span class="number">123456</span></span><br><span class="line"> </span><br><span class="line">systemctl restart openstack-nova-compute.service</span><br><span class="line"> </span><br><span class="line">systemctl enable neutron-linuxbridge-agent.service</span><br><span class="line">systemctl start neutron-linuxbridge-agent.service</span><br></pre></td></tr></table></figure>
<p>至此，已经可以把 Openstack 跑起来了。接下来要安装一些额外的组件，提供更多的功能。</p>
]]></content>
      <categories>
        <category>云计算</category>
      </categories>
      <tags>
        <tag>openstack</tag>
        <tag>nova</tag>
        <tag>netron</tag>
        <tag>编排工具</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack</title>
    <url>/blog.githup.io/2020/05/OpenStack/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>KVM</title>
    <url>/blog.githup.io/2020/05/KVM/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="KVM-安装配置"><a href="#KVM-安装配置" class="headerlink" title="KVM 安装配置"></a>KVM 安装配置</h2><h3 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h3><ul>
<li>操作系统：centos7.x</li>
<li>内核版本：3.10.0-327.el7.x86_64</li>
<li>IP地址：192.168.1.1</li>
</ul>
<h3 id="检查CPU"><a href="#检查CPU" class="headerlink" title="检查CPU"></a>检查CPU</h3><ul>
<li>和Xen不同，KVM需要有CPU的支持（IntelVT)或(AMDSVM)</li>
<li>在安装KVM之前检查一下CPU是否提供了虚拟技术的支持<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">egrep<span class="string">'vmx|svm'</span> / proc / cpuinfo</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="安装KVM"><a href="#安装KVM" class="headerlink" title="安装KVM"></a>安装KVM</h3><h4 id="安装虚拟化的组件"><a href="#安装虚拟化的组件" class="headerlink" title="安装虚拟化的组件"></a>安装虚拟化的组件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install kvm pytho-virtinst libvirt bridge-utils virt-manager \</span><br><span class="line">qemu-kvm-tools virt-viewer virt-v2v libguestfs-tools-c \</span><br><span class="line">libguestfs-tools virt-install.noarch \</span><br></pre></td></tr></table></figure>
<h4 id="远程管理配置"><a href="#远程管理配置" class="headerlink" title="远程管理配置"></a>远程管理配置</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim / etc / sysconfig / libvirtd</span><br><span class="line">LIBVIRTD_CONFIG=/etc/libvirt/libvirtd.conf</span><br><span class="line">LIBVIRTD_ARGS=<span class="string">"--listen"</span></span><br><span class="line"></span><br><span class="line">sed  -i <span class="string">'/LIBVIRTD_CONFIG/s#=.*#=/etc/libvirt/libvirtd.conf#g'</span> /etc/sysconfig/libvirtd</span><br><span class="line">sed  -i <span class="string">'/LIBVIRTD_ARGS/s#=.*#=="--listen"#g'</span> /etc/sysconfig/libvirtd</span><br><span class="line"></span><br><span class="line"><span class="comment"># libvirtd tcp连接的设置</span></span><br><span class="line">vim /etc/libvirt/libvirtd.conf</span><br><span class="line"><span class="comment"># 这里主要是tcp连接的设置末尾添加如下：</span></span><br><span class="line">listen_tls = 0</span><br><span class="line">listen_tcp = 1</span><br><span class="line">tcp_port = <span class="string">"16509"</span>  <span class="comment"># tcp端口</span></span><br><span class="line">listen_addr = <span class="string">"192.168.0.103"</span>  <span class="comment"># 监听IP</span></span><br><span class="line">unix_sock_ro_perms = <span class="string">"0777"</span></span><br><span class="line">unix_sock_rw_perms = <span class="string">"0770"</span></span><br><span class="line">auth_tcp = <span class="string">"none"</span></span><br><span class="line">max_clients = 1024  <span class="comment"># 最大连接书</span></span><br><span class="line">min_workers = 100</span><br><span class="line">max_workers = 200</span><br><span class="line">max_requests = 20</span><br><span class="line">max_client_requests = 50</span><br></pre></td></tr></table></figure>
<h4 id="virsh控制台"><a href="#virsh控制台" class="headerlink" title="virsh控制台"></a>virsh控制台</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">virsh -c qemu+tcp://192.168.1.1/system</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1006错误</span></span><br><span class="line">yum -y install novnc</span><br></pre></td></tr></table></figure>
<h4 id="对vnc的设置"><a href="#对vnc的设置" class="headerlink" title="对vnc的设置"></a>对vnc的设置</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 这里主要是对vnc的设置，一会儿通过vnc - viewer连接来进行安装，末尾添加</span></span><br><span class="line">vim /etc/libvirt/qemu.conf</span><br><span class="line">vnc_listen = <span class="string">"0.0.0.0"</span></span><br><span class="line">vnc_password = <span class="string">"m23456"</span>  <span class="comment"># vnc连接密码</span></span><br><span class="line">remote_display_port_min = 5900  <span class="comment"># vnc最小端口</span></span><br><span class="line">remote_display_port_max = 65500  <span class="comment"># vnc最大端口</span></span><br></pre></td></tr></table></figure>
<h4 id="确认一下是否kvm安装成功"><a href="#确认一下是否kvm安装成功" class="headerlink" title="确认一下是否kvm安装成功"></a>确认一下是否kvm安装成功</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/init.d/libvirtd restart</span><br><span class="line">or</span><br><span class="line">systemctl restart libvirtd.service</span><br></pre></td></tr></table></figure>
<h4 id="查看是否启动"><a href="#查看是否启动" class="headerlink" title="查看是否启动"></a>查看是否启动</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ps - ef | grep libvirtd</span><br><span class="line">systemctl status libvirtd.service</span><br></pre></td></tr></table></figure>
<h4 id="查看kvm模块是否正常加载"><a href="#查看kvm模块是否正常加载" class="headerlink" title="查看kvm模块是否正常加载"></a>查看kvm模块是否正常加载</h4><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">lsmod <span class="string">|grep kvm</span></span><br></pre></td></tr></table></figure>
<h5 id="配置网桥连接"><a href="#配置网桥连接" class="headerlink" title="配置网桥连接"></a>配置网桥连接</h5><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置网桥br0</span></span><br><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-br0</span><br><span class="line">DEVICE = br0</span><br><span class="line">TYPE = Bridge</span><br><span class="line">ONBOOT = <span class="literal">yes</span></span><br><span class="line">NM_CONTROLLED = <span class="literal">yes</span></span><br><span class="line">BOOTPROTO = static</span><br><span class="line">IPADDR = 192.168.1.1</span><br><span class="line">NETMASK = 255.255.255.0</span><br><span class="line">GATEWAY = 192.168.1.254</span><br><span class="line">DNS1 = 202.106.0.20</span><br><span class="line"></span><br><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-em1</span><br><span class="line">DEVICE = em1</span><br><span class="line">TYPE = Ethernet</span><br><span class="line">ONBOOT = <span class="literal">yes</span></span><br><span class="line">BRIDGE = br0</span><br><span class="line">NM_CONTROLLED = <span class="literal">yes</span></span><br></pre></td></tr></table></figure>
<h5 id="重启网络"><a href="#重启网络" class="headerlink" title="重启网络"></a>重启网络</h5><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">/etc/init.d<span class="built_in">/network </span>restart</span><br></pre></td></tr></table></figure>
<h5 id="查看网络连接"><a href="#查看网络连接" class="headerlink" title="查看网络连接"></a>查看网络连接</h5><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">brctl show</span><br><span class="line"><span class="comment"># 如果配置成功，会有以下输出：</span></span><br><span class="line">bridge name    <span class="built_in"> bridge </span>id               STP enabled     interfaces</span><br><span class="line">br0             8000.1866daecc2c4       <span class="literal">no</span>              em1</span><br><span class="line">                                                        vnet0</span><br><span class="line">                                                        vnet1</span><br><span class="line">                                                        vnet10</span><br><span class="line">                                                        vnet2</span><br><span class="line">                                                        vnet3</span><br><span class="line">                                                        vnet4</span><br><span class="line">                                                        vnet5</span><br><span class="line">virbr0          8000.5254003912f1       <span class="literal">yes</span>             virbr0-nic</span><br></pre></td></tr></table></figure>
<h5 id="检查ip转发是否开启"><a href="#检查ip转发是否开启" class="headerlink" title="检查ip转发是否开启"></a>检查ip转发是否开启</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat / etc / sysctl.conf | grep</span><br><span class="line">ip_forward</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">如果没有开启：</span><br><span class="line">vim / etc / sysctl.conf</span><br><span class="line">修改net.ipv4.ip_forward = 1</span><br><span class="line">/ sbin / sysctl - p</span><br></pre></td></tr></table></figure>
<h3 id="安装虚拟机"><a href="#安装虚拟机" class="headerlink" title="安装虚拟机"></a>安装虚拟机</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir /data/images - p</span><br><span class="line">mkdir /data/software/ -p</span><br><span class="line"></span><br><span class="line">virt-install --name=<span class="built_in">test</span> --ram 4096 --vcpus = 2 \</span><br><span class="line">--disk path = / data / images / test.img, size = 10, format = raw, bus = virtio \</span><br><span class="line">--cdrom / home / software / CentOS - 7 - x86_64 - DVD - 1810.iso - -network bridge = br0, model = virtio \</span><br><span class="line">--vnc --accelerate --force --autostart</span><br><span class="line"></span><br><span class="line">yum - y install acpid</span><br><span class="line"></span><br><span class="line">virsh dumpxml mechine1</span><br><span class="line">virsh create mechine1.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里解释一下主要的几个参数含义：</span></span><br><span class="line">--name      给虚拟机起个名字</span><br><span class="line">--ram       分配给虚拟机的内存，单位MB</span><br><span class="line">--vcpus     分配给虚拟机的cpu个数</span><br><span class="line">--cdrom     指定安装文件的全路径</span><br><span class="line">--disk      指定虚拟机img文件路径，如果虚拟机使用lvm分区，这里就指向到lvm的分区就行</span><br><span class="line">size        虚拟机文件大小，单位GB</span><br><span class="line">bus         虚拟机磁盘使用的总线类型，为了使虚拟机达到好的性能，这里使用virtio</span><br><span class="line">cache       虚拟机磁盘的cache类型</span><br><span class="line">--network</span><br><span class="line">bridge      指定桥接网卡</span><br><span class="line">model       网卡模式，这里也是使用性能更好的virtio</span><br><span class="line">--graphics  图形参数</span><br></pre></td></tr></table></figure>
<h3 id="vnc-连接虚拟机"><a href="#vnc-连接虚拟机" class="headerlink" title="vnc 连接虚拟机"></a>vnc 连接虚拟机</h3><p>通过在windows下使用vnc - viewer来连接172.16.57.24: 5902，并输入设置的密码，即可进行安装。</p>
<h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 克隆虚拟机</span></span><br><span class="line">一般制作一个常用的虚拟机模板，下次安装可以直接来克隆这个模板。</span><br><span class="line">virt-clone --connect</span><br><span class="line"><span class="symbol">qemu:</span>/<span class="regexp">//system</span> --original=tomcat_01 --name=tomcat_02 --file=<span class="regexp">//var</span><span class="regexp">/lib/libvirt</span><span class="regexp">/images/tomcat</span>_02.img</span><br><span class="line">--original  克隆的虚拟机对象</span><br><span class="line">--name      克隆的新虚拟机名称</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加磁盘</span></span><br><span class="line"><span class="comment"># 一般虚拟机的磁盘结构为系统盘加数据盘，当系统发生故障时，可以重新建一个系统盘，而数据盘不会丢失。 添加磁盘操作:</span></span><br><span class="line">cd /var/<span class="class"><span class="keyword">lib</span>/<span class="title">libvirt</span>/<span class="title">images</span>/</span></span><br><span class="line"><span class="comment"># 创建一块100G的磁盘</span></span><br><span class="line">qemu-img create -f raw test_add.img <span class="number">100</span>G</span><br><span class="line"><span class="comment"># 添加到虚拟机</span></span><br><span class="line">virsh attach -disk tomcat_01 /var/<span class="class"><span class="keyword">lib</span>/<span class="title">libvirt</span>/<span class="title">images</span>/<span class="title">test_add</span>.<span class="title">img</span> <span class="title">vdb</span> --<span class="title">cache</span> <span class="title">none</span></span></span><br><span class="line"><span class="comment"># 动态添加磁盘</span></span><br><span class="line"><span class="comment"># 备份xml文件</span></span><br><span class="line">virsh dumpxml tomcat_01&gt;tomcat_01.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将最新的虚拟机配置重定向到其配置文件中</span></span><br><span class="line">virsh define tomcat_01.xml</span><br><span class="line"><span class="comment"># 这样，新增的磁盘就不会丢了。 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># virsh命令的一些操作</span></span><br><span class="line">Autostart   自动开始一个域</span><br><span class="line">Create      从一个 XML 文件创建一个域</span><br><span class="line">Define      从一个 XML 文件定义（但不开始）一个域</span><br><span class="line">edit        编辑某个域的 XML 配置</span><br><span class="line">shutdown    关闭一个域 </span><br><span class="line">start       开始一个（以前定义的）非活跃的域</span><br><span class="line">reboot      重新启动一个域</span><br><span class="line">suspend     挂起一个域</span><br><span class="line">resume      重新恢复一个域</span><br><span class="line">vncdisplay  vnc 显示</span><br></pre></td></tr></table></figure>
<h3 id="查看镜像信息"><a href="#查看镜像信息" class="headerlink" title="查看镜像信息"></a>查看镜像信息</h3><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">qemu</span>-img <span class="meta">info</span> /<span class="meta">opt</span>/CentOS6.<span class="number">5</span>-x86_64.raw</span><br></pre></td></tr></table></figure>
<h3 id="导入系统镜像"><a href="#导入系统镜像" class="headerlink" title="导入系统镜像"></a>导入系统镜像</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果是光盘就需要拷贝 我这边是使用的centos6.5</span></span><br><span class="line">dd <span class="keyword">if</span>=<span class="string">/dev/cdrom</span> of=<span class="string">/opt/CentOS-6.5-x86_64.ios</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建虚拟机</span></span><br><span class="line">virt-install <span class="params">--name</span> CentOS6.5 \</span><br><span class="line"><span class="params">--virt-type</span> kvm \</span><br><span class="line"><span class="params">--ram</span> 512 \</span><br><span class="line"><span class="params">--cdrom=/opt/CentOS-6</span>.5-x86_64.ios \</span><br><span class="line"><span class="params">--disk</span> path=<span class="string">/opt/CentOS6.5-x86_64.raw</span> \</span><br><span class="line"><span class="params">--network</span> network=default \</span><br><span class="line"><span class="params">--graphics</span> vnc,listen=0.0.0.0 \</span><br><span class="line"><span class="params">--noautoconsole</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看虚拟机列表</span></span><br><span class="line">virsh list <span class="params">--all</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动虚拟机</span></span><br><span class="line">virsh start CentOS6.5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有虚拟机列表</span></span><br><span class="line">virsh list <span class="params">--all</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 虚拟机网络基本设置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装电源服务</span></span><br><span class="line">yum -y install acpid</span><br><span class="line"><span class="string">/etc/init.d/acpid</span> start</span><br><span class="line">chkconfig acpid on</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建网桥</span></span><br><span class="line"><span class="comment"># 把br0添加到eth0</span></span><br><span class="line">brctl addbr br0</span><br><span class="line">brctl addif br0 eth0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动一台虚拟机使用刚才创建的网桥</span></span><br><span class="line">virt-install <span class="params">--name</span> CentOS7.2 <span class="params">--virt-type</span> kvm <span class="params">--ram</span> 1024 <span class="params">--cdrom=/opt/CentOS7</span>.2-x86_64.ios <span class="params">--disk</span> path=<span class="string">/opt/CentOS7.2.raw</span> <span class="params">--network</span> bridge=br0 <span class="params">--graphics</span> vnc,listen=0.0.0.0 <span class="params">--noautoconsole</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>虚拟化</category>
      </categories>
  </entry>
  <entry>
    <title>Docker</title>
    <url>/blog.githup.io/2020/05/Docker/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><p><a href="https://docs.docker.com/engine/" target="_blank" rel="noopener">docker doc </a><br><a href="https://docs.docker.com/reference/" target="_blank" rel="noopener">docker 参考文档</a></p>
<h2 id="安装-Docker-CE"><a href="#安装-Docker-CE" class="headerlink" title="安装 Docker CE"></a>安装 Docker CE</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">sudo yum -y remove docker \</span><br><span class="line">docker-client \</span><br><span class="line">docker-client-latest \</span><br><span class="line">docker-common \</span><br><span class="line">docker-latest \</span><br><span class="line">docker-latest-logrotate \</span><br><span class="line">docker-logrotate \</span><br><span class="line">docker-engine</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装所需包</span></span><br><span class="line">yum <span class="keyword">install</span> yum-utils device-mapper-persistent-<span class="keyword">data</span> lvm2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增 Docker 仓库。</span></span><br><span class="line">yum-config-manager \</span><br><span class="line">  <span class="comment">--add-repo \</span></span><br><span class="line">  https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 Docker CE.</span></span><br><span class="line">yum <span class="keyword">update</span> &amp;&amp; yum <span class="keyword">install</span> docker-ce<span class="number">-18.06</span><span class="number">.2</span>.ce</span><br><span class="line"></span><br><span class="line"><span class="comment">### 创建 /etc/docker 目录。</span></span><br><span class="line">mkdir /etc/docker</span><br><span class="line"></span><br><span class="line"><span class="comment">### 设置 daemon。</span></span><br><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"exec-opts"</span>: [<span class="string">"native.cgroupdriver=systemd"</span>],</span><br><span class="line">  <span class="string">"log-driver"</span>: <span class="string">"json-file"</span>,</span><br><span class="line">  <span class="string">"log-opts"</span>: &#123;</span><br><span class="line">    <span class="string">"max-size"</span>: <span class="string">"100m"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"storage-driver"</span>: <span class="string">"overlay2"</span>,</span><br><span class="line">  <span class="string">"storage-opts"</span>: [</span><br><span class="line">    <span class="string">"overlay2.override_kernel_check=true"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://pe80e41t.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># docker 启动服务</span></span><br><span class="line"><span class="comment"># mkdir -p /etc/systemd/system/docker.service.d</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># docker compose install</span></span><br><span class="line">sudo curl -L <span class="string">"https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)"</span> -o /usr/<span class="keyword">local</span>/<span class="keyword">bin</span>/docker-compose</span><br><span class="line">sudo chmod +x /usr/<span class="keyword">local</span>/<span class="keyword">bin</span>/docker-compose</span><br><span class="line">sudo <span class="keyword">ln</span> -s /usr/<span class="keyword">local</span>/<span class="keyword">bin</span>/docker-compose /usr/<span class="keyword">bin</span>/docker-compose</span><br><span class="line">docker-compose <span class="comment">--version</span></span><br></pre></td></tr></table></figure>
<h3 id="重启-Docker"><a href="#重启-Docker" class="headerlink" title="重启 Docker"></a>重启 Docker</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>
<h3 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line">sudo sh get-docker.sh</span><br></pre></td></tr></table></figure>
<h3 id="Docker-镜像加速"><a href="#Docker-镜像加速" class="headerlink" title="Docker 镜像加速"></a>Docker 镜像加速</h3><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">cat <span class="params">&lt;&lt;'EOF' &gt;</span><span class="meta-keyword">/etc/</span>docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://pe80e41t.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">systemctl reload docker</span><br><span class="line"></span><br><span class="line"><span class="meta"># 如果重启报错，查看这个文件是不是已经注册了 registry</span></span><br><span class="line">cat <span class="meta-keyword">/etc/</span>systemd<span class="meta-keyword">/system/</span>docker.service.d/docker-options.conf</span><br><span class="line"></span><br><span class="line">rm -rf <span class="meta-keyword">/etc/</span>docker/daemon.json</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>
<h3 id="Docker-使用"><a href="#Docker-使用" class="headerlink" title="Docker 使用"></a>Docker 使用</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># docker help</span></span><br><span class="line"><span class="comment"># docker image help</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索镜像</span></span><br><span class="line">docker search busybox</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去镜像库拉镜像</span></span><br><span class="line">docker image pull busybox</span><br><span class="line">docker image ls</span><br><span class="line">docker image inspect busybox</span><br><span class="line">docker image <span class="keyword">create</span> <span class="comment">--name b1 busybox</span></span><br><span class="line">docker <span class="keyword">container</span> ps -a</span><br><span class="line">docker <span class="keyword">container</span> <span class="keyword">start</span> b1 -d</span><br><span class="line">docker <span class="keyword">container</span> exec -it b1 /<span class="keyword">bin</span>/bash</span><br><span class="line">docker <span class="keyword">container</span> <span class="keyword">logs</span> b1</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">docker <span class="keyword">container</span> run <span class="comment">--name b1 -it busybox</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看本地镜像</span></span><br><span class="line">docker image ls</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看运行的容器</span></span><br><span class="line">docker <span class="keyword">container</span> ps</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器信息</span></span><br><span class="line">docker <span class="keyword">container</span> inspect b1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有容器</span></span><br><span class="line">docker <span class="keyword">container</span> ps -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除容器</span></span><br><span class="line">docker rm b1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制删除容器</span></span><br><span class="line">docker <span class="keyword">container</span> rm b13c1f94e78c <span class="comment">--force</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一次删除所有容器</span></span><br><span class="line">docker ps -a |cut -d <span class="string">" "</span> -f <span class="number">1</span> |xargs docker <span class="keyword">container</span> rm <span class="comment">--force</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看日志</span></span><br><span class="line">docker <span class="keyword">logs</span> b1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 交互状态进入容器</span></span><br><span class="line">docker exec -it b1 /<span class="keyword">bin</span>/sh</span><br><span class="line"><span class="comment"># or 新式命令</span></span><br><span class="line">docker <span class="keyword">container</span> exec -it b1 /<span class="keyword">bin</span>/sh</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
  </entry>
  <entry>
    <title>jinkens</title>
    <url>/blog.githup.io/2020/05/jinkens/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.jenkins.io/" target="_blank" rel="noopener">jenkins</a></p>
<h2 id="jenkins-conceptual"><a href="#jenkins-conceptual" class="headerlink" title="jenkins conceptual"></a>jenkins conceptual</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pipeline    <span class="comment"># 流水线</span></span><br><span class="line">item        <span class="comment"># 工程</span></span><br><span class="line">build       <span class="comment"># 构建</span></span><br><span class="line">hook        <span class="comment"># 钩子</span></span><br><span class="line"><span class="comment"># 定义执行环境</span></span><br><span class="line">workspace   <span class="comment"># 工作空间，包含来自远程仓库的文件和一些用于Pipeline的工作文件</span></span><br><span class="line">agent       <span class="comment">#</span></span><br><span class="line">stages      <span class="comment"># 块</span></span><br><span class="line">    stage(<span class="string">'Build'</span>)   <span class="comment">#</span></span><br><span class="line">    stage(<span class="string">'Test'</span>)    <span class="comment">#</span></span><br><span class="line">    stage(<span class="string">'Deploy'</span>)  <span class="comment">#</span></span><br><span class="line">        steps   <span class="comment"># 步骤</span></span><br><span class="line">executor    <span class="comment"># 执行器</span></span><br><span class="line"> </span><br><span class="line">environment <span class="comment"># 定义环境变量</span></span><br><span class="line">post        <span class="comment"># </span></span><br><span class="line">    always      <span class="comment">#</span></span><br><span class="line">    success     <span class="comment">#</span></span><br><span class="line">    unstable    <span class="comment">#</span></span><br><span class="line">    failure     <span class="comment">#</span></span><br><span class="line">    changed     <span class="comment">#</span></span><br><span class="line"><span class="comment"># 通知</span></span><br><span class="line">mail to:        <span class="comment">#</span></span><br><span class="line"><span class="comment"># 部署</span></span><br></pre></td></tr></table></figure>
<h2 id="jenkins-安装"><a href="#jenkins-安装" class="headerlink" title="jenkins 安装"></a>jenkins 安装</h2><p><a href="http://mirrors.jenkins.io/war-stable/latest/jenkins.war" target="_blank" rel="noopener">jenkins 下载</a><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 运行jenkins</span></span><br><span class="line">java -jar jenkins.war --httpPort=8080.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问</span></span><br><span class="line">http://localhost:8080</span><br></pre></td></tr></table></figure></p>
<h2 id="pipeline-指令"><a href="#pipeline-指令" class="headerlink" title="pipeline 指令"></a>pipeline 指令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(&#39;Build&#39;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                sh &#39;echo &quot;Hello World&quot;&#39;</span><br><span class="line">                sh &#39;&#39;&#39;</span><br><span class="line">                    echo &quot;Multiline shell steps works too&quot;</span><br><span class="line">                    ls -lah</span><br><span class="line">                &#39;&#39;&#39;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>devops</category>
      </categories>
  </entry>
  <entry>
    <title>编程方法</title>
    <url>/blog.githup.io/2020/05/%E7%BC%96%E7%A8%8B%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul>
<li>表达式<ul>
<li>常量</li>
<li>变量</li>
<li>运算符</li>
</ul>
</li>
<li>控制流程<ul>
<li>分支</li>
<li>循环</li>
</ul>
</li>
<li>容器<ul>
<li>数组</li>
<li>切片</li>
<li>Map</li>
</ul>
</li>
<li>函数<ul>
<li>参数</li>
<li>返回值</li>
<li>闭包</li>
<li>递归函数</li>
</ul>
</li>
<li>面向对象<ul>
<li>接口</li>
<li>结构体</li>
<li>指针</li>
</ul>
</li>
<li>设计模式<ul>
<li>单例模式</li>
<li>工厂模式</li>
</ul>
</li>
<li>Golang 并发<ul>
<li>Channel</li>
<li>sync</li>
</ul>
</li>
<li>错误处理</li>
<li>日志记录</li>
<li>常用包</li>
<li>包管理</li>
<li>基本库</li>
</ul>
]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
  </entry>
  <entry>
    <title>shell编程</title>
    <url>/blog.githup.io/2020/05/shell%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
  </entry>
  <entry>
    <title>python编程</title>
    <url>/blog.githup.io/2020/05/python%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.runoob.com/python3/python3-tutorial.html" target="_blank" rel="noopener">Python 入门</a></p>
]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
  </entry>
  <entry>
    <title>python高级编程</title>
    <url>/blog.githup.io/2020/05/python%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>本文使用 python 3 </p>
</blockquote>
<ul>
<li><a href="https://docs.python.org/zh-cn/3/tutorial/index.html" target="_blank" rel="noopener"> Python docs </a><h2 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h2><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3>s = “<a href="http://www.abc.com" target="_blank" rel="noopener">http://www.abc.com</a>“</li>
</ul>
<h4 id="字符串断言"><a href="#字符串断言" class="headerlink" title="字符串断言"></a>字符串断言</h4><p>isalpha         # 字母<br>isidentifier    # 标识符<br>isspace         # 空格<br>isascii         # ascii 码<br>islower         # 小写<br>isupper         # 大写<br>istitle         # 标题 “Abc”<br>isdecimal       # 十进制数<br>isnumeric       # 数字<br>isalnum         # 字母和数字<br>isdigit         # 数字<br>isprintable     # 可打印字符 “\n”                     </p>
<h4 id="字符串常用的操作"><a href="#字符串常用的操作" class="headerlink" title="字符串常用的操作"></a>字符串常用的操作</h4><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>l = list(range(3))</p>
<h3 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h3><h3 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h3><h1 id="迭代器与生产器"><a href="#迭代器与生产器" class="headerlink" title="迭代器与生产器"></a>迭代器与生产器</h1><h1 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h1><h1 id="命名空间-作用域"><a href="#命名空间-作用域" class="headerlink" title="命名空间/作用域"></a>命名空间/作用域</h1><h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1>]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
  </entry>
  <entry>
    <title>java编程</title>
    <url>/blog.githup.io/2020/05/java%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
  </entry>
  <entry>
    <title>golang编程</title>
    <url>/blog.githup.io/2020/05/golang%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Goloang"><a href="#Goloang" class="headerlink" title="Goloang"></a>Goloang</h2><ul>
<li><a href="https://golang.org/" target="_blank" rel="noopener"> Golang </a></li>
<li><a href="https://www.runoob.com/go/go-tutorial.html" target="_blank" rel="noopener"> 菜鸟教程 golang  </a></li>
<li><a href="https://github.com/golang/go" target="_blank" rel="noopener"> Golang 源码 </a></li>
<li><a href="https://github.com/avelino/awesome-go" target="_blank" rel="noopener"> awesome-go </a></li>
<li><a href="https://draveness.me/golang/docs/part1-prerequisite/ch02-compile/golang-compile-intro/" target="_blank" rel="noopener">Go 语言设计与实现</a></li>
</ul>
<figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 包定义</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入模块</span></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	<span class="string">"strconv"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 变量定义</span></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">	i <span class="keyword">int</span></span><br><span class="line">	k <span class="keyword">int</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 常量定义</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">	city <span class="keyword">string</span> = <span class="string">"beijing"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 入口函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// 变量 := 变量 + 字面常量</span></span><br><span class="line">	sum := i + <span class="number">10</span></span><br><span class="line">	<span class="comment">// 输出</span></span><br><span class="line">	fmt.Println(sum)</span><br><span class="line">	<span class="comment">// 浮点计算</span></span><br><span class="line">	fdiv := <span class="number">10</span> / <span class="number">0.3</span></span><br><span class="line">	fmt.Println(fdiv)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 把数值转成字符串</span></span><br><span class="line">	<span class="comment">// 使用 strconv 库来转换</span></span><br><span class="line">	fmt.Println(strconv.FormatFloat(fdiv, <span class="string">'f'</span>, <span class="number">-1</span>, <span class="number">64</span>))</span><br><span class="line">	<span class="comment">// 打印到屏幕</span></span><br><span class="line">	fmt.Printf(<span class="string">"x = %.15f\n"</span>, fdiv)</span><br><span class="line">	<span class="comment">// 以返回值形式返回</span></span><br><span class="line">	fmt.Println(fmt.Sprintf(<span class="string">"%.15f"</span>, fdiv))</span><br><span class="line"></span><br><span class="line">	<span class="comment">//把字符串转成数值</span></span><br><span class="line">	fmt.Println(strconv.Atoi(<span class="string">"0.333333"</span>))</span><br><span class="line">	fmt.Println(strconv.Atoi(<span class="string">"12345"</span>))</span><br><span class="line">	fmt.Println(strconv.Atoi(<span class="string">"123ead"</span>))</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 取余运算</span></span><br><span class="line">	fmt.Println(<span class="number">1</span> % <span class="number">7</span>) <span class="comment">// 比余数小取本身</span></span><br><span class="line">	fmt.Println(<span class="number">16</span> % <span class="number">7</span>)</span><br><span class="line"></span><br><span class="line">	fmt.Println(<span class="string">"------------"</span>)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 使用按位与位(乘法运算)获得循环数，相与数必须是：1，3，7，31，2^n-1</span></span><br><span class="line">	<span class="comment">// 00001001  9</span></span><br><span class="line">	<span class="comment">// 00000111  7</span></span><br><span class="line">	<span class="comment">//         = 0</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">20</span>; i++ &#123;</span><br><span class="line">		fmt.Println(i, i&amp;<span class="number">3</span>)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 使用移位算乘法,因为字长为64，所以到第63次时变负值，64次溢出</span></span><br><span class="line">	<span class="keyword">var</span> i <span class="keyword">uint64</span></span><br><span class="line">	<span class="keyword">for</span> i = <span class="number">1</span>; i &lt; <span class="number">65</span>; i++ &#123;</span><br><span class="line">		fmt.Println(i, <span class="number">1</span>&lt;&lt;i)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 包定义</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	<span class="string">"strings"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 入口函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// 循环</span></span><br><span class="line">	<span class="comment">// 一重循环算法复杂度为 O(n)+1</span></span><br><span class="line">	<span class="keyword">var</span> i <span class="keyword">int</span></span><br><span class="line">	<span class="keyword">for</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">		fmt.Println(i)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 二重循环 算法复杂度为 O(n^2) +2</span></span><br><span class="line">	<span class="keyword">var</span> k, j <span class="keyword">int</span></span><br><span class="line">	<span class="keyword">for</span> k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++ &#123;</span><br><span class="line">		<span class="keyword">for</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++ &#123;</span><br><span class="line">			fmt.Println(k, j)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 二重循环</span></span><br><span class="line">	<span class="comment">// 逐步递减</span></span><br><span class="line">	<span class="keyword">var</span> m, n <span class="keyword">int</span></span><br><span class="line">	<span class="keyword">for</span> m = <span class="number">1</span>; m &lt; <span class="number">10</span>; m++ &#123;</span><br><span class="line">		<span class="keyword">for</span> n = <span class="number">0</span>; n &lt; <span class="number">10</span>/m; n++ &#123;</span><br><span class="line">			<span class="comment">// strings 库 提供对字符串的各种处理方法</span></span><br><span class="line">			fmt.Printf(<span class="string">"%d %s"</span>, n, strings.Repeat(<span class="string">"*"</span>, n))</span><br><span class="line">		&#125;</span><br><span class="line">		fmt.Println()</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 逐步递增</span></span><br><span class="line">	<span class="keyword">var</span> c, d <span class="keyword">int</span></span><br><span class="line">	<span class="keyword">for</span> c = <span class="number">0</span>; c &lt; <span class="number">10</span>; c++ &#123;</span><br><span class="line">		<span class="keyword">for</span> d = <span class="number">0</span>; d &lt; <span class="number">2</span>*c; d++ &#123;</span><br><span class="line">			fmt.Printf(<span class="string">"%d %s"</span>, d, strings.Repeat(<span class="string">"*"</span>, d))</span><br><span class="line">		&#125;</span><br><span class="line">		fmt.Println()</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 二分法猜数</span></span><br><span class="line">	<span class="keyword">var</span> num, g <span class="keyword">int</span></span><br><span class="line">	g = <span class="number">231</span></span><br><span class="line">	fmt.Println(<span class="string">"猜一个1000以内的数"</span>)</span><br><span class="line">	<span class="keyword">for</span> &#123;</span><br><span class="line">		fmt.Scan(&amp;num)</span><br><span class="line">		<span class="keyword">if</span> num &gt; g &#123;</span><br><span class="line">			fmt.Println(<span class="string">"猜的数大了"</span>)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> num == g &#123;</span><br><span class="line">			fmt.Println(<span class="string">"猜中了"</span>)</span><br><span class="line">			<span class="keyword">break</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			fmt.Println(<span class="string">"猜的数小了"</span>)</span><br><span class="line">		&#125;</span><br><span class="line">		fmt.Println(num)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight golang"><table><tr><td class="code"><pre><span class="line">   <span class="comment">// 数组</span></span><br><span class="line"><span class="keyword">var</span> arr [<span class="number">10</span>]<span class="keyword">int</span></span><br><span class="line"><span class="comment">// 切片</span></span><br><span class="line"><span class="keyword">var</span> slice []<span class="keyword">int</span></span><br><span class="line"><span class="comment">// map</span></span><br><span class="line"><span class="keyword">var</span> m <span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印 数组</span></span><br><span class="line"><span class="keyword">for</span> k, v := <span class="keyword">range</span> arr &#123;</span><br><span class="line">	fmt.Println(<span class="string">"array: "</span>, k, v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印 切片</span></span><br><span class="line"><span class="keyword">for</span> k1, v1 := <span class="keyword">range</span> slice &#123;</span><br><span class="line">	fmt.Println(<span class="string">"slice: "</span>, k1, v1)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印 map</span></span><br><span class="line"><span class="comment">//for k2, v2 := range m &#123;</span></span><br><span class="line"><span class="comment">//	fmt.Println("map: ", k2, v2)</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">slice = <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">10</span>)</span><br><span class="line"><span class="comment">// 打印 切片</span></span><br><span class="line"><span class="keyword">for</span> k3, v3 := <span class="keyword">range</span> slice &#123;</span><br><span class="line">	fmt.Println(<span class="string">"slice: "</span>, k3, v3)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 必须要初始化</span></span><br><span class="line">m = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span>)</span><br><span class="line">m[<span class="number">1</span>] = <span class="string">"beijing"</span></span><br><span class="line">m[<span class="number">3</span>] = <span class="string">"shanghai"</span></span><br><span class="line"><span class="comment">// 打印 map</span></span><br><span class="line"><span class="keyword">for</span> k2, v2 := <span class="keyword">range</span> m &#123;</span><br><span class="line">	fmt.Println(<span class="string">"map: "</span>, k2, v2)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 打印长度</span></span><br><span class="line">fmt.Println(<span class="built_in">len</span>(arr))</span><br><span class="line">fmt.Println(<span class="built_in">len</span>(slice))</span><br><span class="line">fmt.Println(<span class="built_in">len</span>(m))</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">fmt.Println(<span class="built_in">cap</span>(arr))</span><br><span class="line">fmt.Println(<span class="built_in">cap</span>(slice))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组，切片常用的方法</span></span><br><span class="line">fmt.Println(arr[:<span class="number">3</span>])</span><br><span class="line">fmt.Println(slice[<span class="number">2</span>:<span class="number">8</span>])</span><br><span class="line">fmt.Println(arr[:])</span><br><span class="line">sort.Ints(slice)</span><br><span class="line">s1 := []<span class="keyword">string</span>&#123;<span class="string">"abc"</span>, <span class="string">"zbc"</span>, <span class="string">"edf"</span>&#125;</span><br><span class="line">sort.Strings(s1)</span><br><span class="line">fmt.Println(<span class="string">"sort: "</span>, s1)</span><br><span class="line"><span class="built_in">copy</span>(slice, slice)</span><br><span class="line">slice = <span class="built_in">append</span>(slice, <span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line">fmt.Println(slice)</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">fmt.Println(m)</span><br><span class="line"><span class="built_in">delete</span>(m, <span class="number">3</span>)</span><br><span class="line">fmt.Println(m)</span><br><span class="line"><span class="built_in">println</span>(m[<span class="number">5</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">// 高级一点</span></span><br><span class="line"><span class="comment">// map key 是int 值是 切片</span></span><br><span class="line">mode1 := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]([]<span class="keyword">string</span>))</span><br><span class="line"><span class="comment">//定义一个map（key 是 string，值是个数组）</span></span><br><span class="line">mode2 := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]([<span class="number">10</span>]<span class="keyword">string</span>))</span><br><span class="line"><span class="comment">// 定义一个string 类型map，值是map类型（值的key 是string，值是string切片类型）</span></span><br><span class="line">mode3 := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>](<span class="keyword">map</span>[<span class="keyword">string</span>]([]<span class="keyword">string</span>)))</span><br><span class="line"><span class="comment">// 定义一个切片，值也是切片，类型string</span></span><br><span class="line">_ = <span class="built_in">make</span>([][]<span class="keyword">string</span>, <span class="number">10</span>)</span><br><span class="line"><span class="comment">// 定义一个切片，切片的值是二维切片，类型是string</span></span><br><span class="line">mode4 := <span class="built_in">make</span>([]([]([]<span class="keyword">string</span>)), <span class="number">10</span>)</span><br><span class="line"><span class="comment">// 定义一个三维数组</span></span><br><span class="line"><span class="keyword">var</span> arr1 [<span class="number">10</span>][<span class="number">10</span>][<span class="number">10</span>]<span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个结构体切片</span></span><br><span class="line"><span class="keyword">type</span> s <span class="keyword">struct</span> &#123;</span><br><span class="line">	id   <span class="keyword">int</span></span><br><span class="line">	name <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line">_ = <span class="built_in">make</span>([][]s, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个结构体指针类型的切片</span></span><br><span class="line">_ = <span class="built_in">make</span>([][]*s, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"map1: "</span>, mode1)</span><br><span class="line">fmt.Println(<span class="string">"map2: "</span>, mode2)</span><br><span class="line">fmt.Println(<span class="string">"map3: "</span>, mode3)</span><br><span class="line">fmt.Println(<span class="string">"slice4: "</span>, mode4)</span><br><span class="line">fmt.Println(<span class="string">"arr5: "</span>, arr1)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
  </entry>
  <entry>
    <title>出境旅游常用英语</title>
    <url>/blog.githup.io/2020/05/%E5%87%BA%E5%A2%83%E6%97%85%E6%B8%B8%E5%B8%B8%E7%94%A8%E8%8B%B1%E8%AF%AD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>出入境填表常用词汇</p>
<p>姓：Family name，Surname</p>
<p>名：First Name，Given name</p>
<p>性别：sex，gender</p>
<p>男：male；女：female</p>
<p>国籍：nationality，country of citizenship</p>
<p>护照号：passport number</p>
<p>原住地：country of origin</p>
<p>前往国：destination country</p>
<p>登机城市：city where you boarded</p>
<p>签证签发地：city where visa was issued</p>
<p>签发日期：date of issue</p>
<p>出生日期：date of birth，birth date</p>
<p>年：year；月：month；日：day</p>
<p>偕行人数：accompanying number</p>
<p>签名：signature</p>
<p>官方填写：official use only</p>
<p>职业：occupation</p>
<p>护照：Passport；签证：Visa</p>
<p>登机、启程：Embarkation</p>
<p>登岸：Disembarkation</p>
<p>商务签证：Business Visa</p>
<p>观光签证：Tourist Visa</p>
<p>乘机常用词汇</p>
<p>航站、终点站：Terminal</p>
<p>入境大厅：Arrival Lobby</p>
<p>出境大厅：Departure Lobby</p>
<p>登机门号码：Gate Number</p>
<p>登机证：Boarding Card，Boarding Pass</p>
<p>机场税：Airport Tax</p>
<p>登机手续办理处：Check in Counter</p>
<p>海关申报处：Customs Service Area</p>
<p>货币申报：Currency Declaration</p>
<p>免税商品：Duty-Free Items</p>
<p>大号：large；中号：medium；小号：small</p>
<p>纪念品：Souvenir</p>
<p>行李：Baggage，Luggage</p>
<p>~ 1 / 11 ~</p>
<p>托运的行李：Checked baggage</p>
<p>行李领取处：Baggage claim area</p>
<p>随身行李：Carry-on baggage</p>
<p>行李牌：Baggage Tag</p>
<p>行李推车：Luggage Cart</p>
<p>退税处：Tax-free refund</p>
<p>盥洗室（厕所）：Lavatory，washroom，toilet</p>
<p>W.C.＝water closet，rest room</p>
<p>男厕：Men’s，Gent’s，Gentlemen’s</p>
<p>女厕：Women’s，Lady’s</p>
<p>使用中：Occupied</p>
<p>空闲：Vacant</p>
<p>男（女）空服员：Steward（Stewardess）</p>
<p>机内免税贩卖：In-Flight Sales</p>
<p>钱币兑换常用词汇</p>
<p>外币兑换店：Currency Exchange Shop</p>
<p>汇率：Exchange rate</p>
<p>旅行支票：Traveler’s check</p>
<p>手续费：Commission</p>
<p>银行买入价：We buy（Bid）</p>
<p>银行卖出价：We sell（Ask）</p>
<p>酒店常用词汇</p>
<p>入住登记手续：Check-in</p>
<p>客房服务：Room Service</p>
<p>退房（时间）：Check Out（Time）</p>
<p>前台：Front Desk，Reception</p>
<p>酒店大堂：Lobby</p>
<p>咖啡馆：Coffee shop</p>
<p>服务员，侍者：waiter（餐厅、旅馆的服务生、行李员）</p>
<p>电话叫醒服务：Wake Up Call，Morning Call</p>
<p>日常用语</p>
<p>你好，很高兴认识你：How do you do，I’m glad to meet you.（It’s nice meeting you.）</p>
<p>请问你叫什么名字：May I have your name, please?</p>
<p>我可以试穿一下吗：May I try it on?</p>
<p>多少钱：How much?</p>
<p>请把菜单给我：Please show me the menu.</p>
<p>干杯：Cheers! Bottoms up!</p>
<p>~ 2 / 11 ~</p>
<p>我迷路了，您能告诉我怎么回饭店吗：I’m lost．Could you do me a favor to find my hotel?</p>
<p>你能帮我拍照吗：Could you take a picture for me?</p>
<p>非常感谢：Thank you very much.</p>
<p>不客气：You’re welcome．</p>
<p>我就是忍不住：I just couldn’t help it.</p>
<p>让我们保持联系：Let’s keep in touch.</p>
<p>我怎样能跟你联络上：How can I get in touch with you?</p>
<p>我将会尽我最大努力：I’ll do my best.</p>
<p>请稍等一下：Wait a moment please.</p>
<p>你先请：After you</p>
<p>我们该走了：We’d better be off.</p>
<p>我真要累死了：I’m really dead.</p>
<p>真是那样吗：Is that so?</p>
<p>我不确切知道：I don’t know for sure.</p>
<p>太好了，太棒了：That’s something.</p>
<p>这主意真棒：Brilliant idea!</p>
<p>此话当真：Do you really mean it?</p>
<p>你帮了大忙：You are a great help.</p>
<p>我身无分文：I’m broke.</p>
<p>我一直不太喜欢这东西：I never liked it anyway.</p>
<p>别跟我耍花招：Don’t play games with me!</p>
<p>看情况再说：That depends.</p>
<p>最全食物的英文翻译</p>
<p>水果类（fruits）：</p>
<p>火龙果 pitaya</p>
<p>西红柿 tomato</p>
<p>菠萝 pineapple</p>
<p>西瓜watermelon</p>
<p>香蕉banana</p>
<p>柚子 shaddock （pomelo）</p>
<p>橙子orange</p>
<p>苹果apple</p>
<p>柠檬lemon</p>
<p>樱桃 cherry</p>
<p>桃子peach</p>
<p>梨 pear</p>
<p>枣Chinese date （去核枣 pitted date ）</p>
<p>~ 3 / 11 ~</p>
<p>椰子coconut</p>
<p>草莓 strawberry</p>
<p>树莓 raspberry</p>
<p>蓝莓 blueberry</p>
<p>黑莓 blackberry</p>
<p>葡萄 grape</p>
<p>甘蔗 sugar cane</p>
<p>芒果 mango</p>
<p>木瓜 pawpaw或者papaya</p>
<p>杏子 apricot 　</p>
<p>油桃 nectarine</p>
<p>柿子persimmon</p>
<p>石榴pomegranate</p>
<p>榴莲 jackfruit</p>
<p>槟榔果 areca nut</p>
<p>（西班牙产苦橙）bitter orange</p>
<p>猕猴桃 kiwi fruit or Chinese gooseberry</p>
<p>金橘cumquat</p>
<p>蟠桃 flat peach</p>
<p>荔枝 litchi</p>
<p>青梅greengage</p>
<p>山楂果 haw</p>
<p>水蜜桃honey peach</p>
<p>香瓜，甜瓜 musk melon</p>
<p>李子plum</p>
<p>杨梅 waxberry red bayberry</p>
<p>桂圆 longan</p>
<p>沙果 crab apple</p>
<p>杨桃starfruit</p>
<p>枇杷 loquat</p>
<p>柑橘 tangerine</p>
<p>莲雾wax-apple</p>
<p>番石榴 guava</p>
<p>肉、蔬菜类：</p>
<p>南瓜（倭瓜） pumpkin cushaw</p>
<p>甜玉米 Sweet corn</p>
<p>牛肉beef</p>
<p>猪肉pork</p>
<p>羊肉 mutton</p>
<p>羔羊肉lamb</p>
<p>鸡肉chicken</p>
<p>生菜 莴苣lettuce</p>
<p>白菜 Chinese cabbage （celery cabbage）（甘蓝）</p>
<p>卷心菜 cabbage</p>
<p>萝卜 radish</p>
<p>胡萝卜 carrot</p>
<p>韭菜leek</p>
<p>木耳 agarics</p>
<p>豌豆 pea</p>
<p>马铃薯（土豆） potato</p>
<p>黄瓜 cucumber</p>
<p>苦瓜 balsam pear</p>
<p>秋葵 okra</p>
<p>洋葱 onion</p>
<p>芹菜 celery</p>
<p>芹菜杆 celery sticks</p>
<p>地瓜 sweet potato</p>
<p>蘑菇 mushroom</p>
<p>橄榄 olive</p>
<p>菠菜spinach</p>
<p>冬瓜 （Chinese）wax gourd</p>
<p>~ 4 / 11 ~</p>
<p>莲藕 lotus root</p>
<p>紫菜 laver</p>
<p>油菜 cole rape</p>
<p>茄子 eggplant</p>
<p>香菜 caraway</p>
<p>枇杷loquat</p>
<p>青椒 green pepper</p>
<p>四季豆 青刀豆 garden bean</p>
<p>银耳 silvery fungi</p>
<p>腱子肉tendon</p>
<p>肘子 pork joint</p>
<p>茴香fennel（茴香油fennel oil 药用）</p>
<p>鲤鱼carp</p>
<p>咸猪肉bacon</p>
<p>金针蘑 needle mushroom</p>
<p>扁豆 lentil</p>
<p>槟榔 areca</p>
<p>牛蒡great burdock</p>
<p>水萝卜 summer radish</p>
<p>竹笋 bamboo shoot</p>
<p>艾蒿Chinese mugwort</p>
<p>绿豆mung bean</p>
<p>毛豆green soy bean</p>
<p>瘦肉 lean meat</p>
<p>肥肉speck</p>
<p>黄花菜 day lily （day lily bud）</p>
<p>豆芽菜 bean sprout</p>
<p>丝瓜 towel gourd</p>
<p>(注：在美国丝瓜或用来做丝瓜茎loofah洗澡的，不是食用的)</p>
<p>海鲜类（sea food）：</p>
<p>虾仁 Peeled Prawns</p>
<p>龙虾 lobster</p>
<p>小龙虾 crayfish（退缩者）</p>
<p>蟹 crab</p>
<p>蟹足crab claws</p>
<p>小虾（虾米） shrimp</p>
<p>对虾、大虾 prawn</p>
<p>（烤）鱿鱼（toast）squid</p>
<p>海参 sea cucumber</p>
<p>扇贝 scallop</p>
<p>鲍鱼 sea-ear abalone</p>
<p>小贝肉cockles</p>
<p>牡蛎oyster</p>
<p>鱼鳞scale</p>
<p>海蜇jellyfish</p>
<p>鳖 海龟turtle</p>
<p>蚬 蛤 clam</p>
<p>鲅鱼 culter</p>
<p>鲳鱼 butterfish</p>
<p>虾籽 shrimp egg</p>
<p>鲢鱼 银鲤鱼chub silver carp</p>
<p>黄花鱼 yellow croaker</p>
<p>调料类（seasonings）：</p>
<p>醋 vinegar</p>
<p>酱油 soy</p>
<p>盐 salt</p>
<p>加碘盐 iodized salt</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
  </entry>
  <entry>
    <title>编程英语</title>
    <url>/blog.githup.io/2020/05/%E7%BC%96%E7%A8%8B%E8%8B%B1%E8%AF%AD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="list-1"><a href="#list-1" class="headerlink" title="list 1"></a>list 1</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>application</td>
<td>应用程式 应用、应用程序 apply</td>
</tr>
<tr>
<td>archi-tect-ure</td>
<td>架构、系统架构 体系结构</td>
</tr>
<tr>
<td>application framework</td>
<td>应用程式框架、应用框架 应用程序框架</td>
</tr>
<tr>
<td>end user</td>
<td>终端用户</td>
</tr>
<tr>
<td>design phase</td>
<td>设计阶段</td>
</tr>
<tr>
<td>design by contract</td>
<td>契约式设计</td>
</tr>
<tr>
<td>design pattern</td>
<td>设计范式、设计样式 设计模式</td>
</tr>
<tr>
<td>object oriented design</td>
<td>面向对象的设计</td>
</tr>
<tr>
<td>collective noun</td>
<td>集体名词</td>
</tr>
<tr>
<td>The contrasts with</td>
<td>这与</td>
</tr>
<tr>
<td>involved with</td>
<td>参与</td>
</tr>
<tr>
<td>bundled with</td>
<td>捆绑一起</td>
</tr>
<tr>
<td>published separately</td>
<td>单独发布</td>
</tr>
</tbody>
</table>
</div>
<p>Application software (app for short) is a program or group of programs designed for end users. Examples of an application include a <strong>word processor</strong>, a <strong>spreadsheet</strong>, an <strong>accounting application</strong>, a <strong>web browser</strong>, an <strong>email client</strong>, a <strong>media player</strong>, a <strong>file viewer</strong>, <strong>simulators</strong>, a <strong>console game</strong> or a <strong>photo editor</strong>. The collective noun application software refers to all applications collectively.[1] This contrasts with system software, which is mainly involved with running the computer.</p>
<p>Applications may be bundled with the computer and its system software or published separately, and may be coded as proprietary, open-source or university projects.[2] Apps built for mobile platforms are called mobile apps.</p>
<h2 id="list-2"><a href="#list-2" class="headerlink" title="list 2"></a>list 2</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>assign</td>
<td>指派、指定、设值、赋值 赋值</td>
</tr>
<tr>
<td>assignment</td>
<td>指派、指定 赋值、分配</td>
</tr>
<tr>
<td>assignment operator</td>
<td>指派（赋值）运算子 = 赋值操作符</td>
</tr>
<tr>
<td>associated</td>
<td>相应的、相关的 相关的、关联、相应的</td>
</tr>
<tr>
<td>associative container</td>
<td>关联式容器（对应 sequential container）</td>
</tr>
<tr>
<td>atomic</td>
<td>不可分割的 原子的</td>
</tr>
<tr>
<td>attribute</td>
<td>属性 属性、特性</td>
</tr>
<tr>
<td>audio</td>
<td>音讯 音频</td>
</tr>
<tr>
<td>A.I.（artificial intelligence ）</td>
<td>人工智慧 人工智能</td>
</tr>
<tr>
<td>background</td>
<td>背景 背景（用於图形着色）</td>
</tr>
<tr>
<td>argument</td>
<td>引数（传给函式的值）。叁见 parameter 叁数、实质叁数、实叁、自变量</td>
</tr>
<tr>
<td>array</td>
<td>阵列 数组</td>
</tr>
<tr>
<td>arrow</td>
<td>（箭头）</td>
</tr>
<tr>
<td>arrow operator</td>
<td>运算子 箭头操作符</td>
</tr>
<tr>
<td>assembly</td>
<td>装配件</td>
</tr>
<tr>
<td>assembly language</td>
<td>组合语言 汇编语言</td>
</tr>
<tr>
<td>assert(ion)</td>
<td>断言</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-3"><a href="#list-3" class="headerlink" title="list 3"></a>list 3</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>backward compatible</td>
<td>回溯相容 向下兼容</td>
</tr>
<tr>
<td>bandwidth</td>
<td>频宽 带宽</td>
</tr>
<tr>
<td>base class</td>
<td>基础类别 基类</td>
</tr>
<tr>
<td>base type</td>
<td>基础型别 (等同於 base class)</td>
</tr>
<tr>
<td>batch</td>
<td>批次（意思是整批作业） 批处理</td>
</tr>
<tr>
<td>benefit</td>
<td>利益,收益</td>
</tr>
<tr>
<td>best viable function</td>
<td>最佳可行函式 最佳可行函式从 viable functions 中挑出的最佳吻合者</td>
</tr>
<tr>
<td>binary search</td>
<td>二分搜寻法 二分查找</td>
</tr>
<tr>
<td>binary tree</td>
<td>二元树 二叉树</td>
</tr>
<tr>
<td>binary function</td>
<td>二元函式 双叁函数</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-4"><a href="#list-4" class="headerlink" title="list 4"></a>list 4</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>binary operator</td>
<td>二元运算子 二元操作符</td>
</tr>
<tr>
<td>binding</td>
<td>系结 绑定</td>
</tr>
<tr>
<td>bit</td>
<td>(发音为beit)位元 位</td>
</tr>
<tr>
<td>bit field</td>
<td>位元栏 位域</td>
</tr>
<tr>
<td>bitmap</td>
<td>位元图 位图</td>
</tr>
<tr>
<td>bitwise</td>
<td>以 bit 为单元逐一┅</td>
</tr>
<tr>
<td>bitwise copy</td>
<td>以 bit 为单元进行复制；位元逐一复制 位拷贝</td>
</tr>
<tr>
<td>block</td>
<td>区块,区段 块、区块、语句块</td>
</tr>
<tr>
<td>boolean</td>
<td>布林值（真假值，true 或 false） 布尔值</td>
</tr>
<tr>
<td>border</td>
<td>边框、框线 边框</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-5"><a href="#list-5" class="headerlink" title="list 5"></a>list 5</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>brace (curly brace)</td>
<td>大括弧、大括号 花括弧、花括号</td>
</tr>
<tr>
<td>bracket (square brakcet)</td>
<td>中括弧、中括号 方括弧、方括号</td>
</tr>
<tr>
<td>breakpoint</td>
<td>中断点 断点</td>
</tr>
<tr>
<td>build</td>
<td>建造、构筑、建置（MS 用语）</td>
</tr>
<tr>
<td>build－in</td>
<td>内建 内置</td>
</tr>
<tr>
<td>bus</td>
<td>汇流排 总线</td>
</tr>
<tr>
<td>business</td>
<td>商务,业务 业务</td>
</tr>
<tr>
<td>buttons</td>
<td>按钮 按钮</td>
</tr>
<tr>
<td>byte</td>
<td>位元组（由 8 bits 组成） 字节</td>
</tr>
<tr>
<td>cache</td>
<td>快取 高速缓存</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-6"><a href="#list-6" class="headerlink" title="list 6"></a>list 6</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>call</td>
<td>呼叫、叫用 调用</td>
</tr>
<tr>
<td>callback</td>
<td>回呼 回调</td>
</tr>
<tr>
<td>call operator</td>
<td>call（函式呼叫）运算子调用操作符（同 function call operator）</td>
</tr>
<tr>
<td>candidate</td>
<td>function 候选函式 候选函数（在函式多载决议程序中出现的候选函式）</td>
</tr>
<tr>
<td>chain</td>
<td>串链（例 chain of function calls） 链</td>
</tr>
<tr>
<td>character</td>
<td>字元 字符</td>
</tr>
<tr>
<td>check</td>
<td>box 核取方块 (i.e. check button) 复选框</td>
</tr>
<tr>
<td>checked exception</td>
<td>可控式异常(Java)</td>
</tr>
<tr>
<td>check button</td>
<td>方钮 (i.e. check box) 复选按钮</td>
</tr>
<tr>
<td>child</td>
<td>class 子类别（或称为derived class, subtype 图表类型） 子类</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-7"><a href="#list-7" class="headerlink" title="list 7"></a>list 7</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>class</td>
<td>类别 类</td>
</tr>
<tr>
<td>class body</td>
<td>类别本体 类体</td>
</tr>
<tr>
<td>class declaration</td>
<td>类别宣告、类别宣告式 类声明</td>
</tr>
<tr>
<td>class definition</td>
<td>类别定义、类别定义式 类定义</td>
</tr>
<tr>
<td>class derivation</td>
<td>list 类别衍化列 类继承列表</td>
</tr>
<tr>
<td>class head</td>
<td>类别表头 类头</td>
</tr>
<tr>
<td>class hierarchy</td>
<td>类别继承体系, 类别阶层 类层次体系</td>
</tr>
<tr>
<td>class library</td>
<td>类别程式库、类别库 类库</td>
</tr>
<tr>
<td>class template</td>
<td>类别模板、类别范本 类模板</td>
</tr>
<tr>
<td>class template partial specializations</td>
<td>类别模板偏特化 类模板部分特化</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-8"><a href="#list-8" class="headerlink" title="list 8"></a>list 8</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>class template specializations</td>
<td>类别模板特化 类模板特化</td>
</tr>
<tr>
<td>cleanup</td>
<td>清理、善後 清理、清除</td>
</tr>
<tr>
<td>client</td>
<td>客端、客户端、客户 客户</td>
</tr>
<tr>
<td>client－server</td>
<td>主从架构 客户/服务器</td>
</tr>
<tr>
<td>clipboard</td>
<td>剪贴簿 剪贴板</td>
</tr>
<tr>
<td>clone</td>
<td>复制 克隆</td>
</tr>
<tr>
<td>collection</td>
<td>群集 集合</td>
</tr>
<tr>
<td>combo box</td>
<td>复合方块、复合框 组合框</td>
</tr>
<tr>
<td>command line</td>
<td>命令列 命令行 (系统文字模式下的整行执行命令)</td>
</tr>
<tr>
<td>communication</td>
<td>通讯 通讯</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-9"><a href="#list-9" class="headerlink" title="list 9"></a>list 9</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>compatible</td>
<td>相容 兼容</td>
</tr>
<tr>
<td>compile</td>
<td>time 编译期 编译期、编译时</td>
</tr>
<tr>
<td>compiler</td>
<td>编译器 编译器</td>
</tr>
<tr>
<td>component</td>
<td>组件 组件</td>
</tr>
<tr>
<td>composition</td>
<td>复合、合成、组合 组合</td>
</tr>
<tr>
<td>computer</td>
<td>电脑、计算机 计算机、电脑</td>
</tr>
<tr>
<td>concept</td>
<td>概念 概念</td>
</tr>
<tr>
<td>concrete</td>
<td>具象的 实在的</td>
</tr>
<tr>
<td>concurrent</td>
<td>并行 并发</td>
</tr>
<tr>
<td>configuration</td>
<td>组态 配置</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-10"><a href="#list-10" class="headerlink" title="list 10"></a>list 10</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>connection</td>
<td>连接，连线（网络,资料库） 连接</td>
</tr>
<tr>
<td>constraint</td>
<td>约束（条件）</td>
</tr>
<tr>
<td>construct</td>
<td>构件 构件</td>
</tr>
<tr>
<td>container</td>
<td>容器 容器（存放资料的某种结构如 list, vector…）</td>
</tr>
<tr>
<td>containment</td>
<td>内含 包容</td>
</tr>
<tr>
<td>context</td>
<td>背景关系、周遭环境、上下脉络 环境、上下文</td>
</tr>
<tr>
<td>control</td>
<td>控制元件、控件 控件</td>
</tr>
<tr>
<td>console</td>
<td>主控台 控制台</td>
</tr>
<tr>
<td>const</td>
<td>常数（constant 的缩写，C++ 关键字）</td>
</tr>
<tr>
<td>constant</td>
<td>常数（相对於 variable） 常量</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-11"><a href="#list-11" class="headerlink" title="list 11"></a>list 11</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>constructor</td>
<td>（ctor） 建构式 构造函数（与class 同名的一种 member functions）</td>
</tr>
<tr>
<td>copy</td>
<td>(v) 复制、拷贝 拷贝</td>
</tr>
<tr>
<td>copy</td>
<td>(n) 复件, 副本</td>
</tr>
<tr>
<td>cover</td>
<td>涵盖 覆盖</td>
</tr>
<tr>
<td>create</td>
<td>创建、建立、产生、生成 创建</td>
</tr>
<tr>
<td>creation</td>
<td>产生、生成 创建</td>
</tr>
<tr>
<td>cursor</td>
<td>游标 光标</td>
</tr>
<tr>
<td>custom</td>
<td>订制、自定 定制</td>
</tr>
<tr>
<td>data</td>
<td>资料 数据</td>
</tr>
<tr>
<td>database</td>
<td>资料库 数据库</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-12"><a href="#list-12" class="headerlink" title="list 12"></a>list 12</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>database schema</td>
<td>数据库结构纲目</td>
</tr>
<tr>
<td>data member</td>
<td>资料成员、成员变数 数据成员、成员变量</td>
</tr>
<tr>
<td>data structure</td>
<td>资料结构 数据结构</td>
</tr>
<tr>
<td>datagram</td>
<td>资料元 数据报文</td>
</tr>
<tr>
<td>dead lock</td>
<td>死结 死锁</td>
</tr>
<tr>
<td>debug</td>
<td>除错 调试</td>
</tr>
<tr>
<td>debugger</td>
<td>除错器 调试器</td>
</tr>
<tr>
<td>declaration</td>
<td>宣告、宣告式 声明</td>
</tr>
<tr>
<td>deduction</td>
<td>推导（例：template argument deduction） 推导、推断</td>
</tr>
<tr>
<td>default</td>
<td>预设 缺省、默认</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-13"><a href="#list-13" class="headerlink" title="list 13"></a>list 13</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>defer</td>
<td>延缓 推迟</td>
</tr>
<tr>
<td>define</td>
<td>定义 预定义</td>
</tr>
<tr>
<td>definition</td>
<td>定义、定义区、定义式 定义</td>
</tr>
<tr>
<td>delegate</td>
<td>委派、委托、委任 委托</td>
</tr>
<tr>
<td>delegation</td>
<td>（同上）</td>
</tr>
<tr>
<td>demarshal</td>
<td>反编列 散集</td>
</tr>
<tr>
<td>dereference</td>
<td>提领（取出指标所指物体的内容） 解叁考</td>
</tr>
<tr>
<td>dereference operator dereference</td>
<td>（提领）运算子 * 解叁考操作符</td>
</tr>
<tr>
<td>derived</td>
<td>class 衍生类别 派生类</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-14"><a href="#list-14" class="headerlink" title="list 14"></a>list 14</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
</div>
<p>destroy | 摧毁、销毁<br>destructor | 解构式 析构函数<br>device | 装置、设备 设备<br>dialog |对话窗、对话盒 对话框<br>directive | 指令（例：using directive） (编译)指示符<br>directory | 目录 目录<br>disk | 碟 盘<br>dispatch | 分派 分派<br>distributed computing | 分布式计算 (分布式电算) 分布式计算;分散式计算 (分散式电算)</p>
<h2 id="list-15"><a href="#list-15" class="headerlink" title="list 15"></a>list 15</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>document</td>
<td>文件 文档</td>
</tr>
<tr>
<td>dot operator</td>
<td>dot（句点）运算子 . (圆)点操作符</td>
</tr>
<tr>
<td>driver</td>
<td>驱动程式 驱动（程序）</td>
</tr>
<tr>
<td>dynamic binding</td>
<td>动态系结 动态绑定</td>
</tr>
<tr>
<td>efficiency</td>
<td>效率 效率</td>
</tr>
<tr>
<td>efficient</td>
<td>高效 高效</td>
</tr>
</tbody>
</table>
</div>
<p>entity | 物体 实体、物体<br>encapsulation | 封装 封装<br>enclosing | class 外围类别（与巢状类别 nested ( 嵌套的) class 有关）外围类</p>
<h2 id="list-16"><a href="#list-16" class="headerlink" title="list 16"></a>list 16</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>enum (enumeration )</td>
<td>列举（一种 C++ 资料型别） 枚举</td>
</tr>
<tr>
<td>enumerators</td>
<td>列举元（enum 型别中的成员） 枚举成员、枚举器</td>
</tr>
<tr>
<td>equal</td>
<td>相等 相等</td>
</tr>
<tr>
<td>equality</td>
<td>相等性 相等性</td>
</tr>
<tr>
<td>equality operator</td>
<td>equality（等号）运算子 == 等号操作符</td>
</tr>
<tr>
<td>equivalence</td>
<td>等价性、等同性、对等性 等价性</td>
</tr>
<tr>
<td>equivalent</td>
<td>等价、等同、对等 等价</td>
</tr>
<tr>
<td>escape</td>
<td>code 转义码 转义码</td>
</tr>
<tr>
<td>evaluate</td>
<td>评估、求值、核定 评估</td>
</tr>
<tr>
<td>event</td>
<td>事件 事件</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-17"><a href="#list-17" class="headerlink" title="list 17"></a>list 17</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>event driven</td>
<td>事件驱动的 事件驱动的</td>
</tr>
<tr>
<td>exception</td>
<td>异常情况 异常</td>
</tr>
<tr>
<td>exception declaration</td>
<td>异常宣告（ref. C++ Primer 3/e, 11.3） 异常声明</td>
</tr>
<tr>
<td>exception handling</td>
<td>异常处理、异常处理机制 异常处理、异常处理机制</td>
</tr>
<tr>
<td>exception specification</td>
<td>异常规格（ref. C++ Primer 3/e, 11.4） 异常规范</td>
</tr>
<tr>
<td>exit</td>
<td>退离（指离开函式时的那一个执行点） 退出</td>
</tr>
<tr>
<td>explicit</td>
<td>明白的、明显的、显式 显式</td>
</tr>
<tr>
<td>export</td>
<td>汇出 引出、导出</td>
</tr>
<tr>
<td>expression</td>
<td>运算式、算式 表达式</td>
</tr>
<tr>
<td>facility</td>
<td>设施、设备 设施、设备</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-18"><a href="#list-18" class="headerlink" title="list 18"></a>list 18</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>feature</td>
<td>特性</td>
</tr>
<tr>
<td>field</td>
<td>栏位,资料栏（Java） 字段, 值域（Java）</td>
</tr>
<tr>
<td>file</td>
<td>档案 文件</td>
</tr>
<tr>
<td>firmware</td>
<td>韧体 固件</td>
</tr>
<tr>
<td>flag</td>
<td>旗标 标记</td>
</tr>
<tr>
<td>flash memory</td>
<td>快闪记忆体 闪存</td>
</tr>
<tr>
<td>flexibility</td>
<td>弹性 灵活性</td>
</tr>
<tr>
<td>flush</td>
<td>清理、扫清 刷新</td>
</tr>
<tr>
<td>font</td>
<td>字型 字体</td>
</tr>
<tr>
<td>form</td>
<td>表单（programming 用语） 窗体</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-19"><a href="#list-19" class="headerlink" title="list 19"></a>list 19</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>formal parameter</td>
<td>形式叁数 形式叁数</td>
</tr>
<tr>
<td>forward declaration</td>
<td>前置宣告 前置声明</td>
</tr>
<tr>
<td>forwarding</td>
<td>转呼叫,转发 转发</td>
</tr>
<tr>
<td>forwarding function</td>
<td>转呼叫函式,转发函式 转发函数</td>
</tr>
<tr>
<td>fractal</td>
<td>碎形 分形</td>
</tr>
<tr>
<td>framework</td>
<td>框架 框架</td>
</tr>
<tr>
<td>full specialization</td>
<td>全特化（ref. partial  specialization）</td>
</tr>
<tr>
<td>function</td>
<td>函式、函数 函数</td>
</tr>
<tr>
<td>function call operator</td>
<td>同 call operator</td>
</tr>
<tr>
<td>function object</td>
<td>函式物件（ref. C++ Primer 3/e, 12.3） 函数对象</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-20"><a href="#list-20" class="headerlink" title="list 20"></a>list 20</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>function overloaded resolution</td>
<td>函式多载决议程序 函数重载解决（方案）</td>
</tr>
<tr>
<td>functionality</td>
<td>功能、机能 功能</td>
</tr>
<tr>
<td>function template</td>
<td>函式模板、函式范本 函数模板</td>
</tr>
<tr>
<td>functor</td>
<td>仿函式 仿函式、函子</td>
</tr>
<tr>
<td>game</td>
<td>游戏 游戏</td>
</tr>
<tr>
<td>generate</td>
<td>生成</td>
</tr>
<tr>
<td>generic</td>
<td>泛型、一般化的 一般化的、通用的、泛化</td>
</tr>
<tr>
<td>generic algorithm</td>
<td>泛型演算法 通用算法</td>
</tr>
<tr>
<td>getter</td>
<td>(相对於 setter) 取值函式</td>
</tr>
<tr>
<td>global</td>
<td>全域的（对应於 local） 全局的</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-21"><a href="#list-21" class="headerlink" title="list 21"></a>list 21</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>global object</td>
<td>全域物件 全局对象</td>
</tr>
<tr>
<td>global scope resolution operator</td>
<td>全域生存空间（范围决议）运算子 :: 全局范围解析操作符</td>
</tr>
<tr>
<td>group</td>
<td>群组</td>
</tr>
<tr>
<td>group box</td>
<td>群组方块 分组框</td>
</tr>
<tr>
<td>guard clause</td>
<td>卫述句 (Refactoring, p250) 卫语句</td>
</tr>
<tr>
<td>GUI（Graphical User Interface）</td>
<td>图形介面 图形界面</td>
</tr>
<tr>
<td>hand shaking</td>
<td>握手协商</td>
</tr>
<tr>
<td>handle</td>
<td>识别码、识别号、号码牌、权柄 句柄</td>
</tr>
<tr>
<td>handler</td>
<td>处理常式 处理函数</td>
</tr>
<tr>
<td>hard－coded</td>
<td>编死的 硬编码的</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-22"><a href="#list-22" class="headerlink" title="list 22"></a>list 22</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>hard－copy</td>
<td>硬拷图 屏幕截图</td>
</tr>
<tr>
<td>hard disk</td>
<td>硬碟 硬盘</td>
</tr>
<tr>
<td>hardware</td>
<td>硬体 硬件</td>
</tr>
<tr>
<td>hash table</td>
<td>杂凑表 哈希表、散列表</td>
</tr>
<tr>
<td>header file</td>
<td>表头档、标头档 头文件</td>
</tr>
<tr>
<td>heap</td>
<td>堆积 堆</td>
</tr>
<tr>
<td>hierarchy</td>
<td>阶层体系 层次结构（体系）</td>
</tr>
<tr>
<td>hook</td>
<td>挂钩 钩子</td>
</tr>
<tr>
<td>hyperlink</td>
<td>超链结 超链接</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-23"><a href="#list-23" class="headerlink" title="list 23"></a>list 23</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>icon</td>
<td>图示、图标 图标</td>
</tr>
<tr>
<td>IDE（integrated development environment）</td>
<td>整合开发环境 集成开发环境</td>
</tr>
<tr>
<td>identifier</td>
<td>识别字、识别符号 标识符</td>
</tr>
<tr>
<td>if and only if</td>
<td>若且唯若 当且仅当</td>
</tr>
<tr>
<td>Illinois</td>
<td>伊利诺 伊利诺斯</td>
</tr>
<tr>
<td>image</td>
<td>影像 图象</td>
</tr>
<tr>
<td>immediate base</td>
<td>直接的（紧临的）上层 base class。 直接上层基类</td>
</tr>
<tr>
<td>immediate derived</td>
<td>直接的（紧临的）下层 derived class。 直接下层派生类</td>
</tr>
<tr>
<td>immutability</td>
<td>不变性</td>
</tr>
<tr>
<td>immutable</td>
<td>不可变（的）</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-24"><a href="#list-24" class="headerlink" title="list 24"></a>list 24</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>implement</td>
<td>实作、实现 实现</td>
</tr>
<tr>
<td>implementation</td>
<td>实作品、实作体、实作码、实件 实现</td>
</tr>
<tr>
<td>implicit</td>
<td>隐喻的、暗自的、隐式 隐式</td>
</tr>
<tr>
<td>import</td>
<td>汇入 导入</td>
</tr>
<tr>
<td>increment operator</td>
<td>累加运算子 ++ 增加操作符</td>
</tr>
<tr>
<td>infinite loop</td>
<td>无穷回圈 无限循环</td>
</tr>
<tr>
<td>infinite recursive</td>
<td>无穷递回 无限递归</td>
</tr>
<tr>
<td>information</td>
<td>资讯 信息</td>
</tr>
<tr>
<td>infrastructure</td>
<td>公共基础建设</td>
</tr>
<tr>
<td>inheritance</td>
<td>继承、继承机制 继承、继承机制</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-25"><a href="#list-25" class="headerlink" title="list 25"></a>list 25</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>inline</td>
<td>行内 内联</td>
</tr>
<tr>
<td>inline expansion</td>
<td>行内展开 内联展开</td>
</tr>
<tr>
<td>initialization</td>
<td>初始化（动作） 初始化</td>
</tr>
<tr>
<td>initialization list</td>
<td>初值列 初始值列表</td>
</tr>
<tr>
<td>initialize</td>
<td>初始化 初始化</td>
</tr>
<tr>
<td>inner class</td>
<td>内隐类别 内嵌类</td>
</tr>
<tr>
<td>instance</td>
<td>实体 实例（根据某种表述而实际产生的「东西」）</td>
</tr>
<tr>
<td>instantiated</td>
<td>具现化、实体化（常应用於 template） 实例化</td>
</tr>
<tr>
<td>instantiation</td>
<td>具现体、具现化实体（常应用於 template） 实例</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-26"><a href="#list-26" class="headerlink" title="list 26"></a>list 26</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>integer</td>
<td>(integral ) 整数（的） 整型（的）</td>
</tr>
<tr>
<td>integrate</td>
<td>整合 集成</td>
</tr>
<tr>
<td>interacts</td>
<td>交谈、互动 交互</td>
</tr>
<tr>
<td>interface</td>
<td>介面 接口</td>
</tr>
<tr>
<td>for GUI （Graphical  User Interface）</td>
<td>介面 界面</td>
</tr>
<tr>
<td>interpreter</td>
<td>直译器 解释器</td>
</tr>
<tr>
<td>invariants</td>
<td>恒常性,约束条件 约束条件</td>
</tr>
<tr>
<td>invoke</td>
<td>唤起 调用</td>
</tr>
<tr>
<td>iterate</td>
<td>迭代（回圈一个轮回一个轮回地进行） 迭代</td>
</tr>
<tr>
<td>iterative</td>
<td>反覆的，迭代的</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-27"><a href="#list-27" class="headerlink" title="list 27"></a>list 27</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>iterator</td>
<td>迭代器（一种泛型指标） 迭代器</td>
</tr>
<tr>
<td>iteration</td>
<td>迭代（回圈每次轮回称为一个 iteration） 迭代</td>
</tr>
<tr>
<td>item</td>
<td>项目、条款 项、条款、项目</td>
</tr>
<tr>
<td>laser</td>
<td>雷射 激光</td>
</tr>
<tr>
<td>level</td>
<td>阶 层 (级) 例 high level 高阶 高层</td>
</tr>
<tr>
<td>library</td>
<td>程式库、函式库 库、函数库</td>
</tr>
<tr>
<td>lifetime</td>
<td>生命期、寿命 生命期、寿命</td>
</tr>
<tr>
<td>link</td>
<td>联结、连结 连接,链接</td>
</tr>
<tr>
<td>linker</td>
<td>联结器、连结器 连接器</td>
</tr>
<tr>
<td>literal constant</td>
<td>字面常数（例 3.14 或 “hi” 这等常数值） 字面常数</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-28"><a href="#list-28" class="headerlink" title="list 28"></a>list 28</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>list</td>
<td>串列（linked－list） 列表、表、链表</td>
</tr>
<tr>
<td>list box</td>
<td>列表方块、列表框 列表框</td>
</tr>
<tr>
<td>load</td>
<td>载入 装载</td>
</tr>
<tr>
<td>loader</td>
<td>载入器 装载器、载入器</td>
</tr>
<tr>
<td>local</td>
<td>区域的（对应於 global） 局部的</td>
</tr>
<tr>
<td>local object</td>
<td>区域物件 局部对象</td>
</tr>
<tr>
<td>lock</td>
<td>机锁</td>
</tr>
<tr>
<td>loop</td>
<td>回圈 循环</td>
</tr>
<tr>
<td>lvalue</td>
<td>左值 左值</td>
</tr>
<tr>
<td>macro</td>
<td>巨集 宏</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-29"><a href="#list-29" class="headerlink" title="list 29"></a>list 29</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>magic</td>
<td>number 魔术数字 魔法数</td>
</tr>
<tr>
<td>maintain</td>
<td>维护 维护</td>
</tr>
<tr>
<td>manipulator</td>
<td>操纵器（iostream 预先定义的一种东西） 操纵器</td>
</tr>
<tr>
<td>marshal</td>
<td>编列 列集;叁考 demarshal</td>
</tr>
<tr>
<td>mechanism</td>
<td>机制 机制</td>
</tr>
<tr>
<td>member</td>
<td>成员 成员</td>
</tr>
<tr>
<td>member access operator</td>
<td>成员取用运算子（有 dot 和 arrow 两种） 成员存取操作符</td>
</tr>
<tr>
<td>member function</td>
<td>成员函式 成员函数</td>
</tr>
<tr>
<td>member initialization</td>
<td>list 成员初值列 成员初始值列表</td>
</tr>
<tr>
<td>memberwise</td>
<td>以 member 为单元┅、members 逐一┅ 以成员为单位</td>
</tr>
</tbody>
</table>
</div>
<h2 id="list-30"><a href="#list-30" class="headerlink" title="list 30"></a>list 30</h2><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
</tr>
</thead>
<tbody>
<tr>
<td>memberwise</td>
<td>copy 以 members 为单元逐一复制</td>
</tr>
<tr>
<td>memory</td>
<td>记忆体 内存</td>
</tr>
<tr>
<td>menu</td>
<td>表单、选单 菜单</td>
</tr>
<tr>
<td>message</td>
<td>讯息 消息</td>
</tr>
<tr>
<td>message based</td>
<td>以讯息为基础的 基於消息的</td>
</tr>
<tr>
<td>message loop</td>
<td>讯息回圈 消息环</td>
</tr>
<tr>
<td>method</td>
<td>(java) 方法、行为、函式 方法</td>
</tr>
<tr>
<td>meta－</td>
<td>超－ 元-;例 meta－programming 超编程 元编程</td>
</tr>
<tr>
<td>micro</td>
<td>微</td>
</tr>
<tr>
<td>middleware</td>
<td>中介层 中间件</td>
</tr>
<tr>
<td>modeling</td>
<td>模塑</td>
</tr>
<tr>
<td>modeling language</td>
<td>塑模语言，建模语言</td>
</tr>
<tr>
<td>modem</td>
<td>数据机 调制解调器</td>
</tr>
<tr>
<td>module</td>
<td>模组 模块</td>
</tr>
<tr>
<td>modifier</td>
<td>饰词 修饰符</td>
</tr>
<tr>
<td>most derived</td>
<td>class 最末层衍生类别 最底层的派生类</td>
</tr>
<tr>
<td>mouse</td>
<td>滑鼠 鼠标</td>
</tr>
<tr>
<td>mutable</td>
<td>可变的 可变的</td>
</tr>
<tr>
<td>multi－tasking</td>
<td>多工 多任务</td>
</tr>
<tr>
<td>namespace</td>
<td>命名空间 名字空间、命名空间</td>
</tr>
<tr>
<td>native</td>
<td>原生的 本地的、固有的</td>
</tr>
<tr>
<td>nested</td>
<td>class 巢状类别 嵌套类</td>
</tr>
<tr>
<td>network</td>
<td>网路 网络</td>
</tr>
<tr>
<td>network card</td>
<td>网路卡 网卡</td>
</tr>
<tr>
<td>object</td>
<td>物件 对象</td>
</tr>
<tr>
<td>object based</td>
<td>以物件为基础的 基於对象的</td>
</tr>
<tr>
<td>object file</td>
<td>目的档 目标文件</td>
</tr>
<tr>
<td>object model</td>
<td>物件模型 对象模型</td>
</tr>
<tr>
<td>object oriented</td>
<td>物件导向的 面向对象的</td>
</tr>
<tr>
<td>online</td>
<td>线上 在线</td>
</tr>
<tr>
<td>opaque</td>
<td>不透明的</td>
</tr>
<tr>
<td>operand</td>
<td>运算元 操作数</td>
</tr>
<tr>
<td>operating system</td>
<td>(OS) 作业系统 操作系统</td>
</tr>
<tr>
<td>operation</td>
<td>操作、操作行为 操作</td>
</tr>
<tr>
<td>operator</td>
<td>运算子 操作符、运算符</td>
</tr>
<tr>
<td>option</td>
<td>选项，可选方案 选项</td>
</tr>
<tr>
<td>ordinary</td>
<td>常规的 常规的</td>
</tr>
<tr>
<td>overflow</td>
<td>上限溢位（相对於 underflow） 溢出（underflow:下溢）</td>
</tr>
<tr>
<td>overhead</td>
<td>额外负担、额外开销 额外开销</td>
</tr>
<tr>
<td>overload</td>
<td>多载化、多载化、重载 重载</td>
</tr>
<tr>
<td>overloaded</td>
<td>function 多载化函式 重载的函数</td>
</tr>
<tr>
<td>overloaded operator</td>
<td>多载化运算子 被重载的操作符</td>
</tr>
<tr>
<td>overloaded set</td>
<td>多载集合 重载集合</td>
</tr>
<tr>
<td>override</td>
<td>改写、覆写 重载、改写、重新定义（在 derived class 中重新定义虚拟函式)</td>
</tr>
<tr>
<td>package</td>
<td>套件 包</td>
</tr>
<tr>
<td>pair</td>
<td>对组</td>
</tr>
<tr>
<td>palette</td>
<td>调色盘、组件盘、工具箱</td>
</tr>
<tr>
<td>pane</td>
<td>窗格 窗格（有时为嵌板之意，例 Java Content Pane）</td>
</tr>
<tr>
<td>parallel</td>
<td>平行 并行</td>
</tr>
<tr>
<td>parameter</td>
<td>叁数（函式叁数列上的变数） 叁数、形式叁数、形叁</td>
</tr>
<tr>
<td>parameter list</td>
<td>叁数列 叁数列表</td>
</tr>
<tr>
<td>parent</td>
<td>class 父类别（或称 base class） 父类</td>
</tr>
<tr>
<td>parentheses</td>
<td>小括弧、小括号 圆括弧、圆括号</td>
</tr>
<tr>
<td>parse</td>
<td>解析 解析</td>
</tr>
<tr>
<td>part</td>
<td>零件 部件</td>
</tr>
<tr>
<td>partial specialization</td>
<td>偏特化（ref. C++ Primer 3/e, 16.10） 局部特化（ref. full specialization）</td>
</tr>
<tr>
<td>pass by address</td>
<td>传址（函式引数的传递方式）（非正式用语）传地址</td>
</tr>
<tr>
<td>pass by reference</td>
<td>传址（函式引数的一种传递方式） 传地址, 按引用传递</td>
</tr>
<tr>
<td>pass by value</td>
<td>传值（函式引数的一种传递方式） 按值传递</td>
</tr>
<tr>
<td>pattern</td>
<td>范式、样式 模式</td>
</tr>
<tr>
<td>performance</td>
<td>效率、性能兼而有之 性能</td>
</tr>
<tr>
<td>persistence</td>
<td>永续性 持久性</td>
</tr>
<tr>
<td>pixel</td>
<td>图素、像素 像素</td>
</tr>
<tr>
<td>placement delete ref</td>
<td>C++ Primer 3/e, 15.8.2</td>
</tr>
<tr>
<td>placement new ref</td>
<td>C++ Primer 3/e, 15.8.2</td>
</tr>
<tr>
<td>platform</td>
<td>平台 平台</td>
</tr>
<tr>
<td>pointer</td>
<td>指标 指针;址位器（和址叁器 reference 形成对映，满好）</td>
</tr>
<tr>
<td>poll</td>
<td>轮询 轮询</td>
</tr>
<tr>
<td>polymorphism</td>
<td>多型 多态</td>
</tr>
<tr>
<td>pop up</td>
<td>冒起式、弹出式 弹出式</td>
</tr>
<tr>
<td>port</td>
<td>埠 端口</td>
</tr>
<tr>
<td>postfix</td>
<td>後置式、後序式 後置式</td>
</tr>
<tr>
<td>precedence</td>
<td>优先序（通常用於运算子的优先执行次序）</td>
</tr>
<tr>
<td>prefix</td>
<td>前置式、前序式 前置式</td>
</tr>
<tr>
<td>preprocessor</td>
<td>前处理器 预处理器</td>
</tr>
<tr>
<td>prime</td>
<td>质数 素数</td>
</tr>
<tr>
<td>primitive</td>
<td>type 基本型别 (不同於 base class,基础类别)</td>
</tr>
<tr>
<td>print</td>
<td>列印 打印</td>
</tr>
<tr>
<td>printer</td>
<td>印表机 打印机</td>
</tr>
<tr>
<td>priority</td>
<td>优先权 (通常用於执行绪获得 CPU 时间的优先次序）</td>
</tr>
<tr>
<td>procedure</td>
<td>程序 过程</td>
</tr>
<tr>
<td>procedural</td>
<td>程序性的、程序式的 过程式的、过程化的</td>
</tr>
<tr>
<td>process</td>
<td>行程 进程</td>
</tr>
<tr>
<td>profile</td>
<td>评测 评测</td>
</tr>
<tr>
<td>profiler</td>
<td>效能（效率）评测器 效能（性能）评测器</td>
</tr>
<tr>
<td>programmer</td>
<td>程式员 程序员</td>
</tr>
<tr>
<td>programming</td>
<td>编程、程式设计、程式化 编程</td>
</tr>
<tr>
<td>progress</td>
<td>进度指示器 进度指示器</td>
</tr>
<tr>
<td>project</td>
<td>专案 项目、工程</td>
</tr>
<tr>
<td>property</td>
<td>属性</td>
</tr>
<tr>
<td>protocol</td>
<td>协定 协议</td>
</tr>
<tr>
<td>pseudo code</td>
<td>假码、虚拟码、伪码 伪码</td>
</tr>
<tr>
<td>qualified</td>
<td>经过资格修饰（例如加上 scope 运算子） 限定</td>
</tr>
<tr>
<td>qualifier</td>
<td>资格修饰词、饰词 限定修饰词</td>
</tr>
<tr>
<td>quality</td>
<td>品质 质量</td>
</tr>
<tr>
<td>queue</td>
<td>伫列 队列</td>
</tr>
<tr>
<td>radian</td>
<td>径度 弧度</td>
</tr>
<tr>
<td>radio</td>
<td>button 圆钮 单选按钮</td>
</tr>
<tr>
<td>raise</td>
<td>引发（常用来表示发出一个 exception） 引起、引发</td>
</tr>
<tr>
<td>random number</td>
<td>随机数、乱数 随机数</td>
</tr>
<tr>
<td>range</td>
<td>范围、区间（用於 STL 时） 范围、区间</td>
</tr>
<tr>
<td>rank</td>
<td>等级、分等（ref. C++Primer 3/e 9,15章） 等级</td>
</tr>
<tr>
<td>raw</td>
<td>生鲜的、未经处理的 未经处理的</td>
</tr>
<tr>
<td>record</td>
<td>记录 记录</td>
</tr>
<tr>
<td>recordset</td>
<td>记录集 记录集</td>
</tr>
<tr>
<td>recursive</td>
<td>递回 递归</td>
</tr>
<tr>
<td>re－direction</td>
<td>重导向 重定向</td>
</tr>
<tr>
<td>refactoring</td>
<td>重构、重整 重构</td>
</tr>
<tr>
<td>refer</td>
<td>取用 叁考</td>
</tr>
<tr>
<td>refer to</td>
<td>指向、指涉、指代</td>
</tr>
<tr>
<td>reference</td>
<td>（C++ 中类似指标的东西，相当於 “化身”） 引用、叁考 址叁器, see pointer</td>
</tr>
<tr>
<td>register</td>
<td>暂存器 寄存器</td>
</tr>
<tr>
<td>reflection</td>
<td>反射 反射、映像</td>
</tr>
<tr>
<td>relational</td>
<td>database 关联式资料库 关系数据库</td>
</tr>
<tr>
<td>represent</td>
<td>表述，表现 表述，表现</td>
</tr>
<tr>
<td>resolve</td>
<td>决议（为算式中的符号名称寻找 解析 对应之宣告式的过程）</td>
</tr>
<tr>
<td>resolution</td>
<td>决议程序、决议过程 解析过程</td>
</tr>
<tr>
<td>resolution</td>
<td>解析度 分辨率</td>
</tr>
<tr>
<td>restriction</td>
<td>局限</td>
</tr>
<tr>
<td>return</td>
<td>传回、回返 返回</td>
</tr>
<tr>
<td>return type</td>
<td>回返型别 返回类型</td>
</tr>
<tr>
<td>return value</td>
<td>回返值 返回值</td>
</tr>
<tr>
<td>robust</td>
<td>强固、稳健 健壮</td>
</tr>
<tr>
<td>robustness</td>
<td>强固性、稳健性 健壮性</td>
</tr>
<tr>
<td>routine</td>
<td>常式 例程</td>
</tr>
<tr>
<td>runtime</td>
<td>执行期 运行期、运行时</td>
</tr>
<tr>
<td>common language runtime (CLR)</td>
<td>译为通用语言运行时</td>
</tr>
<tr>
<td>rvalue</td>
<td>右值 右值</td>
</tr>
<tr>
<td>save</td>
<td>储存 存储</td>
</tr>
<tr>
<td>schedule</td>
<td>排程 调度</td>
</tr>
<tr>
<td>scheduler</td>
<td>排程器 调度程序</td>
</tr>
<tr>
<td>scheme</td>
<td>结构纲目、组织纲目</td>
</tr>
<tr>
<td>scroll</td>
<td>bar 卷轴 滚动条</td>
</tr>
<tr>
<td>scope</td>
<td>生存空间、生存范围、范畴、作用域 生存空间</td>
</tr>
<tr>
<td>scope operator</td>
<td>生存空间（范围决议）运算子 :: 生存空间操作符</td>
</tr>
<tr>
<td>scope resolution operator</td>
<td>生存空间决议运算子 生存空间解析操作符（与scope operator同）</td>
</tr>
<tr>
<td>screen</td>
<td>萤幕 屏幕</td>
</tr>
<tr>
<td>search</td>
<td>搜寻 查找</td>
</tr>
<tr>
<td>semantics</td>
<td>语意 语义</td>
</tr>
<tr>
<td>sequential container</td>
<td>序列式容器 顺序式容器（对应於 associative container）</td>
</tr>
<tr>
<td>server</td>
<td>伺服器、伺服端 服务器、服务端</td>
</tr>
<tr>
<td>serial</td>
<td>串行</td>
</tr>
<tr>
<td>serialization</td>
<td>次第读写,序列化 序列化 (serialize) </td>
</tr>
<tr>
<td>setter</td>
<td>(相对於 getter) 设值函式</td>
</tr>
<tr>
<td>signal</td>
<td>信号</td>
</tr>
<tr>
<td>signature</td>
<td>标记式、签名式、署名式 签名</td>
</tr>
<tr>
<td>slider</td>
<td>滚轴 滑块</td>
</tr>
<tr>
<td>slot</td>
<td>条孔、槽 槽</td>
</tr>
<tr>
<td>smart pointer</td>
<td>灵巧指标、精灵指标 智能指针</td>
</tr>
<tr>
<td>snapshot</td>
<td>萤幕快照（图） 屏幕截图</td>
</tr>
<tr>
<td>specialization</td>
<td>特殊化、特殊化定义、特殊化宣告 特化</td>
</tr>
<tr>
<td>specification</td>
<td>规格 规格、规范</td>
</tr>
<tr>
<td>splitter</td>
<td>分裂视窗 切分窗口</td>
</tr>
<tr>
<td>software</td>
<td>软体 软件</td>
</tr>
<tr>
<td>solution</td>
<td>解法,解决方案 方案</td>
</tr>
<tr>
<td>source</td>
<td>原始码 源码、源代码</td>
</tr>
<tr>
<td>stack</td>
<td>(d)堆叠 栈</td>
</tr>
<tr>
<td>stack unwinding</td>
<td>堆叠辗转开解（此词用於 exception 主题） 栈辗转开解 *</td>
</tr>
<tr>
<td>standard</td>
<td>标准程式库</td>
</tr>
<tr>
<td>standard template library</td>
<td>标准模板程式库</td>
</tr>
<tr>
<td>statement</td>
<td>述句 语句、声明</td>
</tr>
<tr>
<td>status bar</td>
<td>状态列、状态栏 状态条</td>
</tr>
<tr>
<td>STL</td>
<td>见 standard template library</td>
</tr>
<tr>
<td>stream</td>
<td>资料流、串流 流</td>
</tr>
<tr>
<td>string</td>
<td>字串 字符串</td>
</tr>
<tr>
<td>subroutine</td>
<td>子程序调用序列</td>
</tr>
<tr>
<td>subscript operator 下标运算子</td>
<td>下标操作符</td>
</tr>
<tr>
<td>subtype</td>
<td>子型别 子类型</td>
</tr>
<tr>
<td>support</td>
<td>支援 支持</td>
</tr>
<tr>
<td>suspend</td>
<td>虚悬 挂起</td>
</tr>
<tr>
<td>symbol</td>
<td>符号 记号</td>
</tr>
<tr>
<td>syntax</td>
<td>语法 语法</td>
</tr>
<tr>
<td>tag</td>
<td>标签 标记 索引标签,页签</td>
</tr>
<tr>
<td>target</td>
<td>标的（例 target pointer ：标的指标） 目标</td>
</tr>
<tr>
<td>task switch</td>
<td>工作切换 任务切换</td>
</tr>
<tr>
<td>template</td>
<td>模板、范本 模板</td>
</tr>
<tr>
<td>template argument deduction</td>
<td>模板引数推导 模板叁数推导</td>
</tr>
<tr>
<td>template explicit specialization</td>
<td>模板显式特化（版本） 模板显式特化</td>
</tr>
<tr>
<td>template parameter</td>
<td>模板叁数 模板叁数</td>
</tr>
<tr>
<td>temporary object</td>
<td>暂时物件 临时对象</td>
</tr>
<tr>
<td>text</td>
<td>文字 文本</td>
</tr>
<tr>
<td>text file</td>
<td>程式本文档（放置程式原始码的档案） 文本文件</td>
</tr>
<tr>
<td>thread</td>
<td>执行绪 线程</td>
</tr>
<tr>
<td>thread safe</td>
<td>多绪安全 多线程安全</td>
</tr>
<tr>
<td>throw</td>
<td>丢掷（常指发出一个 exception） 丢掷、引发</td>
</tr>
<tr>
<td>token</td>
<td>语汇单元 符号、标记</td>
</tr>
<tr>
<td>transaction</td>
<td>交易 事务</td>
</tr>
<tr>
<td>transparent(ly)</td>
<td>透通的(地)</td>
</tr>
<tr>
<td>traverse</td>
<td>巡访（来回走动） 遍历</td>
</tr>
<tr>
<td>trigger</td>
<td>触发 触发</td>
</tr>
<tr>
<td>type</td>
<td>型别 类型</td>
</tr>
<tr>
<td>UML unified modeling language</td>
<td>统一建模语言</td>
</tr>
<tr>
<td>unary function</td>
<td>一元函式 单叁函数</td>
</tr>
<tr>
<td>unary operator</td>
<td>一元运算子 一元操作符</td>
</tr>
<tr>
<td>underflow</td>
<td>下限溢位（相对於 overflow） 下溢</td>
</tr>
<tr>
<td>unchecked</td>
<td>exception 不可控异常(Java)</td>
</tr>
<tr>
<td>unqualified</td>
<td>未经资格修饰（而直接取用）unwinding  ref . stack  unwinding </td>
</tr>
<tr>
<td>user</td>
<td>使用者、用户 用户</td>
</tr>
<tr>
<td>user interface</td>
<td>使用者介面、用户介面、人机介面 用户界面</td>
</tr>
<tr>
<td>variable</td>
<td>变数（相对於常数 const） 变量</td>
</tr>
<tr>
<td>vector</td>
<td>向量（一种容器，有点类似 array） 向量、矢量</td>
</tr>
<tr>
<td>viable</td>
<td>可实行的、可行的 可行的</td>
</tr>
<tr>
<td>viable function</td>
<td>可行函式 可行函数（从 candidate functions 中挑出者）</td>
</tr>
<tr>
<td>video</td>
<td>视讯 视频</td>
</tr>
<tr>
<td>view</td>
<td>(1) 视图(document/view) 文档/视图</td>
</tr>
<tr>
<td>view</td>
<td>(2) 映件</td>
</tr>
<tr>
<td>virtual</td>
<td>function 虚拟函式 虚函数</td>
</tr>
<tr>
<td>virtual machine</td>
<td>虚拟机器 虚拟机</td>
</tr>
<tr>
<td>virtual memory</td>
<td>虚拟记忆体 虚内存, 虚存</td>
</tr>
<tr>
<td>volatile</td>
<td>易挥发的、易变的</td>
</tr>
<tr>
<td>vowel</td>
<td>母音 元音字母</td>
</tr>
<tr>
<td>window</td>
<td>视窗 窗口</td>
</tr>
<tr>
<td>window function</td>
<td>视窗函式 窗口函数</td>
</tr>
<tr>
<td>window procedure</td>
<td>视窗函式 窗口过程</td>
</tr>
<tr>
<td>word</td>
<td>字 单词</td>
</tr>
<tr>
<td>word processor</td>
<td>文书处理器 字处理器</td>
</tr>
<tr>
<td>wrapper</td>
<td>外覆、外包 包装absence 缺席</td>
</tr>
<tr>
<td>access</td>
<td>访问存取通路进入</td>
</tr>
<tr>
<td>achieve</td>
<td>实现完成</td>
</tr>
<tr>
<td>acquire</td>
<td>获得</td>
</tr>
<tr>
<td>adjacency list method</td>
<td>邻接表表示法</td>
</tr>
<tr>
<td>adjacency matrix  method</td>
<td>邻接矩阵表示法</td>
</tr>
<tr>
<td>algorithm</td>
<td>算法</td>
</tr>
<tr>
<td>allocate</td>
<td>留下分配</td>
</tr>
<tr>
<td>analog</td>
<td>推论</td>
</tr>
<tr>
<td>append</td>
<td>添加</td>
</tr>
<tr>
<td>archive</td>
<td>档案归档</td>
</tr>
<tr>
<td>array</td>
<td>数组</td>
</tr>
<tr>
<td>assign</td>
<td>分配</td>
</tr>
<tr>
<td>assume</td>
<td>假设</td>
</tr>
<tr>
<td>assurance</td>
<td>确信信任</td>
</tr>
<tr>
<td>ATM(asynchronous transfer mode )</td>
<td>异步传输模式</td>
</tr>
<tr>
<td>b.. real programs kernels</td>
<td>实程序核心程序</td>
</tr>
<tr>
<td>b.. toy benchmark synthetic benchmark</td>
<td>简单基准程序复合基准程序</td>
</tr>
<tr>
<td>balance</td>
<td>平衡</td>
</tr>
<tr>
<td>bandwidth</td>
<td>带宽</td>
</tr>
<tr>
<td>batch</td>
<td>一批一组</td>
</tr>
<tr>
<td>benchmark</td>
<td>基准测试程序</td>
</tr>
<tr>
<td>best-fit algorithm</td>
<td>最佳适应算法</td>
</tr>
<tr>
<td>BFS(breadth first search )</td>
<td>广度优先搜索法</td>
</tr>
<tr>
<td>binary</td>
<td>二进制</td>
</tr>
<tr>
<td>binary relation</td>
<td>二元关系</td>
</tr>
<tr>
<td>binary tree</td>
<td>二叉树</td>
</tr>
<tr>
<td>bit series</td>
<td>比特序列</td>
</tr>
<tr>
<td>black-box white-box</td>
<td>黑盒白盒</td>
</tr>
<tr>
<td>block miss</td>
<td>块失效</td>
</tr>
<tr>
<td>blocked</td>
<td>阻塞(等待状态也称阻塞或封锁状态)</td>
</tr>
<tr>
<td>boundary</td>
<td>界线分界</td>
</tr>
<tr>
<td>bridge</td>
<td>网桥</td>
</tr>
<tr>
<td>bubble  sort</td>
<td>冒泡排序</td>
</tr>
<tr>
<td>calculation</td>
<td>计算</td>
</tr>
<tr>
<td>candidate key</td>
<td>候选键(辅键)</td>
</tr>
<tr>
<td>capability</td>
<td>能力才能</td>
</tr>
<tr>
<td>capacity</td>
<td>容量</td>
</tr>
<tr>
<td>cartesian product</td>
<td>笛卡尔积</td>
</tr>
<tr>
<td>CASE(com.. aided sof.. engineering)</td>
<td>计算机辅助软件工程</td>
</tr>
<tr>
<td>CCP(communication control processor )</td>
<td>通信控制处理机</td>
</tr>
<tr>
<td>cell</td>
<td>信元</td>
</tr>
<tr>
<td>characteristic</td>
<td>特征特性</td>
</tr>
<tr>
<td>circuit switching</td>
<td>线路交换</td>
</tr>
<tr>
<td>circular wait</td>
<td>循环等待</td>
</tr>
<tr>
<td>CISC(complex instruction set computer )</td>
<td>复杂指令集计算机</td>
</tr>
<tr>
<td>class</td>
<td>类</td>
</tr>
<tr>
<td>Client/Server</td>
<td>客户机/服务器</td>
</tr>
<tr>
<td>clock cycle clock rate</td>
<td>时钟周期时钟频率</td>
</tr>
<tr>
<td>coaxial cable</td>
<td>同轴电缆</td>
</tr>
<tr>
<td>cohesion coupling</td>
<td>内聚耦合</td>
</tr>
<tr>
<td>coincidental logical procedural functional</td>
<td>偶然内聚逻辑内聚过程内聚功能内聚</td>
</tr>
<tr>
<td>combination</td>
<td>联合配合</td>
</tr>
<tr>
<td>common</td>
<td>公用的共同的</td>
</tr>
<tr>
<td>communication</td>
<td>通信</td>
</tr>
<tr>
<td>complement number</td>
<td>补码</td>
</tr>
<tr>
<td>component</td>
<td>成分</td>
</tr>
<tr>
<td>concept</td>
<td>概念观念</td>
</tr>
<tr>
<td>condition</td>
<td>情况状况</td>
</tr>
<tr>
<td>conform</td>
<td>符合</td>
</tr>
<tr>
<td>consist</td>
<td>组成存在</td>
</tr>
<tr>
<td>constrain</td>
<td>约束</td>
</tr>
<tr>
<td>contain</td>
<td>包含</td>
</tr>
<tr>
<td>correspond</td>
<td>(corresponding) 相符合(相应的一致的)</td>
</tr>
<tr>
<td>CPETT</td>
<td>计算机性能评价工具与技术</td>
</tr>
<tr>
<td>CPI</td>
<td>每条指令需要的周期数</td>
</tr>
<tr>
<td>CSMA/CD</td>
<td>带冲突检测的载波监听多路访问</td>
</tr>
<tr>
<td>cursor</td>
<td>游标</td>
</tr>
<tr>
<td>cyclic redundancy check</td>
<td>循环冗余校验</td>
</tr>
<tr>
<td>database: integrity consistency restory</td>
<td>完整性一致性可恢复性</td>
</tr>
<tr>
<td>database: security efficiency</td>
<td>数据库设计的目标: 安全性效率</td>
</tr>
<tr>
<td>deadlock: mutual exclusion</td>
<td>死锁条件: 互斥</td>
</tr>
<tr>
<td>deadlock: circular wait no preemption</td>
<td>死锁条件: 循环等待狗熊先权</td>
</tr>
<tr>
<td>decimal</td>
<td>十进位的</td>
</tr>
<tr>
<td>decision</td>
<td>决定判断</td>
</tr>
<tr>
<td>decomposition</td>
<td>双重的混合的</td>
</tr>
<tr>
<td>decrease</td>
<td>减少</td>
</tr>
<tr>
<td>definition</td>
<td>定义</td>
</tr>
<tr>
<td>definition phase</td>
<td>定义阶段</td>
</tr>
<tr>
<td>demonstrate</td>
<td>证明</td>
</tr>
</tbody>
</table>
</div>
<p>determine |限定<br>development phase |开发阶段<br>DFS(depth first search)|深度优先搜索法<br>diagram| 图表<br>Difference Manchester| 差分曼彻斯特<br>directed graph undirected graph |有向图无向图<br>distinguish| 辩认区别<br>distributed| system 分布式系统<br>divide division| 分开除除法<br>divide union intersection difference |除并交差<br>document| 文件文档<br>DQDB(distributed queue dual bus) |分布队列双总线<br>draw |绘制<br>dual |二元的双的<br>dynamic design process| 动态定义过程<br>element |元素要素<br>elevator (scan) algorithm |电梯算法又称扫描算法<br>encapsulation inheritance|封装(压缩) 继承(遗传)<br>encode |译成密码<br>entity | 实体<br>entity integrity  rule | 实体完整性规则<br>equal |相等的<br>equation | 方程式等式<br>estimate | 估计判断<br>Ethernet | 以太网<br>evolution | 发展演化<br>exceed |超过<br>exchange sort |交换排序<br>exclusive locks |排它锁(简记为X 锁)<br>execute | 实现执行<br>exhibit |表现展示陈列<br>existence |存在发生<br>expertise |专门技术<br>external (internal ) fragmentation | 外(内)碎片<br>fault page fault |中断过错页中断<br>FDDI(fiber distributed data interface) |光纤分布式数据接口<br>FDM(frequency division multiplexing |频分多路复用<br>fiber optic cable | 光缆<br>FIFO replacement policy | 先进先出替换算法<br>figure |数字图形<br>final |最后的最终的<br>first normal form |第一范式<br>floppy | 活动盘片(软盘)<br>foreign key domain tuple | 外来键值域元组<br>form |形状形式<br>formula |公式表达式<br>foundation |基础根据基金<br>frame page frame |帧结构页结构<br>frequency |频率<br>FTP(File Transfer Protocol ) |文件传送服务<br>function |函数<br>functionally dependent |函数依赖<br>gateway | 网间连接器<br>gather | 聚集采集推测<br>general |-purose registers 通用寄存器<br>generate | 产生<br>grade |等级标准<br>graph  (graphic )| 图<br>Gopher |将用户的请求自动转换成<br>guarantee |保证确定<br>hash table hash function collision | 哈希表哈希函数(散列函数) 碰撞<br>HDLC（High-level Data Link Control）|面向比特型数据链路层协议<br>hit rate |命中率<br>host | 主计算机<br>host language statement |主语言语句<br>hypertext | 超级文本<br>illustrate | 举例说明<br>independent | 独立的<br>index |索引<br>indirect |间接的<br>influence |有影响的<br>initially | 最初开头<br>insertion sort | 插入排序<br>instruction format | 指令格式<br>instruction set |指令集<br>interface |接口分界面连接体<br>internal | 内部的内在的<br>interrupt |中断<br>IPC （Information Processing Center）|工业过程控制<br>ISAM VSAM |索引顺序存取方法虚拟存储存取方法<br>ISAM: （Index Sequential  Access Mode ）|<br>VSAM: (Virtual Storage Access Method)|<br>join natural join semi join |连接自然连接半连接<br>judgment |判断<br>kernel executive supervisor user |核心执行管理用户<br>kernels | 核心程序<br>key comparison | 键(码)值比较<br>LAN(local area network) |局域网<br>load |负载载入<br>logical functional |逻辑内聚功能内聚<br>longitudinal |水平的<br>loop | 圈环状<br>maintain |维护保养供给<br>maintanence phase | 维护(保养)阶段<br>MAN(metropolitan area network) |城域网<br>Manchester |曼彻斯特<br>map |地图映射图<br>matrix |矩阵点阵<br>memory reference | 存储器参量<br>message switching |报文交换<br>method |方法技巧<br>MFLOP(million floating point operate)|ps 每秒百万次浮点运算<br>minimum | 最小的<br>MIPS(millions of instructions per second) |每秒百万条指令<br>module |单位基准<br>monitor (model benchmark physcal) method |监视(模型基准物理)法<br>multilevel data flow chart | 分层数据流图<br>multiple | 复合的多样的<br>multiple-term formula | 多项式<br>multiplexing | 多路复用技术<br>multiplication |乘法<br>mutual exclusion | 互相排斥<br>non-key attributes | 非码属性<br>null |零空<br>Nyquist |奈奎斯特<br>object oriented | 对象趋向的使适应的<br>object oriented analysis | 面向对象的分析<br>object oriented databases |面向对象数据库</p>
<p>object oriented implementation |面向对象的实现<br>obtain | 获得<br>occupy | 占有居住于<br>occurrence | 事件<br>odd | 奇数的<br>even|偶数<br>one-dimensional array |一维数组<br>OODB(object oriented data base) |面向对象数据库<br>OOM(object oriented method) |面向对象的方法<br>oom: information object message class |信息对象消息类<br>oom: instance method message passing | 实例方法消息传递<br>open system |开放系统<br>operand | 操作数<br>optimized | 尽量充分利用<br>optional |任选的非强制的<br>organize |组织<br>overflow | 溢出<br>overlapping register windows |重叠寄存器窗口<br>packet switching | 报文分组交换<br>page fault | 页面失效<br>page replacement algorithm | 页替换算法<br>paged segments| 段页式管理<br>PCB(process control block) |进程控制块<br>peer entites |对等实体<br>perform |表演执行<br>period| 时期周期<br>permit | 许可准许<br>phase |阶段局面状态<br>physical data link network layer |物理层数据链路层网络层<br>pipeline | 管道<br>platter track cluster |面磁道簇<br>predicate |谓语<br>preemption | 有优先权的<br>prefix (Polish form) |前缀(波兰表达式)<br>preorder | inorder postorder 前序中序后序<br>presentation application layer |表示层应用层<br>primary key attributes |主码属性<br>principle | 原则方法<br>procedural coincidental |过程内聚偶然内聚<br>process | 过程加工处理<br>proficient |精通<br>program debugging | 程序排错<br>projection  selection join | 投影选择连接<br>proposition |主张建议陈述<br>protocal |协议<br>prototype | 原型样板<br>prototyping method (model ) |原型化周期(模型)<br>pseudo-code |伪码(又称程序设计语言PDL)<br>punctuation | 标点<br>purpose |目的意图<br>quality |质量品质<br>queue |队列<br>ready blocked running |就绪阻塞(等待) 运行<br>real page number |实页数<br>real programs |实程序<br>redirected |重定向<br>redundency  |冗余<br>reference integrity rule |引用完整性规则<br>referred to as |把…..当作<br>regard |关于<br>register (registry ) |寄存器登记注册挂号<br>regularly |定期的常规的<br>relation | 关系<br>relay | 中继<br>reliability | 可信赖的<br>repeater | 中继器<br>replacement | 替换<br>represent |代表象征<br>request indication response confirm |请求指示响应确认<br>resource |资源<br>response |回答响应<br>RISC(reduced instruction set computer) |精简指令集计算机<br>robustness | 健壮性<br>router | 路由器<br>scheme | 计划图表<br>sector head cylinder | 扇区磁头柱面<br>selection sort | 选择排序<br>semaphores| 信号<br>sequence | 序列顺序<br>Shanon |香农<br>share locks |共享锁(简记为S 锁)<br>short path critical path |最短路径关键路径<br>signal | 信号<br>signal-to-noise ratio | 信噪比B/N<br>similar | 相似的<br>SISD SIMD MISD MIMD |<em> 指令流</em> 数据流<br>SMDS |交换多兆位数据服务<br>software development phase | 软件开发阶段<br>software engineering | 软件工程<br>software portability | 软件可移植性<br>software requirements specification | 软件需求说明书<br>solve | 解决<br>sort | 种类方式分类排序<br>spanning tree |跨越树(生成树)<br>specify | 指定说明<br>speedup | 加速比<br>SSTF(shortest-seek-time-first) |最短寻道时间优先(磁盘调度算法)<br>stack strategy non-stack strategy |堆栈型非堆栈型<br>starvation | 饥饿匮乏<br>statement |陈述<br>storage | 贮藏库<br>store procedures | 存储过程<br>strategy | 战略兵法计划<br>strict | 严密的<br>styles | 文体风格<br>subgroup | 循环的<br>subset| 子集子设备<br>superclass subclass abstract class |超类子类抽象类<br>suppose | 假定<br>symbolic | 象征的符号的<br>synthetic benchmark |复合基准程序<br>system testing |系统测试<br>Systolic | 脉动阵列<br>table |表表格桌子<br>TDM(time division multiplexing)| 时分多路复用<br>technology | 工艺技术<br>terminal | 终端<br>testing phase | 测试阶段<br>theta select project theta join | θ选择投影θ连接<br>time complexity | 时间复杂度<br>timestamping |时标技术<br>Token Bus |令牌总线<br>Token Ring | 令牌环<br>toy benchmark | 简单基准程序<br>transaction | 事务记录<br>transmit  |传送<br>transport layer session layer |传输层会话层<br>traversal method |遍历方法<br>triggers store procedures| 触发器存储过程<br>ORACLE |系统<br>underflow |下溢<br>unique | 唯一的<br>unit system acceptance testing |单元测试系统测试确认测试<br>universe | 宇宙全世界<br>update | 更新<br>value  |值<br>variable | 变量<br>vertical | 垂直的<br>vertice edge | 顶点(结点) 边<br>via | 经过<br>virtual memory system |虚拟存储系统<br>WAN(wide area network) |广域网<br>waterfall model | 瀑布模型<br>white noise | 白噪声<br>write-back(copy-back) |写回法<br>write-through(store-through) | 写直达法<br>WWW(world wide web) |万维网</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
  </entry>
  <entry>
    <title>计算机英语1500词</title>
    <url>/blog.githup.io/2020/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%8B%B1%E8%AF%AD1500%E8%AF%8D/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h5 id="list-1"><a href="#list-1" class="headerlink" title="list 1"></a>list 1</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
<th>explain</th>
</tr>
</thead>
<tbody>
<tr>
<td>directory</td>
<td>n. 目录，索引簿 </td>
</tr>
<tr>
<td>file</td>
<td>n. 文件；v. 保存文件</td>
</tr>
<tr>
<td>name</td>
<td>n. 名，名称；vt. 命名</td>
</tr>
<tr>
<td>format</td>
<td>n. 格式</td>
</tr>
<tr>
<td>topic</td>
<td>n. 题目，论题</td>
</tr>
<tr>
<td>string</td>
<td>n. 行，字符串</td>
</tr>
<tr>
<td>word</td>
<td>n. 字(词)，单词</td>
</tr>
<tr>
<td>character</td>
<td>n. 字符，符号，特性</td>
</tr>
<tr>
<td>text</td>
<td>n. 正文，文本</td>
</tr>
<tr>
<td>number</td>
<td>n. 数字，号码；vt. 编号</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-2"><a href="#list-2" class="headerlink" title="list 2"></a>list 2</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
<th>explain</th>
</tr>
</thead>
<tbody>
<tr>
<td>program</td>
<td>n. 程序</td>
</tr>
<tr>
<td>type</td>
<td>n. 型，类型；v. 打印</td>
</tr>
<tr>
<td>field</td>
<td>n. 字段，域，栏，场 </td>
</tr>
<tr>
<td>variable</td>
<td>a. 可变的；n. 变量</td>
</tr>
<tr>
<td>value</td>
<td>n. 值 </td>
</tr>
<tr>
<td>function</td>
<td>n. 函数，功能，操作 </td>
</tr>
<tr>
<td>parameter</td>
<td>n. 参数，参变量 </td>
</tr>
<tr>
<td>set</td>
<td>v. 设置，n. 集合</td>
</tr>
<tr>
<td>list</td>
<td>n. 列表，显示，v. 打印</td>
</tr>
<tr>
<td>index</td>
<td>n. 索引，变址，指数</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-3"><a href="#list-3" class="headerlink" title="list 3"></a>list 3</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
<th>explain</th>
</tr>
</thead>
<tbody>
<tr>
<td>display</td>
<td>vt. 显示，显示器</td>
</tr>
<tr>
<td>area</td>
<td>n. (区)域，面积，方面 </td>
</tr>
<tr>
<td>item</td>
<td>n. 项，项目，条款</td>
</tr>
<tr>
<td>window</td>
<td>n. 窗口</td>
</tr>
<tr>
<td>dialog</td>
<td>n. &amp; vt. 对话</td>
</tr>
<tr>
<td>mode</td>
<td>n. 态，方式，模 </td>
</tr>
<tr>
<td>box</td>
<td>n. 箱，匣，(逻辑)框</td>
</tr>
<tr>
<td>button</td>
<td>n. 按钮</td>
</tr>
<tr>
<td>tab</td>
<td>n. 制表键</td>
</tr>
<tr>
<td>line</td>
<td>n. (数据，程序)行，线路</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-4"><a href="#list-4" class="headerlink" title="list 4"></a>list 4</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
<th>explain</th>
</tr>
</thead>
<tbody>
<tr>
<td>produce</td>
<td>v. 生产，制造 </td>
</tr>
<tr>
<td>procedure</td>
<td>n. 过程，程序，工序 </td>
</tr>
<tr>
<td>message</td>
<td>n. 信息，消息，电文</td>
</tr>
<tr>
<td>information</td>
<td>n. 信息，情报</td>
</tr>
<tr>
<td>database</td>
<td>n. 数据库</td>
</tr>
<tr>
<td>make</td>
<td>vt. 制造，形成，接通</td>
</tr>
<tr>
<td>control</td>
<td>v. 控制，支配，管理 </td>
</tr>
<tr>
<td>select</td>
<td>vt. 选择</td>
</tr>
<tr>
<td>selected</td>
<td>a. 精选的</td>
</tr>
<tr>
<td>selection</td>
<td>n. 选择</td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-5"><a href="#list-5" class="headerlink" title="list 5"></a>list 5</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
<th>explain</th>
</tr>
</thead>
<tbody>
<tr>
<td>keyboard</td>
<td>n. 键盘 </td>
</tr>
<tr>
<td>key</td>
<td>n. 键，关键字，关键码</td>
</tr>
<tr>
<td>press</td>
<td>v. 按，压</td>
</tr>
<tr>
<td>disk</td>
<td>n. 盘，磁盘 </td>
</tr>
<tr>
<td>screen</td>
<td>n. 屏幕，屏；v. 屏蔽</td>
</tr>
<tr>
<td>memory</td>
<td>n. 记忆存储，存储器</td>
</tr>
<tr>
<td>command</td>
<td>n. 命令，指令</td>
</tr>
<tr>
<td>mouse</td>
<td>n. 鼠标器</td>
</tr>
<tr>
<td>cursor</td>
<td>n. 光标</td>
</tr>
<tr>
<td>arrow</td>
<td>n. 箭头，指针 </td>
</tr>
</tbody>
</table>
</div>
<h5 id="list-6"><a href="#list-6" class="headerlink" title="list 6"></a>list 6</h5><div class="table-container">
<table>
<thead>
<tr>
<th>word</th>
<th>trans</th>
<th>explain</th>
</tr>
</thead>
<tbody>
<tr>
<td>specify</td>
<td>v. 指定，规定，确定</td>
</tr>
<tr>
<td>use</td>
<td>v. 使用，用途 </td>
</tr>
<tr>
<td>do</td>
<td>v. 做，干；n. 循环</td>
</tr>
<tr>
<td>see</td>
<td>v. 看，看出，查看</td>
</tr>
<tr>
<td>enter</td>
<td>v. 键入，送入</td>
</tr>
<tr>
<td>print</td>
<td>v. 打印，印刷 </td>
</tr>
<tr>
<td>drive</td>
<td>v. 驱动；n. 驱动器</td>
</tr>
<tr>
<td>change</td>
<td>v. 更换，改变，变动 </td>
</tr>
<tr>
<td>return</td>
<td>v. 返回，回送</td>
</tr>
<tr>
<td>choose</td>
<td>v. 挑选，选择，选定</td>
</tr>
</tbody>
</table>
</div>
<p>shell n. 壳，外壳<br>margin n. 余量，边缘，边际<br>current n. 电流<br>example n. 例子，实例<br>menu n. 菜单，目录</p>
<p>option n. 任选，选择，可选项</p>
<p>if conj. 如果<br>by prep. 凭，靠，沿<br>with prep. 用，与，随着<br>from prep. 从，来自，以来</p>
<p>move v. 移动<br>copy n. 复制，v. 拷贝<br>create vt. 创立，建立<br>insert vt. 插入<br>edit vt. 编辑，编排，编篡<br>save v. 保存<br>delete vt. 删除，删去，作废</p>
<p>on ad. 接通，导电，开<br>off ad. (设备)关着，脱离<br>mark n. 标记；vt. 加标记<br>marked a. 有记号的</p>
<p>help v. &amp; n. 帮助<br>start v. 起动，开始，启动<br>active a. 激活的，活动的 </p>
<p>which pron. 哪个，a. 那一个<br>all a. 全，全部；ad. 完全<br>also ad. &amp; conj. 也，亦，还<br>without prep. 没有，在…以外<br>then ad. &amp; conj. 那时，则 </p>
<p>group n. 组，群<br>subgroup n. 分组，子群<br>user n. 用户 </p>
<p>want v. 需要，应该，缺少<br>appear vi. 出现，显现，好像<br>related a. 相关的<br>following a. 下列的，以下的<br>only a. 唯一的，ad. 仅仅<br>each a. &amp; ad. 各(自)，每个 </p>
<p>first a. &amp; ad. &amp; n. 第一，首先<br>right a. 右边的，正确的<br>left a. &amp; n. 左边(的)<br>next n. 下一次，a. 其次<br>end n. 结束，终点，端点<br>up ad. 上，向上，a. 高的  </p>
<ol>
<li>system n. 系统 </li>
<li>contain vt. 包含，包括 </li>
<li>time n. 时间；vt. 计时 </li>
<li>letter n. 字母，信 </li>
<li>data n. 数据 </li>
<li>setting n. 设置，调整 </li>
<li>desire v. &amp; n. 期望 </li>
<li>position n. 位置；vt. 定位 </li>
<li>down ad. 落下，降低，减少 </li>
<li>task n. 任务；v. 派给…任务 </li>
<li>view n. &amp; v. 视图，景象 </li>
<li>switch n. &amp; v. 开关，转换，切换 </li>
<li>include vt. 包括，包含 </li>
<li>get v. 得到，获得，取 </li>
<li>default v. 缺省，预置，约定 </li>
<li>structure n. 结构，构造，构件 </li>
<li>into prep. 向内，进入 </li>
<li>path n. 路径，通路，轨道 </li>
<li>blank n. 空白，间隔 </li>
<li>open v. 打开，开启，断开 </li>
<li>add v. &amp; n. 加，增加，添 </li>
<li>enable vt. 启动，恢复正常操作 </li>
<li>operation n. 操作，运算，动作 </li>
<li>erase v. 擦除，取消，删除 </li>
<li>filename n. 文件名 </li>
<li>search v. 检索，查询，搜索 </li>
<li>another a. 另一个，别的 </li>
<li>last a. &amp; n. 最后(的) </li>
<li>column n. 列，柱，栏 </li>
<li>after prep. &amp; ad. 以后，后面 </li>
<li>prompt n. &amp; v. 提示 </li>
<li>two n. &amp; a. 二，两，双 </li>
<li>execute v. 实行，实施 </li>
<li>about ad. 关于，大约，附近 </li>
<li>escape v. 逃避，逸出，换码 </li>
<li>error n. 错误，误差，差错 </li>
<li>currently ad. 目前，现在 </li>
<li>extension n. 扩充，延伸 </li>
<li>same a. 同样的，相同的 </li>
<li>status n. 状态，态，状况 </li>
<li>run v. 运行，运转，操作 </li>
<li>argument n. 变元，自变量 </li>
<li>statement n. 语句，陈述，命题 </li>
<li>shift v. 转义，换档，移位 </li>
<li>store n. &amp; vt. 存储，存储器 </li>
<li>scroll vt. 上滚(卷)；n. 纸卷 </li>
<li>replace vt. 替换，置换，代换 </li>
<li>macro n. 宏，宏功能，宏指令 </li>
<li>page n. 页面，页，版面 </li>
<li>quit v. 退出，结束 </li>
<li>define vt. 定义，规定，分辨 </li>
<li>reference n. &amp; a. 参考；参考的 </li>
<li>other a. 别的，另外的 </li>
<li>while conj. 当…的时候 </li>
<li>pressing n. &amp; a. 压制；紧急的 </li>
<li>restore vt. 恢复，复原 </li>
<li>top n. 顶，尖端 </li>
<li>how ad. 如何，怎样，多么 </li>
<li>color n. 颜色，色彩，(彩)色 </li>
<li>allow v. 允许，容许 </li>
<li>block n. (字，信息，数据)块 </li>
<li>decimal n. &amp; a. 十进制；十进制的 </li>
<li>main a. 主要的 </li>
<li>definition n. 定义，确实，清晰度 </li>
<li>between prep. 在…之间，中间 </li>
<li>optional a. 任选的，可选的 </li>
<li>date n. 日期 </li>
<li><p>remove v. 除去，移动 </p>
</li>
<li><p>label n. 标签，标号，标识符 </p>
</li>
<li>within prep. 在…以内 </li>
<li>issue v. 发行，出版，流出 </li>
<li>different a. 不同的，各种各样的 </li>
<li>available a. 可用的 </li>
<li>returned a. 退回的 </li>
<li>associate v. 相联，联想，关联 </li>
<li>attribute n. 属性，标志，表征 </li>
<li>dos 磁盘操作系统 </li>
<li>before prep. 以前，前，先 </li>
<li>order n. &amp; vt. 指令，次序；排序 </li>
<li>modify vt. 修改，改变，变址 </li>
<li><p>array n. 数组，阵列 </p>
</li>
<li><p>note n. 注解，注释 </p>
</li>
<li>locate vt. 定位 </li>
<li>video n. 视频，电视 </li>
<li>printer n. 打印机，印刷机 </li>
<li>bar n. 条，杆，棒 </li>
<li>bottom n. &amp; a. 底，基础；底下的 </li>
<li>carriage n. 滑架，托架 </li>
<li>content n. 含量，容量，内容 </li>
<li>either a. &amp; pron. 任何一个，各 </li>
<li>ok ad. &amp; a. 对，好；全对 </li>
<li>space n. 空格键，空间 </li>
<li>editor n. 编辑程序 </li>
<li>exist vi. 存在，生存，有 </li>
<li>scope n. 范围，显示器 </li>
<li>paragraph n. 段(落)，节，短讯 </li>
<li>multi (词头)多 </li>
<li>clear v. 清除，弄干净 </li>
<li>exit n. &amp; vi. 出口；退出 </li>
<li>report vt. &amp; n. 报告，报表 </li>
<li>execution n. 执行 </li>
<li>backup n. 备份，后备，后援 </li>
<li>version n. 版本 </li>
<li>find v. 寻找，发现 </li>
<li>pointer n. 指针，指示字 </li>
<li><p>subset n. 子集，子设备 </p>
</li>
<li><p>full a. &amp; ad. &amp; n. 全(的)，满 </p>
</li>
<li>check v. 校对，栓查，核算 </li>
<li>should v. &amp; aux. 应当，该 </li>
<li>single a. &amp; n. 单个的；一个，单 </li>
<li>positioning n. 定位 </li>
<li>provide v. 提供 </li>
<li>title n. 题目，标题 </li>
<li>expression n. 表达式 </li>
<li>through prep. &amp; ad. 通过，直通 </li>
<li>toggle n. &amp; v. 触发器；系紧 </li>
<li>code n. 码，代码，编码 </li>
<li>such a. &amp; pron. 这样的，如此 </li>
<li>beginning n. 起点，初 </li>
<li>guide n. 向导，指南，入门 </li>
<li>tree n. 树，语法树 </li>
<li>environment n. 环境 </li>
<li>but 但是，可是，除非，不过 </li>
<li>device n. 设备，器件，装置 </li>
<li>highlight n. 增强亮度，提示区 </li>
<li>call v. 调用，访问，呼叫 </li>
<li>continue v. 连续，继续 </li>
<li>indicate vt. 指示，表示 </li>
<li>until prep. 到…为止，直到 </li>
<li>begin v. 开始，着手，开端 </li>
<li>place vt. 放，位，地点 </li>
<li>rename vt. 更名，改名 </li>
<li>swap v. 交换，调动 </li>
<li>work n. 工作 </li>
<li>remain vi. 剩下，留下，仍然 </li>
<li><p>close v. &amp; a. 关闭，闭合；紧密的 </p>
</li>
<li><p>profile n. 简要，剖面，概貌 </p>
</li>
<li>unless conj. 除非 </li>
<li>so pron. &amp; conj. 如此，这样 </li>
<li>except prep. 除…之外，除非 </li>
<li>turn v. &amp; n. 转，转动；圈，匝 </li>
<li>back n. 背面，反向，底座 </li>
<li>sure a. &amp; ad. 确实的；的确 </li>
<li>section n. 节，段，区域 </li>
<li>follow v. 跟随，跟踪 </li>
<li>split v. 分开，分离 </li>
<li>need v. 必须，需要 </li>
<li>access n. 存取，选取，接近 </li>
<li>additional a. 附加的，辅助的 </li>
<li>cancel v. 删除，取消，作废 </li>
<li>document n. 文献，资料，文件 </li>
<li><p>case n. 情况，场合 </p>
</li>
<li><p>go vi. 运行，达到 </p>
</li>
<li>load n. &amp; v. 装入，负载，寄存 </li>
<li>try n. (尝)试，试验 </li>
<li>size n. 尺寸，大小，容量 </li>
<li>entire a. &amp; n. 完全的；总体 </li>
<li>leave v. 离开，留下 </li>
<li>history n. 历史 </li>
<li>second n. &amp; a. 秒，第二(的) </li>
<li>reflow v. &amp; n. 回流，逆流 </li>
<li>output n. 输出，输出设备 </li>
<li>out n. &amp; a. 输入，在外 </li>
<li>both a. &amp; ad. 两，双，都 </li>
<li>install vt. 安装 </li>
<li>source n. 源，电源，源点 </li>
<li>way n. 路线，途径，状态 </li>
<li>assign vt. 赋值，指定，分派 </li>
<li>support vt. 支援，支持，配套 </li>
<li>specific a. 特殊的，具体的 </li>
<li>join v. &amp; n. 连接，并(运算) </li>
<li>expand v. 扩充，扩展，展开 </li>
<li>like a. 类似的，同样的 </li>
<li>diskette n. 软磁盘，软盘片 </li>
<li>skip v. 跳跃(定位)，跳过 </li>
<li>application n. 应用 </li>
<li>confirmation n. 认可 </li>
<li>whether conj. 无论，不管 </li>
<li>hold v. 保持 </li>
<li><p>click n. “卡搭”声，插销 </p>
</li>
<li><p>byte n. (二进制的)字节 </p>
</li>
<li>abbreviate vt. 缩写，省略 </li>
<li>show v. 显示，呈现，出示 </li>
<li>otherwise ad. &amp; a. 另外 </li>
<li>working n. 工作，操作，作业 </li>
<li>delimiter n. 定界符，分界符 </li>
<li>location n. 定位，(存储器)单元 </li>
<li>perform v. 执行，完成 </li>
<li><p>graphic n. &amp; a. 图形；图形的 </p>
</li>
<li><p>confirm vt. 证实，确认 </p>
</li>
<li>sort v. 分类，排序 </li>
<li>clause n. 条款，项目，子句 </li>
<li>once ad. &amp; n. 只一次，一旦 </li>
<li>however conj. 然而，可是 </li>
<li>extend v. 扩充 </li>
<li>look v. 看，查看 </li>
<li>starting a. 起始的 </li>
<li>now ad. &amp; n. 此刻，现在 </li>
<li>original n. &amp; a. 原文；原(初)始的 </li>
<li>correspond vi. 通信(联系) </li>
<li>property n. 性(质)，特征 </li>
<li>several a. &amp; n. 若干个，几个 </li>
<li>learn v. 学习，训练 </li>
<li>cause n. 原因，理由 </li>
<li>bracket n. (方)括号，等级 </li>
<li>omit vt. 省略，删去，遗漏 </li>
<li>running a. 运行着的，游动的 </li>
<li>sub-directory n. 子目录 </li>
<li>edge n. 棱，边，边缘，界限 </li>
<li>form n. 格式，表格，方式 </li>
<li>instruction n. 指令，指导 </li>
<li>ascii n. 美国信息交换标准码 </li>
<li>below a. &amp; prep. 下列的；低于 </li>
<li>standard n. 标准 </li>
<li>occurrence n. 出现，发生 </li>
<li>lock n. &amp; v. 锁，封闭；自动跟踪 </li>
<li>append vt. 附加，增补 </li>
<li>destination n. 目的地，接收站 </li>
<li>password n. 口令，保密字 </li>
<li>point n. 点，小数点，句号 </li>
<li>variety n. 变化，种类，品种 </li>
<li>many a. &amp; n. 许多，多数 </li>
<li>buffer n. 缓冲器 </li>
<li>useful a. 有用的 </li>
<li>object n. 对象，目标，物体 </li>
<li>again ad. 再，又，重新，也 </li>
<li>operating a. 操作的，控制的 </li>
<li>carry v. 进位，带 </li>
<li>update v. 更新，修改，校正 </li>
<li>moving n. &amp; a. 活动的，自动的 </li>
<li>coprocessor n. 协同处理器 </li>
<li>overlay v. 覆盖，重叠 </li>
<li>practice n. 实习，实践 </li>
<li>navigation n. 导航 </li>
<li>automatically ad. 自动地，机械地 </li>
<li>total n. &amp; v. 总数；总计 </li>
<li>previous a. 早先的，上述的 </li>
<li>software n. 软件 </li>
<li>shortcut n. 近路，捷径 </li>
<li>long a. 长的，远的 </li>
<li>unique a. 唯一的，独特的 </li>
<li>part n. 部分，零件 </li>
<li>updated a. 适时的，更新的 </li>
<li>internal a. 内部的 </li>
<li>fill v. 填充 </li>
<li>basic n. &amp; a. 基本；基本的 </li>
<li>math n. 数学 </li>
<li><p>since prep. 自从…以来 </p>
</li>
<li><p>making n. 制造，构造 </p>
</li>
<li><p>center n. 中心，中央 </p>
</li>
<li><p>keyword n. 关键字(词) </p>
</li>
<li>action n. 操作，运算 </li>
<li>condition n. 条件，情况；vt. 调节 </li>
<li>quick a. &amp; ad. 快速的，灵敏的 </li>
<li>assigned a. 指定的，赋值的 </li>
<li>give vt. 给出，赋予，发生 </li>
<li>large a. (巨)大的，大量的 </li>
<li>chapter n. 章，段 </li>
<li>computer n. 计算机 </li>
<li>complete v. &amp; a. 完成；完整的 </li>
<li>past a. 过去的，结束的 </li>
<li>match v. 比较，匹配，符合 </li>
<li>recover v. 恢复，回收 </li>
<li>always ad. 总是，一直，始终 </li>
<li>require v. 需要，要求 </li>
<li>opening n. 打开，断路，孔 </li>
<li>network n. &amp; vt. 网络；联网 </li>
<li>sign n. 符号，信号，记号 </li>
<li>release vt. &amp; n. 释放，核发，版 </li>
<li>three a. &amp; n. 三(的) </li>
<li>recall vt. 撤消，复活，检索 </li>
<li>deletion n. 删去(部分)，删除 </li>
<li>fixed a. 固定的，不变的 </li>
<li>amount vt. &amp; n. 总计；合计 </li>
<li>alias n. 别名，代号，标记 </li>
<li>quote n. &amp; v. 引号；加引号 </li>
<li>correct a. &amp; vt. 正确的；改正 </li>
<li>else ad. &amp; conj. 否则，此外 </li>
<li>maximum n. &amp; a. 最大(的)，最高 </li>
<li>under prep. 在…下面(之下) </li>
<li>take v. 取，拿 </li>
<li>switching n. 开关，转接，交换 </li>
<li>element n. 元件，元素，码元 </li>
<li>modification n. 改变，修改 </li>
<li>modified a. 修改的，变更的 </li>
<li>input n. 输入，输入设备 </li>
<li>uppercase n. 大写字母 </li>
<li>plus prep. 加，加上，外加 </li>
<li>found v. 建立，创办 </li>
<li>debug vt. 调试 </li>
<li>force v. &amp; n. 强制；压力，强度 </li>
<li>lowercase n. 下档，小写体 </li>
<li>just ad. 恰好 </li>
<li>undo vt. 取消，废除 </li>
<li>environ vt. 围绕，包围 </li>
<li>why ad. 为什么 </li>
<li>temporary a. 暂时的，临时的 </li>
<li>put v. 存放(记录)，放置 </li>
<li>instead ad. (来)代替，当作 </li>
<li>encounter v. &amp; n. 遇到，碰到 </li>
<li>across prep. 交叉，越过 </li>
<li>matching n. 匹配，调整 </li>
<li>wildcard n. 通配符 </li>
<li>spill v. 漏出，溢出，漏失 </li>
<li>level n. 水平，级，层次 </li>
<li>browse v. 浏览 </li>
<li>speech n. 说话，言语，语音 </li>
<li>occur vi. 发生，出现，存在 </li>
<li>memo n. 备忘录 </li>
<li>prior a. 先验的，优先的 </li>
<li>loaded a. 有负载的 </li>
<li>length n. (字，记录，块)长度 </li>
<li>round v. 舍入，四舍五入 </li>
<li>variant n. &amp; a. 变体，易变的 </li>
<li>floppy n. 软磁盘 </li>
<li>machine n. 机器，计算机 </li>
<li>square n. &amp; a. 正方形；方形的 </li>
<li>supply vt. &amp; n. 电源，供给 </li>
<li>home n. &amp; a. 家，出发点 </li>
<li>normal a. &amp; n. 正常，标准 </li>
<li>onto prep. 向…，到…上 </li>
<li>during prep. 在…期间 </li>
<li>module n. 模块(程序设计) </li>
<li>monochrome n. 单色 </li>
<li>assistance n. 辅助设备，帮助 </li>
<li>tell n. 讲，说，教，计算 </li>
<li>library n. (程序…)库，图书馆 </li>
<li>demonstration n. (公开)表演，示范 </li>
<li>stack n. 栈，堆栈，存储栈 </li>
<li>even a. &amp; ad. 偶数的；甚至 </li>
<li>evaluate v. 估计，估算，求值 </li>
<li>times n. 次数 </li>
<li>previously ad. 以前，预先 </li>
<li>directly ad. 直接地，立即 </li>
<li>logical a. 逻辑的，逻辑”或” </li>
<li>template n. 标准框，样板，模板 </li>
<li>calling n. 呼叫，调用，调入 </li>
<li>later a. 更后的，后面的 </li>
<li>driver n. 驱动器，驱动程序 </li>
<li>therefore ad. &amp; conj. 因此，所以 </li>
<li>saving a. 保存的 </li>
<li>detail n. 元件，零件，细节 </li>
<li>linker n. 连接程序 </li>
<li>loop n. 圈，环；(程序)循环，回路 </li>
<li>process vt. 处理，进程，加工 </li>
<li>scheme n. 方案，计划，图 </li>
<li>every a. 每个，全体，所有的 </li>
<li>refer v. 访问，引用，涉及 </li>
<li>possible a. 可能的，潜在的 </li>
<li>above a. 在…之上，大于 </li>
<li>overview n. 综述，概要 </li>
<li>result n. 结果 </li>
<li>syntax n. 语法，文法，句法 </li>
<li>abbreviation n. 缩短，省略，简称 </li>
<li>bios n. 基本输入/输出系统 </li>
<li>hidden a. 隐藏的，秘密的 </li>
<li>null n. &amp; a. 空(的)，零(的) </li>
<li>send v. 发送 </li>
<li>private a. 专用的，私人的 </li>
<li>hard a. 硬的 </li>
<li>hardware n. 硬件 </li>
<li>say v. 说，显示，假定 </li>
<li>equal vt. &amp; n. 等于，相等；等号 </li>
<li>pack n. 压缩，包裹 </li>
<li>minus a. &amp; n. 负的；负数，减 </li>
<li>alternate a. 交替的，备用的 </li>
<li>collapse v. 崩溃，破裂 </li>
<li>corner n. 角，角落，转换 </li>
<li>present a. &amp; v. 现行的；提供 </li>
<li>interpreter n. 解释程序，翻译机 </li>
<li>advance v. &amp; n. 进步，提高；进展 </li>
<li>forward a. 正向的 </li>
<li>fast a. &amp; ad. 快速的 </li>
<li>special a. 专用的，特殊的 </li>
<li>slash n. 斜线 </li>
<li>utility n. &amp; a. 实用程序；实用性 </li>
<li>regardless a. 不注意的，不考虑的 </li>
<li>disable vt. 禁止，停用 </li>
<li>compatible a. 可兼容的，可共存的 </li>
<li>depend vi. 随…而定，取决于 </li>
<li>empty a. 空，零，未占用 </li>
<li>alphabetical a. 字母(表)的，abc的 </li>
<li>branch n. 分支，支线；v. 转换 </li>
<li>resume v. 重(新)开(始) </li>
<li>multiple a. 多次的，复杂的 </li>
<li>monitor n. 监视器，监督程序 </li>
<li>configuration n. 配置 </li>
<li>replacement n. 替换，置换，更新 </li>
<li>required a. 需要的 </li>
<li>macros n. 宏命令(指令) </li>
<li>table n. 表 </li>
<li>loss n. 损耗，损失 </li>
<li>batch n. 批，批量，成批 </li>
<li>exact a. 正确的 </li>
<li>aboveboard ad. &amp; a. 照直，公开的 </li>
<li>activate vt. &amp; n. 使激活，驱动 </li>
<li>around ad. &amp; prep. 周围，围绕 </li>
<li>slow a. &amp; ad. 慢速的 </li>
<li>floating a. 浮动的，浮点的 </li>
<li>refresh v. 刷新，更新，再生 </li>
<li>stop v. 停止，停机 </li>
<li>pass v. 传送，传递，遍(数) </li>
<li>public a. 公用的，公共的 </li>
<li>eject n. 弹出 </li>
<li>ignore vt. 不管，忽略不计 </li>
<li>share v. 共享，共用 </li>
<li>sequence n. 顺序，时序，序列 </li>
<li>consist vi. 符合，包括 </li>
<li>step n. 步，步骤，步长，档 </li>
<li>double a. 两倍的，成双的 </li>
<li>come vi. 来，到，出现 </li>
<li>lower a. 下部的，低级的 </li>
<li>describe vt. 描述，沿…运行 </li>
<li>count v. 计数，计算 </li>
<li>pop v. 上托，弹出(栈) </li>
<li>valid a. 有效的 </li>
<li>suspend v. 中止，暂停，挂起 </li>
<li>enhance vt. 增强，放大，夸张 </li>
<li>separate v. &amp; a. 分隔，分离，各自的 </li>
<li>echo n. 回波，反射波 </li>
<li>necessary a. 必要的，必然的 </li>
<li>greater than 大于 </li>
<li>able a. 能…的，有能力的 </li>
<li>marking n. 标记，记号，传号 </li>
<li><p>ask v. 请求，需要 </p>
</li>
<li><p>bring v. 引起，产生，拿来 </p>
</li>
<li>warning n. &amp; a. 报警，预告 </li>
<li>less a. &amp; ad. 更小，更少 </li>
<li>whose pron. 谁的 </li>
<li>comment n. &amp; vi. 注解，注释 </li>
<li>effect n. 效率，作用，效能 </li>
<li>expanding a. 扩展的，扩充的 </li>
<li>on-line a. 联机的 </li>
<li>reorder v. (按序)排列，排序 </li>
<li>direct a. 直接的 </li>
<li>enclose vt. 封闭，密封，围住，包装 </li>
<li>reset vt. 复位，置”0” </li>
<li>various a. 不同的，各种各样的 </li>
<li>paper n. 纸，文件，论文 </li>
<li>prevent v. 防止，预防 </li>
<li>side n. (旁)边，面，侧(面) </li>
<li>push v. 推，按，压，进(栈) </li>
<li>programming n. 程序设计，编程序 </li>
<li>upper a. 上的，上部的 </li>
<li>row n. 行 </li>
<li>pressed a. 加压的，压缩的 </li>
<li>temporarily ad. 暂时 </li>
<li>day n. 日，天，白天，时代 </li>
<li>repaint vt. 重画 </li>
<li>redefine vt. 重新规定(定义) </li>
<li>relation n. 关系，关系式 </li>
<li>dimension n. 尺寸，维，因次 </li>
<li>boundary n. 边界，界限，约束 </li>
<li>zoom v. 变焦距 </li>
<li>initialize v. 初始化 </li>
<li>personal a. 个人的，自身的 </li>
<li>hello int. &amp; v. 喂！；呼叫 </li>
<li>true a. &amp; n. 真，实，选中 </li>
<li>wish v. &amp; n. 祝愿，希望 </li>
<li>font n. 铅字，字形 </li>
<li>know v. 知道，了解，认识 </li>
<li>convert v. 转换，变换 </li>
<li>global n. 全局，全程，全局符 </li>
<li>still a. &amp; n. &amp; v. 静止的；静；平静 </li>
<li>installation n. 安装，装配 </li>
<li>invoke vt. 调用，请求 </li>
<li>interactive a. 交互式，交互的 </li>
<li>described a. 被看到的，被发现的 </li>
<li>century n. 世纪 </li>
<li>literal a. 文字的 </li>
<li>rather ad. 宁可，有点 </li>
<li>exclusive a. 排斥，排它性 </li>
<li>marker n. 记号，标记，标志 </li>
<li>wait v. 等待 </li>
<li>appropriate a. 适当的，合适的 </li>
<li>fit v. &amp; n. 适合，装配；非特 </li>
<li>adapter n. 适配器，转换器 </li>
<li>filter n. 滤波器，滤光材料 </li>
<li>break v. 断开，撕开，中断 </li>
<li>backward ad. 向后，逆，倒 </li>
<li>searching n. 搜索 </li>
<li>receive v. 接收 </li>
<li>dual a. 对偶的，双的 </li>
<li>retry vt. 再试，复算 </li>
<li>normally ad. 正常地，通常 </li>
<li>exactly ad. 正好，完全，精确地 </li>
<li>immediately ad. 直接地 </li>
<li>separated a. 分开的 </li>
<li>high a. 高 </li>
<li>equivalent a. 相等的，等效的 </li>
<li>light n. &amp; a. 光(波，源)；轻的 </li>
<li>zero n. 零，零位，零点 </li>
<li>storage n. 存储，存储器 </li>
<li>width n. 宽度 </li>
<li>language n. 语言 </li>
<li>startup n. 启动 </li>
<li>much a. &amp; n. 很多，许多，大量 </li>
<li>per prep. 每，按 </li>
<li>over prep. 在…上方 </li>
<li>mirror n. &amp; v. 镜，反射，反映 </li>
<li>request n. &amp; vt. 请求 </li>
<li>keypad n. 小键盘 </li>
<li>keep v. 保持，保存 </li>
<li>resident a. 驻留的 </li>
<li>learning n. 学问，知识 </li>
<li>talk v. 通话，谈话 </li>
<li>summary n. 摘要，汇总，提要 </li>
<li>well n. &amp; a. 井；好，良好 </li>
<li><p>link n. &amp; v. 链接；连接，联络 </p>
</li>
<li><p>identify v. 识别，辨认 </p>
</li>
<li>designated a. 指定的，特指的 </li>
<li>pertain vi. 附属，属于，关于 </li>
<li>expansion n. 展开，展开式 </li>
<li>incompatible a. 不兼容的 </li>
<li>blinking n. 闪烁 </li>
<li>month n. 月份 </li>
<li><p>precede v. 先于 </p>
</li>
<li><p>transportable a. 可移动的 </p>
</li>
<li>appropriately ad. 适当地 </li>
<li><p>routine n. 程序，例行程序 </p>
</li>
<li><p>listing n. 列表，编目 </p>
</li>
<li>newly ad. 新近，重新 </li>
<li>year n. (一)年，年度，年龄 </li>
<li>contact n. 接触，触点 </li>
<li>session n. 对话，通话 </li>
<li>own a. &amp; v. 自己的；拥有 </li>
<li>redraw vt. 再拉 </li>
<li>here ad. 在这里 </li>
<li>manual a. 手工的，手动的 </li>
<li>particular a. 特定的，特别的 </li>
<li>rectangle n. 矩形 </li>
<li>additive a. &amp; n. 相加的；附加物 </li>
<li>similar a. 相似的 </li>
<li>assembly n. 汇编，安装，装配 </li>
<li>copyright n. 版权 </li>
<li>description n. 描述 </li>
<li>retrieve v. 检索 </li>
<li><p>mistake n. 错误 </p>
</li>
<li><p>ram 随机存取存储器 </p>
</li>
<li><p>exception n. 例外，异常，异议 </p>
</li>
<li><p>reverse v. &amp; a. 反向的，逆 </p>
</li>
<li>minimum n. &amp; a. 最小(的)，最低 </li>
<li>enough a. &amp; ad. 足够的，充足的 </li>
<li>although conj. 虽然，即使 </li>
<li>reindex v. &amp; n. 变换(改变)符号 </li>
<li>third a. &amp; n. 第三，三分之一 </li>
<li>red a. &amp; n. 红色(的) </li>
<li>along prep. &amp; ad. 沿着 </li>
<li>test n. &amp; v. 测试 </li>
<li>small a. 小的，小型的 </li>
<li>feed v. 馈给，(打印机)进纸 </li>
<li>company n. &amp; v. 公司；交际，交往 </li>
<li>movie n. 影片，电影(院) </li>
<li>compile vt. 编译 </li>
<li>frequently ad. 常常，频繁地 </li>
<li>undefined a. 未定义的 </li>
<li>state n. &amp; vt. 状态；确定 </li>
<li>tick v；n. 滴答(响)；勾号(√) </li>
<li>accept vt. 接受，认可，同意 </li>
<li>intense a. 强烈的，高度的 </li>
<li>documentation n. 文件编制，文本 </li>
<li>asterisk n. 星号(*) </li>
<li>easily ad. 容易地，轻易地 </li>
<li>become v. 成为，变成，适宜 </li>
<li>address vt. &amp; n. 寻址；地址 </li>
<li>interface n. 接口 </li>
<li>pause vi. 暂停 </li>
<li>repeat v. 重复 </li>
<li>restart v. 重新启动，再启动 </li>
<li>assumed a. 假定的 </li>
<li>speed n. 速度 </li>
<li><p>entry n. 输入，项(目)，入口 </p>
</li>
<li><p>organize v. 组织，创办，成立 </p>
</li>
<li>finished a. 完成的 </li>
<li>mixed a. 混合的 </li>
<li>permit v. 许可，容许 </li>
<li>formatting n. 格式化 </li>
<li>root n. 根 </li>
<li>symbol n. 符号，记号 </li>
<li>binary n. &amp; a. 二进制；双态的 </li>
<li>whenever ad. &amp; conj. 随时 </li>
<li>reach v. &amp; n. 范围，达到范围 </li>
<li>caution n. &amp; v. 警告，注意 </li>
<li>subtotal n. &amp; v. 小计，求部分和 </li>
<li>card n. 卡片，插件(板) </li>
<li>general a. 通用的 </li>
<li>associated a. 联合的，相联的 </li>
<li>transfer v. 传送，转换，转移 </li>
<li>connect v. 连接 </li>
<li>partition v. 划分，分区，部分 </li>
<li>hexadecimal a. 十六进制的 </li>
<li>generate vt. 产生，发生，生成 </li>
<li>specification n. 说明书，规则说明书 </li>
<li>customize vt. 定制，定做 </li>
<li>far a. 远的，遥远的 </li>
<li>nest v. 嵌套，后进先出 </li>
<li>duplicate vt. 复制，转录，加倍 </li>
<li>compression n. 压缩，浓缩 </li>
<li>unable a. 不能的 </li>
<li>means n. 方法，手段 </li>
<li>alternately ad. 交替地，轮流地 </li>
<li><p>intensity n. 强度，亮度 </p>
</li>
<li><p>let v. 让，允许 </p>
</li>
<li>explicitly ad. 明显地，显然地 </li>
<li>compare v. 比较，对照，比喻 </li>
<li>sector n. &amp; v. 扇区，段；分段 </li>
<li>problem n. 问题，难题 </li>
<li>vertically ad. 竖直地，直立地 </li>
<li>horizontally ad. 水平地 </li>
<li><p>backspace v. 退格，回退 </p>
</li>
<li><p>people n. 人们 </p>
</li>
<li>short a. &amp; n. 短的；短路 </li>
<li>drag vt. 拖，拉，牵，曳 </li>
<li>formatted a. 有格式的 </li>
<li>preview n. &amp; vt. 预映 </li>
<li>underscore vt. 在…下面划线 </li>
<li>correctly ad. 正确地 </li>
<li>initially ad. 最初，开头 </li>
<li>reformat v. 重定格式 </li>
<li>inside n. &amp; a. 内部，内容；内部的 </li>
<li>integrate v. 综合，集成 </li>
<li>controlled a. 受控制的，受操纵的 </li>
<li>period n. 周期 </li>
<li><p>huge a. 巨大的，非常的 </p>
</li>
<li><p>trailing n. &amp; a. 结尾；尾随的 </p>
</li>
<li>seek v. 查找，寻找，探求 </li>
<li>introduction n. 入门，介绍，引进 </li>
<li>indent v. 缩排 </li>
<li>base n. 基，底，基地址 </li>
<li>integer n. 整数 </li>
<li>attempt vt. &amp; n. 尝试，试验 </li>
<li>twice n. &amp; ad. 两次，两倍于 </li>
<li>formed a. &amp; n. 成形 </li>
<li>subscript n. 注脚，下标 </li>
<li>tiny a. 微小的，微量的 </li>
<li>model n. 模型，样机，型号 </li>
<li>correction n. 校正，修正 </li>
<li>rating n. 定额，标称值 </li>
<li>secondary a. 辅助的，第二的 </li>
<li>opened a. 开路的，断开的 </li>
<li>limit n. 极限，限界 </li>
<li>sun n. 太阳，日 </li>
<li>translate v. 翻译，转换，平移 </li>
<li>reason n. 原因，理由 </li>
<li>colon n. 冒号”:” </li>
<li>avoid vt. 避免，取消，无效 </li>
<li>range n. 范围，域，区域 </li>
<li>allocate vt. 分配 </li>
<li>wordperfect a. 一字不错地熟记的 </li>
<li>simply ad. 简单地，单纯地 </li>
<li>verify vt. 鉴定，检验，核对 </li>
<li>manner n. 方法，样式，惯例 </li>
<li>direction n. 方向，定向，指向 </li>
<li>portion n. &amp; vt. 部分；分配 </li>
<li>emulator n. 仿真器，仿真程序 </li>
<li>successful a. 成功的 </li>
<li>applied a. 适用的，外加的 </li>
<li>sum n. 和，合计，总额</li>
<li>achieve vt. 完成，实现 </li>
<li>together ad. 一同，共同，相互 </li>
<li>affect vt. 影响，改变，感动 </li>
<li>delay v. 延迟 </li>
<li>free a. 自由的，空闲的 </li>
<li>properly ad. 真正地，适当地 </li>
<li>kind n. 种类，属，级，等 </li>
<li>splitting n. 分区(裂) </li>
<li>feature n. 特征，特点 </li>
<li>console n. 控制台，操作台 </li>
<li>operate v. 操作，运算 </li>
<li>kernel n. 内核(核心)程序 </li>
<li>easy a. &amp; ad. 容易的；容易地 </li>
<li>modifier n. 修改量，变址数 </li>
<li>invalid a. 无效的 </li>
<li>compiler n. 编译程序(器) </li>
<li>dot n. 点 </li>
<li>beep n. 蜂鸣声，嘀嘀声 </li>
<li>face n. 面，表面 </li>
<li>random a. 随机的 </li>
<li>facility n. 设施，装备，便利 </li>
<li>heading n. 标题 </li>
<li>asynchronous a. 异步的，非同步的 </li>
<li>series n. 序列，系列，串联 </li>
<li>individual a. 个别的，单个的 </li>
<li>explain v. 阐明，解释 </li>
<li>paste n. 湖，胶，膏 </li>
<li>welcome vt. &amp; n. 欢迎 </li>
<li>six n. &amp; a. 六(个)(的) </li>
<li>early a. &amp; ad. 早期，初期 </li>
<li>wrap v. &amp; n. 包装，缠绕 </li>
<li>blue a. &amp; n. 蓝(色)，青色 </li>
<li>queue v. &amp; n. 排队，队列 </li>
<li>interrupt v. &amp; n. 中断 </li>
<li>respect n. &amp; vt. 遵守，关系 </li>
<li>converted a. 转换的，变换的 </li>
<li>common a. 公用的 </li>
<li>hyphen n. 连字符，短线 </li>
<li>serial a. 串行的，串联的 </li>
<li>loading n. 装入，加载，存放 </li>
<li>retain vt. 保持，维持 </li>
<li>setup n. 安排，准备，配置 </li>
<li>freeze v. 冻结，结冰 </li>
<li>intend vt. 打算，设计 </li>
<li>explanation n. 说明，注解，注释 </li>
<li>certain a. 确实的，确定的 </li>
<li>zap v. 迅速离去，击溃 </li>
<li>archive vt. 归档 </li>
<li>negative a. 负的，否定的 </li>
<li>image n. 图像，影像，映像 </li>
<li>platform n. 平台，台架 </li>
<li>often ad. 经常，往往，屡次 </li>
<li>signal n. &amp; v. 信号；发信号 </li>
<li>cpu 控制处理部件 </li>
<li>bit n. 比特；(二进制)位 </li>
<li>fully ad. 十分，完全 </li>
<li>deactivate vt. 释放，去活化 </li>
<li>especially ad. 特别(是)，尤其 </li>
<li>usually ad. 通常，平常，一般 </li>
<li>recommend vt. 推荐，建议 </li>
<li>maintain vt. 维护，保养，保留 </li>
<li>important a. 严重的，显著的 </li>
<li>central a. 中央的，中心的 </li>
<li>addition n. 加法，增加 </li>
<li>anytime ad. 在任何时候 </li>
<li>analyst n. 分析员 </li>
<li>false a. 假(布尔值)，错误 </li>
<li>black a. &amp; n. 黑色的，黑色 </li>
<li>gather n. 聚集，集合 </li>
<li>cycle n. &amp; v. 周，周期；循环 </li>
<li>relative a. 相对的 </li>
<li>offer v. 提供，给予，呈现 </li>
<li>ending n. 结束 </li>
<li>rent v. &amp; n. 租用；裂缝 </li>
<li>sentence n. 句(子) </li>
<li>remember v. 存储，记忆，记住 </li>
<li>proper a. 真的，固有的 </li>
<li>design v. 设计 </li>
<li>examine v. 检验，考试，审查 </li>
<li>initial a. 最初的，初始的 </li>
<li>corrupt v. &amp; a. 恶化；有毛病的 </li>
<li>buy v. 买，购买，赢得 </li>
<li>increase v. 增加，增大 </li>
<li>host n. 主机 </li>
<li>sample n. &amp; v. 样品，样本；抽样 </li>
<li>pending a. 悬而未决的，未定的 </li>
<li>divide v. 除 </li>
<li>boot n. 引导，靴 </li>
<li>hide v. 隐藏，隐蔽 </li>
<li>half n. &amp; a. &amp; ad. 一半，半个 </li>
<li>magenta n. &amp; a. 深红色(的) </li>
<li>leading n. &amp; a. 引导(的) </li>
<li>wrong a. &amp; ad. n. 错误(的) </li>
<li>today n. &amp; ad. 今天 </li>
<li>least a. &amp; ad. 最小(的) </li>
<li>opposite a. &amp; n. &amp; ad. 相反的 </li>
<li>white a. &amp; n. 白色(的) </li>
<li>override v. &amp; n. 超越，克服 </li>
<li>brown a. &amp; n. 褐色(的)，棕色 </li>
<li>hex a. &amp; n. 六角形的 </li>
<li>rest n. &amp; v. 剩余，休息 </li>
<li>damage n. &amp; vt. 损伤，故障 </li>
<li>instant a. 立刻的，直接的 </li>
<li>reserved a. 保留的，预订的 </li>
<li>technology n. 工艺，技术，制造学 </li>
<li>handle n. 处理，句柄 </li>
<li>apply v. 应用，适用于，作用 </li>
<li>stand v. 处于(状态)，保持 </li>
<li>payment n. 支付，付款 </li>
<li>kilobyte n. 千字节(kb) </li>
<li>parenthesis n. 括弧，圆括号</li>
<li>scan v. 扫描，扫视，搜索 </li>
<li>locating n. 定位，查找 </li>
<li>developer n. 开发者，显影剂 </li>
<li>murder n. 弄坏，毁掉 </li>
<li>flush v. 弄平，使齐平 </li>
<li>unlock v. 开锁，打开 </li>
<li>movement n. 传送，移动 </li>
<li>consecutive a. 连续的，连贯的 </li>
<li>collection n. 集合，聚集，画卷 </li>
<li>front a. 前面的，正面的 </li>
<li>addressing n. 寻址 </li>
<li>prefix n. 前缀 </li>
<li>carousel n. 圆盘传送带 </li>
<li>safety n. 安全，保险 </li>
<li>static a. 静态的，不变的 </li>
<li>background n. 背景，底色，基础 </li>
<li>product n. (乘)积，产品 </li>
<li>assignment n. 赋值，分配 </li>
<li>bad a. 坏的，不良的 </li>
<li>declare v. 说明 </li>
<li>adjust vt. 调整，调节，控制 </li>
<li>recognize v. 识别 </li>
<li>route n. 路线，路由 </li>
<li>respectively ad. 分别地 </li>
<li>unsuccessful a. 不成功的，失败的 </li>
<li>received a. 被接收的，公认的 </li>
<li>navigate v. 导航，驾驶 </li>
<li>considered a. 考虑过的，被尊重的 </li>
<li>due a. 到期的，应付(给)的 </li>
<li>recently ad. 近来 </li>
<li>room n. 房间，空间 </li>
<li>descend v. 下降，落下 </li>
<li>fact n. 事实 </li>
<li>alter v. 改变，修改 </li>
<li>track n. 磁道，轨道 </li>
<li>precedence n. 优先权 </li>
<li>skeleton n. 骨架，框架 </li>
<li>log n. &amp; v. 记录，存入 </li>
<li>star n. 星形，星号 </li>
<li>hot a. 热的 </li>
<li>replaceable a. 可替换的 </li>
<li>accessible a. 可以使用的 </li>
<li>involve vt. 涉及，卷入，占用 </li>
<li>configure vt. 使成形 </li>
<li>question n. 问题 </li>
<li>green n. &amp; a. 绿色绿色的 </li>
<li>entirely ad. 完全地，彻底地 </li>
<li>helpful a. 有帮助的，有用的 </li>
<li>middle a. 中间的 </li>
<li>declared a. 承认的，申报的 </li>
<li>compress vt. 压缩，精减 </li>
<li>graphically ad. 用图表表示 </li>
<li>auto a. 自动的 </li>
<li>automatic a. 自动的 </li>
<li>aligned a. 对准的，均衡的 </li>
<li><p>anywhere ad. 在任何地方 </p>
</li>
<li><p>door n. 舱门，入口，孔 </p>
</li>
<li>expire v. 终止，期满 </li>
<li>resolution n. 分辨率 </li>
<li>local a. 局部的，本地的 </li>
<li><p>semicolon n. 分号(；) </p>
</li>
<li><p>critical a. &amp; n. 临界的；临界值 </p>
</li>
<li>manager n. 管理程序 </li>
<li>capability n. 能力，效力，权力 </li>
<li>affected a. 受了影响的 </li>
<li>allowed a. 容许的 </li>
<li>border n. 边界，框，界限 </li>
<li>cache n. 高速缓存 </li>
<li>bell n. 铃，钟 </li>
<li>play v. 玩，奏，放音，放象 </li>
<li>quickly a. 快，迅速地 </li>
<li>fastback n. 快速返回 </li>
<li>answer n. &amp; v. 响应，回答；答复 </li>
<li>represent v. 表示，表现，代表 </li>
<li>difference n. 差分，差 </li>
<li>highest a. 最高的 </li>
<li>project n. 项目，计划，设计 </li>
<li>physical a. 物理的，实际的 </li>
<li>matter n. 物质，内容，事情 </li>
<li>hercules n. 大力神，大力士 </li>
<li>reduce v. 减少，降低，简化 </li>
<li>publisher n. 出版者，发行人 </li>
<li>trim n. 区标，微调 </li>
<li>substitute v. 代替，替换，代入 </li>
<li>disabled a. 禁止的，报废的 </li>
<li>recent a. 近来的 </li>
<li>positive a. 正的，阳的，正片 </li>
<li>upgrade v. 升级，提高质量 </li>
<li>instance n. &amp; vt. 例子，情况；举例 </li>
<li>happen vi. (偶然)发生，碰巧 </li>
<li>elapsed vi. &amp; n. 经过 </li>
<li>future n. &amp; a. 将来，未来的 </li>
<li>midnight n. &amp; a. 午夜 </li>
<li>though conj. 虽然，尽管 </li>
<li>nor conj. 也不 </li>
<li>mono a. &amp; n. 单音的 </li>
<li>slide v. &amp; n. 滑动，滑动触头 </li>
<li>abort v. &amp; n. 中断，故障 </li>
<li>jump v. &amp; n. 转移 </li>
<li>toward prep. 朝(着…方向) </li>
<li>throughout prep. 贯穿，整，遍 </li>
<li>via prep. 经过，经由 </li>
<li>among prep. 在…之中，中间 </li>
<li>neither a. &amp; pron. (两者)都不 </li>
<li>layer n. &amp; v. 层，涂层 </li>
<li>scatter v. 散射，分散，散布 </li>
<li>attention n. 注意(信号) </li>
<li>convention n. 常规，约定，协定 </li>
<li>conventional a. 常规的，习惯的 </li>
<li>tool n. 工具，刀 </li>
<li>handler n. 处理程序 </li>
<li>processor n. 处理机，处理程序 </li>
<li>desktop a. 台式的 </li>
<li>build v. 建造，建立，组合 </li>
<li>windowing n. 开窗口 </li>
<li>development n. 开发，研制，显影 </li>
<li>exceed v. 超过，大于 </li>
<li>understand v. 懂，明白(了)，理解 </li>
<li>horizontal a. 水平的，横向的 </li>
<li>alphabetically ad. 按字母表顺序 </li>
<li>meet v. “与”，符合，满足 </li>
<li>protect vt. 保护 </li>
<li>reserve vt. 保留，预定，预约 </li>
<li>clock n. 时钟，计时器，同步 </li>
<li>manifest vt. 表明，显示，显现 </li>
<li>safe a. 安全的，可靠的 </li>
<li>disconnect vt. 拆接，断开，拆线 </li>
<li>clockwise a. 顺时针的 </li>
<li>eliminate vt. 除去，消除，切断 </li>
<li>actual a. 实际的，现实的 </li>
<li>declaration n. 说明，申报 </li>
<li>probably ad. 多半，很可能 </li>
<li>ring n. &amp; v. 环，圈；按铃 </li>
<li>cover vt. 盖，罩，套 </li>
<li>indicator n. 指示器，指示灯 </li>
<li>apple n. 苹果 </li>
<li>icon n. 图符，象征 </li>
<li>consideration n. 考虑，研究，讨论 </li>
<li>skill n. 技巧 </li>
<li>picture n. 图象，画面 </li>
<li>layout n. 布置，布局，安排 </li>
<li>suggest vt. 建议，提议，暗示 </li>
<li>convenient a. 方便的，便利的 </li>
<li>instruct vt. 讲授，命令 </li>
<li>appendix n. 附录 </li>
<li>medium n. &amp; a. 媒体；中等的 </li>
<li>truncate vt. 截尾，截断 </li>
<li>inhibit vt. 禁止 </li>
<li>nearly ad. 近乎，差不多，几乎 </li>
<li>warn vt. 警告，警戒，预告 </li>
<li>underline n. 下划线 </li>
<li>register n. 寄存器 </li>
<li>stuff n. &amp; vt. 材料；装入 </li>
<li>exclude vt. 排除，除去 </li>
<li>destroy vt. 破坏，毁坏，打破 </li>
<li>calculation n. 计算，统计，估计 </li>
<li>angle n. 角，角度 </li>
<li>lexical a. 辞典的，词法的 </li>
<li>decide v. (使)判定，判断 </li>
<li>trouble n. 故障 </li>
<li>processing n. (数据)处理，加工 </li>
<li>customer n. 顾客，客户 </li>
<li>port n. 端口，进出口 </li>
<li>discuss vt. 讨论，论述 </li>
<li>segment n. 段，片段，图块 </li>
<li>filing n. (文件的)整理汇集 </li>
<li>identically ad. 相等，恒等 </li>
<li>market n. 市场，行情，销路 </li>
<li>valuable a. 有价值的，贵重的 </li>
<li>limited a. 有限的，(受)限制的 </li>
<li>trying a. 费劲的，困难的 </li>
<li>heap n. 堆阵 </li>
<li>grey n. &amp; a. 灰色；灰色的 </li>
<li>permanently ad. 永久地，持久地 </li>
<li>accelerator n. 加速装置，加速剂 </li>
<li>originally ad. 原来，最初 </li>
<li>ability n. 性能，能力，效率 </li>
<li>internally ad. 在内(部) </li>
<li>derelict vt. 中途淘汰 </li>
<li>redirect vt. 重定向 </li>
<li>reside vi. 驻留 </li>
<li>header n. 首部，标题，报头 </li>
<li>extra a. 特别的，额外的 </li>
<li>repeated a. 重复的 </li>
<li>death n. 毁灭，消灭 </li>
<li>observe v. 观察，探测 </li>
<li>density n. 密度 </li>
<li>management n. 管理 </li>
<li>environmental a. 周围的，环境的 </li>
<li>surrounding a. 周围的，环绕的 </li>
<li>master a. 总要的，总的 </li>
<li>recursive a. 递归的，循环的 </li>
<li>trap n. &amp; vt. 陷阱；俘获 </li>
<li>dimensional n. 尺寸的，…维的 </li>
<li>logic n. 逻辑(线路) </li>
<li>conjunction n. 逻辑乘，”与” </li>
<li>identical a. 相等的，相同的 </li>
<li>advice n. 意见，参考说明 </li>
<li>meaning n. 意义，含义 </li>
<li>fall n. 落下，降落 </li>
<li>interval n. 间歇，区间 </li>
<li>compatibility n. 兼容性，适应性 </li>
<li>rule n. 规则，法则，尺 </li>
<li>flag n. 标志(记)，特征(位) </li>
<li>criterion n. 标准，判据，准则 </li>
<li>office n. 办公室，局，站 </li>
<li>express a. 快速的 </li>
<li>volume n. 卷，册，体积，容量 </li>
<li>soft a. 软的 </li>
<li>rated a. 额定的 </li>
<li>activity n. 活力，功率 </li>
<li>odometer n. 里程表，计程仪 </li>
<li>phoenix n. 凤凰，绝世珍品 </li>
<li>obtain v. 获得，得到 </li>
<li>easel n. 框，(画)架 </li>
<li>latter a. 后面的，最近的 </li>
<li>decrease v. 减少，降低，缩短 </li>
<li>mainframe n. 主机，大型机 </li>
<li>debugger n. 调试程序 </li>
<li>diacritical a. 区分的，辩别的</li>
</ol>
<p>confidential a. 机密的 </p>
<ol>
<li>trace v. 跟踪，追踪 </li>
<li>division n. 除，除法，(程序)部分 </li>
<li>regular a. 正则的，正规的 </li>
<li>implicit a. 隐式的 </li>
<li>mention vt. &amp; n. 叙述，说到 </li>
<li>near ad. &amp; prep. 领近，接近 </li>
<li>fifth n. &amp; a. 第五，五分之一 </li>
<li>seven n. &amp; a. 七(个) </li>
<li>whereas conj. 面，其实，既然 </li>
<li>review v. &amp; n. (再)检查 </li>
<li>whatever pron. &amp; a. 无论什么 </li>
<li>transform v. &amp; n. 变换，变换式 </li>
<li>align v. &amp; n. 定位，对准 </li>
<li>yellow a. &amp; n. 黄色(的) </li>
<li>assist v. &amp; n. 加速，帮助 </li>
<li>finish v. &amp; n. 完成，结束 </li>
<li>micro a. &amp; n. 微的，百万分之一 </li>
<li>beyond prep. 超过，那边 </li>
<li>against prep. 反对，阻止 </li>
<li>upon prep. 依据，遵照 </li>
<li>service n. &amp; vt. 服务，业务 </li>
<li>little a. 小的，少量的 </li>
<li>exhaust v. 取尽，用完 </li>
<li>choice n. 选择，精品 </li>
<li>sounding a. 发声的 </li>
<li>develop v. 发展，研制，显影 </li>
<li>holding n. 保持，固定，存储 </li>
<li>alpha n. 希腊字母α，未知数 </li>
<li>constant n. 常数 </li>
<li>warranty n. 保证(书)，授权 </li>
<li>stay v. 停止，停留 </li>
<li>industry n. 工业 </li>
<li>trigger n. &amp; v. 触发器；触发 </li>
<li>lesson n. 功课，教训 </li>
<li>handling n. 处理，操纵 </li>
<li>treat v. 处理，加工 </li>
<li>busy a. 忙碌的，占线的 </li>
<li>usage n. 应用，使用，用法 </li>
<li>difficult a. 困难的，不容易的 </li>
<li>failure n. 失效，故障，失败 </li>
<li>communication n. 通信 </li>
<li>building n. 建造，建筑，房屋 </li>
<li>ally v. 联合，与…关联 </li>
<li>exclamation n. 惊叹(号) </li>
<li>turning a. 转弯的，旋转的 </li>
<li>whole a. 全部的，整个的 </li>
<li>parent n. 双亲，父代 </li>
<li>connection n. 连接(法) </li>
<li>connectivity n. 连通性，联络性 </li>
<li>translation n. 翻译，变换，平移 </li>
<li>dynamic a. 动态的，动力的 </li>
<li>foreground n. 前台 </li>
<li>preserve vt. 保存，维持 </li>
<li>vice n. 缺点，毛病，错误 </li>
<li>necessarily ad. 必定，当然 </li>
<li>circle n. 圆，圈，循环，周期 </li>
<li>differ vi. 不同，不一致 </li>
<li>stationary a. 静止的，平稳的 </li>
<li>extract vt. 抽取，摘录，开方 </li>
<li>unrecognized a. 未被认出的 </li>
<li>thereafter ad. 此后，据此 </li>
<li>inverse a. 反向的，逆的 </li>
<li>spell v. 拼写 </li>
<li>limiting n. (电路参数)限制处理 </li>
<li>restructure vt. 调整，重新组织 </li>
<li>delimit vt. 定界，定义 </li>
<li>pay v. 付款，支付 </li>
<li>separately ad. 分别地 </li>
<li>classify vt. 分类，分级 </li>
<li>interfere vi. 干涉，干扰，冲突 </li>
<li>mind n. 愿望，想法，智力 </li>
<li>individually ad. 个别地，单独地 </li>
<li>vertical a. 垂直的，立(式)的 </li>
<li>undesirable a. 不合乎需要的 </li>
<li>lot n. 一块(批，组，套) </li>
<li>piece n. 一块，部分，段 </li>
<li>unavailable a. 不能利用的 </li>
<li>unlike a. 不象的，不同的 </li>
<li>sit v. 位于，安装 </li>
<li>insufficient a. 不足的，不适当的 </li>
<li>map n. &amp; vt. 图；映射，变址 </li>
<li>figure n. 数字；图，图形，形状 </li>
<li>prepare v. 准备 </li>
<li>consider v. 考虑，认为，设想 </li>
<li>detect vt. 检测 </li>
<li>convenience n. 方便，便利 </li>
<li>method n. 方法，方案 </li>
<li>mean n. &amp; vt. 平均；意味着 </li>
<li>salary n. &amp; vt. 薪水；发工资 </li>
<li>pacific a. 平稳的，太平(洋)的 </li>
<li>strong a. 强的 </li>
<li>emphasize v. 强调，着重，增强 </li>
<li>department n. 部门，门类，系 </li>
<li>forced a. 强制的，压力的 </li>
<li>ansi n. 美国国家标准协会 </li>
<li>permanent a. 永久的 </li>
<li>remark n. 评注，备注 </li>
<li>away ad. 离开，(去)掉 </li>
<li>concatenate vt. 连接，串联，并置 </li>
<li>lightning n. 闪电 </li>
<li>additionally ad. 另外，又 </li>
<li>emulate v. 仿真，模仿；赶上或超过 </li>
<li>tape n. 磁带，纸带 </li>
<li>accidentally ad. 偶然地 </li>
<li>concept n. 概念 </li>
<li>optimize v. 优选，优化 </li>
<li>counter n. 计数器，计算器 </li>
<li>expect vt. 期望，期待，盼望 </li>
<li>subsequently ad. 其后，其次，按着 </li>
<li>registration n. 登记，挂号，读数 </li>
<li>city n. 城市，市区 </li>
<li>designate vt. 任命，标志 </li>
<li>visible a. 可见的，明显的 </li>
<li>consult v. 咨询，顾问 </li>
<li>completely ad. 十分，完全，彻底 </li>
<li>virtually ad. 实际上 </li>
<li>substantially ad. 实质上，本质上 </li>
<li>specialize v. (使)专门化 </li>
<li>fail n. 故障，失效 </li>
<li>primarily ad. 首先，起初，原来 </li>
<li>sequentially ad. 顺序地 </li>
<li>client n. 顾客，买主</li>
</ol>
<p>runtime n. 运行时间 </p>
<ol>
<li>fix v. 固定，定影 </li>
<li>author n. 程序设计者，作者 </li>
<li>programmer n. 程序设计人员 </li>
<li>commercial a. 商业的，经济的 </li>
<li>particularly ad. 特别，格外，尤其 </li>
<li>low a. 低的，浅的，弱的 </li>
<li>sheet n. (图)表，纸，片 </li>
<li>employee n. 雇员 </li>
<li>legal a. 合法的，法律的 </li>
<li>qualified a. 合格的，受限制的 </li>
<li>context n. 上下文，来龙去脉 </li>
<li>involved a. 有关的 </li>
<li>conditional a. 有条件的 </li>
<li>halfway a. 中途的，不彻底的 </li>
<li>oriented a. 有向的，定向的 </li>
<li>pair n. (一)对，一双 </li>
<li>week n. (一)星期，(一)周 </li>
<li>suppressed vt. 抑制，取消 </li>
<li>subroutine n. 子程序 </li>
<li>bracketed a. 加括号的 </li>
<li>manually ad. 用手，手动地 </li>
<li>preset vt. 预置 </li>
<li>autoindex n. 自动变址(数) </li>
<li>restrict vt. 约束，限制 </li>
<li>performance n. 性能，实绩 </li>
<li>showing n. 显示，表现 </li>
<li>ever ad. 在任何时候，曾经 </li>
<li>distribution n. 分布，分配 </li>
<li>denote vt. 指示，意味着，代表 </li>
<li>cash n. 现金 </li>
<li>repeatedly ad. 重复地 </li>
<li>replicate vt. 重复，复制 </li>
<li>mega n. 兆，百万 </li>
<li>conform vi. 遵从，符合 </li>
<li>rebuild v. 重建，修复，改造 </li>
<li>certainty n. 必然，确实 </li>
<li>controller n. 控制器 </li>
<li>pseudo a. 假的，伪的，冒充的 </li>
<li>manage v. 管理，经营，使用 </li>
<li>administrator n. 管理人，行政人员 </li>
<li>ensemble n. 总体，集合体 </li>
<li>bus n. 总线，信息通路 </li>
<li>allowable a. 容许的，承认的 </li>
<li>limitations n. 限制，边界 </li>
<li>restriction n. 限制，约束，节流 </li>
<li>height n. 高度 </li>
<li>remainder n. 余数，余项，剩余 </li>
<li>traverse v. 横渡，横过，横断 </li>
<li>organization n. 结构，机构，公司 </li>
<li>resulting a. 结果的，合成的 </li>
<li>solution n. 解，解法，解答 </li>
<li>external a. 外部的 </li>
<li>adequate a. 足够的，充分的 </li>
<li>interpretability n. 配合动作性 </li>
<li>vary v. 变化，变换 </li>
<li>gap n. 间隙，间隔，缝隙 </li>
<li>indexing n. 变址，标引，加下标 </li>
<li>board n. 板，插件板 </li>
<li>package n. 插件，(软件)包 </li>
<li>insertion n. 插入，嵌入，插页 </li>
<li>intervene vi插入，干涉 </li>
<li>conflict v. 冲突，碰头 </li>
<li>really a. 真正地，确实地 </li>
<li>overflow v. 溢出，上溢 </li>
<li>charge n. 电荷，充电，负荷 </li>
<li>phone n. 电话，电话机，音素 </li>
<li>virtual a. 虚(拟)的，虚拟 </li>
<li>compose v. 组成，构成，构图 </li>
<li>snapshot n. 抽点打印 </li>
<li>sensitivity n. 灵敏度 </li>
<li>familiar a. 熟悉的，惯用的 </li>
<li>mach n. 马赫(速度单位) </li>
<li>incorrect a. 错误的，不正确的 </li>
<li>cut v. 割，切 </li>
<li>lowest a. 最低的，最小的 </li>
<li>simple a. 简单的 </li>
<li>subsequent a. 后来的，其次的 </li>
<li>capitalized a. 大写的 </li>
<li>compact a. 紧致的，压缩的 </li>
<li>plain n. 明码 </li>
<li>noted a. 著名的 </li>
<li>desirable a. 所希望的，称心的 </li>
<li>substitution n. 代替，替换，置换 </li>
<li>consume v. 消耗，使用 </li>
<li>forget v. 忘记 </li>
<li>keyed a. 键控的 </li>
<li>overstrike n. 过打印 </li>
<li>tornado n. 旋风，龙卷风 </li>
<li>quotation n. 引证，引用(句) </li>
<li>ones n. 二进制反码 </li>
<li>parse vt. (语法)分析 </li>
<li>experience vt. &amp; n. 试验 </li>
<li>manufacture vt. &amp; n. 制造(业)，工业 </li>
<li>hundred n. &amp; a. (一)百，百个 </li>
<li>thousand n. &amp; a. (一)千，无数的 </li>
<li>twentieth n. &amp; a. 第二十(的) </li>
<li>understanding n. &amp; a. 了解的，聪明的 </li>
<li>hand n. &amp; a. 手，手工(动)的 </li>
<li>restricting n. &amp; a. 限制(的) </li>
<li>fancy n. &amp; a. 想象(的)，精制的 </li>
<li>wide a. &amp; ad. 宽的，广阔的 </li>
<li>fine a. &amp; ad. 微小的，细的 </li>
<li>worry v. &amp; n. (使)烦恼 </li>
<li>somewhat pron. &amp; ad. 稍微，有点 </li>
<li>quiet a. &amp; n. 静态，静止的 </li>
<li>purge v. &amp; n. 清除 </li>
<li><p>mod a. &amp; n. 时髦的 </p>
</li>
<li><p>whichever a. &amp; pron. 无论哪个 </p>
</li>
<li>purchase n. &amp; v. 购买 </li>
<li>care n. &amp; v. 关心，注意 </li>
<li>watch n. &amp; v. 监视，观测 </li>
<li>endeavor n. &amp; v. 尽力，力图 </li>
<li>mismatch n. &amp; vt. 失配，不匹配 </li>
<li>printout n. 印出 </li>
<li>ellipsis n. 省略符号，省略(法) </li>
<li>ship n. 舰，船 </li>
<li>british a. &amp; n. 英国的；英国人 </li>
<li>parallel a. 并行 </li>
<li>custom a. &amp; n. 常规的，惯例；用户 </li>
<li>congratulation n. 祝贺 </li>
<li>protection n. 保护 </li>
<li>glass n. 玻璃 </li>
<li>pattern n. 模式 </li>
<li>insure v. 保证，保障 </li>
<li>stopping n. 停止，制动(状态) </li>
<li>factory n. 工厂，制造厂 </li>
<li>implement n. &amp; vt. 工具；执行，实现 </li>
<li>effort n. 工作，研究计划 </li>
<li>worker n. 工作人员 </li>
<li>ampersand n. &amp;号(and) </li>
<li>deal v. 处理，分配，交易 </li>
<li>power n. 功率，电源，幂 </li>
<li>difficulty n. 困难，难点 </li>
<li>lose n. 失去，损失 </li>
<li>magic n. 魔术，幻术 </li>
<li>proprietary a. 专有的 </li>
<li><p>aware a. 知道的，察觉到的 </p>
</li>
<li><p>vowel n. 元音，母音 </p>
</li>
<li>closely a. 精密地，仔细地 </li>
<li>accuracy n. 精确度，准确度 </li>
<li>traditional a. 传统的，惯例的 </li>
<li>synchronization n. 同步 </li>
<li>fragment n. 片段，段，分段 </li>
<li>primary a. 原始的，主要的 </li>
<li>safely ad. 安全地，确实地 </li>
<li>habit n. 习惯 </li>
<li>comprise vt. 包括，由…组成 </li>
<li>landler n. 兰德勒舞曲 </li>
<li>absence n. 缺少，没有 </li>
<li>revolutionize vt. 变革，彻底改革 </li>
<li>constantly ad. 不变地，经常地 </li>
<li>seldom ad. 不常，很少，难得 </li>
<li>unfortunately ad. 不幸，遗憾地 </li>
<li>expunge vt. 擦除，删掉 </li>
<li>security n. 安全性，保密性 </li>
<li>touch v. &amp; n. 按，揿，触；触力 </li>
<li>contrast n. 反差，对比，对比度 </li>
<li>invent vt. 创造，想象 </li>
<li>reflect v. 反射 </li>
<li>undone a. 未完成的 </li>
<li>unshift v. 未移动，不移档 </li>
<li>complex a. &amp; n. 复杂的；复数 </li>
<li>complexity n. 复杂性，复杂度 </li>
<li>creation n. 创造，创作 </li>
<li>unknown a. 未知的，无名的 </li>
<li>greatly ad. 大大地，非常 </li>
<li>cost n. 值，价值，成本 </li>
<li>degrade v. 降低，减少，递降 </li>
<li>suggestion n. 暗示，提醒 </li>
<li>real n. 实数，实的，实型 </li>
<li>experimentation n. 实验(工作，法) </li>
<li>experiment n. 实验，试验(研究) </li>
<li>substantial a. 实质的，真正的 </li>
<li>solely ad. 独自，单独，只 </li>
<li>announce vt. 发表，宣布 </li>
<li>squeeze v. 挤压 </li>
<li>distribute vt. 分布，配线，配给 </li>
<li>negate vt. 否定，求反，”非” </li>
<li>capture vt. 俘获，捕捉 </li>
<li>father n. 父，上层(树节点的) </li>
<li>reinstate vt. 复原，恢复 </li>
<li>tutorial a. 指导的 </li>
<li>nicety n. 细节，精细 </li>
<li>roll n. &amp; v. 案卷；卷动，滚动 </li>
<li>exponent n. 指数，阶，幂 </li>
<li>exponential a. 指数的，幂的，阶的 </li>
<li>prefer vt. 更喜欢，宁愿 </li>
<li>complicated v. 使复杂化，使混乱 </li>
<li>reactivate v. 使恢复活动 </li>
<li>spread v. 展开，传播 </li>
<li>synchronize v. 使同步 </li>
<li>formation n. 构造，结构，形成 </li>
<li>widely ad. 广泛，很远 </li>
<li>comma n. 逗号”,”，逗点 </li>
<li>very ad. 很，非常，最 </li>
<li>unnecessary a. 不必要的，多余的 </li>
<li>unchanged a. 不变的 </li>
<li>cross n. 交叉，十字准线 </li>
<li>yet ad. 还，仍然，至今 </li>
<li>slowly ad. 缓慢地 </li>
<li>inexperienced a. 不熟练的，外行的 </li>
<li>noninteractive a. 不相关的，非交互的 </li>
<li>unwanted a. 不需要的，多余的 </li>
<li>unused a. 不用的，空着的 </li>
<li>unmarked a. 没有标记的 </li>
<li>nothing n. 没有任何东西 </li>
<li>chart n. 图(表) </li>
<li>dearly ad. 极，非常，昂贵地 </li>
<li>extremely ad. 极端地，非常 </li>
<li>hardly ad. 几乎不，未必 </li>
<li>placement n. 布局 </li>
<li>think v. 考虑，以为，判断 </li>
<li>technical a. 技术的，专业的 </li>
<li>idea n. 思想，观念 </li>
<li>stamp n. 图章 </li>
<li>indirectly ad. 间接地 </li>
<li>equation n. 方程，方程式 </li>
<li>smooth v. &amp; a. 平滑；平滑的 </li>
<li>attached a. 附加的</li>
</ol>
<p>average n. 平均，平均数 </p>
<ol>
<li>quietly ad. 静静地 </li>
<li>discard v. 删除，废除，放弃 </li>
<li>never ad. 决不，从来不 </li>
<li>initiate vt. 开创，起始 </li>
<li>powerful a. 强大的，大功率的 </li>
<li>purpose n. &amp; vt. 目的，用途；打算 </li>
<li>regard vt. 考虑，注意，关系 </li>
<li>daily a. 每日的，日常的 </li>
<li>possibly ad. 可能地，合理地 </li>
<li>potentially ad. 可能地，大概地 </li>
<li>moreover ad. 况且，并且，此外 </li>
<li>american a. 美国的 </li>
<li>guard v. &amp; n. 防护；防护装置 </li>
<li>world n. 世界，全球 </li>
<li>independent a. 独立的 </li>
<li>independently a. 独立地 </li>
<li>continuously ad. 连续不断地 </li>
<li>shield v. 屏蔽，罩，防护 </li>
<li>glance n. 闪烁 </li>
<li>happening n. 事件，偶然发生的事 </li>
<li>transaction n. 事项，事务，学报 </li>
<li>emulation n. 仿真，仿效 </li>
<li>strike v. 敲，击 </li>
<li>dump v. (内存信息)转储 </li>
<li>occasionally ad. 偶尔(地)，不时 </li>
<li>tension n. 张力 </li>
<li>probable a. 概率的，可能的 </li>
<li>talent n. 才能，技能，人才 </li>
<li>financial a. 财务的，金融的 </li>
<li>meter n. 仪表，米 </li>
<li>logged a. 记录的，浸透的 </li>
<li>ware n. 仪器，商品 </li>
<li>disregard vt. 轻视，把…忽略不计 </li>
<li>waiting a. 等待的 </li>
<li>preceding a. 先的，以前的 </li>
<li>comparison n. 比较，对照 </li>
<li>advanced a. 先进的，预先的 </li>
<li>rate n. 比率，速率，费率 </li>
<li>fly v. 飞，跳过 </li>
<li>programmable a. 可编程的 </li>
<li><p>definable a. 可定义的，可确定的 </p>
</li>
<li><p>recoverable a. 可恢复的，可回收的 </p>
</li>
<li>possibility n. 可能性 </li>
<li>finisher n. 成品机 </li>
<li>applicable a. 可适用的，合适的 </li>
<li>printable a. 可印刷的 </li>
<li>executable a. 可执行的 </li>
<li>essentially ad. 实质上，本来 </li>
<li>confuse vt. 使混乱，干扰 </li>
<li>familiarize vt. 使熟悉，使通俗化 </li>
<li>employe vt. 使用，花费 </li>
<li>suitable a. 适合的，相适宜的 </li>
<li>generation n. (世)代，(发展)阶段 </li>
<li>quality n. 质量，性质，属性 </li>
<li>defective a. 故障的，有毛病的 </li>
<li>interpretable a. 彼此协作的 </li>
<li>interest n. 兴趣，注意，影响 </li>
<li>fourscore n. 八十 </li>
<li>teach v. 教，讲授 </li>
<li>procedural a. 程序上的 </li>
<li>phrase n. 短语，成语 </li>
<li>specifically ad. 特别地，逐一地 </li>
<li>penalty n. 惩罚，罚款，负担 </li>
<li>violate vt. 违犯，妨碍，破坏 </li>
<li>indefinitely ad. 无限地，无穷地 </li>
<li>major a. 较大的，主要的 </li>
<li>higher a. 较高的 </li>
<li>wise a. 聪明的 </li>
<li>becoming a. 合适的，相称的 </li>
<li>equally ad. 相等地，相同地 </li>
<li>enjoy vt. 享受，欣赏，喜爱 </li>
<li>forth ad. 向前 </li>
<li>disappear vi. 消失 </li>
<li>crop v. 切，剪切 </li>
<li>diagonally ad. 斜(对) </li>
<li>labeled a. 有标号的 </li>
<li>decision n. 判定，决定，决策 </li>
<li>effective a. 有效的 </li>
<li>significant a. 有效的，有意义的 </li>
<li>avail v. &amp; n. 有益于；利益 </li>
<li>hang v. 中止，暂停，挂起 </li>
<li>craze n. &amp; v. 裂纹开裂 </li>
<li>consequently ad. 因此，从而 </li>
<li>introduce vt. 引进，引导 </li>
<li>team n. 队，小组 </li>
<li>visual a. 视觉的，直观的 </li>
<li>acknowledgment n. 接收(收妥)，承认 </li>
<li>efficiently ad. 有效地 </li>
<li>predict vt. 预测，预言 </li>
<li>anticipate vt. 预先考虑，抢…先 </li>
<li>bypass n. 旁路 </li>
<li>nature n. 自然，天然 </li>
<li>natural a. 自然的 </li>
<li>grant vt. 允许，授权 </li>
<li>logarithm n. 对数 </li>
<li>reappears vi. 再现，重现 </li>
<li>reload vt. 再装入 </li>
<li>occupy vt. 占有，充满 </li>
<li><p>photograph n. 照片；v.照相 </p>
</li>
<li><p>resolve v. 分辨，解像 </p>
</li>
<li>unsafe v. 恢复 </li>
<li>separator n. 分隔符 </li>
<li>hierarchical a. 分级的，分层的 </li>
<li>assortment n. 种类，花色品种 </li>
<li>growing n. 分类，分组，成群 </li>
<li>discussion n. 讨论，商议，论述 </li>
<li>alphabet n. 字母，字母表 </li>
<li>scattered a. 分散的</li>
</ol>
<p>superimpose vt. 重叠，叠加<br>reorganization vt. 重排，改组</p>
<p>ready a. 就绪，准备好的<br>already ad. 已经，早已<br>readily ad. 容易地，不勉强</p>
<p>read v. 读，读阅<br>reading n. 读，读数<br>readable a. 可读的<br>reread vt. 重读<br>write v. 写，存入<br>rewrite vt. 重写，再生<br>overwrite v. 重写(覆盖)</p>
<p>university n. (综合性)大学<br>deter vt. 阻止，拦住，妨碍<br>pool n. &amp; v. 池，坑；共享<br>moment n. 矩，力矩，磁矩</p>
<p>shut v. 关闭<br>closed a. 关闭的，闭迹<br>respond v. 回答，响应</p>
<p>repeating n. 重复，循环<br>repetitive a. 重复的<br>reenter v. 重新进入<br>rearrange v. 重新整理，重新排序<br>rectangular a. 矩形的，成直角的 </p>
<p>tag n. 特征，标记，标识符<br>price n. 价格</p>
<p>suppose v. 假定，推测<br>supposed a. 假定的，推测的<br>manipulating v. 操纵，操作<br>operator n. 操作员，运算符<br>masking n. 掩蔽，屏蔽</p>
<p>demonstrate v. 论证，证明，证实<br>importance n. 价值，重要<br>pipe n. 管，导管<br>overall a. 总共的，全部的<br>turnkey n. 总控钥匙<br>restricted a. 受限制的，受约束的<br>suspension n. 暂停，中止，挂起<br>seamless a. 无缝的 </p>
<p>unsigned a. 无符号的<br>unformatted a. 无格式的<br>infinite a. 无限的，无穷的<br>useless a. 无用的</p>
<p>limiter n. 限制(幅)器<br>mountain n. 高山，山脉 </p>
<p>redundant a. 冗余的<br>dependent a. 相关的<br>contiguous a. 相连的，邻接的<br>consistent a. 相容的，一致的</p>
<p>multiprocessing n. 多重处理，多道处理<br>architecture n. 结构，构造<br>structural a. 结构的，结构上的</p>
<p>outcome n. 结果，成果，输出<br>opinion n. 意见，见解，判断<br>association n. 结合，协会，联想 </p>
<p>interpret v. 解释<br>explanatory a. 解释(性)的<br>assemble v. 汇编，装配<br>assembler n. 汇编程序</p>
<p>cad 计算机辅助设计<br>arithmetic n. 算术，运算<br>varying a. 变化的，可变的</p>
<p>typical a. 典型的，标准的<br>representative a. 典型的，表示的 </p>
<p>sufficient a. 充足的，足够的<br>blast v. &amp; n. 清除；爆炸<br>clean a. 清洁的，干净的<br>caret n. 插入符号<br>socket n. 插座，插孔，插口<br>stated a. 规定的<br>protocol n. 规约，协议，规程<br>presence n. 存在，有<br>telephone n. 电话</p>
<p>lending n. &amp; a. 借给，出租；借出的 </p>
<p>mixture n. 混合物<br>situation n. 情况，状况，势态<br>circumstances n. 情况，环境，细节<br>representation n. 表示<br>esoteric a. 深奥的，奥秘的<br>depth n. 深度，浓度(颜色的)</p>
<p>final a. 最终的<br>eventually ad. 终于，最后<br>finally ad. 终于，最后</p>
<p>physically a. 物理上，实际上</p>
<p>please v. 请<br>aid n. 帮助，辅助程序<br>successive a. 逐次的，相继的<br>succession n. 逐次性，连续性<br>alignment n. 序列，成直线<br>chunk n. 厚块，大部分<br>big a. 大的，重要的 </p>
<p>unpack v. 拆开，卸，分开<br>book n. 书，手册，源程序块<br>desk n. 书桌，控制台，面板<br>equipment n. 设备，装备，仪器<br>typewriter n. 打字机<br>clipper n. 限幅器，钳位器</p>
<p>sensitive a. 敏感的，灵敏的<br>reduction n. 减化，还原，减少<br>indentation n. 缩进，缩排</p>
<p>term n. 项，条款，术语<br>terminology n. 术语<br>terminating n. 终止，终结，收信<br>terminal n. 终端，端子<br>terminate v. 端接，终止<br>determine v. 确定<br>determined a. 坚决的，毅然的 </p>
<p>accommodate v. 调节，适应<br>gain n. 增益(系数)<br>ascending a. 增长的，向上的<br>augment v. 增加，添加，扩充<br>increment n. 增量，加１，递增 </p>
<p>obsolete a. 作废的，过时的 </p>
<p>motif n. 主题，要点，特色<br>subject n. 主题，源</p>
<p>job n. 作业<br>stream n. 流<br>locking n. 锁定，加锁<br>progress n. 进度，进展</p>
<p>differentiate v. 区别，分辨<br>distinction n. 区别，相异，特性<br>distinguish v. 区别，辨识 </p>
<p>basis n. 基础，座<br>underlying a. 基础的，根本的<br>fundamental a. 基本的，根本的 </p>
<p>sound n. 声音，音响<br>tone n. 音调，音色，色调<br>vital a. 生动的，不可缺少的</p>
<p>social a. 社会的<br>national a. 国家的</p>
<p>sale n. 销售，销路<br>agree v. 符合，相同</p>
<p>course n. 过程，航向，课程<br>exceeded a. 过度的，非常的</p>
<p>iterative a. 迭代的<br>inclusive a. 包括的，内含的 </p>
<p>charm n. 吸引力<br>hit v. 命中，瞬时干扰</p>
<p>numeral n. &amp; n. 数字的，数码<br>numeric n. &amp; a. 数字的，分数<br>numerous a. 为数众多的，无数的<br>numerical a. 数量的，数字的</p>
<p>digital a. 数字的<br>digit n. 数字，位数，位 </p>
<p>combo n. 二进位组合码<br>combine v. 组合，联合<br>combination n. 结合，组合</p>
<p>cord n. 绳子，电线<br>record n. 记录<br>according to a. 按照，根据 </p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
  </entry>
  <entry>
    <title>数学大观</title>
    <url>/blog.githup.io/2020/05/%E6%95%B0%E5%AD%A6%E5%A4%A7%E8%A7%82/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      <categories>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>计算机英语</title>
    <url>/blog.githup.io/2020/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%8B%B1%E8%AF%AD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="计算机专业-（Computer-Science-计算机科学）"><a href="#计算机专业-（Computer-Science-计算机科学）" class="headerlink" title="计算机专业 （Computer Science 计算机科学）"></a>计算机专业 （Computer Science 计算机科学）</h2><h3 id="美国计算机专业院校排名前十-University-Rankings"><a href="#美国计算机专业院校排名前十-University-Rankings" class="headerlink" title="美国计算机专业院校排名前十 University Rankings"></a>美国计算机专业院校排名前十 University Rankings</h3><ul>
<li><a href="https://www.cmu.edu/" target="_blank" rel="noopener">卡耐基梅隆大学</a>    Carnegie Mellon University    5    Pittsburgh, PA</li>
<li><a href="https://www.mit.edu/" target="_blank" rel="noopener">麻省理工学院</a>    Massachusetts Institute of Technology    5    Cambridge, MA</li>
<li><a href="https://www.stanford.edu/" target="_blank" rel="noopener">斯坦福大学</a>    Stanford University    5    Stanford, CA</li>
<li><a href="https://www.berkeley.edu/" target="_blank" rel="noopener">加州大学伯克利分校</a>    University of California—Berkeley    5    Berkeley, CA</li>
<li>伊利诺伊大学厄本那-香槟分校    University of Illinois—Urbana-Champaign    4.6    Urbana, IL</li>
<li>康奈尔大学    Cornell University    4.5    Ithaca, NY</li>
<li>华盛顿大学    University of Washington    4.5    Seattle, WA</li>
<li>佐治亚理工学院    Georgia Institute of Technology    4.4    Atlanta, GA</li>
<li>普林斯顿大学    Princeton University    4.4    Princeton, NJ</li>
<li>德克萨斯大学奥斯汀分校    University of Texas—Austin    4.3    Austin, TX</li>
</ul>
<h3 id="国内计算机专业院校排名"><a href="#国内计算机专业院校排名" class="headerlink" title="国内计算机专业院校排名"></a>国内计算机专业院校排名</h3><ul>
<li><a href="https://www.tsinghua.edu.cn/" target="_blank" rel="noopener">清华大学</a></li>
<li><a href="https://www.nudt.edu.cn/" target="_blank" rel="noopener">国防科学技术大学</a></li>
<li><a href="https://www.pku.edu.cn/" target="_blank" rel="noopener">北京大学</a></li>
<li><a href="https://www.buaa.edu.cn/" target="_blank" rel="noopener">北京航空航天大学</a></li>
<li>哈尔滨工业大学</li>
<li>上海交通大学</li>
<li>浙江大学</li>
<li>南京大学</li>
<li>中国科学技术大学</li>
<li>东北大学</li>
</ul>
<h3 id="第一类，研究理论层面"><a href="#第一类，研究理论层面" class="headerlink" title="第一类，研究理论层面"></a>第一类，研究理论层面</h3><figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line">计算理论 Theory <span class="keyword">of</span> computation</span><br><span class="line">计算几何学 Computational Geometry</span><br><span class="line">并行计算 <span class="keyword">Parallel</span> Computation</span><br><span class="line">形式化方法 Formal <span class="function"><span class="keyword">Method</span></span></span><br><span class="line"><span class="function">程序设计语言理论 <span class="title">Theory</span> <span class="title">of</span> <span class="title">programming</span> <span class="title">language</span></span></span><br><span class="line"><span class="function">人工智能 <span class="title">Artificial</span> <span class="title">Intelligence</span></span></span><br></pre></td></tr></table></figure>
<h3 id="第二类，系统软件层面"><a href="#第二类，系统软件层面" class="headerlink" title="第二类，系统软件层面"></a>第二类，系统软件层面</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">体系结构<span class="built_in"> System </span>Architecture</span><br><span class="line">网络与通讯 Networkand Communication</span><br><span class="line">面向对象 Object-oriented</span><br><span class="line">约束程序设计 Programming Design</span><br><span class="line">软件工程 Software Engineering</span><br><span class="line">软件质量控制 Software Quality Control</span><br><span class="line">实时系统与嵌入式系统 Real-timeand Imbedded System</span><br><span class="line">数据库系统 Database System</span><br><span class="line">大规模计算中的 I/O</span><br></pre></td></tr></table></figure>
<h3 id="第三类，计算机应用层面"><a href="#第三类，计算机应用层面" class="headerlink" title="第三类，计算机应用层面"></a>第三类，计算机应用层面</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">科学与工程计算</span><br><span class="line">电子商务与数字化图书馆</span><br><span class="line">人机交互</span><br><span class="line">计算机教育</span><br></pre></td></tr></table></figure>
<p><a href="https://www.mit.edu/education/schools-and-departments/" target="_blank" rel="noopener">MIT 院系</a><br><a href="https://www.eecs.mit.edu/" target="_blank" rel="noopener">MIT EECS</a><br><a href="https://cs.stanford.edu/" target="_blank" rel="noopener">Stanford CS</a></p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
  </entry>
  <entry>
    <title>全文索引原理</title>
    <url>/blog.githup.io/2020/05/%E5%85%A8%E6%96%87%E7%B4%A2%E5%BC%95%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html" target="_blank" rel="noopener">Elasticsearch: 权威指南</a></p>
<h3 id="概念-Concepts"><a href="#概念-Concepts" class="headerlink" title="概念 Concepts"></a>概念 Concepts</h3><ul>
<li>全文搜索<ul>
<li>倒排索引<ul>
<li>分词</li>
<li>建立索引</li>
</ul>
</li>
<li>相关性评分<ul>
<li>布尔模型</li>
<li>评分函数<ul>
<li>单词评分<ul>
<li>词频</li>
<li>逆向词频</li>
<li>字段长度归一值</li>
</ul>
</li>
<li>多词评分<ul>
<li>向量空间模型<ul>
<li>维数</li>
<li>TF/IDF算法</li>
<li>余弦近似度</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="倒排索引"><a href="#倒排索引" class="headerlink" title="倒排索引"></a>倒排索引</h3><blockquote>
<p>一个倒排索引由文档中所有不重复词的列表构成。</p>
<p>中文的词是词语（我们）中文词语间没有空格需要先分词。<br>英文的词是单词(example)</p>
</blockquote>
<p>在倒排索引中，词叫做 tokens。每个文档都被拆分成由不同词组成。</p>
<h3 id="相关性评分"><a href="#相关性评分" class="headerlink" title="相关性评分"></a>相关性评分</h3><p>布尔模型用来找出匹配的文档。</p>
<p>评分函数用来对文档相关性排序。</p>
<ul>
<li>词频 tf</li>
</ul>
<p>词在文档中出现的频度是多少？频度越高，权重 越高 。</p>
<blockquote>
<p>tf(t in d) = √frequency</p>
<p>词 t 在文档 d 的词频（ tf ）是该词在文档中出现次数的平方根。</p>
</blockquote>
<ul>
<li>逆向文档频率</li>
</ul>
<p>词在集合所有文档里出现的频率是多少？频次越高，权重 越低 。</p>
<blockquote>
<p>idf(t) = 1 + log ( numDocs / (docFreq + 1))</p>
<p>词 t 的逆向文档频率（ idf ）是：索引中文档数量除以所有包含该词的文档数，然后求其对数。</p>
</blockquote>
<ul>
<li>字段的长度归一值</li>
</ul>
<p>字段的长度是多少？字段越短，字段的权重 越高 。</p>
<blockquote>
<p>norm(d) = 1 / √numTerms</p>
<p>字段长度归一值（ norm ）是字段中词数平方根的倒数。</p>
<p>以下三个因素是在索引时计算并存储的。</p>
</blockquote>
<ul>
<li>向量空间模型</li>
</ul>
<p>进行多查询时，根据每个词的权重组成一个向量。然后和文档的向量比较。角度越相似，评分越高。</p>
<p><a href="https://www.ruanyifeng.com/blog/2013/03/cosine_similarity.html" target="_blank" rel="noopener">余弦近似度</a></p>
<h3 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h3><p><a href="https://blog.csdn.net/Kevin_cc98/article/details/73742037" target="_blank" rel="noopener">欧式距离、标准化欧式距离、马氏距离、余弦距离</a></p>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>lucene</tag>
        <tag>elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>Ansible使用</title>
    <url>/blog.githup.io/2020/05/Ansible%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p><a href="https://docs.ansible.com/" target="_blank" rel="noopener"> Ansible </a></p>
<p><a href="http://www.ansible.com.cn/" target="_blank" rel="noopener"> Ansible 中文  </a></p>
<p><a href="https://github.com/ansible/ansible.git" target="_blank" rel="noopener"> Ansible 源码</a></p>
</blockquote>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">yum install ansible</span><br><span class="line"></span><br><span class="line"><span class="comment"># git 源码</span></span><br><span class="line">git clone https:<span class="string">//github.com/ansible/ansible.git</span></span><br><span class="line"><span class="keyword">cd</span> <span class="string">./ansible</span></span><br><span class="line">make rpm</span><br><span class="line">sudo rpm -Uvh <span class="string">./rpm-build/ansible-</span>*<span class="string">.noarch.rpm</span></span><br></pre></td></tr></table></figure>
<h2 id="主配置文件-INI-格式"><a href="#主配置文件-INI-格式" class="headerlink" title="主配置文件 INI 格式"></a>主配置文件 INI 格式</h2><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 、; 为注释</span></span><br><span class="line">key = <span class="built_in">value</span> 格式</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下面指定的这几种方式顺序访问，配置遵循先到先得，后面的全部忽略。</span></span><br><span class="line">ANSIBLE_CONFIG (environment <span class="built_in">variable</span> <span class="keyword">if</span> <span class="built_in">set</span>)</span><br><span class="line">ansible.cfg (<span class="keyword">in</span> <span class="keyword">the</span> current <span class="built_in">directory</span>)</span><br><span class="line">~/.ansible.cfg (<span class="keyword">in</span> <span class="keyword">the</span> home <span class="built_in">directory</span>)</span><br><span class="line">/etc/ansible/ansible.cfg</span><br></pre></td></tr></table></figure>
<p><a href="https://docs.ansible.com/ansible/latest/reference_appendices/config.html#ansible-configuration-settings" target="_blank" rel="noopener"> ansible 配置变量查询</a></p>
<h2 id="相关概念-Concepts"><a href="#相关概念-Concepts" class="headerlink" title="相关概念 Concepts"></a>相关概念 Concepts</h2><ul>
<li>控制节点 control node</li>
<li>被管节点 managed nodes</li>
<li>主机列表 Inventory</li>
<li>模块 modules</li>
<li>任务 tasks</li>
<li><p>剧本 Playbooks</p>
</li>
<li><p>工作流程 workflow</p>
<ul>
<li>选择主机 selecting hosts</li>
<li>连接远程节点 connecting to remote nodes</li>
<li>执行模块 executing modules</li>
<li>下一步 next steps</li>
</ul>
</li>
</ul>
<p>使用方法<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">/etc/ansible/hosts  # 默认的 inventory (-i 指定 inventory)</span><br><span class="line">ansible all -m<span class="built_in"> ping </span># 尝试连通</span><br><span class="line">ansible all -a <span class="string">"/bin/echo hello"</span> # 执行 command </span><br><span class="line">ansible all -m<span class="built_in"> ping </span>-u bruce # 使用 bruce 用户 </span><br><span class="line">ansible all -m<span class="built_in"> ping </span>-u bruce --become # sudo</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line"><span class="comment">## 主机列表 Inventory</span></span><br><span class="line">* Inventory</span><br><span class="line">    * 主机与组</span><br><span class="line">    * 主机变量</span><br><span class="line">    * 组的变量</span><br><span class="line">    * 子组</span><br><span class="line"></span><br><span class="line">* INI 格式</span><br></pre></td></tr></table></figure><br>192.168.0.2<br>www.example.com<br>[group1]<br>192.168.0.5<br>192.168.0.6<br><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="bullet">* </span>YAML 格式</span><br></pre></td></tr></table></figure><br>all:<br>    hosts:<br>        192.168.0.2:<br>    children:<br>        group1:<br>            hosts:<br>              192.168.0.5:<br>              192.168.0.6:<br><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">&gt; 默认的组是<span class="keyword">all</span></span><br><span class="line"></span><br><span class="line">添加一堆主机（模式匹配）</span><br></pre></td></tr></table></figure><br>[group1]<br>www[01:50].blyanqi.com<br>[databases]<br>db-[a:f].example.com<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">在 Inventory 使用变量</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>主机变量</span><br><span class="line"><span class="bullet">    * </span>ansible_connection=ssh</span><br><span class="line"><span class="bullet">    * </span>ansible_user=ansible</span><br><span class="line"><span class="bullet">* </span>连接变量</span><br><span class="line"><span class="bullet">    * </span>ansible_port</span><br><span class="line"><span class="bullet">    * </span>ansible_host</span><br><span class="line"><span class="bullet">* </span>别名</span><br></pre></td></tr></table></figure></p>
<h1 id="主机变量"><a href="#主机变量" class="headerlink" title="主机变量"></a>主机变量</h1><p>[group1]<br>host1 http_port=80 maxRequestPerChild=808<br>host1 http_port=303 maxRequestPerChild=909</p>
<h1 id="连接变量"><a href="#连接变量" class="headerlink" title="连接变量"></a>连接变量</h1><p>[group2]<br>other1.example.com ansible_connection=ssh ansible_user=myuser</p>
<h1 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h1><p>jumper ansible_port=5555 ansible_host=192.168.0.50</p>
<h1 id="共享变量"><a href="#共享变量" class="headerlink" title="共享变量"></a>共享变量</h1><p>[webserver]<br>host1<br>host2<br>[webserver:vars] # 此处是共享的变量<br>ntp_server=ntp.blyanqi.com</p>
<h1 id="多组"><a href="#多组" class="headerlink" title="多组"></a>多组</h1><p>[web1]<br>host1<br>host2<br>[web2]<br>host3<br>host4</p>
<p>[web:children] # 包含多个组<br>web1<br>web2</p>
<p>[web:vars] # 组共享变量<br>halon_system_timeout=30</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">合并多个变量</span><br><span class="line"></span><br><span class="line">&gt; all<span class="built_in"> group </span>-&gt; parent<span class="built_in"> group </span>-&gt;child<span class="built_in"> group </span>-&gt;host</span><br></pre></td></tr></table></figure>
<h1 id="默认合并按照字母表顺序，"><a href="#默认合并按照字母表顺序，" class="headerlink" title="默认合并按照字母表顺序，"></a>默认合并按照字母表顺序，</h1><h1 id="或者-最近节点优先原则覆盖之前的"><a href="#或者-最近节点优先原则覆盖之前的" class="headerlink" title="或者 最近节点优先原则覆盖之前的"></a>或者 最近节点优先原则覆盖之前的</h1><p>for example： # b_group 覆盖 a_group<br>a_group:<br>    testvar: a<br>    ansible_group_priority: 10<br>b_group:<br>    testvar: b<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">指定多个 Inventory 源</span><br></pre></td></tr></table></figure></p>
<h1 id="使用-i-选项"><a href="#使用-i-选项" class="headerlink" title="使用 -i 选项"></a>使用 -i 选项</h1><p>ansible-playbook get_logs.yml -i staging -i production</p>
<h1 id="指定目录-动态的-Inventory"><a href="#指定目录-动态的-Inventory" class="headerlink" title="指定目录 动态的 Inventory"></a>指定目录 动态的 Inventory</h1><p>inventory/<br>  openstack.yml          # configure inventory plugin to get hosts from Openstack cloud<br>  dynamic-inventory.py   # add additional hosts with dynamic inventory script<br>  static-inventory       # add static hosts and groups<br>  group_vars/<br>    all.yml              # assign variables to all hosts</p>
<p>ansible-playbook example.yml -i inventory<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">### [ansible Inventory 变量](https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html#connecting-to-hosts-behavioral-inventory-parameters)</span></span><br><span class="line"></span><br><span class="line">*<span class="built_in"> connection </span>变量</span><br><span class="line">* ssh<span class="built_in"> connection </span>变量</span><br><span class="line">* 远程主机环境参数</span><br><span class="line">* 非 ssh 连接类型</span><br><span class="line"></span><br><span class="line"><span class="comment">### [ansible Inventory 插件](https://docs.ansible.com/ansible/latest/plugins/inventory.html#inventory-plugins)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### [ 动态的 Inventory ](https://docs.ansible.com/ansible/latest/user_guide/intro_dynamic_inventory.html#intro-dynamic-inventory)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### ad-hoc Command</span></span><br></pre></td></tr></table></figure></p>
<h1 id="pattern-匹配主机"><a href="#pattern-匹配主机" class="headerlink" title="pattern 匹配主机"></a>pattern 匹配主机</h1><p>$ ansible [pattern] -m [module] -a “[module options]”<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line"><span class="comment"># 对 atlanta 主机组 进行reboot</span></span><br><span class="line"><span class="comment"># -f 10 并发10个 process</span></span><br><span class="line"><span class="comment"># -u 使用的用户</span></span><br><span class="line"><span class="comment"># --become sudo 方式执行</span></span><br><span class="line"><span class="comment"># --ask-become-pass 提示方式执行</span></span><br><span class="line">ansible atlanta -a <span class="string">"/sbin/reboot"</span> -f 10 -u username --become [--ask-become-pass]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 shell 模块</span></span><br><span class="line">ansible raleigh -m shell -a <span class="string">'echo $TERM'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 copy 模块</span></span><br><span class="line"><span class="comment"># src 是源文件</span></span><br><span class="line"><span class="comment"># dest 目的文件</span></span><br><span class="line">ansible atlanta -m copy -a <span class="string">"src=/etc/hosts dest=/tmp/hosts"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># file 模块 设置权限，所有者，属组</span></span><br><span class="line">ansible webservers -m file -a <span class="string">"dest=/srv/foo/b.txt mode=600 owner=mdehaan group=mdehaan"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line">ansible webservers -m file -a <span class="string">"dest=/path/to/c mode=755 owner=mdehaan group=mdehaan state=directory"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除目录或文件</span></span><br><span class="line">ansible webservers -m file -a <span class="string">"dest=/path/to/c state=absent"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 包管理 使用 yum 模块</span></span><br><span class="line"><span class="comment"># name 是包名</span></span><br><span class="line"><span class="comment"># state 是状态：present，latest，absent</span></span><br><span class="line">ansible webservers -m yum -a <span class="string">"name=acme state=present"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 管理用户和组 user 模块</span></span><br><span class="line">ansible all -m<span class="built_in"> user </span>-a <span class="string">"name=foo password=&lt;crypted password here&gt;"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 管理服务 service 模块</span></span><br><span class="line"><span class="comment"># state：started，restarted，stopped 启动，重启，停止</span></span><br><span class="line">ansible webservers -m<span class="built_in"> service </span>-a <span class="string">"name=httpd state=started"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看系统信息</span></span><br><span class="line">ansible all -m setup</span><br></pre></td></tr></table></figure></p>
<ul>
<li><p>Playbook</p>
<ul>
<li>主机 hosts:<ul>
<li>变量 vars:</li>
<li>排序 order: inventory | reverse_inventory |sorted |reverse_sorted |shuffle</li>
<li>用户 remote_user:</li>
<li>任务组 tasks:<ul>
<li>名称 name:</li>
<li>模块 module:<ul>
<li>name:</li>
<li>state:</li>
</ul>
</li>
<li>when:</li>
<li>become: yes</li>
<li>become_method: sudo</li>
</ul>
</li>
<li>操作 handlers:</li>
</ul>
</li>
</ul>
</li>
<li><p>变量</p>
</li>
<li>模板</li>
<li>条件</li>
<li>循环</li>
<li>块</li>
<li>高级用法</li>
<li>plays<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">order:</span> <span class="string">sorted</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">False</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">var:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">enable</span> <span class="string">selinux</span></span><br><span class="line">        <span class="attr">command:</span> <span class="string">/sbin/setenforce</span> <span class="number">1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">run</span> <span class="string">this</span> <span class="string">command</span> <span class="string">and</span> <span class="string">ignore</span> <span class="string">the</span> <span class="string">result</span></span><br><span class="line">        <span class="attr">shell:</span> <span class="string">/usr/bin/somecommand</span> <span class="string">||</span> <span class="string">/bin/true</span></span><br><span class="line">        <span class="attr">ignore_errors:</span> <span class="literal">True</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">create</span> <span class="string">a</span> <span class="string">virtual</span> <span class="string">host</span> <span class="string">file</span> <span class="string">for</span> <span class="string">&#123;&#123;</span> <span class="string">vhost</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">template:</span></span><br><span class="line">          <span class="attr">src:</span> <span class="string">somefile.j2</span></span><br><span class="line">          <span class="attr">dest:</span> <span class="string">/etc/httpd/conf.d/&#123;&#123;</span> <span class="string">vhost</span> <span class="string">&#125;&#125;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">template</span> <span class="string">configuration</span> <span class="string">file</span></span><br><span class="line">      <span class="attr">template:</span></span><br><span class="line">        <span class="attr">src:</span> <span class="string">template.j2</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/etc/foo.conf</span></span><br><span class="line">      <span class="attr">notify:</span></span><br><span class="line">         <span class="bullet">-</span> <span class="string">restart</span> <span class="string">memcached</span></span><br><span class="line">         <span class="bullet">-</span> <span class="string">restart</span> <span class="string">apache</span></span><br><span class="line">  <span class="attr">handlers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">restart</span> <span class="string">memcached</span></span><br><span class="line">        <span class="attr">service:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">memcached</span></span><br><span class="line">          <span class="attr">state:</span> <span class="string">restarted</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">restart</span> <span class="string">apache</span></span><br><span class="line">        <span class="attr">service:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">apache</span></span><br><span class="line">          <span class="attr">state:</span> <span class="string">restarted</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>检查 Playbooks<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">ansible-lint</span> <span class="selector-tag">verify-apache</span><span class="selector-class">.yml</span></span><br><span class="line"><span class="selector-tag">ansible-playbook</span> <span class="selector-tag">playbook</span><span class="selector-class">.yml</span> <span class="selector-tag">--list-hosts</span></span><br></pre></td></tr></table></figure></p>
<p>执行 Playbooks<br><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">ansible-playbook playbook.yml -f <span class="number">10</span></span><br></pre></td></tr></table></figure></p>
<ul>
<li>Conventional Module<ul>
<li>Commands<ul>
<li>shell</li>
<li>command</li>
<li>script</li>
</ul>
</li>
<li>Files<ul>
<li>copy</li>
<li>file</li>
<li>find</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>运维自动化</category>
      </categories>
      <tags>
        <tag>inventory</tag>
        <tag>ad-hoc</tag>
      </tags>
  </entry>
  <entry>
    <title>ArchitectureDesign</title>
    <url>/blog.githup.io/2020/05/ArchitectureDesign/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="web-业务架构"><a href="#web-业务架构" class="headerlink" title="web 业务架构"></a>web 业务架构</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">webserver</span> <span class="string">-&gt;</span> <span class="string">db</span></span><br><span class="line"></span><br><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">LB</span> <span class="string">-&gt;</span> <span class="string">webserver</span> <span class="string">-&gt;</span> <span class="string">redis</span> <span class="string">-&gt;</span> <span class="string">db</span></span><br><span class="line"></span><br><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">LB</span> <span class="string">-&gt;</span> <span class="string">webserver</span> <span class="string">-&gt;</span> <span class="string">app(type1)</span> <span class="string">-&gt;</span> <span class="string">redis</span> <span class="string">-&gt;</span> <span class="string">db</span></span><br><span class="line">                          <span class="string">-&gt;</span> <span class="string">app(type2)</span> </span><br><span class="line"></span><br><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">LB(pool)</span> <span class="string">-&gt;</span> <span class="string">webserver(pool)</span> <span class="string">-&gt;</span> <span class="string">app(pool)</span> <span class="string">-&gt;</span> <span class="string">redis(pool)</span> <span class="string">-&gt;</span> <span class="string">db(read,write)</span></span><br><span class="line"></span><br><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">LB(pool)</span> <span class="string">-&gt;</span> <span class="string">webserver(pool)</span> <span class="string">-&gt;</span> <span class="string">app(pool)</span> <span class="string">-&gt;</span> <span class="string">redis(pool)</span> <span class="string">-&gt;</span> <span class="string">db(read,write)</span></span><br><span class="line">                                                                  <span class="string">-&gt;</span> <span class="string">mongodb</span> <span class="string">(read,write)</span></span><br></pre></td></tr></table></figure>
<h2 id="微服务架构"><a href="#微服务架构" class="headerlink" title="微服务架构"></a>微服务架构</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">LB(pool)</span> <span class="string">-&gt;</span> <span class="string">API</span> <span class="string">网关</span> <span class="string">-&gt;</span> <span class="string">服务注册/发现</span></span><br><span class="line">                              <span class="string">-&gt;</span> <span class="string">配置中心</span></span><br><span class="line">                              <span class="string">-&gt;</span> <span class="string">业务服务</span></span><br></pre></td></tr></table></figure>
<h2 id="容器化-web-业务架构"><a href="#容器化-web-业务架构" class="headerlink" title="容器化 web 业务架构"></a>容器化 web 业务架构</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">brower</span> <span class="string">-&gt;</span> <span class="string">LB(pool)</span> <span class="string">-&gt;</span> <span class="string">Ingress</span> <span class="string">pod</span> <span class="string">-&gt;</span> <span class="string">service</span> <span class="string">-&gt;</span> <span class="string">app</span> <span class="string">pod(label)</span> <span class="string">-&gt;</span> <span class="string">db</span> <span class="string">pod</span></span><br><span class="line">                                             <span class="string">-&gt;</span> <span class="string">sidecar</span> <span class="string">pod(proxy)</span></span><br><span class="line"><span class="string">--------------------------------</span> <span class="string">storage</span> <span class="string">-------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">App pod:</span></span><br><span class="line">    <span class="string">nginx</span> <span class="string">container</span></span><br><span class="line">    <span class="string">tomcat</span> <span class="string">container</span></span><br><span class="line">        <span class="string">springboot</span></span><br><span class="line">    <span class="string">sidecar</span> <span class="string">container</span></span><br><span class="line">    <span class="string">redis</span> <span class="string">container</span></span><br><span class="line">    <span class="string">db</span> <span class="string">container</span></span><br></pre></td></tr></table></figure>
<h2 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">githup</span> <span class="string">-&gt;</span> <span class="string">hook</span> <span class="string">-&gt;</span> <span class="string">jenkins</span> <span class="string">-&gt;</span> <span class="string">开发环境</span></span><br><span class="line"><span class="string">gitlab</span>                    <span class="string">-&gt;</span> <span class="string">测试环境</span></span><br><span class="line"><span class="string">svn</span>                       <span class="string">-&gt;</span> <span class="string">生产环境</span> <span class="string">-&gt;</span> <span class="string">ansible</span></span><br><span class="line">                                     <span class="string">-&gt;</span> <span class="string">saltstack</span></span><br></pre></td></tr></table></figure>
<h2 id="EX-F-L-K日志分析"><a href="#EX-F-L-K日志分析" class="headerlink" title="EX(F,L)K日志分析"></a>EX(F,L)K日志分析</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">metric</span> <span class="string">-&gt;</span> <span class="string">kafka</span> <span class="string">-&gt;</span> <span class="string">Elasticsearch</span> <span class="string">-&gt;</span> <span class="string">kibana</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>架构设计</category>
      </categories>
      <tags>
        <tag>architect</tag>
        <tag>web架构</tag>
      </tags>
  </entry>
  <entry>
    <title>flutter跨终端开发</title>
    <url>/blog.githup.io/2020/05/flutter%E8%B7%A8%E7%BB%88%E7%AB%AF%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://flutter.dev/docs/get-started/install/macos" target="_blank" rel="noopener">Flutter Install</a></p>
<p><a href="https://flutter.dev/docs" target="_blank" rel="noopener">Flutter doc</a></p>
<p><a href="https://github.com/nisrulz/flutter-examples" target="_blank" rel="noopener">Flutter conps samples</a></p>
<p><a href="https://flutter.github.io/samples/#" target="_blank" rel="noopener">Flutter All Samples</a></p>
<p><a href="https://material.io/design" target="_blank" rel="noopener">Material Design </a></p>
<p><a href="https://book.flutterchina.club/" target="_blank" rel="noopener">Flutter 中文</a></p>
<h3 id="Concepts"><a href="#Concepts" class="headerlink" title="Concepts"></a>Concepts</h3><ul>
<li><p>开发环境配置</p>
<ul>
<li>配置 JDK</li>
<li>Android studio</li>
<li>Flutter SDK</li>
<li>配置国内镜像</li>
<li>flutter doctor</li>
<li>安装 flutter 插件</li>
<li>创建 flutter 项目</li>
<li>开启手机调试模式<ul>
<li>连接数据线</li>
<li>手机开启调试模式</li>
<li>安装手机对应的 sdk 版本<ul>
<li>安装常用的 sdk 版本</li>
</ul>
</li>
<li>使用模拟器<ul>
<li>夜神模拟器</li>
<li>run app</li>
</ul>
</li>
<li>使用 vscode 开发<ul>
<li>install flutter 插件</li>
<li>install dart</li>
<li>选择项目</li>
<li>flutter run</li>
<li>连接夜神模拟器 nox<em>adb.exe connect 127.0.0.1:9-9-</em><ul>
<li>热加载</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>mac 使用<ul>
<li>mac 最新的系统</li>
<li>xcode</li>
<li>brew</li>
<li>配置 Flutter SDK<ul>
<li>配置环境变量</li>
<li>配置国内源</li>
</ul>
</li>
<li>验证 flutter -h</li>
<li>flutter doctor</li>
<li>创建 sudo flutter create flutterdemo</li>
<li>运行 flutter run</li>
<li>chmod -R 777 flutterdemo</li>
<li>使用 xcode 编译</li>
<li>使用 vscode 连接模拟器<blockquote>
<p>使用 Gradle 包管理</p>
</blockquote>
</li>
</ul>
</li>
</ul>
</li>
<li><p>Flutter 目录结构</p>
<ul>
<li>android</li>
<li>ios</li>
<li>build</li>
<li>lib</li>
<li>pubspec.yaml #配置文件</li>
<li>入口文件 main.dart<ul>
<li>runApp(app);</li>
</ul>
</li>
<li>组件(类)</li>
<li>Flutter 可以省略 new 关键字</li>
<li>自定义组件 class MyApp extends StatelessWidget{}<blockquote>
<p>Material 即可视化设计语言，标准化设计</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<h3 id="First-app"><a href="#First-app" class="headerlink" title="First app"></a>First app</h3><ul>
<li>入口编写<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="comment">// 入口,实例化省略了new</span></span><br><span class="line">void main() =&gt; runApp(<span class="type">MyApp</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 应用定义，继承自无状态 Widget</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="comment">// 返回一个 Material APP</span></span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">        <span class="comment">// app title</span></span><br><span class="line">      title: <span class="symbol">'Welcome</span> to <span class="type">Flutter</span>',</span><br><span class="line">        <span class="comment">// 主页，Scaffold 主题</span></span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        <span class="comment">// 头部</span></span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'Welcome</span> to <span class="type">Flutter</span>'),</span><br><span class="line">        ),</span><br><span class="line">        <span class="comment">// 主体</span></span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">            <span class="comment">// 内部组件</span></span><br><span class="line">          child: <span class="type">Text</span>(<span class="symbol">'Hello</span> <span class="type">World</span>'),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>使用第三方插件<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、配置 pubspec.yaml</span><br><span class="line">    english_words: ^<span class="number">3.1</span><span class="number">.0</span></span><br><span class="line"><span class="number">2</span>、pub <span class="keyword">get</span> 获取 （自动获取）</span><br><span class="line">    $  flutter pub <span class="keyword">get</span></span><br><span class="line"><span class="number">3</span>、引入</span><br><span class="line">    <span class="keyword">import</span> <span class="string">'package:english_words/english_words.dart'</span>;</span><br></pre></td></tr></table></figure></li>
<li>添加一个有状态的 Widget<ul>
<li>添加一个 state class</li>
<li>添加一个有状态 Widget</li>
<li>在 build 方法中加入<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>添加一个无限的滚动条<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>APP -&gt; Theme -&gt; Container -&gt; Text</p>
</blockquote>
<ul>
<li><p>Widget</p>
<ul>
<li>StatelessWidget</li>
<li>StatefulWidget setState</li>
</ul>
</li>
<li><p>资源</p>
<ul>
<li>APP</li>
<li>容器 Container</li>
<li>文本 Text</li>
<li>图标 Icon</li>
<li>颜色 Colors</li>
<li>图片 Image,DecorationImage<ul>
<li>本地图片 Image.asset<ul>
<li>配置文件定义 asset</li>
<li>images<ul>
<li>2.0x</li>
<li>3.0x</li>
<li>4.0x</li>
</ul>
</li>
</ul>
</li>
<li>远程图片 Image.network</li>
</ul>
</li>
<li>表单 TextField</li>
<li>视频</li>
<li>音频</li>
</ul>
</li>
<li><p>组合资源</p>
<ul>
<li>列表 ListView，ListTile<ul>
<li>垂直列表</li>
<li>水平列表</li>
<li>动态列表 builder</li>
<li>网格列表 GridView</li>
</ul>
</li>
<li>Card</li>
<li>Tabs</li>
<li>侧边栏</li>
</ul>
</li>
<li><p>用户资源</p>
<ul>
<li>图文列表(新闻)</li>
<li>商品列表(商品)</li>
<li></li>
</ul>
</li>
</ul>
<ul>
<li><p>样式</p>
<ul>
<li>文本样式</li>
<li><p>图片样式</p>
<ul>
<li>大小</li>
<li>圆角，圆形 borderRadius ClipOval</li>
<li>颜色<ul>
<li>颜色模式</li>
</ul>
</li>
<li>适应 fit</li>
<li>平铺 repeat</li>
</ul>
</li>
<li><p>视频样式</p>
</li>
<li>音频样式</li>
</ul>
</li>
<li><p>布局</p>
<ul>
<li>Container</li>
<li>SizeBox</li>
<li>Column，Row</li>
<li>Expand</li>
<li>margin</li>
<li>padding</li>
<li>border</li>
<li>Stack<ul>
<li>position positioned</li>
<li>alignment Align</li>
</ul>
</li>
<li>AspectRatio 宽高比</li>
<li>Wrap 流布局</li>
</ul>
</li>
<li><p>数据</p>
<ul>
<li></li>
</ul>
</li>
</ul>
<h3 id="Flutter-组件"><a href="#Flutter-组件" class="headerlink" title="Flutter 组件"></a>Flutter 组件</h3><pre><code>* Theme
    Home:
* Container 组件
* Widget
    * 有状态 Widget
    * 无状态 Widgets
* 文本编辑
* 本地图片
* 本地json
* HTTP GET
* 告警对话框
* Stepper
* Tabs
* Bottom
* Navigation Bar
* Fonts
* Gradient
* Splash Screen
* Listview
* SnackBar
* Layout
* DropDown botton
* 网络图片
* 无限列表
* Google 登录
* 
</code></pre><h3 id="Flutter-布局"><a href="#Flutter-布局" class="headerlink" title="Flutter 布局"></a>Flutter 布局</h3><h3 id="Flutter-路由"><a href="#Flutter-路由" class="headerlink" title="Flutter 路由"></a>Flutter 路由</h3><h3 id="Flutter-对话框"><a href="#Flutter-对话框" class="headerlink" title="Flutter 对话框"></a>Flutter 对话框</h3><ul>
<li>数据请求</li>
<li>数据渲染</li>
</ul>
]]></content>
      <categories>
        <category>终端开发</category>
      </categories>
      <tags>
        <tag>flutter</tag>
        <tag>Dart</tag>
        <tag>android</tag>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>Dart语言开发</title>
    <url>/blog.githup.io/2020/05/Dart%E8%AF%AD%E8%A8%80%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>Dart是谷歌开发的计算机编程语言，后来被Ecma (ECMA-408)认定为标准  。它被用于web、服务器、移动应用和物联网等领域的开发。它是宽松开源许可证（修改的BSD证书）下的开源软件。</p>
<p>Dart是面向对象的、类定义的、单继承的语言。它的语法类似C语言，可以转译为JavaScript，支持接口(interfaces)、混入(mixins)、抽象类(abstract classes)、具体化泛型(reified generics)、可选类型(optional typing)和sound type system 。</p>
</blockquote>
<p><a href="https://dart.dev/guides" target="_blank" rel="noopener">Dart docs</a></p>
<h2 id="Install-Dart-for-mac"><a href="#Install-Dart-for-mac" class="headerlink" title="Install Dart for mac"></a>Install Dart for mac</h2><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">brew</span> <span class="string">tap dart-lang/dart</span></span><br><span class="line"><span class="attr">brew</span> <span class="string">install dart</span></span><br><span class="line"></span><br><span class="line"><span class="attr">dart</span> <span class="string">--version</span></span><br><span class="line"><span class="comment"># google 源，需要翻墙</span></span><br></pre></td></tr></table></figure>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"># Hello World</span><br><span class="line"># 入口函数</span><br><span class="line">main()&#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"hello world"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># <span class="keyword">const</span> (常量定义)</span><br><span class="line"><span class="keyword">const</span> 编译时常量</span><br><span class="line"><span class="keyword">final</span> 运行时常量</span><br><span class="line"></span><br><span class="line"># Variables( 强类型，类型推断 <span class="keyword">var</span> )</span><br><span class="line"><span class="keyword">var</span> name = <span class="string">'Voyager I'</span>;</span><br><span class="line"><span class="keyword">var</span> year = <span class="number">1977</span>;</span><br><span class="line"><span class="keyword">var</span> antennaDiameter = <span class="number">3.7</span>;</span><br><span class="line"><span class="keyword">var</span> flybyObjects = [<span class="string">'Jupiter'</span>, <span class="string">'Saturn'</span>, <span class="string">'Uranus'</span>, <span class="string">'Neptune'</span>];</span><br><span class="line"><span class="keyword">var</span> image = &#123;</span><br><span class="line">  <span class="string">'tags'</span>: [<span class="string">'saturn'</span>],</span><br><span class="line">  <span class="string">'url'</span>: <span class="string">'//path/to/saturn.jpg'</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"># 字符串</span><br><span class="line"><span class="string">',",'</span><span class="string">''</span></span><br><span class="line"></span><br><span class="line"># 字符串拼接</span><br><span class="line">+,<span class="string">""</span></span><br><span class="line"></span><br><span class="line"># 类型 </span><br><span class="line"><span class="built_in">int</span></span><br><span class="line"><span class="built_in">double</span></span><br><span class="line">string</span><br><span class="line"><span class="built_in">bool</span></span><br><span class="line"><span class="keyword">null</span></span><br><span class="line"></span><br><span class="line"># <span class="keyword">is</span> 类型判断</span><br><span class="line">variable <span class="keyword">is</span> <span class="built_in">String</span> # 判断类型</span><br><span class="line"></span><br><span class="line"># 类型定义 <span class="keyword">typedef</span></span><br><span class="line"></span><br><span class="line"># container</span><br><span class="line">list [] # 列表</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">List</span>()</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">List</span>&lt;Sting&gt;() #类型限定</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> &#123;&#125; # 集合</span><br><span class="line">map &#123;&#125; # 映射</span><br><span class="line"></span><br><span class="line"># 方法遍历</span><br><span class="line">s1.forEach((v) &#123;</span><br><span class="line">    <span class="built_in">print</span>(v);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"># 运算符</span><br><span class="line">~/ 取整</span><br><span class="line">?? 为空赋值</span><br><span class="line">toString() </span><br><span class="line">parse() 类型转换</span><br><span class="line"></span><br><span class="line"># Control flow statements</span><br><span class="line"><span class="keyword">if</span></span><br><span class="line"><span class="keyword">for</span></span><br><span class="line"><span class="keyword">for</span> <span class="keyword">in</span></span><br><span class="line"><span class="keyword">while</span></span><br><span class="line"></span><br><span class="line"># Functions</span><br><span class="line"># 支持匿名函数 fn=()&#123;&#125;</span><br><span class="line"></span><br><span class="line"># 箭头函数（函数体一行）</span><br><span class="line">flybyObjects.where((name) =&gt; name.contains(<span class="string">'turn'</span>)).forEach(<span class="built_in">print</span>);</span><br><span class="line"></span><br><span class="line"># 自运行函数</span><br><span class="line">(()&#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"hello"</span>);</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"># 支持闭包</span><br><span class="line">a 会变成全局变量</span><br><span class="line">func1() &#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">  <span class="built_in">int</span> innerfunc() &#123;</span><br><span class="line">    <span class="keyword">return</span> a++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerfunc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 可选参数 [<span class="built_in">int</span> age] &#123;&#125;</span><br><span class="line"># 默认参数 [<span class="built_in">int</span> age=<span class="number">30</span>]</span><br><span class="line"># 命名参数 age:<span class="number">30</span></span><br><span class="line"># 参数</span><br><span class="line"></span><br><span class="line"># Comments</span><br><span class="line"><span class="comment">//,/**/</span></span><br><span class="line"></span><br><span class="line"># Imports</span><br><span class="line"><span class="comment">// Importing core libraries</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'dart:math'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Importing libraries from external packages</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:test/test.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Importing files</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'path/to/my_other_file.dart'</span>;</span><br><span class="line"></span><br><span class="line"># Classes</span><br><span class="line"># <span class="built_in">Object</span> 根类</span><br><span class="line"># 类中获取属性 $name $&#123;<span class="keyword">this</span>.age&#125;</span><br><span class="line"># 命名构造函数 类名.name()&#123;&#125;</span><br><span class="line"># 保护属性 _name</span><br><span class="line"># 动态属性 <span class="keyword">set</span> <span class="keyword">get</span></span><br><span class="line"># 静态属性，静态方法 <span class="keyword">static</span>，对象方法中可以调用静态属性</span><br><span class="line">?   条件运算符 p?.<span class="keyword">new</span>()</span><br><span class="line"><span class="keyword">as</span>  类型转换 (p1 <span class="keyword">as</span> Person)</span><br><span class="line"><span class="keyword">is</span>  类型判断</span><br><span class="line">..  级联操作</span><br><span class="line">p1..name=<span class="string">"value"</span></span><br><span class="line">  ..age=<span class="number">30</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 定义类</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Spacecraft</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 属性</span></span><br><span class="line">  <span class="built_in">String</span> name;</span><br><span class="line">  <span class="built_in">DateTime</span> launchDate;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 构造函数</span></span><br><span class="line">  Spacecraft(<span class="keyword">this</span>.name, <span class="keyword">this</span>.launchDate) &#123;</span><br><span class="line">    <span class="comment">// Initialization code goes here.</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 析构</span></span><br><span class="line">  Spacecraft.unlaunched(<span class="built_in">String</span> name) : <span class="keyword">this</span>(name, <span class="keyword">null</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 动态属性</span></span><br><span class="line">  <span class="built_in">int</span> <span class="keyword">get</span> launchYear =&gt;</span><br><span class="line">      launchDate?.year; <span class="comment">// read-only non-final property</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 方法</span></span><br><span class="line">  <span class="keyword">void</span> describe() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'Spacecraft: <span class="subst">$name</span>'</span>);</span><br><span class="line">    <span class="keyword">if</span> (launchDate != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="built_in">int</span> years =</span><br><span class="line">          <span class="built_in">DateTime</span>.now().difference(launchDate).inDays ~/</span><br><span class="line">              <span class="number">365</span>;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">'Launched: <span class="subst">$launchYear</span> (<span class="subst">$years</span> years ago)'</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">'Unlaunched'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># use Class</span><br><span class="line"><span class="keyword">var</span> voyager = Spacecraft(<span class="string">'Voyager I'</span>, <span class="built_in">DateTime</span>(<span class="number">1977</span>, <span class="number">9</span>, <span class="number">5</span>));</span><br><span class="line">voyager.describe();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> voyager3 = Spacecraft.unlaunched(<span class="string">'Voyager III'</span>);</span><br><span class="line">voyager3.describe();</span><br><span class="line"></span><br><span class="line"># Inheritance(单继承)</span><br><span class="line"># 抽象类不能直接被实例化</span><br><span class="line"># 继承 <span class="keyword">extends</span> (单继承) <span class="keyword">super</span>() 调用父类，<span class="meta">@override</span> 覆写</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Orbiter</span> <span class="keyword">extends</span> <span class="title">Spacecraft</span> </span>&#123;</span><br><span class="line">  <span class="built_in">num</span> altitude;</span><br><span class="line">  Orbiter(<span class="built_in">String</span> name, <span class="built_in">DateTime</span> launchDate, <span class="keyword">this</span>.altitude)</span><br><span class="line">      : <span class="keyword">super</span>(name, launchDate);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># Mixins （代码复用）</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Piloted</span> </span>&#123;</span><br><span class="line">  <span class="built_in">int</span> astronauts = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">void</span> describeCrew() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'Number of astronauts: <span class="subst">$astronauts</span>'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PilotedCraft</span> <span class="keyword">extends</span> <span class="title">Spacecraft</span> <span class="title">with</span> <span class="title">Piloted</span> </span>&#123;</span><br><span class="line">  <span class="comment">// ···</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># Interfaces and <span class="keyword">abstract</span> classes(没有接口关键字，实现抽象类)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MockSpaceship</span> <span class="keyword">implements</span> <span class="title">Spacecraft</span> </span>&#123;</span><br><span class="line">  <span class="comment">// ···</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Describable</span> </span>&#123;</span><br><span class="line">  <span class="keyword">void</span> describe();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> describeWithEmphasis() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'========='</span>);</span><br><span class="line">    describe();</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'========='</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 泛型 T 传入类型 getData&lt;<span class="built_in">String</span>&gt;(<span class="string">"abc"</span>)</span><br><span class="line"></span><br><span class="line"># Async（异步支持，显示声明）</span><br><span class="line"><span class="keyword">async</span> 定义为异步方法</span><br><span class="line"><span class="keyword">await</span> 等待异步完成</span><br><span class="line"></span><br><span class="line"># Exceptions</span><br><span class="line"><span class="keyword">throw</span></span><br><span class="line"><span class="keyword">try</span>&#123;&#125;<span class="keyword">on</span>&#123;&#125;<span class="keyword">finally</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"># 系统库，第三方库（pub），自定义库</span><br><span class="line"><span class="keyword">import</span> <span class="string">'dart:math'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'lib/Http.dart'</span>；</span><br><span class="line"></span><br><span class="line">https:<span class="comment">//pub.dev/packages</span></span><br><span class="line">pubspec.yaml</span><br><span class="line">pub <span class="keyword">get</span></span><br><span class="line"></span><br><span class="line"># 包重命名</span><br><span class="line"><span class="keyword">import</span> <span class="string">"lib/http.dart"</span> <span class="keyword">as</span> httpv1</span><br><span class="line"></span><br><span class="line"># 包的过滤</span><br><span class="line"><span class="keyword">import</span> <span class="string">"lib/http.dart"</span> <span class="keyword">show</span> httpv1;</span><br><span class="line"><span class="keyword">import</span> <span class="string">"lib/http.dart"</span> <span class="keyword">hide</span> httpv1;</span><br><span class="line"></span><br><span class="line"># 库分片 <span class="keyword">part</span></span><br><span class="line"># 库到处 <span class="keyword">export</span></span><br><span class="line"># 库延迟加载 deffered</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>终端开发</category>
      </categories>
      <tags>
        <tag>flutter</tag>
        <tag>Dart</tag>
      </tags>
  </entry>
  <entry>
    <title>golang-mod使用</title>
    <url>/blog.githup.io/2020/05/golang-mod%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Goloang"><a href="#Goloang" class="headerlink" title="Goloang"></a>Goloang</h2><blockquote>
<p><a href="https://golang.org/" target="_blank" rel="noopener"> Golang </a></p>
<p><a href="https://www.runoob.com/go/go-tutorial.html" target="_blank" rel="noopener"> 菜鸟教程 golang  </a></p>
</blockquote>
<h2 id="go-mod-使用"><a href="#go-mod-使用" class="headerlink" title="go mod 使用"></a>go mod 使用</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">go.mod 提供了module, require、<span class="keyword">replace</span>和<span class="keyword">exclude</span> 四个命令</span><br><span class="line"><span class="keyword">module</span> 语句指定包的名字（路径）</span><br><span class="line">require 语句指定的依赖项模块</span><br><span class="line"><span class="keyword">replace</span> 语句可以替换依赖项模块</span><br><span class="line"><span class="keyword">exclude</span> 语句可以忽略依赖项模块</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="keyword">list</span> -m -u <span class="keyword">all</span> 来检查可以升级的<span class="keyword">package</span></span><br><span class="line"><span class="keyword">go</span> <span class="keyword">get</span> -u need-<span class="keyword">upgrade</span>-<span class="keyword">package</span> 升级后会将新的依赖版本更新到</span><br><span class="line"><span class="keyword">go</span> <span class="keyword">get</span> <span class="keyword">package</span>@<span class="keyword">version</span> 将会升级到指定的版本号<span class="keyword">version</span></span><br><span class="line"><span class="keyword">go</span> <span class="keyword">get</span> -u 升级所有依赖</span><br></pre></td></tr></table></figure>
<p>创建一个 go mod 项目<br><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">mkdir project</span><br><span class="line"></span><br><span class="line">export GOPATH=<span class="string">"/Users/alert/go"</span></span><br><span class="line">export GOROOT=<span class="string">"/usr/local/go"</span></span><br><span class="line">export GO111MODULE=on</span><br><span class="line">export GOPROXY=https:<span class="comment">//goproxy.io</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> env GOPATH</span><br><span class="line"><span class="keyword">go</span> mod init</span><br><span class="line">touch main.<span class="keyword">go</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 编译运行，不生成可执行文件</span></span><br><span class="line"><span class="keyword">go</span> run main.<span class="keyword">go</span></span><br><span class="line"><span class="comment">// 项目编译</span></span><br><span class="line"><span class="keyword">go</span> build</span><br><span class="line"><span class="comment">// 编译后安装到 bin 目录</span></span><br><span class="line"><span class="keyword">go</span> install</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>develop</category>
      </categories>
      <tags>
        <tag>golang</tag>
      </tags>
  </entry>
  <entry>
    <title>kubernetes安装</title>
    <url>/blog.githup.io/2020/05/kubernetes%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog.githup.io/assets/css/APlayer.min.css"><script src="/blog.githup.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Kubernetes-Architecture"><a href="#Kubernetes-Architecture" class="headerlink" title="Kubernetes Architecture"></a>Kubernetes Architecture</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">api-server</span></span><br><span class="line"><span class="string">scheduler</span></span><br><span class="line"><span class="string">kebelet</span>       <span class="string">kubelet</span>   <span class="string">kube-proxy</span></span><br><span class="line"><span class="string">---Master---</span> <span class="string">--------Work</span> <span class="string">node-------</span></span><br><span class="line"><span class="string">---etcd---</span></span><br><span class="line"><span class="string">***********</span> <span class="string">DOCKER</span> <span class="string">Engine</span> <span class="string">***********</span></span><br><span class="line"><span class="string">Host</span> <span class="string">OS</span></span><br><span class="line"><span class="string">Infrastructure</span></span><br></pre></td></tr></table></figure>
<p><a href="https://kubernetes.io/zh/docs/home/" target="_blank" rel="noopener"> Kubernetes 官网 </a></p>
<h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><p>提供5台 linux 系统(Centos 7) 主机</p>
<p>主机IP如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">master1:192.168.0.55</span></span><br><span class="line"><span class="string">master2:192.168.0.56</span></span><br><span class="line"><span class="string">master3:192.168.0.57</span></span><br><span class="line"></span><br><span class="line"><span class="string">work1:192.168.0.59</span></span><br><span class="line"><span class="string">work2:192.168.0.60</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果同时检测到 docker 和 containerd，则优先选择 docker。</p>
<p>在集群中,所有计算机之间的完全网络连接。</p>
<p>每台设备对系统中所有节点的 SSH 访问。</p>
<p>在所有机器上安装 kubeadm 和 kubelet。</p>
</blockquote>
<h2 id="安装前基本配置"><a href="#安装前基本配置" class="headerlink" title="安装前基本配置"></a>安装前基本配置</h2><h3 id="设置主机名"><a href="#设置主机名" class="headerlink" title="设置主机名"></a>设置主机名</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">ssh</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.55</span> <span class="string">" hostnamectl set-hostname k8s-1"</span></span><br><span class="line"><span class="string">ssh</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.56</span> <span class="string">" hostnamectl set-hostname k8s-2"</span></span><br><span class="line"><span class="string">ssh</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.57</span> <span class="string">" hostnamectl set-hostname k8s-3"</span></span><br></pre></td></tr></table></figure>
<h3 id="设置主机名解析"><a href="#设置主机名解析" class="headerlink" title="设置主机名解析"></a>设置主机名解析</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"192.168.0.55 k8s-1</span></span><br><span class="line"><span class="string">192.168.0.56 k8s-2</span></span><br><span class="line"><span class="string">192.168.0.57 k8s-3"</span>&gt;&gt;/etc/hosts</span><br></pre></td></tr></table></figure>
<h3 id="生成ssh-key"><a href="#生成ssh-key" class="headerlink" title="生成ssh key"></a>生成ssh key</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">ssh-keygen</span></span><br><span class="line"><span class="string">ssh-copy-id</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.55</span></span><br><span class="line"><span class="string">ssh-copy-id</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.56</span></span><br><span class="line"><span class="string">ssh-copy-id</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.57</span></span><br><span class="line"></span><br><span class="line"><span class="string">SSHVerify</span></span><br><span class="line"><span class="string">for</span> <span class="string">x</span> <span class="string">in</span> <span class="string">`grep</span> <span class="string">-o</span> <span class="string">k8s-.*</span> <span class="string">/etc/hosts`;do</span> <span class="string">echo</span> <span class="string">$x;</span> <span class="string">ssh</span> <span class="string">$x</span> <span class="string">"free"</span><span class="string">;done</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>for x in <code>grep -o k8s-.* /etc/hosts</code>;do echo $x; ssh-copy-id $x ;done</p>
</blockquote>
<h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">iptables -L -n</span><br></pre></td></tr></table></figure>
<h3 id="关闭-selinux"><a href="#关闭-selinux" class="headerlink" title="关闭 selinux"></a>关闭 selinux</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">"s/^SELINUX=enforcing/SELINUX=disabled/g"</span> /etc/selinux/config</span><br></pre></td></tr></table></figure>
<h3 id="关闭-swap"><a href="#关闭-swap" class="headerlink" title="关闭 swap"></a>关闭 swap</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">swapoff -a</span><br><span class="line">swapoff -a sed -i <span class="string">'s/.*swap.*/#&amp;/'</span> /etc/fstab</span><br></pre></td></tr></table></figure>
<h2 id="NTP-配置"><a href="#NTP-配置" class="headerlink" title="NTP 配置"></a>NTP 配置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install chrony -y</span><br><span class="line"><span class="comment"># vim /etc/chrony.conf</span></span><br><span class="line">sed -i <span class="string">"/^server/d"</span> /etc/chrony.conf</span><br><span class="line">sed -i <span class="string">"2a server ntp1.cloud.aliyuncs.com iburst"</span> /etc/chrony.conf</span><br><span class="line">sed -i <span class="string">"2a server ntp2.cloud.aliyuncs.com iburst"</span> /etc/chrony.conf </span><br><span class="line">sed -i <span class="string">"/#allow/s/#//"</span> /etc/chrony.conf</span><br><span class="line">systemctl <span class="built_in">enable</span> chronyd.service;systemctl start chronyd.service</span><br></pre></td></tr></table></figure>
<h3 id="配置国内yum-源"><a href="#配置国内yum-源" class="headerlink" title="配置国内yum 源"></a>配置国内yum 源</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y wget;</span><br><span class="line">rm  /etc/yum.repos.d/* -rf</span><br><span class="line"></span><br><span class="line"><span class="comment"># Aliyun 源</span></span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 配置国内Kubernetes源</span></span><br><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 配置 docker 源</span></span><br><span class="line">wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 更新缓存</span></span><br><span class="line">yum clean all &amp;&amp; yum makecache</span><br></pre></td></tr></table></figure>
<h2 id="Docker-install"><a href="#Docker-install" class="headerlink" title="Docker install"></a>Docker install</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 Docker CE</span></span><br><span class="line"><span class="comment"># 安装所需包</span></span><br><span class="line">yum install yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增 Docker 仓库。</span></span><br><span class="line"><span class="comment">#yum-config-manager --add-repo \</span></span><br><span class="line"><span class="comment"># https://download.docker.com/linux/centos/docker-ce.repo</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 Docker CE.</span></span><br><span class="line">yum update &amp;&amp; yum install docker-ce-18.06.2.ce</span><br><span class="line"></span><br><span class="line"><span class="comment">## 创建 /etc/docker 目录。</span></span><br><span class="line">mkdir /etc/docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 daemon。</span></span><br><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"exec-opts"</span>: [<span class="string">"native.cgroupdriver=systemd"</span>],</span><br><span class="line">  <span class="string">"log-driver"</span>: <span class="string">"json-file"</span>,</span><br><span class="line">  <span class="string">"log-opts"</span>: &#123;</span><br><span class="line">    <span class="string">"max-size"</span>: <span class="string">"100m"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"storage-driver"</span>: <span class="string">"overlay2"</span>,</span><br><span class="line">  <span class="string">"storage-opts"</span>: [</span><br><span class="line">    <span class="string">"overlay2.override_kernel_check=true"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">mkdir -p /etc/systemd/system/docker.service.d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启 Docker</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>
<h3 id="配置-docker-镜像加速器"><a href="#配置-docker-镜像加速器" class="headerlink" title="配置 docker 镜像加速器"></a>配置 docker 镜像加速器</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://pe80e41t.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>
<h2 id="安装-kubeadm、kubelet-和-kubectl"><a href="#安装-kubeadm、kubelet-和-kubectl" class="headerlink" title="安装 kubeadm、kubelet 和 kubectl"></a>安装 kubeadm、kubelet 和 kubectl</h2><blockquote>
<p>kubeadm：用来初始化集群的指令。</p>
<p>kubelet：在集群中的每个节点上用来启动 pod 和容器等。</p>
<p>kubectl：用来与集群通信的命令行工具。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装指定版本</span></span><br><span class="line"><span class="comment"># yum install -y kubelet-&lt;version&gt; kubectl-&lt;version&gt; kubeadm-&lt;version&gt;</span></span><br><span class="line"><span class="comment"># example：yum install -y kubelet-1.17.2 kubeadm-1.17.2 kubectl-1.17.2 --disableexcludes=kubernetes</span></span><br><span class="line">yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes</span><br><span class="line">systemctl <span class="built_in">enable</span> --now kubelet</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt;  /etc/sysctl.d/k8s.conf</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl --system</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart kubelet</span><br></pre></td></tr></table></figure>
<h2 id="创建单主集群"><a href="#创建单主集群" class="headerlink" title="创建单主集群"></a>创建单主集群</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">服务重启</span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet docker</span><br><span class="line">systemctl restart  kubelet docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装出错，重置了再装</span></span><br><span class="line"><span class="comment"># kubeadm reset</span></span><br><span class="line"></span><br><span class="line">kubeadm version</span><br><span class="line"></span><br><span class="line">kubeadm init \</span><br><span class="line">--kubernetes-version=$(kubectl version |grep -P -o <span class="string">'GitVersion:"(.*?)"'</span>|grep -oP <span class="string">"[\d|\.]&#123;1,6&#125;"</span>)  \</span><br><span class="line">--apiserver-advertise-address=xxx.xxx.xxx.xxx \</span><br><span class="line">--control-plane-endpoint <span class="string">"xxx.xxx.xxx.xxx:6443"</span> \</span><br><span class="line">--image-repository registry.aliyuncs.com/google_containers \</span><br><span class="line">--service-cidr=10.10.0.0/16 --pod-network-cidr=10.20.0.0/16 \</span><br><span class="line">--upload-certs</span><br><span class="line"></span><br><span class="line"><span class="comment"># --upload-certs 上传证书</span></span><br><span class="line"><span class="comment"># --control-plane-endpoint "192.168.0.55:6443"</span></span><br><span class="line"><span class="comment"># --image-repository registry.aliyuncs.com/google_containers</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要等几分钟才能创建好</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 记录 token </span></span><br><span class="line"><span class="comment"># controller 节点加入</span></span><br><span class="line">kubeadm join 192.168.0.55:6443 --token 72jo7w.5yicrzyn8edcvpu0 \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:1e67abc92cf649e18941e24c2c18835f7b09d127fde632f3982d41e582346e65 \</span><br><span class="line">    --control-plane --certificate-key 712fcf5a2ffd9a0cd8bee3518475dca3ca3168fb49ee0c937686537141dff2ff</span><br><span class="line"></span><br><span class="line"><span class="comment"># worker 节点加入</span></span><br><span class="line">kubeadm join 192.168.0.55:6443 --token 72jo7w.5yicrzyn8edcvpu0 \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:1e67abc92cf649e18941e24c2c18835f7b09d127fde632f3982d41e582346e65</span><br></pre></td></tr></table></figure>
<h3 id="安装-Pod-网络插件"><a href="#安装-Pod-网络插件" class="headerlink" title="安装 Pod 网络插件"></a>安装 Pod 网络插件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">由于地址总变，把地址写死</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"206.189.89.118 docs.projectcalico.org"</span> &gt;&gt; /etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line">kubectl apply -f https://docs.projectcalico.org/v3.11/manifests/calico.yaml</span><br></pre></td></tr></table></figure>
<h3 id="操作集群"><a href="#操作集群" class="headerlink" title="操作集群"></a>操作集群</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubernetes 集群重置</span></span><br><span class="line"><span class="comment"># kubeadm reset</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line"><span class="comment"># 获取node</span></span><br><span class="line">kubectl get nodes</span><br><span class="line"><span class="comment"># 获取命名空间</span></span><br><span class="line">kubectl get namespace</span><br><span class="line"><span class="comment"># 获取pod</span></span><br><span class="line">kubectl get pod --all-namespaces</span><br><span class="line">kubectl get pod -A -o wide</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取 container</span></span><br><span class="line">docker ps</span><br><span class="line"><span class="comment"># 获取本地镜像</span></span><br><span class="line">docker images</span><br></pre></td></tr></table></figure>
<h2 id="配置多主集群"><a href="#配置多主集群" class="headerlink" title="配置多主集群"></a>配置多主集群</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 重新生成token</span></span><br><span class="line">kubeadm token create --<span class="built_in">print</span>-join-command|sed <span class="string">'s/$&#123;LOCAL_IP&#125;/$&#123;VIP&#125;/g'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 证书有效期延长为一年,所有的节点都执行一次</span></span><br><span class="line">kubeadm alpha certs renew all </span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用master token 加入master集群</span></span><br><span class="line">kubeadm join -h <span class="comment">#使用命令帮助</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在其他主节点执行</span></span><br><span class="line">kubeadm join 192.168.0.55:6443 --token 72jo7w.5yicrzyn8edcvpu0 \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:1e67abc92cf649e18941e24c2c18835f7b09d127fde632f3982d41e582346e65 \</span><br><span class="line">    --control-plane --certificate-key 712fcf5a2ffd9a0cd8bee3518475dca3ca3168fb49ee0c937686537141dff2ff</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使master 同时做 work 节点</span></span><br><span class="line"><span class="comment"># kubectl taint nodes --all node-role.kubernetes.io/master-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看节点</span></span><br><span class="line">kubectl get nodes</span><br><span class="line">kubectl get pods -o wide -A</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出集群</span></span><br><span class="line"><span class="comment"># 在 (master1）执行删除</span></span><br><span class="line">kubectl delete node k8s-2</span><br><span class="line"><span class="comment"># 在 master2 重置 kubernetes </span></span><br><span class="line">kubeadm reset</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 master 上申请join token</span></span><br><span class="line">kubeadm token list</span><br><span class="line">kubeadm token create --<span class="built_in">print</span>-join-command</span><br></pre></td></tr></table></figure>
<h3 id="安装-Dashboard"><a href="#安装-Dashboard" class="headerlink" title="安装 Dashboard"></a>安装 Dashboard</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># https://github.com/kubernetes/dashboard</span></span><br><span class="line"></span><br><span class="line">kubectl apply -f \</span><br><span class="line">https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta8/aio/deploy/recommended.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 service 配置 把 type: ClusterIP 改为 type: NodePort</span></span><br><span class="line">kubectl --namespace=kubernetes-dashboard edit service kubernetes-dashboard</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 service</span></span><br><span class="line">kubectl -n kubernetes-dashboard get service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建用户</span></span><br><span class="line">cat &lt;&lt;EOF &gt;dashboard-adminuser.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: admin-user</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">kubectl apply -f dashboard-adminuser.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create ClusterRole</span></span><br><span class="line">cat &lt;&lt;EOF &gt;dashboard-adminrole.yaml</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: admin-user</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: cluster-admin</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: admin-user</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">kubectl apply -f dashboard-adminrole.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看用户</span></span><br><span class="line">kubectl -n kubernetes-dashboard get secret | grep admin-user</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 user 的token</span></span><br><span class="line">kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk <span class="string">'&#123;print $1&#125;'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以使用 token 登录了</span></span><br></pre></td></tr></table></figure>
<h2 id="在work-node-上执行脚本安装"><a href="#在work-node-上执行脚本安装" class="headerlink" title="在work node 上执行脚本安装"></a>在work node 上执行脚本安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除没用的镜像</span></span><br><span class="line">docker image ls|awk <span class="string">'&#123;print $3&#125;'</span>|xargs docker rmi -f</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;<span class="string">'GEOF'</span> &gt;install.sh</span><br><span class="line">kubeadm reset  -f</span><br><span class="line">docker image ls|awk <span class="string">'&#123;print $3&#125;'</span>|xargs docker rmi -f</span><br><span class="line"></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">iptables -L -n</span><br><span class="line"></span><br><span class="line">swapoff -a</span><br><span class="line">swapoff -a</span><br><span class="line">sed -i <span class="string">'s/.*swap.*/#&amp;/'</span> /etc/fstab</span><br><span class="line"></span><br><span class="line">yum install chrony -y</span><br><span class="line"> </span><br><span class="line"><span class="comment">#vim /etc/chrony.conf</span></span><br><span class="line"></span><br><span class="line">sed -i <span class="string">"/^server/d"</span> /etc/chrony.conf</span><br><span class="line">sed -i <span class="string">"2a server ntp1.cloud.aliyuncs.com iburst"</span> /etc/chrony.conf</span><br><span class="line">sed -i <span class="string">"2a server ntp2.cloud.aliyuncs.com iburst"</span> /etc/chrony.conf </span><br><span class="line">sed -i <span class="string">"/#allow/s/#//"</span> /etc/chrony.conf</span><br><span class="line">systemctl <span class="built_in">enable</span> chronyd.service;</span><br><span class="line">systemctl start chronyd.service</span><br><span class="line"></span><br><span class="line">yum install -y wget curl;</span><br><span class="line">rm  /etc/yum.repos.d/* -rf</span><br><span class="line">centos=$(cat /etc/redhat-release |grep -oP <span class="string">"\d"</span>|sed -n <span class="string">"1p"</span>)</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-<span class="variable">$&#123;centos&#125;</span>.repo</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el<span class="variable">$&#123;centos&#125;</span>-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo</span><br><span class="line"></span><br><span class="line">yum clean all &amp;&amp; yum makecache</span><br><span class="line"></span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line">yum -y update &amp;&amp; yum install -y \</span><br><span class="line">  containerd.io-1.2.10 \</span><br><span class="line">  docker-ce-19.03.4 \</span><br><span class="line">  docker-ce-cli-19.03.4</span><br><span class="line"></span><br><span class="line">mkdir /etc/docker</span><br><span class="line"></span><br><span class="line">tee /etc/docker/daemon.json &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://pe80e41t.mirror.aliyuncs.com"</span>],</span><br><span class="line">  <span class="string">"exec-opts"</span>: [<span class="string">"native.cgroupdriver=systemd"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># "exec-opts": ["native.cgroupdriver=systemd"]</span></span><br><span class="line">mkdir -p /etc/systemd/system/docker.service.d</span><br><span class="line"></span><br><span class="line"><span class="comment"># Restart Docker</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">'s/^SELINUX=enforcing$/SELINUX=permissive/'</span> /etc/selinux/config</span><br><span class="line">yum remove -y kubelet kubeadm kubectl</span><br><span class="line"></span><br><span class="line">yum install -y kubelet-1.17.2 kubeadm-1.17.2 kubectl-1.17.2 --disableexcludes=kubernetes</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> --now kubelet</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt;  /etc/sysctl.d/k8s.conf</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl --system</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart kubelet</span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet docker</span><br><span class="line">GEOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行脚本</span></span><br><span class="line">sh -x install.sh</span><br></pre></td></tr></table></figure>
<h3 id="Work-ndoe-加入集群"><a href="#Work-ndoe-加入集群" class="headerlink" title="Work ndoe 加入集群"></a>Work ndoe 加入集群</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm join 192.168.0.55:6443 --token iq64nb.dq81b1vxczkkrx8i \</span><br><span class="line">--discovery-token-ca-cert-hash \</span><br><span class="line">sha256:1e67abc92cf649e18941e24c2c18835f7b09d127fde632f3982d41e582346e65</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>容器技术</category>
      </categories>
      <tags>
        <tag>container</tag>
        <tag>集群</tag>
      </tags>
  </entry>
</search>
